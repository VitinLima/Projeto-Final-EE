

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Oct 02 22:20:10 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	eeprom_data,global,class=EEDATA,space=3,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,delta=2
    59                           	psect	intentry,global,class=CODE,delta=2
    60                           	psect	text43,local,class=CODE,merge=1,delta=2
    61                           	psect	text44,local,class=CODE,merge=1,delta=2
    62                           	psect	text45,local,class=CODE,merge=1,delta=2
    63                           	psect	text46,local,class=CODE,merge=1,delta=2
    64                           	psect	text47,local,class=CODE,merge=1,delta=2
    65                           	psect	text48,local,class=CODE,merge=1,delta=2
    66                           	psect	text49,local,class=CODE,merge=1,delta=2
    67                           	psect	text50,local,class=CODE,merge=1,delta=2
    68                           	psect	text51,local,class=CODE,merge=1,delta=2
    69                           	psect	text52,local,class=CODE,merge=1,delta=2
    70                           	psect	text53,local,class=CODE,merge=1,delta=2
    71                           	psect	text54,local,class=CODE,merge=1,delta=2
    72                           	psect	text55,local,class=CODE,merge=1,delta=2
    73                           	psect	text56,local,class=CODE,merge=1,delta=2
    74                           	psect	text57,local,class=CODE,merge=1,delta=2
    75                           	psect	text58,local,class=CODE,merge=1,delta=2
    76                           	psect	text59,local,class=CODE,merge=1,delta=2,group=1
    77                           	psect	text60,local,class=CODE,merge=1,delta=2,group=1
    78                           	psect	text61,local,class=CODE,merge=1,delta=2,group=1
    79                           	psect	text62,local,class=CODE,merge=1,delta=2
    80                           	psect	text63,local,class=CODE,merge=1,delta=2
    81                           	psect	text64,local,class=CODE,merge=1,delta=2
    82                           	psect	text65,local,class=CODE,merge=1,delta=2
    83                           	psect	text66,local,class=CODE,merge=1,delta=2
    84                           	psect	text67,local,class=CODE,merge=1,delta=2
    85                           	psect	text68,local,class=CODE,merge=1,delta=2
    86                           	psect	text69,local,class=CODE,merge=1,delta=2
    87                           	psect	text70,local,class=CODE,merge=1,delta=2
    88                           	psect	text71,local,class=CODE,merge=1,delta=2
    89                           	psect	text72,local,class=CODE,merge=1,delta=2
    90                           	psect	text73,local,class=CODE,merge=1,delta=2
    91                           	psect	text74,local,class=CODE,merge=1,delta=2
    92                           	psect	text75,local,class=CODE,merge=1,delta=2
    93                           	psect	text76,local,class=CODE,merge=1,delta=2
    94                           	psect	text77,local,class=CODE,merge=1,delta=2
    95                           	psect	text78,local,class=CODE,merge=1,delta=2
    96                           	psect	text79,local,class=CODE,merge=1,delta=2
    97                           	psect	text80,local,class=CODE,merge=1,delta=2
    98                           	psect	text81,local,class=CODE,merge=1,delta=2
    99                           	psect	text82,local,class=CODE,merge=1,delta=2
   100                           	psect	text83,local,class=CODE,merge=1,delta=2
   101                           	psect	text84,local,class=CODE,merge=1,delta=2
   102                           	psect	text85,local,class=CODE,merge=1,delta=2
   103                           	psect	text86,local,class=CODE,merge=1,delta=2
   104                           	psect	text87,local,class=CODE,merge=1,delta=2
   105                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
   106                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   107                           	dabs	1,0x7E,2
   108     0000                     
   109                           ; Version 2.40
   110                           ; Generated 17/11/2021 GMT
   111                           ; 
   112                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   113                           ; All rights reserved.
   114                           ; 
   115                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   116                           ; 
   117                           ; Redistribution and use in source and binary forms, with or without modification, are
   118                           ; permitted provided that the following conditions are met:
   119                           ; 
   120                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   121                           ;        conditions and the following disclaimer.
   122                           ; 
   123                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   124                           ;        of conditions and the following disclaimer in the documentation and/or other
   125                           ;        materials provided with the distribution. Publication is not required when
   126                           ;        this file is used in an embedded application.
   127                           ; 
   128                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   129                           ;        software without specific prior written permission.
   130                           ; 
   131                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   132                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   133                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   134                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   135                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   136                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   137                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   138                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   139                           ; 
   140                           ; 
   141                           ; Code-generator required, PIC16F1827 Definitions
   142                           ; 
   143                           ; SFR Addresses
   144     0000                     	;# 
   145     0001                     	;# 
   146     0002                     	;# 
   147     0003                     	;# 
   148     0004                     	;# 
   149     0005                     	;# 
   150     0006                     	;# 
   151     0007                     	;# 
   152     0008                     	;# 
   153     0009                     	;# 
   154     000A                     	;# 
   155     000B                     	;# 
   156     000C                     	;# 
   157     000D                     	;# 
   158     0011                     	;# 
   159     0012                     	;# 
   160     0013                     	;# 
   161     0014                     	;# 
   162     0015                     	;# 
   163     0016                     	;# 
   164     0016                     	;# 
   165     0017                     	;# 
   166     0018                     	;# 
   167     0019                     	;# 
   168     001A                     	;# 
   169     001B                     	;# 
   170     001C                     	;# 
   171     001E                     	;# 
   172     001F                     	;# 
   173     008C                     	;# 
   174     008D                     	;# 
   175     0091                     	;# 
   176     0092                     	;# 
   177     0093                     	;# 
   178     0094                     	;# 
   179     0095                     	;# 
   180     0096                     	;# 
   181     0097                     	;# 
   182     0098                     	;# 
   183     0099                     	;# 
   184     009A                     	;# 
   185     009B                     	;# 
   186     009B                     	;# 
   187     009C                     	;# 
   188     009D                     	;# 
   189     009E                     	;# 
   190     010C                     	;# 
   191     010D                     	;# 
   192     0111                     	;# 
   193     0112                     	;# 
   194     0113                     	;# 
   195     0114                     	;# 
   196     0115                     	;# 
   197     0116                     	;# 
   198     0117                     	;# 
   199     0118                     	;# 
   200     0119                     	;# 
   201     011A                     	;# 
   202     011B                     	;# 
   203     011D                     	;# 
   204     011E                     	;# 
   205     018C                     	;# 
   206     018D                     	;# 
   207     0191                     	;# 
   208     0191                     	;# 
   209     0192                     	;# 
   210     0193                     	;# 
   211     0193                     	;# 
   212     0193                     	;# 
   213     0194                     	;# 
   214     0195                     	;# 
   215     0196                     	;# 
   216     0199                     	;# 
   217     019A                     	;# 
   218     019B                     	;# 
   219     019B                     	;# 
   220     019B                     	;# 
   221     019B                     	;# 
   222     019C                     	;# 
   223     019C                     	;# 
   224     019D                     	;# 
   225     019E                     	;# 
   226     019F                     	;# 
   227     020C                     	;# 
   228     020D                     	;# 
   229     0211                     	;# 
   230     0211                     	;# 
   231     0212                     	;# 
   232     0212                     	;# 
   233     0213                     	;# 
   234     0213                     	;# 
   235     0214                     	;# 
   236     0214                     	;# 
   237     0215                     	;# 
   238     0215                     	;# 
   239     0215                     	;# 
   240     0216                     	;# 
   241     0216                     	;# 
   242     0217                     	;# 
   243     0217                     	;# 
   244     0219                     	;# 
   245     021A                     	;# 
   246     021B                     	;# 
   247     021C                     	;# 
   248     021D                     	;# 
   249     021E                     	;# 
   250     021F                     	;# 
   251     0291                     	;# 
   252     0291                     	;# 
   253     0292                     	;# 
   254     0293                     	;# 
   255     0294                     	;# 
   256     0295                     	;# 
   257     0295                     	;# 
   258     0296                     	;# 
   259     0298                     	;# 
   260     0298                     	;# 
   261     0299                     	;# 
   262     029A                     	;# 
   263     029B                     	;# 
   264     029C                     	;# 
   265     029C                     	;# 
   266     029D                     	;# 
   267     029E                     	;# 
   268     029E                     	;# 
   269     0311                     	;# 
   270     0311                     	;# 
   271     0312                     	;# 
   272     0313                     	;# 
   273     0318                     	;# 
   274     0318                     	;# 
   275     0319                     	;# 
   276     031A                     	;# 
   277     0394                     	;# 
   278     0395                     	;# 
   279     0396                     	;# 
   280     039A                     	;# 
   281     039C                     	;# 
   282     039D                     	;# 
   283     039E                     	;# 
   284     039F                     	;# 
   285     0415                     	;# 
   286     0416                     	;# 
   287     0417                     	;# 
   288     041C                     	;# 
   289     041D                     	;# 
   290     041E                     	;# 
   291     0FE4                     	;# 
   292     0FE5                     	;# 
   293     0FE6                     	;# 
   294     0FE7                     	;# 
   295     0FE8                     	;# 
   296     0FE9                     	;# 
   297     0FEA                     	;# 
   298     0FEB                     	;# 
   299     0FED                     	;# 
   300     0FEE                     	;# 
   301     0FEF                     	;# 
   302     0000                     	;# 
   303     0001                     	;# 
   304     0002                     	;# 
   305     0003                     	;# 
   306     0004                     	;# 
   307     0005                     	;# 
   308     0006                     	;# 
   309     0007                     	;# 
   310     0008                     	;# 
   311     0009                     	;# 
   312     000A                     	;# 
   313     000B                     	;# 
   314     000C                     	;# 
   315     000D                     	;# 
   316     0011                     	;# 
   317     0012                     	;# 
   318     0013                     	;# 
   319     0014                     	;# 
   320     0015                     	;# 
   321     0016                     	;# 
   322     0016                     	;# 
   323     0017                     	;# 
   324     0018                     	;# 
   325     0019                     	;# 
   326     001A                     	;# 
   327     001B                     	;# 
   328     001C                     	;# 
   329     001E                     	;# 
   330     001F                     	;# 
   331     008C                     	;# 
   332     008D                     	;# 
   333     0091                     	;# 
   334     0092                     	;# 
   335     0093                     	;# 
   336     0094                     	;# 
   337     0095                     	;# 
   338     0096                     	;# 
   339     0097                     	;# 
   340     0098                     	;# 
   341     0099                     	;# 
   342     009A                     	;# 
   343     009B                     	;# 
   344     009B                     	;# 
   345     009C                     	;# 
   346     009D                     	;# 
   347     009E                     	;# 
   348     010C                     	;# 
   349     010D                     	;# 
   350     0111                     	;# 
   351     0112                     	;# 
   352     0113                     	;# 
   353     0114                     	;# 
   354     0115                     	;# 
   355     0116                     	;# 
   356     0117                     	;# 
   357     0118                     	;# 
   358     0119                     	;# 
   359     011A                     	;# 
   360     011B                     	;# 
   361     011D                     	;# 
   362     011E                     	;# 
   363     018C                     	;# 
   364     018D                     	;# 
   365     0191                     	;# 
   366     0191                     	;# 
   367     0192                     	;# 
   368     0193                     	;# 
   369     0193                     	;# 
   370     0193                     	;# 
   371     0194                     	;# 
   372     0195                     	;# 
   373     0196                     	;# 
   374     0199                     	;# 
   375     019A                     	;# 
   376     019B                     	;# 
   377     019B                     	;# 
   378     019B                     	;# 
   379     019B                     	;# 
   380     019C                     	;# 
   381     019C                     	;# 
   382     019D                     	;# 
   383     019E                     	;# 
   384     019F                     	;# 
   385     020C                     	;# 
   386     020D                     	;# 
   387     0211                     	;# 
   388     0211                     	;# 
   389     0212                     	;# 
   390     0212                     	;# 
   391     0213                     	;# 
   392     0213                     	;# 
   393     0214                     	;# 
   394     0214                     	;# 
   395     0215                     	;# 
   396     0215                     	;# 
   397     0215                     	;# 
   398     0216                     	;# 
   399     0216                     	;# 
   400     0217                     	;# 
   401     0217                     	;# 
   402     0219                     	;# 
   403     021A                     	;# 
   404     021B                     	;# 
   405     021C                     	;# 
   406     021D                     	;# 
   407     021E                     	;# 
   408     021F                     	;# 
   409     0291                     	;# 
   410     0291                     	;# 
   411     0292                     	;# 
   412     0293                     	;# 
   413     0294                     	;# 
   414     0295                     	;# 
   415     0295                     	;# 
   416     0296                     	;# 
   417     0298                     	;# 
   418     0298                     	;# 
   419     0299                     	;# 
   420     029A                     	;# 
   421     029B                     	;# 
   422     029C                     	;# 
   423     029C                     	;# 
   424     029D                     	;# 
   425     029E                     	;# 
   426     029E                     	;# 
   427     0311                     	;# 
   428     0311                     	;# 
   429     0312                     	;# 
   430     0313                     	;# 
   431     0318                     	;# 
   432     0318                     	;# 
   433     0319                     	;# 
   434     031A                     	;# 
   435     0394                     	;# 
   436     0395                     	;# 
   437     0396                     	;# 
   438     039A                     	;# 
   439     039C                     	;# 
   440     039D                     	;# 
   441     039E                     	;# 
   442     039F                     	;# 
   443     0415                     	;# 
   444     0416                     	;# 
   445     0417                     	;# 
   446     041C                     	;# 
   447     041D                     	;# 
   448     041E                     	;# 
   449     0FE4                     	;# 
   450     0FE5                     	;# 
   451     0FE6                     	;# 
   452     0FE7                     	;# 
   453     0FE8                     	;# 
   454     0FE9                     	;# 
   455     0FEA                     	;# 
   456     0FEB                     	;# 
   457     0FED                     	;# 
   458     0FEE                     	;# 
   459     0FEF                     	;# 
   460     0000                     	;# 
   461     0001                     	;# 
   462     0002                     	;# 
   463     0003                     	;# 
   464     0004                     	;# 
   465     0005                     	;# 
   466     0006                     	;# 
   467     0007                     	;# 
   468     0008                     	;# 
   469     0009                     	;# 
   470     000A                     	;# 
   471     000B                     	;# 
   472     000C                     	;# 
   473     000D                     	;# 
   474     0011                     	;# 
   475     0012                     	;# 
   476     0013                     	;# 
   477     0014                     	;# 
   478     0015                     	;# 
   479     0016                     	;# 
   480     0016                     	;# 
   481     0017                     	;# 
   482     0018                     	;# 
   483     0019                     	;# 
   484     001A                     	;# 
   485     001B                     	;# 
   486     001C                     	;# 
   487     001E                     	;# 
   488     001F                     	;# 
   489     008C                     	;# 
   490     008D                     	;# 
   491     0091                     	;# 
   492     0092                     	;# 
   493     0093                     	;# 
   494     0094                     	;# 
   495     0095                     	;# 
   496     0096                     	;# 
   497     0097                     	;# 
   498     0098                     	;# 
   499     0099                     	;# 
   500     009A                     	;# 
   501     009B                     	;# 
   502     009B                     	;# 
   503     009C                     	;# 
   504     009D                     	;# 
   505     009E                     	;# 
   506     010C                     	;# 
   507     010D                     	;# 
   508     0111                     	;# 
   509     0112                     	;# 
   510     0113                     	;# 
   511     0114                     	;# 
   512     0115                     	;# 
   513     0116                     	;# 
   514     0117                     	;# 
   515     0118                     	;# 
   516     0119                     	;# 
   517     011A                     	;# 
   518     011B                     	;# 
   519     011D                     	;# 
   520     011E                     	;# 
   521     018C                     	;# 
   522     018D                     	;# 
   523     0191                     	;# 
   524     0191                     	;# 
   525     0192                     	;# 
   526     0193                     	;# 
   527     0193                     	;# 
   528     0193                     	;# 
   529     0194                     	;# 
   530     0195                     	;# 
   531     0196                     	;# 
   532     0199                     	;# 
   533     019A                     	;# 
   534     019B                     	;# 
   535     019B                     	;# 
   536     019B                     	;# 
   537     019B                     	;# 
   538     019C                     	;# 
   539     019C                     	;# 
   540     019D                     	;# 
   541     019E                     	;# 
   542     019F                     	;# 
   543     020C                     	;# 
   544     020D                     	;# 
   545     0211                     	;# 
   546     0211                     	;# 
   547     0212                     	;# 
   548     0212                     	;# 
   549     0213                     	;# 
   550     0213                     	;# 
   551     0214                     	;# 
   552     0214                     	;# 
   553     0215                     	;# 
   554     0215                     	;# 
   555     0215                     	;# 
   556     0216                     	;# 
   557     0216                     	;# 
   558     0217                     	;# 
   559     0217                     	;# 
   560     0219                     	;# 
   561     021A                     	;# 
   562     021B                     	;# 
   563     021C                     	;# 
   564     021D                     	;# 
   565     021E                     	;# 
   566     021F                     	;# 
   567     0291                     	;# 
   568     0291                     	;# 
   569     0292                     	;# 
   570     0293                     	;# 
   571     0294                     	;# 
   572     0295                     	;# 
   573     0295                     	;# 
   574     0296                     	;# 
   575     0298                     	;# 
   576     0298                     	;# 
   577     0299                     	;# 
   578     029A                     	;# 
   579     029B                     	;# 
   580     029C                     	;# 
   581     029C                     	;# 
   582     029D                     	;# 
   583     029E                     	;# 
   584     029E                     	;# 
   585     0311                     	;# 
   586     0311                     	;# 
   587     0312                     	;# 
   588     0313                     	;# 
   589     0318                     	;# 
   590     0318                     	;# 
   591     0319                     	;# 
   592     031A                     	;# 
   593     0394                     	;# 
   594     0395                     	;# 
   595     0396                     	;# 
   596     039A                     	;# 
   597     039C                     	;# 
   598     039D                     	;# 
   599     039E                     	;# 
   600     039F                     	;# 
   601     0415                     	;# 
   602     0416                     	;# 
   603     0417                     	;# 
   604     041C                     	;# 
   605     041D                     	;# 
   606     041E                     	;# 
   607     0FE4                     	;# 
   608     0FE5                     	;# 
   609     0FE6                     	;# 
   610     0FE7                     	;# 
   611     0FE8                     	;# 
   612     0FE9                     	;# 
   613     0FEA                     	;# 
   614     0FEB                     	;# 
   615     0FED                     	;# 
   616     0FEE                     	;# 
   617     0FEF                     	;# 
   618     0000                     	;# 
   619     0001                     	;# 
   620     0002                     	;# 
   621     0003                     	;# 
   622     0004                     	;# 
   623     0005                     	;# 
   624     0006                     	;# 
   625     0007                     	;# 
   626     0008                     	;# 
   627     0009                     	;# 
   628     000A                     	;# 
   629     000B                     	;# 
   630     000C                     	;# 
   631     000D                     	;# 
   632     0011                     	;# 
   633     0012                     	;# 
   634     0013                     	;# 
   635     0014                     	;# 
   636     0015                     	;# 
   637     0016                     	;# 
   638     0016                     	;# 
   639     0017                     	;# 
   640     0018                     	;# 
   641     0019                     	;# 
   642     001A                     	;# 
   643     001B                     	;# 
   644     001C                     	;# 
   645     001E                     	;# 
   646     001F                     	;# 
   647     008C                     	;# 
   648     008D                     	;# 
   649     0091                     	;# 
   650     0092                     	;# 
   651     0093                     	;# 
   652     0094                     	;# 
   653     0095                     	;# 
   654     0096                     	;# 
   655     0097                     	;# 
   656     0098                     	;# 
   657     0099                     	;# 
   658     009A                     	;# 
   659     009B                     	;# 
   660     009B                     	;# 
   661     009C                     	;# 
   662     009D                     	;# 
   663     009E                     	;# 
   664     010C                     	;# 
   665     010D                     	;# 
   666     0111                     	;# 
   667     0112                     	;# 
   668     0113                     	;# 
   669     0114                     	;# 
   670     0115                     	;# 
   671     0116                     	;# 
   672     0117                     	;# 
   673     0118                     	;# 
   674     0119                     	;# 
   675     011A                     	;# 
   676     011B                     	;# 
   677     011D                     	;# 
   678     011E                     	;# 
   679     018C                     	;# 
   680     018D                     	;# 
   681     0191                     	;# 
   682     0191                     	;# 
   683     0192                     	;# 
   684     0193                     	;# 
   685     0193                     	;# 
   686     0193                     	;# 
   687     0194                     	;# 
   688     0195                     	;# 
   689     0196                     	;# 
   690     0199                     	;# 
   691     019A                     	;# 
   692     019B                     	;# 
   693     019B                     	;# 
   694     019B                     	;# 
   695     019B                     	;# 
   696     019C                     	;# 
   697     019C                     	;# 
   698     019D                     	;# 
   699     019E                     	;# 
   700     019F                     	;# 
   701     020C                     	;# 
   702     020D                     	;# 
   703     0211                     	;# 
   704     0211                     	;# 
   705     0212                     	;# 
   706     0212                     	;# 
   707     0213                     	;# 
   708     0213                     	;# 
   709     0214                     	;# 
   710     0214                     	;# 
   711     0215                     	;# 
   712     0215                     	;# 
   713     0215                     	;# 
   714     0216                     	;# 
   715     0216                     	;# 
   716     0217                     	;# 
   717     0217                     	;# 
   718     0219                     	;# 
   719     021A                     	;# 
   720     021B                     	;# 
   721     021C                     	;# 
   722     021D                     	;# 
   723     021E                     	;# 
   724     021F                     	;# 
   725     0291                     	;# 
   726     0291                     	;# 
   727     0292                     	;# 
   728     0293                     	;# 
   729     0294                     	;# 
   730     0295                     	;# 
   731     0295                     	;# 
   732     0296                     	;# 
   733     0298                     	;# 
   734     0298                     	;# 
   735     0299                     	;# 
   736     029A                     	;# 
   737     029B                     	;# 
   738     029C                     	;# 
   739     029C                     	;# 
   740     029D                     	;# 
   741     029E                     	;# 
   742     029E                     	;# 
   743     0311                     	;# 
   744     0311                     	;# 
   745     0312                     	;# 
   746     0313                     	;# 
   747     0318                     	;# 
   748     0318                     	;# 
   749     0319                     	;# 
   750     031A                     	;# 
   751     0394                     	;# 
   752     0395                     	;# 
   753     0396                     	;# 
   754     039A                     	;# 
   755     039C                     	;# 
   756     039D                     	;# 
   757     039E                     	;# 
   758     039F                     	;# 
   759     0415                     	;# 
   760     0416                     	;# 
   761     0417                     	;# 
   762     041C                     	;# 
   763     041D                     	;# 
   764     041E                     	;# 
   765     0FE4                     	;# 
   766     0FE5                     	;# 
   767     0FE6                     	;# 
   768     0FE7                     	;# 
   769     0FE8                     	;# 
   770     0FE9                     	;# 
   771     0FEA                     	;# 
   772     0FEB                     	;# 
   773     0FED                     	;# 
   774     0FEE                     	;# 
   775     0FEF                     	;# 
   776     0000                     	;# 
   777     0001                     	;# 
   778     0002                     	;# 
   779     0003                     	;# 
   780     0004                     	;# 
   781     0005                     	;# 
   782     0006                     	;# 
   783     0007                     	;# 
   784     0008                     	;# 
   785     0009                     	;# 
   786     000A                     	;# 
   787     000B                     	;# 
   788     000C                     	;# 
   789     000D                     	;# 
   790     0011                     	;# 
   791     0012                     	;# 
   792     0013                     	;# 
   793     0014                     	;# 
   794     0015                     	;# 
   795     0016                     	;# 
   796     0016                     	;# 
   797     0017                     	;# 
   798     0018                     	;# 
   799     0019                     	;# 
   800     001A                     	;# 
   801     001B                     	;# 
   802     001C                     	;# 
   803     001E                     	;# 
   804     001F                     	;# 
   805     008C                     	;# 
   806     008D                     	;# 
   807     0091                     	;# 
   808     0092                     	;# 
   809     0093                     	;# 
   810     0094                     	;# 
   811     0095                     	;# 
   812     0096                     	;# 
   813     0097                     	;# 
   814     0098                     	;# 
   815     0099                     	;# 
   816     009A                     	;# 
   817     009B                     	;# 
   818     009B                     	;# 
   819     009C                     	;# 
   820     009D                     	;# 
   821     009E                     	;# 
   822     010C                     	;# 
   823     010D                     	;# 
   824     0111                     	;# 
   825     0112                     	;# 
   826     0113                     	;# 
   827     0114                     	;# 
   828     0115                     	;# 
   829     0116                     	;# 
   830     0117                     	;# 
   831     0118                     	;# 
   832     0119                     	;# 
   833     011A                     	;# 
   834     011B                     	;# 
   835     011D                     	;# 
   836     011E                     	;# 
   837     018C                     	;# 
   838     018D                     	;# 
   839     0191                     	;# 
   840     0191                     	;# 
   841     0192                     	;# 
   842     0193                     	;# 
   843     0193                     	;# 
   844     0193                     	;# 
   845     0194                     	;# 
   846     0195                     	;# 
   847     0196                     	;# 
   848     0199                     	;# 
   849     019A                     	;# 
   850     019B                     	;# 
   851     019B                     	;# 
   852     019B                     	;# 
   853     019B                     	;# 
   854     019C                     	;# 
   855     019C                     	;# 
   856     019D                     	;# 
   857     019E                     	;# 
   858     019F                     	;# 
   859     020C                     	;# 
   860     020D                     	;# 
   861     0211                     	;# 
   862     0211                     	;# 
   863     0212                     	;# 
   864     0212                     	;# 
   865     0213                     	;# 
   866     0213                     	;# 
   867     0214                     	;# 
   868     0214                     	;# 
   869     0215                     	;# 
   870     0215                     	;# 
   871     0215                     	;# 
   872     0216                     	;# 
   873     0216                     	;# 
   874     0217                     	;# 
   875     0217                     	;# 
   876     0219                     	;# 
   877     021A                     	;# 
   878     021B                     	;# 
   879     021C                     	;# 
   880     021D                     	;# 
   881     021E                     	;# 
   882     021F                     	;# 
   883     0291                     	;# 
   884     0291                     	;# 
   885     0292                     	;# 
   886     0293                     	;# 
   887     0294                     	;# 
   888     0295                     	;# 
   889     0295                     	;# 
   890     0296                     	;# 
   891     0298                     	;# 
   892     0298                     	;# 
   893     0299                     	;# 
   894     029A                     	;# 
   895     029B                     	;# 
   896     029C                     	;# 
   897     029C                     	;# 
   898     029D                     	;# 
   899     029E                     	;# 
   900     029E                     	;# 
   901     0311                     	;# 
   902     0311                     	;# 
   903     0312                     	;# 
   904     0313                     	;# 
   905     0318                     	;# 
   906     0318                     	;# 
   907     0319                     	;# 
   908     031A                     	;# 
   909     0394                     	;# 
   910     0395                     	;# 
   911     0396                     	;# 
   912     039A                     	;# 
   913     039C                     	;# 
   914     039D                     	;# 
   915     039E                     	;# 
   916     039F                     	;# 
   917     0415                     	;# 
   918     0416                     	;# 
   919     0417                     	;# 
   920     041C                     	;# 
   921     041D                     	;# 
   922     041E                     	;# 
   923     0FE4                     	;# 
   924     0FE5                     	;# 
   925     0FE6                     	;# 
   926     0FE7                     	;# 
   927     0FE8                     	;# 
   928     0FE9                     	;# 
   929     0FEA                     	;# 
   930     0FEB                     	;# 
   931     0FED                     	;# 
   932     0FEE                     	;# 
   933     0FEF                     	;# 
   934     0000                     	;# 
   935     0001                     	;# 
   936     0002                     	;# 
   937     0003                     	;# 
   938     0004                     	;# 
   939     0005                     	;# 
   940     0006                     	;# 
   941     0007                     	;# 
   942     0008                     	;# 
   943     0009                     	;# 
   944     000A                     	;# 
   945     000B                     	;# 
   946     000C                     	;# 
   947     000D                     	;# 
   948     0011                     	;# 
   949     0012                     	;# 
   950     0013                     	;# 
   951     0014                     	;# 
   952     0015                     	;# 
   953     0016                     	;# 
   954     0016                     	;# 
   955     0017                     	;# 
   956     0018                     	;# 
   957     0019                     	;# 
   958     001A                     	;# 
   959     001B                     	;# 
   960     001C                     	;# 
   961     001E                     	;# 
   962     001F                     	;# 
   963     008C                     	;# 
   964     008D                     	;# 
   965     0091                     	;# 
   966     0092                     	;# 
   967     0093                     	;# 
   968     0094                     	;# 
   969     0095                     	;# 
   970     0096                     	;# 
   971     0097                     	;# 
   972     0098                     	;# 
   973     0099                     	;# 
   974     009A                     	;# 
   975     009B                     	;# 
   976     009B                     	;# 
   977     009C                     	;# 
   978     009D                     	;# 
   979     009E                     	;# 
   980     010C                     	;# 
   981     010D                     	;# 
   982     0111                     	;# 
   983     0112                     	;# 
   984     0113                     	;# 
   985     0114                     	;# 
   986     0115                     	;# 
   987     0116                     	;# 
   988     0117                     	;# 
   989     0118                     	;# 
   990     0119                     	;# 
   991     011A                     	;# 
   992     011B                     	;# 
   993     011D                     	;# 
   994     011E                     	;# 
   995     018C                     	;# 
   996     018D                     	;# 
   997     0191                     	;# 
   998     0191                     	;# 
   999     0192                     	;# 
  1000     0193                     	;# 
  1001     0193                     	;# 
  1002     0193                     	;# 
  1003     0194                     	;# 
  1004     0195                     	;# 
  1005     0196                     	;# 
  1006     0199                     	;# 
  1007     019A                     	;# 
  1008     019B                     	;# 
  1009     019B                     	;# 
  1010     019B                     	;# 
  1011     019B                     	;# 
  1012     019C                     	;# 
  1013     019C                     	;# 
  1014     019D                     	;# 
  1015     019E                     	;# 
  1016     019F                     	;# 
  1017     020C                     	;# 
  1018     020D                     	;# 
  1019     0211                     	;# 
  1020     0211                     	;# 
  1021     0212                     	;# 
  1022     0212                     	;# 
  1023     0213                     	;# 
  1024     0213                     	;# 
  1025     0214                     	;# 
  1026     0214                     	;# 
  1027     0215                     	;# 
  1028     0215                     	;# 
  1029     0215                     	;# 
  1030     0216                     	;# 
  1031     0216                     	;# 
  1032     0217                     	;# 
  1033     0217                     	;# 
  1034     0219                     	;# 
  1035     021A                     	;# 
  1036     021B                     	;# 
  1037     021C                     	;# 
  1038     021D                     	;# 
  1039     021E                     	;# 
  1040     021F                     	;# 
  1041     0291                     	;# 
  1042     0291                     	;# 
  1043     0292                     	;# 
  1044     0293                     	;# 
  1045     0294                     	;# 
  1046     0295                     	;# 
  1047     0295                     	;# 
  1048     0296                     	;# 
  1049     0298                     	;# 
  1050     0298                     	;# 
  1051     0299                     	;# 
  1052     029A                     	;# 
  1053     029B                     	;# 
  1054     029C                     	;# 
  1055     029C                     	;# 
  1056     029D                     	;# 
  1057     029E                     	;# 
  1058     029E                     	;# 
  1059     0311                     	;# 
  1060     0311                     	;# 
  1061     0312                     	;# 
  1062     0313                     	;# 
  1063     0318                     	;# 
  1064     0318                     	;# 
  1065     0319                     	;# 
  1066     031A                     	;# 
  1067     0394                     	;# 
  1068     0395                     	;# 
  1069     0396                     	;# 
  1070     039A                     	;# 
  1071     039C                     	;# 
  1072     039D                     	;# 
  1073     039E                     	;# 
  1074     039F                     	;# 
  1075     0415                     	;# 
  1076     0416                     	;# 
  1077     0417                     	;# 
  1078     041C                     	;# 
  1079     041D                     	;# 
  1080     041E                     	;# 
  1081     0FE4                     	;# 
  1082     0FE5                     	;# 
  1083     0FE6                     	;# 
  1084     0FE7                     	;# 
  1085     0FE8                     	;# 
  1086     0FE9                     	;# 
  1087     0FEA                     	;# 
  1088     0FEB                     	;# 
  1089     0FED                     	;# 
  1090     0FEE                     	;# 
  1091     0FEF                     	;# 
  1092     0000                     	;# 
  1093     0001                     	;# 
  1094     0002                     	;# 
  1095     0003                     	;# 
  1096     0004                     	;# 
  1097     0005                     	;# 
  1098     0006                     	;# 
  1099     0007                     	;# 
  1100     0008                     	;# 
  1101     0009                     	;# 
  1102     000A                     	;# 
  1103     000B                     	;# 
  1104     000C                     	;# 
  1105     000D                     	;# 
  1106     0011                     	;# 
  1107     0012                     	;# 
  1108     0013                     	;# 
  1109     0014                     	;# 
  1110     0015                     	;# 
  1111     0016                     	;# 
  1112     0016                     	;# 
  1113     0017                     	;# 
  1114     0018                     	;# 
  1115     0019                     	;# 
  1116     001A                     	;# 
  1117     001B                     	;# 
  1118     001C                     	;# 
  1119     001E                     	;# 
  1120     001F                     	;# 
  1121     008C                     	;# 
  1122     008D                     	;# 
  1123     0091                     	;# 
  1124     0092                     	;# 
  1125     0093                     	;# 
  1126     0094                     	;# 
  1127     0095                     	;# 
  1128     0096                     	;# 
  1129     0097                     	;# 
  1130     0098                     	;# 
  1131     0099                     	;# 
  1132     009A                     	;# 
  1133     009B                     	;# 
  1134     009B                     	;# 
  1135     009C                     	;# 
  1136     009D                     	;# 
  1137     009E                     	;# 
  1138     010C                     	;# 
  1139     010D                     	;# 
  1140     0111                     	;# 
  1141     0112                     	;# 
  1142     0113                     	;# 
  1143     0114                     	;# 
  1144     0115                     	;# 
  1145     0116                     	;# 
  1146     0117                     	;# 
  1147     0118                     	;# 
  1148     0119                     	;# 
  1149     011A                     	;# 
  1150     011B                     	;# 
  1151     011D                     	;# 
  1152     011E                     	;# 
  1153     018C                     	;# 
  1154     018D                     	;# 
  1155     0191                     	;# 
  1156     0191                     	;# 
  1157     0192                     	;# 
  1158     0193                     	;# 
  1159     0193                     	;# 
  1160     0193                     	;# 
  1161     0194                     	;# 
  1162     0195                     	;# 
  1163     0196                     	;# 
  1164     0199                     	;# 
  1165     019A                     	;# 
  1166     019B                     	;# 
  1167     019B                     	;# 
  1168     019B                     	;# 
  1169     019B                     	;# 
  1170     019C                     	;# 
  1171     019C                     	;# 
  1172     019D                     	;# 
  1173     019E                     	;# 
  1174     019F                     	;# 
  1175     020C                     	;# 
  1176     020D                     	;# 
  1177     0211                     	;# 
  1178     0211                     	;# 
  1179     0212                     	;# 
  1180     0212                     	;# 
  1181     0213                     	;# 
  1182     0213                     	;# 
  1183     0214                     	;# 
  1184     0214                     	;# 
  1185     0215                     	;# 
  1186     0215                     	;# 
  1187     0215                     	;# 
  1188     0216                     	;# 
  1189     0216                     	;# 
  1190     0217                     	;# 
  1191     0217                     	;# 
  1192     0219                     	;# 
  1193     021A                     	;# 
  1194     021B                     	;# 
  1195     021C                     	;# 
  1196     021D                     	;# 
  1197     021E                     	;# 
  1198     021F                     	;# 
  1199     0291                     	;# 
  1200     0291                     	;# 
  1201     0292                     	;# 
  1202     0293                     	;# 
  1203     0294                     	;# 
  1204     0295                     	;# 
  1205     0295                     	;# 
  1206     0296                     	;# 
  1207     0298                     	;# 
  1208     0298                     	;# 
  1209     0299                     	;# 
  1210     029A                     	;# 
  1211     029B                     	;# 
  1212     029C                     	;# 
  1213     029C                     	;# 
  1214     029D                     	;# 
  1215     029E                     	;# 
  1216     029E                     	;# 
  1217     0311                     	;# 
  1218     0311                     	;# 
  1219     0312                     	;# 
  1220     0313                     	;# 
  1221     0318                     	;# 
  1222     0318                     	;# 
  1223     0319                     	;# 
  1224     031A                     	;# 
  1225     0394                     	;# 
  1226     0395                     	;# 
  1227     0396                     	;# 
  1228     039A                     	;# 
  1229     039C                     	;# 
  1230     039D                     	;# 
  1231     039E                     	;# 
  1232     039F                     	;# 
  1233     0415                     	;# 
  1234     0416                     	;# 
  1235     0417                     	;# 
  1236     041C                     	;# 
  1237     041D                     	;# 
  1238     041E                     	;# 
  1239     0FE4                     	;# 
  1240     0FE5                     	;# 
  1241     0FE6                     	;# 
  1242     0FE7                     	;# 
  1243     0FE8                     	;# 
  1244     0FE9                     	;# 
  1245     0FEA                     	;# 
  1246     0FEB                     	;# 
  1247     0FED                     	;# 
  1248     0FEE                     	;# 
  1249     0FEF                     	;# 
  1250     0000                     	;# 
  1251     0001                     	;# 
  1252     0002                     	;# 
  1253     0003                     	;# 
  1254     0004                     	;# 
  1255     0005                     	;# 
  1256     0006                     	;# 
  1257     0007                     	;# 
  1258     0008                     	;# 
  1259     0009                     	;# 
  1260     000A                     	;# 
  1261     000B                     	;# 
  1262     000C                     	;# 
  1263     000D                     	;# 
  1264     0011                     	;# 
  1265     0012                     	;# 
  1266     0013                     	;# 
  1267     0014                     	;# 
  1268     0015                     	;# 
  1269     0016                     	;# 
  1270     0016                     	;# 
  1271     0017                     	;# 
  1272     0018                     	;# 
  1273     0019                     	;# 
  1274     001A                     	;# 
  1275     001B                     	;# 
  1276     001C                     	;# 
  1277     001E                     	;# 
  1278     001F                     	;# 
  1279     008C                     	;# 
  1280     008D                     	;# 
  1281     0091                     	;# 
  1282     0092                     	;# 
  1283     0093                     	;# 
  1284     0094                     	;# 
  1285     0095                     	;# 
  1286     0096                     	;# 
  1287     0097                     	;# 
  1288     0098                     	;# 
  1289     0099                     	;# 
  1290     009A                     	;# 
  1291     009B                     	;# 
  1292     009B                     	;# 
  1293     009C                     	;# 
  1294     009D                     	;# 
  1295     009E                     	;# 
  1296     010C                     	;# 
  1297     010D                     	;# 
  1298     0111                     	;# 
  1299     0112                     	;# 
  1300     0113                     	;# 
  1301     0114                     	;# 
  1302     0115                     	;# 
  1303     0116                     	;# 
  1304     0117                     	;# 
  1305     0118                     	;# 
  1306     0119                     	;# 
  1307     011A                     	;# 
  1308     011B                     	;# 
  1309     011D                     	;# 
  1310     011E                     	;# 
  1311     018C                     	;# 
  1312     018D                     	;# 
  1313     0191                     	;# 
  1314     0191                     	;# 
  1315     0192                     	;# 
  1316     0193                     	;# 
  1317     0193                     	;# 
  1318     0193                     	;# 
  1319     0194                     	;# 
  1320     0195                     	;# 
  1321     0196                     	;# 
  1322     0199                     	;# 
  1323     019A                     	;# 
  1324     019B                     	;# 
  1325     019B                     	;# 
  1326     019B                     	;# 
  1327     019B                     	;# 
  1328     019C                     	;# 
  1329     019C                     	;# 
  1330     019D                     	;# 
  1331     019E                     	;# 
  1332     019F                     	;# 
  1333     020C                     	;# 
  1334     020D                     	;# 
  1335     0211                     	;# 
  1336     0211                     	;# 
  1337     0212                     	;# 
  1338     0212                     	;# 
  1339     0213                     	;# 
  1340     0213                     	;# 
  1341     0214                     	;# 
  1342     0214                     	;# 
  1343     0215                     	;# 
  1344     0215                     	;# 
  1345     0215                     	;# 
  1346     0216                     	;# 
  1347     0216                     	;# 
  1348     0217                     	;# 
  1349     0217                     	;# 
  1350     0219                     	;# 
  1351     021A                     	;# 
  1352     021B                     	;# 
  1353     021C                     	;# 
  1354     021D                     	;# 
  1355     021E                     	;# 
  1356     021F                     	;# 
  1357     0291                     	;# 
  1358     0291                     	;# 
  1359     0292                     	;# 
  1360     0293                     	;# 
  1361     0294                     	;# 
  1362     0295                     	;# 
  1363     0295                     	;# 
  1364     0296                     	;# 
  1365     0298                     	;# 
  1366     0298                     	;# 
  1367     0299                     	;# 
  1368     029A                     	;# 
  1369     029B                     	;# 
  1370     029C                     	;# 
  1371     029C                     	;# 
  1372     029D                     	;# 
  1373     029E                     	;# 
  1374     029E                     	;# 
  1375     0311                     	;# 
  1376     0311                     	;# 
  1377     0312                     	;# 
  1378     0313                     	;# 
  1379     0318                     	;# 
  1380     0318                     	;# 
  1381     0319                     	;# 
  1382     031A                     	;# 
  1383     0394                     	;# 
  1384     0395                     	;# 
  1385     0396                     	;# 
  1386     039A                     	;# 
  1387     039C                     	;# 
  1388     039D                     	;# 
  1389     039E                     	;# 
  1390     039F                     	;# 
  1391     0415                     	;# 
  1392     0416                     	;# 
  1393     0417                     	;# 
  1394     041C                     	;# 
  1395     041D                     	;# 
  1396     041E                     	;# 
  1397     0FE4                     	;# 
  1398     0FE5                     	;# 
  1399     0FE6                     	;# 
  1400     0FE7                     	;# 
  1401     0FE8                     	;# 
  1402     0FE9                     	;# 
  1403     0FEA                     	;# 
  1404     0FEB                     	;# 
  1405     0FED                     	;# 
  1406     0FEE                     	;# 
  1407     0FEF                     	;# 
  1408     0000                     	;# 
  1409     0001                     	;# 
  1410     0002                     	;# 
  1411     0003                     	;# 
  1412     0004                     	;# 
  1413     0005                     	;# 
  1414     0006                     	;# 
  1415     0007                     	;# 
  1416     0008                     	;# 
  1417     0009                     	;# 
  1418     000A                     	;# 
  1419     000B                     	;# 
  1420     000C                     	;# 
  1421     000D                     	;# 
  1422     0011                     	;# 
  1423     0012                     	;# 
  1424     0013                     	;# 
  1425     0014                     	;# 
  1426     0015                     	;# 
  1427     0016                     	;# 
  1428     0016                     	;# 
  1429     0017                     	;# 
  1430     0018                     	;# 
  1431     0019                     	;# 
  1432     001A                     	;# 
  1433     001B                     	;# 
  1434     001C                     	;# 
  1435     001E                     	;# 
  1436     001F                     	;# 
  1437     008C                     	;# 
  1438     008D                     	;# 
  1439     0091                     	;# 
  1440     0092                     	;# 
  1441     0093                     	;# 
  1442     0094                     	;# 
  1443     0095                     	;# 
  1444     0096                     	;# 
  1445     0097                     	;# 
  1446     0098                     	;# 
  1447     0099                     	;# 
  1448     009A                     	;# 
  1449     009B                     	;# 
  1450     009B                     	;# 
  1451     009C                     	;# 
  1452     009D                     	;# 
  1453     009E                     	;# 
  1454     010C                     	;# 
  1455     010D                     	;# 
  1456     0111                     	;# 
  1457     0112                     	;# 
  1458     0113                     	;# 
  1459     0114                     	;# 
  1460     0115                     	;# 
  1461     0116                     	;# 
  1462     0117                     	;# 
  1463     0118                     	;# 
  1464     0119                     	;# 
  1465     011A                     	;# 
  1466     011B                     	;# 
  1467     011D                     	;# 
  1468     011E                     	;# 
  1469     018C                     	;# 
  1470     018D                     	;# 
  1471     0191                     	;# 
  1472     0191                     	;# 
  1473     0192                     	;# 
  1474     0193                     	;# 
  1475     0193                     	;# 
  1476     0193                     	;# 
  1477     0194                     	;# 
  1478     0195                     	;# 
  1479     0196                     	;# 
  1480     0199                     	;# 
  1481     019A                     	;# 
  1482     019B                     	;# 
  1483     019B                     	;# 
  1484     019B                     	;# 
  1485     019B                     	;# 
  1486     019C                     	;# 
  1487     019C                     	;# 
  1488     019D                     	;# 
  1489     019E                     	;# 
  1490     019F                     	;# 
  1491     020C                     	;# 
  1492     020D                     	;# 
  1493     0211                     	;# 
  1494     0211                     	;# 
  1495     0212                     	;# 
  1496     0212                     	;# 
  1497     0213                     	;# 
  1498     0213                     	;# 
  1499     0214                     	;# 
  1500     0214                     	;# 
  1501     0215                     	;# 
  1502     0215                     	;# 
  1503     0215                     	;# 
  1504     0216                     	;# 
  1505     0216                     	;# 
  1506     0217                     	;# 
  1507     0217                     	;# 
  1508     0219                     	;# 
  1509     021A                     	;# 
  1510     021B                     	;# 
  1511     021C                     	;# 
  1512     021D                     	;# 
  1513     021E                     	;# 
  1514     021F                     	;# 
  1515     0291                     	;# 
  1516     0291                     	;# 
  1517     0292                     	;# 
  1518     0293                     	;# 
  1519     0294                     	;# 
  1520     0295                     	;# 
  1521     0295                     	;# 
  1522     0296                     	;# 
  1523     0298                     	;# 
  1524     0298                     	;# 
  1525     0299                     	;# 
  1526     029A                     	;# 
  1527     029B                     	;# 
  1528     029C                     	;# 
  1529     029C                     	;# 
  1530     029D                     	;# 
  1531     029E                     	;# 
  1532     029E                     	;# 
  1533     0311                     	;# 
  1534     0311                     	;# 
  1535     0312                     	;# 
  1536     0313                     	;# 
  1537     0318                     	;# 
  1538     0318                     	;# 
  1539     0319                     	;# 
  1540     031A                     	;# 
  1541     0394                     	;# 
  1542     0395                     	;# 
  1543     0396                     	;# 
  1544     039A                     	;# 
  1545     039C                     	;# 
  1546     039D                     	;# 
  1547     039E                     	;# 
  1548     039F                     	;# 
  1549     0415                     	;# 
  1550     0416                     	;# 
  1551     0417                     	;# 
  1552     041C                     	;# 
  1553     041D                     	;# 
  1554     041E                     	;# 
  1555     0FE4                     	;# 
  1556     0FE5                     	;# 
  1557     0FE6                     	;# 
  1558     0FE7                     	;# 
  1559     0FE8                     	;# 
  1560     0FE9                     	;# 
  1561     0FEA                     	;# 
  1562     0FEB                     	;# 
  1563     0FED                     	;# 
  1564     0FEE                     	;# 
  1565     0FEF                     	;# 
  1566     0000                     	;# 
  1567     0001                     	;# 
  1568     0002                     	;# 
  1569     0003                     	;# 
  1570     0004                     	;# 
  1571     0005                     	;# 
  1572     0006                     	;# 
  1573     0007                     	;# 
  1574     0008                     	;# 
  1575     0009                     	;# 
  1576     000A                     	;# 
  1577     000B                     	;# 
  1578     000C                     	;# 
  1579     000D                     	;# 
  1580     0011                     	;# 
  1581     0012                     	;# 
  1582     0013                     	;# 
  1583     0014                     	;# 
  1584     0015                     	;# 
  1585     0016                     	;# 
  1586     0016                     	;# 
  1587     0017                     	;# 
  1588     0018                     	;# 
  1589     0019                     	;# 
  1590     001A                     	;# 
  1591     001B                     	;# 
  1592     001C                     	;# 
  1593     001E                     	;# 
  1594     001F                     	;# 
  1595     008C                     	;# 
  1596     008D                     	;# 
  1597     0091                     	;# 
  1598     0092                     	;# 
  1599     0093                     	;# 
  1600     0094                     	;# 
  1601     0095                     	;# 
  1602     0096                     	;# 
  1603     0097                     	;# 
  1604     0098                     	;# 
  1605     0099                     	;# 
  1606     009A                     	;# 
  1607     009B                     	;# 
  1608     009B                     	;# 
  1609     009C                     	;# 
  1610     009D                     	;# 
  1611     009E                     	;# 
  1612     010C                     	;# 
  1613     010D                     	;# 
  1614     0111                     	;# 
  1615     0112                     	;# 
  1616     0113                     	;# 
  1617     0114                     	;# 
  1618     0115                     	;# 
  1619     0116                     	;# 
  1620     0117                     	;# 
  1621     0118                     	;# 
  1622     0119                     	;# 
  1623     011A                     	;# 
  1624     011B                     	;# 
  1625     011D                     	;# 
  1626     011E                     	;# 
  1627     018C                     	;# 
  1628     018D                     	;# 
  1629     0191                     	;# 
  1630     0191                     	;# 
  1631     0192                     	;# 
  1632     0193                     	;# 
  1633     0193                     	;# 
  1634     0193                     	;# 
  1635     0194                     	;# 
  1636     0195                     	;# 
  1637     0196                     	;# 
  1638     0199                     	;# 
  1639     019A                     	;# 
  1640     019B                     	;# 
  1641     019B                     	;# 
  1642     019B                     	;# 
  1643     019B                     	;# 
  1644     019C                     	;# 
  1645     019C                     	;# 
  1646     019D                     	;# 
  1647     019E                     	;# 
  1648     019F                     	;# 
  1649     020C                     	;# 
  1650     020D                     	;# 
  1651     0211                     	;# 
  1652     0211                     	;# 
  1653     0212                     	;# 
  1654     0212                     	;# 
  1655     0213                     	;# 
  1656     0213                     	;# 
  1657     0214                     	;# 
  1658     0214                     	;# 
  1659     0215                     	;# 
  1660     0215                     	;# 
  1661     0215                     	;# 
  1662     0216                     	;# 
  1663     0216                     	;# 
  1664     0217                     	;# 
  1665     0217                     	;# 
  1666     0219                     	;# 
  1667     021A                     	;# 
  1668     021B                     	;# 
  1669     021C                     	;# 
  1670     021D                     	;# 
  1671     021E                     	;# 
  1672     021F                     	;# 
  1673     0291                     	;# 
  1674     0291                     	;# 
  1675     0292                     	;# 
  1676     0293                     	;# 
  1677     0294                     	;# 
  1678     0295                     	;# 
  1679     0295                     	;# 
  1680     0296                     	;# 
  1681     0298                     	;# 
  1682     0298                     	;# 
  1683     0299                     	;# 
  1684     029A                     	;# 
  1685     029B                     	;# 
  1686     029C                     	;# 
  1687     029C                     	;# 
  1688     029D                     	;# 
  1689     029E                     	;# 
  1690     029E                     	;# 
  1691     0311                     	;# 
  1692     0311                     	;# 
  1693     0312                     	;# 
  1694     0313                     	;# 
  1695     0318                     	;# 
  1696     0318                     	;# 
  1697     0319                     	;# 
  1698     031A                     	;# 
  1699     0394                     	;# 
  1700     0395                     	;# 
  1701     0396                     	;# 
  1702     039A                     	;# 
  1703     039C                     	;# 
  1704     039D                     	;# 
  1705     039E                     	;# 
  1706     039F                     	;# 
  1707     0415                     	;# 
  1708     0416                     	;# 
  1709     0417                     	;# 
  1710     041C                     	;# 
  1711     041D                     	;# 
  1712     041E                     	;# 
  1713     0FE4                     	;# 
  1714     0FE5                     	;# 
  1715     0FE6                     	;# 
  1716     0FE7                     	;# 
  1717     0FE8                     	;# 
  1718     0FE9                     	;# 
  1719     0FEA                     	;# 
  1720     0FEB                     	;# 
  1721     0FED                     	;# 
  1722     0FEE                     	;# 
  1723     0FEF                     	;# 
  1724     0000                     	;# 
  1725     0001                     	;# 
  1726     0002                     	;# 
  1727     0003                     	;# 
  1728     0004                     	;# 
  1729     0005                     	;# 
  1730     0006                     	;# 
  1731     0007                     	;# 
  1732     0008                     	;# 
  1733     0009                     	;# 
  1734     000A                     	;# 
  1735     000B                     	;# 
  1736     000C                     	;# 
  1737     000D                     	;# 
  1738     0011                     	;# 
  1739     0012                     	;# 
  1740     0013                     	;# 
  1741     0014                     	;# 
  1742     0015                     	;# 
  1743     0016                     	;# 
  1744     0016                     	;# 
  1745     0017                     	;# 
  1746     0018                     	;# 
  1747     0019                     	;# 
  1748     001A                     	;# 
  1749     001B                     	;# 
  1750     001C                     	;# 
  1751     001E                     	;# 
  1752     001F                     	;# 
  1753     008C                     	;# 
  1754     008D                     	;# 
  1755     0091                     	;# 
  1756     0092                     	;# 
  1757     0093                     	;# 
  1758     0094                     	;# 
  1759     0095                     	;# 
  1760     0096                     	;# 
  1761     0097                     	;# 
  1762     0098                     	;# 
  1763     0099                     	;# 
  1764     009A                     	;# 
  1765     009B                     	;# 
  1766     009B                     	;# 
  1767     009C                     	;# 
  1768     009D                     	;# 
  1769     009E                     	;# 
  1770     010C                     	;# 
  1771     010D                     	;# 
  1772     0111                     	;# 
  1773     0112                     	;# 
  1774     0113                     	;# 
  1775     0114                     	;# 
  1776     0115                     	;# 
  1777     0116                     	;# 
  1778     0117                     	;# 
  1779     0118                     	;# 
  1780     0119                     	;# 
  1781     011A                     	;# 
  1782     011B                     	;# 
  1783     011D                     	;# 
  1784     011E                     	;# 
  1785     018C                     	;# 
  1786     018D                     	;# 
  1787     0191                     	;# 
  1788     0191                     	;# 
  1789     0192                     	;# 
  1790     0193                     	;# 
  1791     0193                     	;# 
  1792     0193                     	;# 
  1793     0194                     	;# 
  1794     0195                     	;# 
  1795     0196                     	;# 
  1796     0199                     	;# 
  1797     019A                     	;# 
  1798     019B                     	;# 
  1799     019B                     	;# 
  1800     019B                     	;# 
  1801     019B                     	;# 
  1802     019C                     	;# 
  1803     019C                     	;# 
  1804     019D                     	;# 
  1805     019E                     	;# 
  1806     019F                     	;# 
  1807     020C                     	;# 
  1808     020D                     	;# 
  1809     0211                     	;# 
  1810     0211                     	;# 
  1811     0212                     	;# 
  1812     0212                     	;# 
  1813     0213                     	;# 
  1814     0213                     	;# 
  1815     0214                     	;# 
  1816     0214                     	;# 
  1817     0215                     	;# 
  1818     0215                     	;# 
  1819     0215                     	;# 
  1820     0216                     	;# 
  1821     0216                     	;# 
  1822     0217                     	;# 
  1823     0217                     	;# 
  1824     0219                     	;# 
  1825     021A                     	;# 
  1826     021B                     	;# 
  1827     021C                     	;# 
  1828     021D                     	;# 
  1829     021E                     	;# 
  1830     021F                     	;# 
  1831     0291                     	;# 
  1832     0291                     	;# 
  1833     0292                     	;# 
  1834     0293                     	;# 
  1835     0294                     	;# 
  1836     0295                     	;# 
  1837     0295                     	;# 
  1838     0296                     	;# 
  1839     0298                     	;# 
  1840     0298                     	;# 
  1841     0299                     	;# 
  1842     029A                     	;# 
  1843     029B                     	;# 
  1844     029C                     	;# 
  1845     029C                     	;# 
  1846     029D                     	;# 
  1847     029E                     	;# 
  1848     029E                     	;# 
  1849     0311                     	;# 
  1850     0311                     	;# 
  1851     0312                     	;# 
  1852     0313                     	;# 
  1853     0318                     	;# 
  1854     0318                     	;# 
  1855     0319                     	;# 
  1856     031A                     	;# 
  1857     0394                     	;# 
  1858     0395                     	;# 
  1859     0396                     	;# 
  1860     039A                     	;# 
  1861     039C                     	;# 
  1862     039D                     	;# 
  1863     039E                     	;# 
  1864     039F                     	;# 
  1865     0415                     	;# 
  1866     0416                     	;# 
  1867     0417                     	;# 
  1868     041C                     	;# 
  1869     041D                     	;# 
  1870     041E                     	;# 
  1871     0FE4                     	;# 
  1872     0FE5                     	;# 
  1873     0FE6                     	;# 
  1874     0FE7                     	;# 
  1875     0FE8                     	;# 
  1876     0FE9                     	;# 
  1877     0FEA                     	;# 
  1878     0FEB                     	;# 
  1879     0FED                     	;# 
  1880     0FEE                     	;# 
  1881     0FEF                     	;# 
  1882     0000                     	;# 
  1883     0001                     	;# 
  1884     0002                     	;# 
  1885     0003                     	;# 
  1886     0004                     	;# 
  1887     0005                     	;# 
  1888     0006                     	;# 
  1889     0007                     	;# 
  1890     0008                     	;# 
  1891     0009                     	;# 
  1892     000A                     	;# 
  1893     000B                     	;# 
  1894     000C                     	;# 
  1895     000D                     	;# 
  1896     0011                     	;# 
  1897     0012                     	;# 
  1898     0013                     	;# 
  1899     0014                     	;# 
  1900     0015                     	;# 
  1901     0016                     	;# 
  1902     0016                     	;# 
  1903     0017                     	;# 
  1904     0018                     	;# 
  1905     0019                     	;# 
  1906     001A                     	;# 
  1907     001B                     	;# 
  1908     001C                     	;# 
  1909     001E                     	;# 
  1910     001F                     	;# 
  1911     008C                     	;# 
  1912     008D                     	;# 
  1913     0091                     	;# 
  1914     0092                     	;# 
  1915     0093                     	;# 
  1916     0094                     	;# 
  1917     0095                     	;# 
  1918     0096                     	;# 
  1919     0097                     	;# 
  1920     0098                     	;# 
  1921     0099                     	;# 
  1922     009A                     	;# 
  1923     009B                     	;# 
  1924     009B                     	;# 
  1925     009C                     	;# 
  1926     009D                     	;# 
  1927     009E                     	;# 
  1928     010C                     	;# 
  1929     010D                     	;# 
  1930     0111                     	;# 
  1931     0112                     	;# 
  1932     0113                     	;# 
  1933     0114                     	;# 
  1934     0115                     	;# 
  1935     0116                     	;# 
  1936     0117                     	;# 
  1937     0118                     	;# 
  1938     0119                     	;# 
  1939     011A                     	;# 
  1940     011B                     	;# 
  1941     011D                     	;# 
  1942     011E                     	;# 
  1943     018C                     	;# 
  1944     018D                     	;# 
  1945     0191                     	;# 
  1946     0191                     	;# 
  1947     0192                     	;# 
  1948     0193                     	;# 
  1949     0193                     	;# 
  1950     0193                     	;# 
  1951     0194                     	;# 
  1952     0195                     	;# 
  1953     0196                     	;# 
  1954     0199                     	;# 
  1955     019A                     	;# 
  1956     019B                     	;# 
  1957     019B                     	;# 
  1958     019B                     	;# 
  1959     019B                     	;# 
  1960     019C                     	;# 
  1961     019C                     	;# 
  1962     019D                     	;# 
  1963     019E                     	;# 
  1964     019F                     	;# 
  1965     020C                     	;# 
  1966     020D                     	;# 
  1967     0211                     	;# 
  1968     0211                     	;# 
  1969     0212                     	;# 
  1970     0212                     	;# 
  1971     0213                     	;# 
  1972     0213                     	;# 
  1973     0214                     	;# 
  1974     0214                     	;# 
  1975     0215                     	;# 
  1976     0215                     	;# 
  1977     0215                     	;# 
  1978     0216                     	;# 
  1979     0216                     	;# 
  1980     0217                     	;# 
  1981     0217                     	;# 
  1982     0219                     	;# 
  1983     021A                     	;# 
  1984     021B                     	;# 
  1985     021C                     	;# 
  1986     021D                     	;# 
  1987     021E                     	;# 
  1988     021F                     	;# 
  1989     0291                     	;# 
  1990     0291                     	;# 
  1991     0292                     	;# 
  1992     0293                     	;# 
  1993     0294                     	;# 
  1994     0295                     	;# 
  1995     0295                     	;# 
  1996     0296                     	;# 
  1997     0298                     	;# 
  1998     0298                     	;# 
  1999     0299                     	;# 
  2000     029A                     	;# 
  2001     029B                     	;# 
  2002     029C                     	;# 
  2003     029C                     	;# 
  2004     029D                     	;# 
  2005     029E                     	;# 
  2006     029E                     	;# 
  2007     0311                     	;# 
  2008     0311                     	;# 
  2009     0312                     	;# 
  2010     0313                     	;# 
  2011     0318                     	;# 
  2012     0318                     	;# 
  2013     0319                     	;# 
  2014     031A                     	;# 
  2015     0394                     	;# 
  2016     0395                     	;# 
  2017     0396                     	;# 
  2018     039A                     	;# 
  2019     039C                     	;# 
  2020     039D                     	;# 
  2021     039E                     	;# 
  2022     039F                     	;# 
  2023     0415                     	;# 
  2024     0416                     	;# 
  2025     0417                     	;# 
  2026     041C                     	;# 
  2027     041D                     	;# 
  2028     041E                     	;# 
  2029     0FE4                     	;# 
  2030     0FE5                     	;# 
  2031     0FE6                     	;# 
  2032     0FE7                     	;# 
  2033     0FE8                     	;# 
  2034     0FE9                     	;# 
  2035     0FEA                     	;# 
  2036     0FEB                     	;# 
  2037     0FED                     	;# 
  2038     0FEE                     	;# 
  2039     0FEF                     	;# 
  2040     0000                     	;# 
  2041     0001                     	;# 
  2042     0002                     	;# 
  2043     0003                     	;# 
  2044     0004                     	;# 
  2045     0005                     	;# 
  2046     0006                     	;# 
  2047     0007                     	;# 
  2048     0008                     	;# 
  2049     0009                     	;# 
  2050     000A                     	;# 
  2051     000B                     	;# 
  2052     000C                     	;# 
  2053     000D                     	;# 
  2054     0011                     	;# 
  2055     0012                     	;# 
  2056     0013                     	;# 
  2057     0014                     	;# 
  2058     0015                     	;# 
  2059     0016                     	;# 
  2060     0016                     	;# 
  2061     0017                     	;# 
  2062     0018                     	;# 
  2063     0019                     	;# 
  2064     001A                     	;# 
  2065     001B                     	;# 
  2066     001C                     	;# 
  2067     001E                     	;# 
  2068     001F                     	;# 
  2069     008C                     	;# 
  2070     008D                     	;# 
  2071     0091                     	;# 
  2072     0092                     	;# 
  2073     0093                     	;# 
  2074     0094                     	;# 
  2075     0095                     	;# 
  2076     0096                     	;# 
  2077     0097                     	;# 
  2078     0098                     	;# 
  2079     0099                     	;# 
  2080     009A                     	;# 
  2081     009B                     	;# 
  2082     009B                     	;# 
  2083     009C                     	;# 
  2084     009D                     	;# 
  2085     009E                     	;# 
  2086     010C                     	;# 
  2087     010D                     	;# 
  2088     0111                     	;# 
  2089     0112                     	;# 
  2090     0113                     	;# 
  2091     0114                     	;# 
  2092     0115                     	;# 
  2093     0116                     	;# 
  2094     0117                     	;# 
  2095     0118                     	;# 
  2096     0119                     	;# 
  2097     011A                     	;# 
  2098     011B                     	;# 
  2099     011D                     	;# 
  2100     011E                     	;# 
  2101     018C                     	;# 
  2102     018D                     	;# 
  2103     0191                     	;# 
  2104     0191                     	;# 
  2105     0192                     	;# 
  2106     0193                     	;# 
  2107     0193                     	;# 
  2108     0193                     	;# 
  2109     0194                     	;# 
  2110     0195                     	;# 
  2111     0196                     	;# 
  2112     0199                     	;# 
  2113     019A                     	;# 
  2114     019B                     	;# 
  2115     019B                     	;# 
  2116     019B                     	;# 
  2117     019B                     	;# 
  2118     019C                     	;# 
  2119     019C                     	;# 
  2120     019D                     	;# 
  2121     019E                     	;# 
  2122     019F                     	;# 
  2123     020C                     	;# 
  2124     020D                     	;# 
  2125     0211                     	;# 
  2126     0211                     	;# 
  2127     0212                     	;# 
  2128     0212                     	;# 
  2129     0213                     	;# 
  2130     0213                     	;# 
  2131     0214                     	;# 
  2132     0214                     	;# 
  2133     0215                     	;# 
  2134     0215                     	;# 
  2135     0215                     	;# 
  2136     0216                     	;# 
  2137     0216                     	;# 
  2138     0217                     	;# 
  2139     0217                     	;# 
  2140     0219                     	;# 
  2141     021A                     	;# 
  2142     021B                     	;# 
  2143     021C                     	;# 
  2144     021D                     	;# 
  2145     021E                     	;# 
  2146     021F                     	;# 
  2147     0291                     	;# 
  2148     0291                     	;# 
  2149     0292                     	;# 
  2150     0293                     	;# 
  2151     0294                     	;# 
  2152     0295                     	;# 
  2153     0295                     	;# 
  2154     0296                     	;# 
  2155     0298                     	;# 
  2156     0298                     	;# 
  2157     0299                     	;# 
  2158     029A                     	;# 
  2159     029B                     	;# 
  2160     029C                     	;# 
  2161     029C                     	;# 
  2162     029D                     	;# 
  2163     029E                     	;# 
  2164     029E                     	;# 
  2165     0311                     	;# 
  2166     0311                     	;# 
  2167     0312                     	;# 
  2168     0313                     	;# 
  2169     0318                     	;# 
  2170     0318                     	;# 
  2171     0319                     	;# 
  2172     031A                     	;# 
  2173     0394                     	;# 
  2174     0395                     	;# 
  2175     0396                     	;# 
  2176     039A                     	;# 
  2177     039C                     	;# 
  2178     039D                     	;# 
  2179     039E                     	;# 
  2180     039F                     	;# 
  2181     0415                     	;# 
  2182     0416                     	;# 
  2183     0417                     	;# 
  2184     041C                     	;# 
  2185     041D                     	;# 
  2186     041E                     	;# 
  2187     0FE4                     	;# 
  2188     0FE5                     	;# 
  2189     0FE6                     	;# 
  2190     0FE7                     	;# 
  2191     0FE8                     	;# 
  2192     0FE9                     	;# 
  2193     0FEA                     	;# 
  2194     0FEB                     	;# 
  2195     0FED                     	;# 
  2196     0FEE                     	;# 
  2197     0FEF                     	;# 
  2198     0000                     	;# 
  2199     0001                     	;# 
  2200     0002                     	;# 
  2201     0003                     	;# 
  2202     0004                     	;# 
  2203     0005                     	;# 
  2204     0006                     	;# 
  2205     0007                     	;# 
  2206     0008                     	;# 
  2207     0009                     	;# 
  2208     000A                     	;# 
  2209     000B                     	;# 
  2210     000C                     	;# 
  2211     000D                     	;# 
  2212     0011                     	;# 
  2213     0012                     	;# 
  2214     0013                     	;# 
  2215     0014                     	;# 
  2216     0015                     	;# 
  2217     0016                     	;# 
  2218     0016                     	;# 
  2219     0017                     	;# 
  2220     0018                     	;# 
  2221     0019                     	;# 
  2222     001A                     	;# 
  2223     001B                     	;# 
  2224     001C                     	;# 
  2225     001E                     	;# 
  2226     001F                     	;# 
  2227     008C                     	;# 
  2228     008D                     	;# 
  2229     0091                     	;# 
  2230     0092                     	;# 
  2231     0093                     	;# 
  2232     0094                     	;# 
  2233     0095                     	;# 
  2234     0096                     	;# 
  2235     0097                     	;# 
  2236     0098                     	;# 
  2237     0099                     	;# 
  2238     009A                     	;# 
  2239     009B                     	;# 
  2240     009B                     	;# 
  2241     009C                     	;# 
  2242     009D                     	;# 
  2243     009E                     	;# 
  2244     010C                     	;# 
  2245     010D                     	;# 
  2246     0111                     	;# 
  2247     0112                     	;# 
  2248     0113                     	;# 
  2249     0114                     	;# 
  2250     0115                     	;# 
  2251     0116                     	;# 
  2252     0117                     	;# 
  2253     0118                     	;# 
  2254     0119                     	;# 
  2255     011A                     	;# 
  2256     011B                     	;# 
  2257     011D                     	;# 
  2258     011E                     	;# 
  2259     018C                     	;# 
  2260     018D                     	;# 
  2261     0191                     	;# 
  2262     0191                     	;# 
  2263     0192                     	;# 
  2264     0193                     	;# 
  2265     0193                     	;# 
  2266     0193                     	;# 
  2267     0194                     	;# 
  2268     0195                     	;# 
  2269     0196                     	;# 
  2270     0199                     	;# 
  2271     019A                     	;# 
  2272     019B                     	;# 
  2273     019B                     	;# 
  2274     019B                     	;# 
  2275     019B                     	;# 
  2276     019C                     	;# 
  2277     019C                     	;# 
  2278     019D                     	;# 
  2279     019E                     	;# 
  2280     019F                     	;# 
  2281     020C                     	;# 
  2282     020D                     	;# 
  2283     0211                     	;# 
  2284     0211                     	;# 
  2285     0212                     	;# 
  2286     0212                     	;# 
  2287     0213                     	;# 
  2288     0213                     	;# 
  2289     0214                     	;# 
  2290     0214                     	;# 
  2291     0215                     	;# 
  2292     0215                     	;# 
  2293     0215                     	;# 
  2294     0216                     	;# 
  2295     0216                     	;# 
  2296     0217                     	;# 
  2297     0217                     	;# 
  2298     0219                     	;# 
  2299     021A                     	;# 
  2300     021B                     	;# 
  2301     021C                     	;# 
  2302     021D                     	;# 
  2303     021E                     	;# 
  2304     021F                     	;# 
  2305     0291                     	;# 
  2306     0291                     	;# 
  2307     0292                     	;# 
  2308     0293                     	;# 
  2309     0294                     	;# 
  2310     0295                     	;# 
  2311     0295                     	;# 
  2312     0296                     	;# 
  2313     0298                     	;# 
  2314     0298                     	;# 
  2315     0299                     	;# 
  2316     029A                     	;# 
  2317     029B                     	;# 
  2318     029C                     	;# 
  2319     029C                     	;# 
  2320     029D                     	;# 
  2321     029E                     	;# 
  2322     029E                     	;# 
  2323     0311                     	;# 
  2324     0311                     	;# 
  2325     0312                     	;# 
  2326     0313                     	;# 
  2327     0318                     	;# 
  2328     0318                     	;# 
  2329     0319                     	;# 
  2330     031A                     	;# 
  2331     0394                     	;# 
  2332     0395                     	;# 
  2333     0396                     	;# 
  2334     039A                     	;# 
  2335     039C                     	;# 
  2336     039D                     	;# 
  2337     039E                     	;# 
  2338     039F                     	;# 
  2339     0415                     	;# 
  2340     0416                     	;# 
  2341     0417                     	;# 
  2342     041C                     	;# 
  2343     041D                     	;# 
  2344     041E                     	;# 
  2345     0FE4                     	;# 
  2346     0FE5                     	;# 
  2347     0FE6                     	;# 
  2348     0FE7                     	;# 
  2349     0FE8                     	;# 
  2350     0FE9                     	;# 
  2351     0FEA                     	;# 
  2352     0FEB                     	;# 
  2353     0FED                     	;# 
  2354     0FEE                     	;# 
  2355     0FEF                     	;# 
  2356     0000                     	;# 
  2357     0001                     	;# 
  2358     0002                     	;# 
  2359     0003                     	;# 
  2360     0004                     	;# 
  2361     0005                     	;# 
  2362     0006                     	;# 
  2363     0007                     	;# 
  2364     0008                     	;# 
  2365     0009                     	;# 
  2366     000A                     	;# 
  2367     000B                     	;# 
  2368     000C                     	;# 
  2369     000D                     	;# 
  2370     0011                     	;# 
  2371     0012                     	;# 
  2372     0013                     	;# 
  2373     0014                     	;# 
  2374     0015                     	;# 
  2375     0016                     	;# 
  2376     0016                     	;# 
  2377     0017                     	;# 
  2378     0018                     	;# 
  2379     0019                     	;# 
  2380     001A                     	;# 
  2381     001B                     	;# 
  2382     001C                     	;# 
  2383     001E                     	;# 
  2384     001F                     	;# 
  2385     008C                     	;# 
  2386     008D                     	;# 
  2387     0091                     	;# 
  2388     0092                     	;# 
  2389     0093                     	;# 
  2390     0094                     	;# 
  2391     0095                     	;# 
  2392     0096                     	;# 
  2393     0097                     	;# 
  2394     0098                     	;# 
  2395     0099                     	;# 
  2396     009A                     	;# 
  2397     009B                     	;# 
  2398     009B                     	;# 
  2399     009C                     	;# 
  2400     009D                     	;# 
  2401     009E                     	;# 
  2402     010C                     	;# 
  2403     010D                     	;# 
  2404     0111                     	;# 
  2405     0112                     	;# 
  2406     0113                     	;# 
  2407     0114                     	;# 
  2408     0115                     	;# 
  2409     0116                     	;# 
  2410     0117                     	;# 
  2411     0118                     	;# 
  2412     0119                     	;# 
  2413     011A                     	;# 
  2414     011B                     	;# 
  2415     011D                     	;# 
  2416     011E                     	;# 
  2417     018C                     	;# 
  2418     018D                     	;# 
  2419     0191                     	;# 
  2420     0191                     	;# 
  2421     0192                     	;# 
  2422     0193                     	;# 
  2423     0193                     	;# 
  2424     0193                     	;# 
  2425     0194                     	;# 
  2426     0195                     	;# 
  2427     0196                     	;# 
  2428     0199                     	;# 
  2429     019A                     	;# 
  2430     019B                     	;# 
  2431     019B                     	;# 
  2432     019B                     	;# 
  2433     019B                     	;# 
  2434     019C                     	;# 
  2435     019C                     	;# 
  2436     019D                     	;# 
  2437     019E                     	;# 
  2438     019F                     	;# 
  2439     020C                     	;# 
  2440     020D                     	;# 
  2441     0211                     	;# 
  2442     0211                     	;# 
  2443     0212                     	;# 
  2444     0212                     	;# 
  2445     0213                     	;# 
  2446     0213                     	;# 
  2447     0214                     	;# 
  2448     0214                     	;# 
  2449     0215                     	;# 
  2450     0215                     	;# 
  2451     0215                     	;# 
  2452     0216                     	;# 
  2453     0216                     	;# 
  2454     0217                     	;# 
  2455     0217                     	;# 
  2456     0219                     	;# 
  2457     021A                     	;# 
  2458     021B                     	;# 
  2459     021C                     	;# 
  2460     021D                     	;# 
  2461     021E                     	;# 
  2462     021F                     	;# 
  2463     0291                     	;# 
  2464     0291                     	;# 
  2465     0292                     	;# 
  2466     0293                     	;# 
  2467     0294                     	;# 
  2468     0295                     	;# 
  2469     0295                     	;# 
  2470     0296                     	;# 
  2471     0298                     	;# 
  2472     0298                     	;# 
  2473     0299                     	;# 
  2474     029A                     	;# 
  2475     029B                     	;# 
  2476     029C                     	;# 
  2477     029C                     	;# 
  2478     029D                     	;# 
  2479     029E                     	;# 
  2480     029E                     	;# 
  2481     0311                     	;# 
  2482     0311                     	;# 
  2483     0312                     	;# 
  2484     0313                     	;# 
  2485     0318                     	;# 
  2486     0318                     	;# 
  2487     0319                     	;# 
  2488     031A                     	;# 
  2489     0394                     	;# 
  2490     0395                     	;# 
  2491     0396                     	;# 
  2492     039A                     	;# 
  2493     039C                     	;# 
  2494     039D                     	;# 
  2495     039E                     	;# 
  2496     039F                     	;# 
  2497     0415                     	;# 
  2498     0416                     	;# 
  2499     0417                     	;# 
  2500     041C                     	;# 
  2501     041D                     	;# 
  2502     041E                     	;# 
  2503     0FE4                     	;# 
  2504     0FE5                     	;# 
  2505     0FE6                     	;# 
  2506     0FE7                     	;# 
  2507     0FE8                     	;# 
  2508     0FE9                     	;# 
  2509     0FEA                     	;# 
  2510     0FEB                     	;# 
  2511     0FED                     	;# 
  2512     0FEE                     	;# 
  2513     0FEF                     	;# 
  2514     0000                     	;# 
  2515     0001                     	;# 
  2516     0002                     	;# 
  2517     0003                     	;# 
  2518     0004                     	;# 
  2519     0005                     	;# 
  2520     0006                     	;# 
  2521     0007                     	;# 
  2522     0008                     	;# 
  2523     0009                     	;# 
  2524     000A                     	;# 
  2525     000B                     	;# 
  2526     000C                     	;# 
  2527     000D                     	;# 
  2528     0011                     	;# 
  2529     0012                     	;# 
  2530     0013                     	;# 
  2531     0014                     	;# 
  2532     0015                     	;# 
  2533     0016                     	;# 
  2534     0016                     	;# 
  2535     0017                     	;# 
  2536     0018                     	;# 
  2537     0019                     	;# 
  2538     001A                     	;# 
  2539     001B                     	;# 
  2540     001C                     	;# 
  2541     001E                     	;# 
  2542     001F                     	;# 
  2543     008C                     	;# 
  2544     008D                     	;# 
  2545     0091                     	;# 
  2546     0092                     	;# 
  2547     0093                     	;# 
  2548     0094                     	;# 
  2549     0095                     	;# 
  2550     0096                     	;# 
  2551     0097                     	;# 
  2552     0098                     	;# 
  2553     0099                     	;# 
  2554     009A                     	;# 
  2555     009B                     	;# 
  2556     009B                     	;# 
  2557     009C                     	;# 
  2558     009D                     	;# 
  2559     009E                     	;# 
  2560     010C                     	;# 
  2561     010D                     	;# 
  2562     0111                     	;# 
  2563     0112                     	;# 
  2564     0113                     	;# 
  2565     0114                     	;# 
  2566     0115                     	;# 
  2567     0116                     	;# 
  2568     0117                     	;# 
  2569     0118                     	;# 
  2570     0119                     	;# 
  2571     011A                     	;# 
  2572     011B                     	;# 
  2573     011D                     	;# 
  2574     011E                     	;# 
  2575     018C                     	;# 
  2576     018D                     	;# 
  2577     0191                     	;# 
  2578     0191                     	;# 
  2579     0192                     	;# 
  2580     0193                     	;# 
  2581     0193                     	;# 
  2582     0193                     	;# 
  2583     0194                     	;# 
  2584     0195                     	;# 
  2585     0196                     	;# 
  2586     0199                     	;# 
  2587     019A                     	;# 
  2588     019B                     	;# 
  2589     019B                     	;# 
  2590     019B                     	;# 
  2591     019B                     	;# 
  2592     019C                     	;# 
  2593     019C                     	;# 
  2594     019D                     	;# 
  2595     019E                     	;# 
  2596     019F                     	;# 
  2597     020C                     	;# 
  2598     020D                     	;# 
  2599     0211                     	;# 
  2600     0211                     	;# 
  2601     0212                     	;# 
  2602     0212                     	;# 
  2603     0213                     	;# 
  2604     0213                     	;# 
  2605     0214                     	;# 
  2606     0214                     	;# 
  2607     0215                     	;# 
  2608     0215                     	;# 
  2609     0215                     	;# 
  2610     0216                     	;# 
  2611     0216                     	;# 
  2612     0217                     	;# 
  2613     0217                     	;# 
  2614     0219                     	;# 
  2615     021A                     	;# 
  2616     021B                     	;# 
  2617     021C                     	;# 
  2618     021D                     	;# 
  2619     021E                     	;# 
  2620     021F                     	;# 
  2621     0291                     	;# 
  2622     0291                     	;# 
  2623     0292                     	;# 
  2624     0293                     	;# 
  2625     0294                     	;# 
  2626     0295                     	;# 
  2627     0295                     	;# 
  2628     0296                     	;# 
  2629     0298                     	;# 
  2630     0298                     	;# 
  2631     0299                     	;# 
  2632     029A                     	;# 
  2633     029B                     	;# 
  2634     029C                     	;# 
  2635     029C                     	;# 
  2636     029D                     	;# 
  2637     029E                     	;# 
  2638     029E                     	;# 
  2639     0311                     	;# 
  2640     0311                     	;# 
  2641     0312                     	;# 
  2642     0313                     	;# 
  2643     0318                     	;# 
  2644     0318                     	;# 
  2645     0319                     	;# 
  2646     031A                     	;# 
  2647     0394                     	;# 
  2648     0395                     	;# 
  2649     0396                     	;# 
  2650     039A                     	;# 
  2651     039C                     	;# 
  2652     039D                     	;# 
  2653     039E                     	;# 
  2654     039F                     	;# 
  2655     0415                     	;# 
  2656     0416                     	;# 
  2657     0417                     	;# 
  2658     041C                     	;# 
  2659     041D                     	;# 
  2660     041E                     	;# 
  2661     0FE4                     	;# 
  2662     0FE5                     	;# 
  2663     0FE6                     	;# 
  2664     0FE7                     	;# 
  2665     0FE8                     	;# 
  2666     0FE9                     	;# 
  2667     0FEA                     	;# 
  2668     0FEB                     	;# 
  2669     0FED                     	;# 
  2670     0FEE                     	;# 
  2671     0FEF                     	;# 
  2672     0000                     	;# 
  2673     0001                     	;# 
  2674     0002                     	;# 
  2675     0003                     	;# 
  2676     0004                     	;# 
  2677     0005                     	;# 
  2678     0006                     	;# 
  2679     0007                     	;# 
  2680     0008                     	;# 
  2681     0009                     	;# 
  2682     000A                     	;# 
  2683     000B                     	;# 
  2684     000C                     	;# 
  2685     000D                     	;# 
  2686     0011                     	;# 
  2687     0012                     	;# 
  2688     0013                     	;# 
  2689     0014                     	;# 
  2690     0015                     	;# 
  2691     0016                     	;# 
  2692     0016                     	;# 
  2693     0017                     	;# 
  2694     0018                     	;# 
  2695     0019                     	;# 
  2696     001A                     	;# 
  2697     001B                     	;# 
  2698     001C                     	;# 
  2699     001E                     	;# 
  2700     001F                     	;# 
  2701     008C                     	;# 
  2702     008D                     	;# 
  2703     0091                     	;# 
  2704     0092                     	;# 
  2705     0093                     	;# 
  2706     0094                     	;# 
  2707     0095                     	;# 
  2708     0096                     	;# 
  2709     0097                     	;# 
  2710     0098                     	;# 
  2711     0099                     	;# 
  2712     009A                     	;# 
  2713     009B                     	;# 
  2714     009B                     	;# 
  2715     009C                     	;# 
  2716     009D                     	;# 
  2717     009E                     	;# 
  2718     010C                     	;# 
  2719     010D                     	;# 
  2720     0111                     	;# 
  2721     0112                     	;# 
  2722     0113                     	;# 
  2723     0114                     	;# 
  2724     0115                     	;# 
  2725     0116                     	;# 
  2726     0117                     	;# 
  2727     0118                     	;# 
  2728     0119                     	;# 
  2729     011A                     	;# 
  2730     011B                     	;# 
  2731     011D                     	;# 
  2732     011E                     	;# 
  2733     018C                     	;# 
  2734     018D                     	;# 
  2735     0191                     	;# 
  2736     0191                     	;# 
  2737     0192                     	;# 
  2738     0193                     	;# 
  2739     0193                     	;# 
  2740     0193                     	;# 
  2741     0194                     	;# 
  2742     0195                     	;# 
  2743     0196                     	;# 
  2744     0199                     	;# 
  2745     019A                     	;# 
  2746     019B                     	;# 
  2747     019B                     	;# 
  2748     019B                     	;# 
  2749     019B                     	;# 
  2750     019C                     	;# 
  2751     019C                     	;# 
  2752     019D                     	;# 
  2753     019E                     	;# 
  2754     019F                     	;# 
  2755     020C                     	;# 
  2756     020D                     	;# 
  2757     0211                     	;# 
  2758     0211                     	;# 
  2759     0212                     	;# 
  2760     0212                     	;# 
  2761     0213                     	;# 
  2762     0213                     	;# 
  2763     0214                     	;# 
  2764     0214                     	;# 
  2765     0215                     	;# 
  2766     0215                     	;# 
  2767     0215                     	;# 
  2768     0216                     	;# 
  2769     0216                     	;# 
  2770     0217                     	;# 
  2771     0217                     	;# 
  2772     0219                     	;# 
  2773     021A                     	;# 
  2774     021B                     	;# 
  2775     021C                     	;# 
  2776     021D                     	;# 
  2777     021E                     	;# 
  2778     021F                     	;# 
  2779     0291                     	;# 
  2780     0291                     	;# 
  2781     0292                     	;# 
  2782     0293                     	;# 
  2783     0294                     	;# 
  2784     0295                     	;# 
  2785     0295                     	;# 
  2786     0296                     	;# 
  2787     0298                     	;# 
  2788     0298                     	;# 
  2789     0299                     	;# 
  2790     029A                     	;# 
  2791     029B                     	;# 
  2792     029C                     	;# 
  2793     029C                     	;# 
  2794     029D                     	;# 
  2795     029E                     	;# 
  2796     029E                     	;# 
  2797     0311                     	;# 
  2798     0311                     	;# 
  2799     0312                     	;# 
  2800     0313                     	;# 
  2801     0318                     	;# 
  2802     0318                     	;# 
  2803     0319                     	;# 
  2804     031A                     	;# 
  2805     0394                     	;# 
  2806     0395                     	;# 
  2807     0396                     	;# 
  2808     039A                     	;# 
  2809     039C                     	;# 
  2810     039D                     	;# 
  2811     039E                     	;# 
  2812     039F                     	;# 
  2813     0415                     	;# 
  2814     0416                     	;# 
  2815     0417                     	;# 
  2816     041C                     	;# 
  2817     041D                     	;# 
  2818     041E                     	;# 
  2819     0FE4                     	;# 
  2820     0FE5                     	;# 
  2821     0FE6                     	;# 
  2822     0FE7                     	;# 
  2823     0FE8                     	;# 
  2824     0FE9                     	;# 
  2825     0FEA                     	;# 
  2826     0FEB                     	;# 
  2827     0FED                     	;# 
  2828     0FEE                     	;# 
  2829     0FEF                     	;# 
  2830     0000                     	;# 
  2831     0001                     	;# 
  2832     0002                     	;# 
  2833     0003                     	;# 
  2834     0004                     	;# 
  2835     0005                     	;# 
  2836     0006                     	;# 
  2837     0007                     	;# 
  2838     0008                     	;# 
  2839     0009                     	;# 
  2840     000A                     	;# 
  2841     000B                     	;# 
  2842     000C                     	;# 
  2843     000D                     	;# 
  2844     0011                     	;# 
  2845     0012                     	;# 
  2846     0013                     	;# 
  2847     0014                     	;# 
  2848     0015                     	;# 
  2849     0016                     	;# 
  2850     0016                     	;# 
  2851     0017                     	;# 
  2852     0018                     	;# 
  2853     0019                     	;# 
  2854     001A                     	;# 
  2855     001B                     	;# 
  2856     001C                     	;# 
  2857     001E                     	;# 
  2858     001F                     	;# 
  2859     008C                     	;# 
  2860     008D                     	;# 
  2861     0091                     	;# 
  2862     0092                     	;# 
  2863     0093                     	;# 
  2864     0094                     	;# 
  2865     0095                     	;# 
  2866     0096                     	;# 
  2867     0097                     	;# 
  2868     0098                     	;# 
  2869     0099                     	;# 
  2870     009A                     	;# 
  2871     009B                     	;# 
  2872     009B                     	;# 
  2873     009C                     	;# 
  2874     009D                     	;# 
  2875     009E                     	;# 
  2876     010C                     	;# 
  2877     010D                     	;# 
  2878     0111                     	;# 
  2879     0112                     	;# 
  2880     0113                     	;# 
  2881     0114                     	;# 
  2882     0115                     	;# 
  2883     0116                     	;# 
  2884     0117                     	;# 
  2885     0118                     	;# 
  2886     0119                     	;# 
  2887     011A                     	;# 
  2888     011B                     	;# 
  2889     011D                     	;# 
  2890     011E                     	;# 
  2891     018C                     	;# 
  2892     018D                     	;# 
  2893     0191                     	;# 
  2894     0191                     	;# 
  2895     0192                     	;# 
  2896     0193                     	;# 
  2897     0193                     	;# 
  2898     0193                     	;# 
  2899     0194                     	;# 
  2900     0195                     	;# 
  2901     0196                     	;# 
  2902     0199                     	;# 
  2903     019A                     	;# 
  2904     019B                     	;# 
  2905     019B                     	;# 
  2906     019B                     	;# 
  2907     019B                     	;# 
  2908     019C                     	;# 
  2909     019C                     	;# 
  2910     019D                     	;# 
  2911     019E                     	;# 
  2912     019F                     	;# 
  2913     020C                     	;# 
  2914     020D                     	;# 
  2915     0211                     	;# 
  2916     0211                     	;# 
  2917     0212                     	;# 
  2918     0212                     	;# 
  2919     0213                     	;# 
  2920     0213                     	;# 
  2921     0214                     	;# 
  2922     0214                     	;# 
  2923     0215                     	;# 
  2924     0215                     	;# 
  2925     0215                     	;# 
  2926     0216                     	;# 
  2927     0216                     	;# 
  2928     0217                     	;# 
  2929     0217                     	;# 
  2930     0219                     	;# 
  2931     021A                     	;# 
  2932     021B                     	;# 
  2933     021C                     	;# 
  2934     021D                     	;# 
  2935     021E                     	;# 
  2936     021F                     	;# 
  2937     0291                     	;# 
  2938     0291                     	;# 
  2939     0292                     	;# 
  2940     0293                     	;# 
  2941     0294                     	;# 
  2942     0295                     	;# 
  2943     0295                     	;# 
  2944     0296                     	;# 
  2945     0298                     	;# 
  2946     0298                     	;# 
  2947     0299                     	;# 
  2948     029A                     	;# 
  2949     029B                     	;# 
  2950     029C                     	;# 
  2951     029C                     	;# 
  2952     029D                     	;# 
  2953     029E                     	;# 
  2954     029E                     	;# 
  2955     0311                     	;# 
  2956     0311                     	;# 
  2957     0312                     	;# 
  2958     0313                     	;# 
  2959     0318                     	;# 
  2960     0318                     	;# 
  2961     0319                     	;# 
  2962     031A                     	;# 
  2963     0394                     	;# 
  2964     0395                     	;# 
  2965     0396                     	;# 
  2966     039A                     	;# 
  2967     039C                     	;# 
  2968     039D                     	;# 
  2969     039E                     	;# 
  2970     039F                     	;# 
  2971     0415                     	;# 
  2972     0416                     	;# 
  2973     0417                     	;# 
  2974     041C                     	;# 
  2975     041D                     	;# 
  2976     041E                     	;# 
  2977     0FE4                     	;# 
  2978     0FE5                     	;# 
  2979     0FE6                     	;# 
  2980     0FE7                     	;# 
  2981     0FE8                     	;# 
  2982     0FE9                     	;# 
  2983     0FEA                     	;# 
  2984     0FEB                     	;# 
  2985     0FED                     	;# 
  2986     0FEE                     	;# 
  2987     0FEF                     	;# 
  2988     0000                     	;# 
  2989     0001                     	;# 
  2990     0002                     	;# 
  2991     0003                     	;# 
  2992     0004                     	;# 
  2993     0005                     	;# 
  2994     0006                     	;# 
  2995     0007                     	;# 
  2996     0008                     	;# 
  2997     0009                     	;# 
  2998     000A                     	;# 
  2999     000B                     	;# 
  3000     000C                     	;# 
  3001     000D                     	;# 
  3002     0011                     	;# 
  3003     0012                     	;# 
  3004     0013                     	;# 
  3005     0014                     	;# 
  3006     0015                     	;# 
  3007     0016                     	;# 
  3008     0016                     	;# 
  3009     0017                     	;# 
  3010     0018                     	;# 
  3011     0019                     	;# 
  3012     001A                     	;# 
  3013     001B                     	;# 
  3014     001C                     	;# 
  3015     001E                     	;# 
  3016     001F                     	;# 
  3017     008C                     	;# 
  3018     008D                     	;# 
  3019     0091                     	;# 
  3020     0092                     	;# 
  3021     0093                     	;# 
  3022     0094                     	;# 
  3023     0095                     	;# 
  3024     0096                     	;# 
  3025     0097                     	;# 
  3026     0098                     	;# 
  3027     0099                     	;# 
  3028     009A                     	;# 
  3029     009B                     	;# 
  3030     009B                     	;# 
  3031     009C                     	;# 
  3032     009D                     	;# 
  3033     009E                     	;# 
  3034     010C                     	;# 
  3035     010D                     	;# 
  3036     0111                     	;# 
  3037     0112                     	;# 
  3038     0113                     	;# 
  3039     0114                     	;# 
  3040     0115                     	;# 
  3041     0116                     	;# 
  3042     0117                     	;# 
  3043     0118                     	;# 
  3044     0119                     	;# 
  3045     011A                     	;# 
  3046     011B                     	;# 
  3047     011D                     	;# 
  3048     011E                     	;# 
  3049     018C                     	;# 
  3050     018D                     	;# 
  3051     0191                     	;# 
  3052     0191                     	;# 
  3053     0192                     	;# 
  3054     0193                     	;# 
  3055     0193                     	;# 
  3056     0193                     	;# 
  3057     0194                     	;# 
  3058     0195                     	;# 
  3059     0196                     	;# 
  3060     0199                     	;# 
  3061     019A                     	;# 
  3062     019B                     	;# 
  3063     019B                     	;# 
  3064     019B                     	;# 
  3065     019B                     	;# 
  3066     019C                     	;# 
  3067     019C                     	;# 
  3068     019D                     	;# 
  3069     019E                     	;# 
  3070     019F                     	;# 
  3071     020C                     	;# 
  3072     020D                     	;# 
  3073     0211                     	;# 
  3074     0211                     	;# 
  3075     0212                     	;# 
  3076     0212                     	;# 
  3077     0213                     	;# 
  3078     0213                     	;# 
  3079     0214                     	;# 
  3080     0214                     	;# 
  3081     0215                     	;# 
  3082     0215                     	;# 
  3083     0215                     	;# 
  3084     0216                     	;# 
  3085     0216                     	;# 
  3086     0217                     	;# 
  3087     0217                     	;# 
  3088     0219                     	;# 
  3089     021A                     	;# 
  3090     021B                     	;# 
  3091     021C                     	;# 
  3092     021D                     	;# 
  3093     021E                     	;# 
  3094     021F                     	;# 
  3095     0291                     	;# 
  3096     0291                     	;# 
  3097     0292                     	;# 
  3098     0293                     	;# 
  3099     0294                     	;# 
  3100     0295                     	;# 
  3101     0295                     	;# 
  3102     0296                     	;# 
  3103     0298                     	;# 
  3104     0298                     	;# 
  3105     0299                     	;# 
  3106     029A                     	;# 
  3107     029B                     	;# 
  3108     029C                     	;# 
  3109     029C                     	;# 
  3110     029D                     	;# 
  3111     029E                     	;# 
  3112     029E                     	;# 
  3113     0311                     	;# 
  3114     0311                     	;# 
  3115     0312                     	;# 
  3116     0313                     	;# 
  3117     0318                     	;# 
  3118     0318                     	;# 
  3119     0319                     	;# 
  3120     031A                     	;# 
  3121     0394                     	;# 
  3122     0395                     	;# 
  3123     0396                     	;# 
  3124     039A                     	;# 
  3125     039C                     	;# 
  3126     039D                     	;# 
  3127     039E                     	;# 
  3128     039F                     	;# 
  3129     0415                     	;# 
  3130     0416                     	;# 
  3131     0417                     	;# 
  3132     041C                     	;# 
  3133     041D                     	;# 
  3134     041E                     	;# 
  3135     0FE4                     	;# 
  3136     0FE5                     	;# 
  3137     0FE6                     	;# 
  3138     0FE7                     	;# 
  3139     0FE8                     	;# 
  3140     0FE9                     	;# 
  3141     0FEA                     	;# 
  3142     0FEB                     	;# 
  3143     0FED                     	;# 
  3144     0FEE                     	;# 
  3145     0FEF                     	;# 
  3146                           
  3147                           	psect	eeprom_data
  3148     0000  00FF 0081 0081 00FF 0000 0000 0000 00FF 	db	255,129,129,255,0,0,0,255	;# 
  3149     0008  00C2 00A1 0091 008E 0042 0089 0089 0076 	db	194,161,145,142,66,137,137,118	;# 
  3150     0010  001F 0010 0010 00FF 008F 0089 0089 0071 	db	31,16,16,255,143,137,137,113	;# 
  3151     0018  007E 0089 0089 0072 0009 0009 0009 00FF 	db	126,137,137,114,9,9,9,255	;# 
  3152     0020  0076 0089 0089 0076 004E 0091 0091 007E 	db	118,137,137,118,78,145,145,126	;# 
  3153     0028  0000 0018 0006 0018 0000 0018 0060 0018 	db	0,24,6,24,0,24,96,24	;# 
  3154     0030  0000 0000 0000 0000 0000 0018 0066 0018 	db	0,0,0,0,0,24,102,24	;# 
  3155     0000                     	;# 
  3156     0001                     	;# 
  3157     0002                     	;# 
  3158     0003                     	;# 
  3159     0004                     	;# 
  3160     0005                     	;# 
  3161     0006                     	;# 
  3162     0007                     	;# 
  3163     0008                     	;# 
  3164     0009                     	;# 
  3165     000A                     	;# 
  3166     000B                     	;# 
  3167     000C                     	;# 
  3168     000D                     	;# 
  3169     0011                     	;# 
  3170     0012                     	;# 
  3171     0013                     	;# 
  3172     0014                     	;# 
  3173     0015                     	;# 
  3174     0016                     	;# 
  3175     0016                     	;# 
  3176     0017                     	;# 
  3177     0018                     	;# 
  3178     0019                     	;# 
  3179     001A                     	;# 
  3180     001B                     	;# 
  3181     001C                     	;# 
  3182     001E                     	;# 
  3183     001F                     	;# 
  3184     008C                     	;# 
  3185     008D                     	;# 
  3186     0091                     	;# 
  3187     0092                     	;# 
  3188     0093                     	;# 
  3189     0094                     	;# 
  3190     0095                     	;# 
  3191     0096                     	;# 
  3192     0097                     	;# 
  3193     0098                     	;# 
  3194     0099                     	;# 
  3195     009A                     	;# 
  3196     009B                     	;# 
  3197     009B                     	;# 
  3198     009C                     	;# 
  3199     009D                     	;# 
  3200     009E                     	;# 
  3201     010C                     	;# 
  3202     010D                     	;# 
  3203     0111                     	;# 
  3204     0112                     	;# 
  3205     0113                     	;# 
  3206     0114                     	;# 
  3207     0115                     	;# 
  3208     0116                     	;# 
  3209     0117                     	;# 
  3210     0118                     	;# 
  3211     0119                     	;# 
  3212     011A                     	;# 
  3213     011B                     	;# 
  3214     011D                     	;# 
  3215     011E                     	;# 
  3216     018C                     	;# 
  3217     018D                     	;# 
  3218     0191                     	;# 
  3219     0191                     	;# 
  3220     0192                     	;# 
  3221     0193                     	;# 
  3222     0193                     	;# 
  3223     0193                     	;# 
  3224     0194                     	;# 
  3225     0195                     	;# 
  3226     0196                     	;# 
  3227     0199                     	;# 
  3228     019A                     	;# 
  3229     019B                     	;# 
  3230     019B                     	;# 
  3231     019B                     	;# 
  3232     019B                     	;# 
  3233     019C                     	;# 
  3234     019C                     	;# 
  3235     019D                     	;# 
  3236     019E                     	;# 
  3237     019F                     	;# 
  3238     020C                     	;# 
  3239     020D                     	;# 
  3240     0211                     	;# 
  3241     0211                     	;# 
  3242     0212                     	;# 
  3243     0212                     	;# 
  3244     0213                     	;# 
  3245     0213                     	;# 
  3246     0214                     	;# 
  3247     0214                     	;# 
  3248     0215                     	;# 
  3249     0215                     	;# 
  3250     0215                     	;# 
  3251     0216                     	;# 
  3252     0216                     	;# 
  3253     0217                     	;# 
  3254     0217                     	;# 
  3255     0219                     	;# 
  3256     021A                     	;# 
  3257     021B                     	;# 
  3258     021C                     	;# 
  3259     021D                     	;# 
  3260     021E                     	;# 
  3261     021F                     	;# 
  3262     0291                     	;# 
  3263     0291                     	;# 
  3264     0292                     	;# 
  3265     0293                     	;# 
  3266     0294                     	;# 
  3267     0295                     	;# 
  3268     0295                     	;# 
  3269     0296                     	;# 
  3270     0298                     	;# 
  3271     0298                     	;# 
  3272     0299                     	;# 
  3273     029A                     	;# 
  3274     029B                     	;# 
  3275     029C                     	;# 
  3276     029C                     	;# 
  3277     029D                     	;# 
  3278     029E                     	;# 
  3279     029E                     	;# 
  3280     0311                     	;# 
  3281     0311                     	;# 
  3282     0312                     	;# 
  3283     0313                     	;# 
  3284     0318                     	;# 
  3285     0318                     	;# 
  3286     0319                     	;# 
  3287     031A                     	;# 
  3288     0394                     	;# 
  3289     0395                     	;# 
  3290     0396                     	;# 
  3291     039A                     	;# 
  3292     039C                     	;# 
  3293     039D                     	;# 
  3294     039E                     	;# 
  3295     039F                     	;# 
  3296     0415                     	;# 
  3297     0416                     	;# 
  3298     0417                     	;# 
  3299     041C                     	;# 
  3300     041D                     	;# 
  3301     041E                     	;# 
  3302     0FE4                     	;# 
  3303     0FE5                     	;# 
  3304     0FE6                     	;# 
  3305     0FE7                     	;# 
  3306     0FE8                     	;# 
  3307     0FE9                     	;# 
  3308     0FEA                     	;# 
  3309     0FEB                     	;# 
  3310     0FED                     	;# 
  3311     0FEE                     	;# 
  3312     0FEF                     	;# 
  3313     0000                     	;# 
  3314     0001                     	;# 
  3315     0002                     	;# 
  3316     0003                     	;# 
  3317     0004                     	;# 
  3318     0005                     	;# 
  3319     0006                     	;# 
  3320     0007                     	;# 
  3321     0008                     	;# 
  3322     0009                     	;# 
  3323     000A                     	;# 
  3324     000B                     	;# 
  3325     000C                     	;# 
  3326     000D                     	;# 
  3327     0011                     	;# 
  3328     0012                     	;# 
  3329     0013                     	;# 
  3330     0014                     	;# 
  3331     0015                     	;# 
  3332     0016                     	;# 
  3333     0016                     	;# 
  3334     0017                     	;# 
  3335     0018                     	;# 
  3336     0019                     	;# 
  3337     001A                     	;# 
  3338     001B                     	;# 
  3339     001C                     	;# 
  3340     001E                     	;# 
  3341     001F                     	;# 
  3342     008C                     	;# 
  3343     008D                     	;# 
  3344     0091                     	;# 
  3345     0092                     	;# 
  3346     0093                     	;# 
  3347     0094                     	;# 
  3348     0095                     	;# 
  3349     0096                     	;# 
  3350     0097                     	;# 
  3351     0098                     	;# 
  3352     0099                     	;# 
  3353     009A                     	;# 
  3354     009B                     	;# 
  3355     009B                     	;# 
  3356     009C                     	;# 
  3357     009D                     	;# 
  3358     009E                     	;# 
  3359     010C                     	;# 
  3360     010D                     	;# 
  3361     0111                     	;# 
  3362     0112                     	;# 
  3363     0113                     	;# 
  3364     0114                     	;# 
  3365     0115                     	;# 
  3366     0116                     	;# 
  3367     0117                     	;# 
  3368     0118                     	;# 
  3369     0119                     	;# 
  3370     011A                     	;# 
  3371     011B                     	;# 
  3372     011D                     	;# 
  3373     011E                     	;# 
  3374     018C                     	;# 
  3375     018D                     	;# 
  3376     0191                     	;# 
  3377     0191                     	;# 
  3378     0192                     	;# 
  3379     0193                     	;# 
  3380     0193                     	;# 
  3381     0193                     	;# 
  3382     0194                     	;# 
  3383     0195                     	;# 
  3384     0196                     	;# 
  3385     0199                     	;# 
  3386     019A                     	;# 
  3387     019B                     	;# 
  3388     019B                     	;# 
  3389     019B                     	;# 
  3390     019B                     	;# 
  3391     019C                     	;# 
  3392     019C                     	;# 
  3393     019D                     	;# 
  3394     019E                     	;# 
  3395     019F                     	;# 
  3396     020C                     	;# 
  3397     020D                     	;# 
  3398     0211                     	;# 
  3399     0211                     	;# 
  3400     0212                     	;# 
  3401     0212                     	;# 
  3402     0213                     	;# 
  3403     0213                     	;# 
  3404     0214                     	;# 
  3405     0214                     	;# 
  3406     0215                     	;# 
  3407     0215                     	;# 
  3408     0215                     	;# 
  3409     0216                     	;# 
  3410     0216                     	;# 
  3411     0217                     	;# 
  3412     0217                     	;# 
  3413     0219                     	;# 
  3414     021A                     	;# 
  3415     021B                     	;# 
  3416     021C                     	;# 
  3417     021D                     	;# 
  3418     021E                     	;# 
  3419     021F                     	;# 
  3420     0291                     	;# 
  3421     0291                     	;# 
  3422     0292                     	;# 
  3423     0293                     	;# 
  3424     0294                     	;# 
  3425     0295                     	;# 
  3426     0295                     	;# 
  3427     0296                     	;# 
  3428     0298                     	;# 
  3429     0298                     	;# 
  3430     0299                     	;# 
  3431     029A                     	;# 
  3432     029B                     	;# 
  3433     029C                     	;# 
  3434     029C                     	;# 
  3435     029D                     	;# 
  3436     029E                     	;# 
  3437     029E                     	;# 
  3438     0311                     	;# 
  3439     0311                     	;# 
  3440     0312                     	;# 
  3441     0313                     	;# 
  3442     0318                     	;# 
  3443     0318                     	;# 
  3444     0319                     	;# 
  3445     031A                     	;# 
  3446     0394                     	;# 
  3447     0395                     	;# 
  3448     0396                     	;# 
  3449     039A                     	;# 
  3450     039C                     	;# 
  3451     039D                     	;# 
  3452     039E                     	;# 
  3453     039F                     	;# 
  3454     0415                     	;# 
  3455     0416                     	;# 
  3456     0417                     	;# 
  3457     041C                     	;# 
  3458     041D                     	;# 
  3459     041E                     	;# 
  3460     0FE4                     	;# 
  3461     0FE5                     	;# 
  3462     0FE6                     	;# 
  3463     0FE7                     	;# 
  3464     0FE8                     	;# 
  3465     0FE9                     	;# 
  3466     0FEA                     	;# 
  3467     0FEB                     	;# 
  3468     0FED                     	;# 
  3469     0FEE                     	;# 
  3470     0FEF                     	;# 
  3471                           
  3472 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  3473     0000                     
  3474 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  3475     0000                     
  3476 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  3477     0000                     
  3478                           	psect	idataBANK0
  3479     0FBB                     __pidataBANK0:
  3480                           
  3481                           ;initializer for _position
  3482     0FBB  3480               	retlw	128
  3483                           
  3484                           ;initializer for _targetFloor
  3485     0FBC  3401               	retlw	1
  3486                           
  3487                           ;initializer for _currentFloor
  3488     0FBD  3404               	retlw	4
  3489                           
  3490                           	psect	stringtext1
  3491     07FE                     __pstringtext1:
  3492     07FE                     _spi1_configuration:
  3493     07FE  3411               	retlw	17
  3494     07FF  3400               	retlw	0
  3495     0800  3401               	retlw	1
  3496     0801  3400               	retlw	0
  3497     0802                     __end_of_spi1_configuration:
  3498                           
  3499                           	psect	nvBANK0
  3500     0039                     __pnvBANK0:
  3501     0039                     _CMP1_InterruptHandler:
  3502     0039                     	ds	2
  3503     003B                     _TMR4_InterruptHandler:
  3504     003B                     	ds	2
  3505     003D                     _TMR6_InterruptHandler:
  3506     003D                     	ds	2
  3507     003F                     _CMP2_InterruptHandler:
  3508     003F                     	ds	2
  3509     0041                     _TMR0_InterruptHandler:
  3510     0041                     	ds	2
  3511     0043                     _timer1ReloadVal:
  3512     0043                     	ds	2
  3513     0045                     _CCP4_CallBack:
  3514     0045                     	ds	2
  3515     0047                     _IOCBF3_InterruptHandler:
  3516     0047                     	ds	2
  3517     0049                     _IOCBF0_InterruptHandler:
  3518     0049                     	ds	2
  3519     004B                     _EUSART_OverrunErrorHandler:
  3520     004B                     	ds	2
  3521     004D                     _EUSART_FramingErrorHandler:
  3522     004D                     	ds	2
  3523     004F                     _timer0ReloadVal:
  3524     004F                     	ds	1
  3525                           
  3526                           	psect	nvBANK1
  3527     00BA                     __pnvBANK1:
  3528     00BA                     _EUSART_ErrorHandler:
  3529     00BA                     	ds	2
  3530     000C                     _PORTAbits	set	12
  3531     0015                     _TMR0	set	21
  3532     0019                     _T1GCONbits	set	25
  3533     0018                     _T1CONbits	set	24
  3534     0018                     _T1CON	set	24
  3535     0016                     _TMR1L	set	22
  3536     0017                     _TMR1H	set	23
  3537     0019                     _T1GCON	set	25
  3538     001C                     _T2CONbits	set	28
  3539     001C                     _T2CON	set	28
  3540     001A                     _TMR2	set	26
  3541     001B                     _PR2	set	27
  3542     0012                     _PIR2bits	set	18
  3543     0013                     _PIR3bits	set	19
  3544     000B                     _INTCONbits	set	11
  3545     0011                     _PIR1bits	set	17
  3546     009D                     _ADCON0bits	set	157
  3547     009D                     _ADCON0	set	157
  3548     009C                     _ADRESH	set	156
  3549     009B                     _ADRESL	set	155
  3550     009E                     _ADCON1	set	158
  3551     0095                     _OPTION_REG	set	149
  3552     0097                     _WDTCON	set	151
  3553     0098                     _OSCTUNE	set	152
  3554     0099                     _OSCCON	set	153
  3555     0095                     _OPTION_REGbits	set	149
  3556     008D                     _TRISB	set	141
  3557     008C                     _TRISA	set	140
  3558     0092                     _PIE2bits	set	146
  3559     0093                     _PIE3bits	set	147
  3560     008D                     _TRISBbits	set	141
  3561     0117                     _FVRCONbits	set	279
  3562     0117                     _FVRCON	set	279
  3563     010D                     _LATBbits	set	269
  3564     010C                     _LATAbits	set	268
  3565     0112                     _CM1CON1	set	274
  3566     0111                     _CM1CON0	set	273
  3567     0119                     _DACCON1	set	281
  3568     0118                     _DACCON0	set	280
  3569     0115                     _CMOUTbits	set	277
  3570     0114                     _CM2CON1	set	276
  3571     0113                     _CM2CON0	set	275
  3572     0116                     _BORCON	set	278
  3573     011E                     _APFCON1	set	286
  3574     011D                     _APFCON0	set	285
  3575     010D                     _LATB	set	269
  3576     010C                     _LATA	set	268
  3577     0196                     _EECON2	set	406
  3578     0193                     _EEDATL	set	403
  3579     0194                     _EEDATH	set	404
  3580     0195                     _EECON1bits	set	405
  3581     0192                     _EEADRH	set	402
  3582     0191                     _EEADRL	set	401
  3583     018C                     _ANSELA	set	396
  3584     018D                     _ANSELB	set	397
  3585     019A                     _TXREG	set	410
  3586     0199                     _RCREG	set	409
  3587     019D                     _RCSTAbits	set	413
  3588     019E                     _TXSTAbits	set	414
  3589     019C                     _SPBRGH	set	412
  3590     019B                     _SPBRGL	set	411
  3591     019E                     _TXSTA	set	414
  3592     019D                     _RCSTA	set	413
  3593     019F                     _BAUDCON	set	415
  3594     020C                     _WPUA	set	524
  3595     020D                     _WPUB	set	525
  3596     0211                     _SSP1BUF	set	529
  3597     0216                     _SSP1CON2	set	534
  3598     0215                     _SSP1CON1bits	set	533
  3599     0212                     _SSP1ADD	set	530
  3600     0215                     _SSP1CON1	set	533
  3601     0214                     _SSP1STAT	set	532
  3602     029E                     _CCPTMRS0bits	set	670
  3603     0319                     _CCPR4H	set	793
  3604     0318                     _CCPR4L	set	792
  3605     031A                     _CCP4CON	set	794
  3606     0312                     _CCPR3H	set	786
  3607     0311                     _CCPR3L	set	785
  3608     0313                     _CCP3CON	set	787
  3609     0394                     _IOCBPbits	set	916
  3610     0395                     _IOCBNbits	set	917
  3611     0396                     _IOCBFbits	set	918
  3612     0417                     _T4CONbits	set	1047
  3613     0417                     _T4CON	set	1047
  3614     0415                     _TMR4	set	1045
  3615     0416                     _PR4	set	1046
  3616     041E                     _T6CONbits	set	1054
  3617     041E                     _T6CON	set	1054
  3618     041C                     _TMR6	set	1052
  3619     041D                     _PR6	set	1053
  3620                           
  3621                           	psect	cinit
  3622     006C                     start_initialization:	
  3623                           ; #config settings
  3624                           
  3625     006C                     __initialization:
  3626                           
  3627                           ; Initialize objects allocated to BANK0
  3628     006C  318F  27BB  3180   	fcall	__pidataBANK0	;fetch initializer
  3629     006F  00E2               	movwf	__pdataBANK0& (0+127)
  3630     0070  318F  27BC  3180   	fcall	__pidataBANK0+1	;fetch initializer
  3631     0073  00E3               	movwf	(__pdataBANK0+1)& (0+127)
  3632     0074  318F  27BD  3180   	fcall	__pidataBANK0+2	;fetch initializer
  3633     0077  00E4               	movwf	(__pdataBANK0+2)& (0+127)
  3634                           
  3635                           ; Clear objects allocated to BANK0
  3636     0078  3020               	movlw	low __pbssBANK0
  3637     0079  0084               	movwf	4
  3638     007A  3000               	movlw	high __pbssBANK0
  3639     007B  0085               	movwf	5
  3640     007C  3019               	movlw	25
  3641     007D  318F  27EB  3180   	fcall	clear_ram0
  3642                           
  3643                           ; Clear objects allocated to BANK1
  3644     0080  30A0               	movlw	low __pbssBANK1
  3645     0081  0084               	movwf	4
  3646     0082  3000               	movlw	high __pbssBANK1
  3647     0083  0085               	movwf	5
  3648     0084  3010               	movlw	16
  3649     0085  318F  27EB  3180   	fcall	clear_ram0
  3650     0088                     end_of_initialization:	
  3651                           ;End of C runtime variable initialization code
  3652                           
  3653     0088                     __end_of__initialization:
  3654     0088  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3655     0089  0020               	movlb	0
  3656     008A  3181  2980         	ljmp	_main	;jump to C main() function
  3657                           
  3658                           	psect	bssBANK0
  3659     0020                     __pbssBANK0:
  3660     0020                     _matrix:
  3661     0020                     	ds	8
  3662     0028                     _data_tx:
  3663     0028                     	ds	4
  3664     002C                     TMR4_ISR@CountCallBack:
  3665     002C                     	ds	2
  3666     002E                     TMR6_ISR@CountCallBack:
  3667     002E                     	ds	2
  3668     0030                     _ADC_InterruptHandler:
  3669     0030                     	ds	2
  3670     0032                     TMR0_ISR@CountCallBack:
  3671     0032                     	ds	2
  3672     0034                     _velocity_idx:
  3673     0034                     	ds	1
  3674     0035                     _directionFlag:
  3675     0035                     	ds	1
  3676     0036                     _floorFlag:
  3677     0036                     	ds	1
  3678     0037                     _eusartRxLastError:
  3679     0037                     	ds	1
  3680     0038                     _motorState:
  3681     0038                     	ds	1
  3682                           
  3683                           	psect	dataBANK0
  3684     0062                     __pdataBANK0:
  3685     0062                     _position:
  3686     0062                     	ds	1
  3687     0063                     _targetFloor:
  3688     0063                     	ds	1
  3689     0064                     _currentFloor:
  3690     0064                     	ds	1
  3691                           
  3692                           	psect	bssBANK1
  3693     00A0                     __pbssBANK1:
  3694     00A0                     _velocity:
  3695     00A0                     	ds	16
  3696                           
  3697                           	psect	clrtext
  3698     0FEB                     clear_ram0:	
  3699                           ;	Called with FSR0 containing the base address, and
  3700                           ;	WREG with the size to clear
  3701                           
  3702     0FEB  0064               	clrwdt	;clear the watchdog before getting into this loop
  3703     0FEC                     clrloop0:
  3704     0FEC  0180               	clrf	0	;clear RAM location pointed to by FSR
  3705     0FED  3101               	addfsr 0,1
  3706     0FEE  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3707     0FEF  2FEC               	goto	clrloop0	;have we reached the end yet?
  3708     0FF0  3400               	retlw	0	;all done for this memory range, return
  3709                           
  3710                           	psect	cstackBANK1
  3711     00B0                     __pcstackBANK1:
  3712     00B0                     ?_EUSART_SetFramingErrorHandler:
  3713     00B0                     ?_EUSART_SetOverrunErrorHandler:	
  3714                           ; 1 bytes @ 0x0
  3715                           
  3716     00B0                     ?_EUSART_SetErrorHandler:	
  3717                           ; 1 bytes @ 0x0
  3718                           
  3719     00B0                     ?_IOCBF0_SetInterruptHandler:	
  3720                           ; 1 bytes @ 0x0
  3721                           
  3722     00B0                     ?_IOCBF3_SetInterruptHandler:	
  3723                           ; 1 bytes @ 0x0
  3724                           
  3725     00B0                     ?_CCP4_SetCallBack:	
  3726                           ; 1 bytes @ 0x0
  3727                           
  3728     00B0                     ??_OSCILLATOR_Initialize:	
  3729                           ; 1 bytes @ 0x0
  3730                           
  3731     00B0                     ??_WDT_Initialize:	
  3732                           ; 1 bytes @ 0x0
  3733                           
  3734     00B0                     ??_CMP2_Initialize:	
  3735                           ; 1 bytes @ 0x0
  3736                           
  3737     00B0                     ??_FVR_Initialize:	
  3738                           ; 1 bytes @ 0x0
  3739                           
  3740     00B0                     ??_DAC_Initialize:	
  3741                           ; 1 bytes @ 0x0
  3742                           
  3743     00B0                     ??_TMR2_Initialize:	
  3744                           ; 1 bytes @ 0x0
  3745                           
  3746     00B0                     ??_CMP1_Initialize:	
  3747                           ; 1 bytes @ 0x0
  3748                           
  3749     00B0                     ??_ADC_Initialize:	
  3750                           ; 1 bytes @ 0x0
  3751                           
  3752     00B0                     ??_TMR1_Initialize:	
  3753                           ; 1 bytes @ 0x0
  3754                           
  3755     00B0                     ?_TMR0_SetInterruptHandler:	
  3756                           ; 1 bytes @ 0x0
  3757                           
  3758     00B0                     ?_TMR6_SetInterruptHandler:	
  3759                           ; 1 bytes @ 0x0
  3760                           
  3761     00B0                     ?_TMR4_SetInterruptHandler:	
  3762                           ; 1 bytes @ 0x0
  3763                           
  3764     00B0                     ??_SPI1_Initialize:	
  3765                           ; 1 bytes @ 0x0
  3766                           
  3767     00B0                     ??_SPI1_WriteByte:	
  3768                           ; 1 bytes @ 0x0
  3769                           
  3770     00B0                     ??_PWM3_Initialize:	
  3771                           ; 1 bytes @ 0x0
  3772                           
  3773     00B0                     ?_PWM3_LoadDutyValue:	
  3774                           ; 1 bytes @ 0x0
  3775                           
  3776     00B0                     ??_EUSART_is_rx_ready:	
  3777                           ; 1 bytes @ 0x0
  3778                           
  3779     00B0                     ??_EUSART_Read:	
  3780                           ; 1 bytes @ 0x0
  3781                           
  3782     00B0                     ??_DATAEE_ReadByte:	
  3783                           ; 1 bytes @ 0x0
  3784                           
  3785     00B0                     ?_CMP2_SetInterruptHandler:	
  3786                           ; 1 bytes @ 0x0
  3787                           
  3788     00B0                     ??_TMR4_StartTimer:	
  3789                           ; 1 bytes @ 0x0
  3790                           
  3791     00B0                     ?_CMP1_SetInterruptHandler:	
  3792                           ; 1 bytes @ 0x0
  3793                           
  3794     00B0                     SPI1_WriteByte@byte:	
  3795                           ; 1 bytes @ 0x0
  3796                           
  3797     00B0                     DATAEE_ReadByte@bAdd:	
  3798                           ; 1 bytes @ 0x0
  3799                           
  3800     00B0                     PWM3_LoadDutyValue@dutyValue:	
  3801                           ; 1 bytes @ 0x0
  3802                           
  3803     00B0                     EUSART_SetFramingErrorHandler@interruptHandler:	
  3804                           ; 2 bytes @ 0x0
  3805                           
  3806     00B0                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  3807                           ; 2 bytes @ 0x0
  3808                           
  3809     00B0                     EUSART_SetErrorHandler@interruptHandler:	
  3810                           ; 2 bytes @ 0x0
  3811                           
  3812     00B0                     IOCBF0_SetInterruptHandler@InterruptHandler:	
  3813                           ; 2 bytes @ 0x0
  3814                           
  3815     00B0                     IOCBF3_SetInterruptHandler@InterruptHandler:	
  3816                           ; 2 bytes @ 0x0
  3817                           
  3818     00B0                     CCP4_SetCallBack@customCallBack:	
  3819                           ; 2 bytes @ 0x0
  3820                           
  3821     00B0                     TMR0_SetInterruptHandler@InterruptHandler:	
  3822                           ; 2 bytes @ 0x0
  3823                           
  3824     00B0                     CMP2_SetInterruptHandler@InterruptHandler:	
  3825                           ; 2 bytes @ 0x0
  3826                           
  3827     00B0                     TMR6_SetInterruptHandler@InterruptHandler:	
  3828                           ; 2 bytes @ 0x0
  3829                           
  3830     00B0                     TMR4_SetInterruptHandler@InterruptHandler:	
  3831                           ; 2 bytes @ 0x0
  3832                           
  3833     00B0                     CMP1_SetInterruptHandler@InterruptHandler:	
  3834                           ; 2 bytes @ 0x0
  3835                           
  3836                           
  3837                           ; 2 bytes @ 0x0
  3838     00B0                     	ds	1
  3839     00B1                     ?_setMatrix:
  3840     00B1                     ?_txMAX7219:	
  3841                           ; 1 bytes @ 0x1
  3842                           
  3843     00B1                     txMAX7219@dat0:	
  3844                           ; 1 bytes @ 0x1
  3845                           
  3846     00B1                     setMatrix@val:	
  3847                           ; 1 bytes @ 0x1
  3848                           
  3849                           
  3850                           ; 1 bytes @ 0x1
  3851     00B1                     	ds	1
  3852     00B2                     ??_EUSART_SetFramingErrorHandler:
  3853     00B2                     ??_EUSART_SetOverrunErrorHandler:	
  3854                           ; 1 bytes @ 0x2
  3855                           
  3856     00B2                     ??_EUSART_SetErrorHandler:	
  3857                           ; 1 bytes @ 0x2
  3858                           
  3859     00B2                     ??_IOCBF0_SetInterruptHandler:	
  3860                           ; 1 bytes @ 0x2
  3861                           
  3862     00B2                     ??_IOCBF3_SetInterruptHandler:	
  3863                           ; 1 bytes @ 0x2
  3864                           
  3865     00B2                     ??_CCP4_SetCallBack:	
  3866                           ; 1 bytes @ 0x2
  3867                           
  3868     00B2                     ??_TMR4_Initialize:	
  3869                           ; 1 bytes @ 0x2
  3870                           
  3871     00B2                     ??_TMR0_Initialize:	
  3872                           ; 1 bytes @ 0x2
  3873                           
  3874     00B2                     ??_TMR6_Initialize:	
  3875                           ; 1 bytes @ 0x2
  3876                           
  3877     00B2                     ??_TMR0_SetInterruptHandler:	
  3878                           ; 1 bytes @ 0x2
  3879                           
  3880     00B2                     ??_TMR6_SetInterruptHandler:	
  3881                           ; 1 bytes @ 0x2
  3882                           
  3883     00B2                     ??_TMR4_SetInterruptHandler:	
  3884                           ; 1 bytes @ 0x2
  3885                           
  3886     00B2                     ??_setMatrix:	
  3887                           ; 1 bytes @ 0x2
  3888                           
  3889     00B2                     ??_PWM3_LoadDutyValue:	
  3890                           ; 1 bytes @ 0x2
  3891                           
  3892     00B2                     ??_EUSART_Initialize:	
  3893                           ; 1 bytes @ 0x2
  3894                           
  3895     00B2                     ??_PIN_MANAGER_Initialize:	
  3896                           ; 1 bytes @ 0x2
  3897                           
  3898     00B2                     ??_CCP4_Initialize:	
  3899                           ; 1 bytes @ 0x2
  3900                           
  3901     00B2                     ??_SYSTEM_Initialize:	
  3902                           ; 1 bytes @ 0x2
  3903                           
  3904     00B2                     ??_CMP2_SetInterruptHandler:	
  3905                           ; 1 bytes @ 0x2
  3906                           
  3907     00B2                     ??_CMP1_SetInterruptHandler:	
  3908                           ; 1 bytes @ 0x2
  3909                           
  3910     00B2                     ??_txMAX7219:	
  3911                           ; 1 bytes @ 0x2
  3912                           
  3913     00B2                     txMAX7219@addr0:	
  3914                           ; 1 bytes @ 0x2
  3915                           
  3916                           
  3917                           ; 1 bytes @ 0x2
  3918     00B2                     	ds	1
  3919     00B3                     ??_initMAX7219:
  3920     00B3                     setMatrix@pos:	
  3921                           ; 1 bytes @ 0x3
  3922                           
  3923                           
  3924                           ; 1 bytes @ 0x3
  3925     00B3                     	ds	1
  3926     00B4                     ??_sendMotor:
  3927     00B4                     setMatrix@eeAdd:	
  3928                           ; 1 bytes @ 0x4
  3929                           
  3930                           
  3931                           ; 1 bytes @ 0x4
  3932     00B4                     	ds	1
  3933     00B5                     setMatrix@i:
  3934                           
  3935                           ; 1 bytes @ 0x5
  3936     00B5                     	ds	1
  3937     00B6                     ??_updateMotor:
  3938     00B6                     ??_updateMatrix:	
  3939                           ; 1 bytes @ 0x6
  3940                           
  3941     00B6                     updateMatrix@direction:	
  3942                           ; 1 bytes @ 0x6
  3943                           
  3944                           
  3945                           ; 1 bytes @ 0x6
  3946     00B6                     	ds	1
  3947     00B7                     ??_main:
  3948                           
  3949                           ; 1 bytes @ 0x7
  3950     00B7                     	ds	2
  3951     00B9                     main@receivedData:
  3952                           
  3953                           ; 1 bytes @ 0x9
  3954     00B9                     	ds	1
  3955                           
  3956                           	psect	cstackCOMMON
  3957     0070                     __pcstackCOMMON:
  3958     0070                     ?_PIN_MANAGER_IOC:
  3959     0070                     ?_TMR0_ISR:	
  3960                           ; 1 bytes @ 0x0
  3961                           
  3962     0070                     ?_TMR4_ISR:	
  3963                           ; 1 bytes @ 0x0
  3964                           
  3965     0070                     ?_CMP2_ISR:	
  3966                           ; 1 bytes @ 0x0
  3967                           
  3968     0070                     ?_CMP1_ISR:	
  3969                           ; 1 bytes @ 0x0
  3970                           
  3971     0070                     ?_CCP4_CaptureISR:	
  3972                           ; 1 bytes @ 0x0
  3973                           
  3974     0070                     ?_TMR6_ISR:	
  3975                           ; 1 bytes @ 0x0
  3976                           
  3977     0070                     ?_IOCBF0_DefaultInterruptHandler:	
  3978                           ; 1 bytes @ 0x0
  3979                           
  3980     0070                     ??_IOCBF0_DefaultInterruptHandler:	
  3981                           ; 1 bytes @ 0x0
  3982                           
  3983     0070                     ?_IOCBF3_DefaultInterruptHandler:	
  3984                           ; 1 bytes @ 0x0
  3985                           
  3986     0070                     ??_IOCBF3_DefaultInterruptHandler:	
  3987                           ; 1 bytes @ 0x0
  3988                           
  3989     0070                     ?_IOCBF0_ISR:	
  3990                           ; 1 bytes @ 0x0
  3991                           
  3992     0070                     ?_IOCBF3_ISR:	
  3993                           ; 1 bytes @ 0x0
  3994                           
  3995     0070                     ?_OSCILLATOR_Initialize:	
  3996                           ; 1 bytes @ 0x0
  3997                           
  3998     0070                     ?_WDT_Initialize:	
  3999                           ; 1 bytes @ 0x0
  4000                           
  4001     0070                     ?_CMP2_Initialize:	
  4002                           ; 1 bytes @ 0x0
  4003                           
  4004     0070                     ?_FVR_Initialize:	
  4005                           ; 1 bytes @ 0x0
  4006                           
  4007     0070                     ?_DAC_Initialize:	
  4008                           ; 1 bytes @ 0x0
  4009                           
  4010     0070                     ?_TMR4_Initialize:	
  4011                           ; 1 bytes @ 0x0
  4012                           
  4013     0070                     ?_TMR2_Initialize:	
  4014                           ; 1 bytes @ 0x0
  4015                           
  4016     0070                     ?_TMR0_Initialize:	
  4017                           ; 1 bytes @ 0x0
  4018                           
  4019     0070                     ?_TMR6_Initialize:	
  4020                           ; 1 bytes @ 0x0
  4021                           
  4022     0070                     ?_CMP1_Initialize:	
  4023                           ; 1 bytes @ 0x0
  4024                           
  4025     0070                     ?_ADC_Initialize:	
  4026                           ; 1 bytes @ 0x0
  4027                           
  4028     0070                     ?_TMR1_Initialize:	
  4029                           ; 1 bytes @ 0x0
  4030                           
  4031     0070                     ?_TMR0_DefaultInterruptHandler:	
  4032                           ; 1 bytes @ 0x0
  4033                           
  4034     0070                     ??_TMR0_DefaultInterruptHandler:	
  4035                           ; 1 bytes @ 0x0
  4036                           
  4037     0070                     ?_TMR0_CallBack:	
  4038                           ; 1 bytes @ 0x0
  4039                           
  4040     0070                     ?_TMR6_DefaultInterruptHandler:	
  4041                           ; 1 bytes @ 0x0
  4042                           
  4043     0070                     ??_TMR6_DefaultInterruptHandler:	
  4044                           ; 1 bytes @ 0x0
  4045                           
  4046     0070                     ?_TMR6_CallBack:	
  4047                           ; 1 bytes @ 0x0
  4048                           
  4049     0070                     ?_TMR4_DefaultInterruptHandler:	
  4050                           ; 1 bytes @ 0x0
  4051                           
  4052     0070                     ??_TMR4_DefaultInterruptHandler:	
  4053                           ; 1 bytes @ 0x0
  4054                           
  4055     0070                     ?_TMR4_CallBack:	
  4056                           ; 1 bytes @ 0x0
  4057                           
  4058     0070                     ?_initMAX7219:	
  4059                           ; 1 bytes @ 0x0
  4060                           
  4061     0070                     ?_SPI1_Initialize:	
  4062                           ; 1 bytes @ 0x0
  4063                           
  4064     0070                     ?_SPI1_WriteByte:	
  4065                           ; 1 bytes @ 0x0
  4066                           
  4067     0070                     ?_PWM3_Initialize:	
  4068                           ; 1 bytes @ 0x0
  4069                           
  4070     0070                     ?_EUSART_Initialize:	
  4071                           ; 1 bytes @ 0x0
  4072                           
  4073     0070                     ?_EUSART_is_tx_ready:	
  4074                           ; 1 bytes @ 0x0
  4075                           
  4076     0070                     ??_EUSART_is_tx_ready:	
  4077                           ; 1 bytes @ 0x0
  4078                           
  4079     0070                     ?_EUSART_is_rx_ready:	
  4080                           ; 1 bytes @ 0x0
  4081                           
  4082     0070                     ?_EUSART_Read:	
  4083                           ; 1 bytes @ 0x0
  4084                           
  4085     0070                     ?_EUSART_Write:	
  4086                           ; 1 bytes @ 0x0
  4087                           
  4088     0070                     ??_EUSART_Write:	
  4089                           ; 1 bytes @ 0x0
  4090                           
  4091     0070                     ?_INTERRUPT_InterruptManager:	
  4092                           ; 1 bytes @ 0x0
  4093                           
  4094     0070                     ?_PIN_MANAGER_Initialize:	
  4095                           ; 1 bytes @ 0x0
  4096                           
  4097     0070                     ?_CCP4_DefaultCallBack:	
  4098                           ; 1 bytes @ 0x0
  4099                           
  4100     0070                     ?_CCP4_Initialize:	
  4101                           ; 1 bytes @ 0x0
  4102                           
  4103     0070                     ?_SYSTEM_Initialize:	
  4104                           ; 1 bytes @ 0x0
  4105                           
  4106     0070                     ?_TMR1_HasOverflowOccured:	
  4107                           ; 1 bytes @ 0x0
  4108                           
  4109     0070                     ??_TMR1_HasOverflowOccured:	
  4110                           ; 1 bytes @ 0x0
  4111                           
  4112     0070                     ?_DATAEE_ReadByte:	
  4113                           ; 1 bytes @ 0x0
  4114                           
  4115     0070                     ?_TMR6_StartTimer:	
  4116                           ; 1 bytes @ 0x0
  4117                           
  4118     0070                     ??_TMR6_StartTimer:	
  4119                           ; 1 bytes @ 0x0
  4120                           
  4121     0070                     ?_TMR6_StopTimer:	
  4122                           ; 1 bytes @ 0x0
  4123                           
  4124     0070                     ??_TMR6_StopTimer:	
  4125                           ; 1 bytes @ 0x0
  4126                           
  4127     0070                     ?_TMR6_WriteTimer:	
  4128                           ; 1 bytes @ 0x0
  4129                           
  4130     0070                     ??_TMR6_WriteTimer:	
  4131                           ; 1 bytes @ 0x0
  4132                           
  4133     0070                     ?_TMR4_StartTimer:	
  4134                           ; 1 bytes @ 0x0
  4135                           
  4136     0070                     ?_TMR4_StopTimer:	
  4137                           ; 1 bytes @ 0x0
  4138                           
  4139     0070                     ??_TMR4_StopTimer:	
  4140                           ; 1 bytes @ 0x0
  4141                           
  4142     0070                     ?_TMR4_WriteTimer:	
  4143                           ; 1 bytes @ 0x0
  4144                           
  4145     0070                     ??_TMR4_WriteTimer:	
  4146                           ; 1 bytes @ 0x0
  4147                           
  4148     0070                     ?_sendMotor:	
  4149                           ; 1 bytes @ 0x0
  4150                           
  4151     0070                     ?_updateMotor:	
  4152                           ; 1 bytes @ 0x0
  4153                           
  4154     0070                     ?_updateMatrix:	
  4155                           ; 1 bytes @ 0x0
  4156                           
  4157     0070                     ?_TMR0_Interrupt:	
  4158                           ; 1 bytes @ 0x0
  4159                           
  4160     0070                     ?_TMR4_Interrupt:	
  4161                           ; 1 bytes @ 0x0
  4162                           
  4163     0070                     ?_TMR6_Interrupt:	
  4164                           ; 1 bytes @ 0x0
  4165                           
  4166     0070                     ?_CCP4_Interrupt:	
  4167                           ; 1 bytes @ 0x0
  4168                           
  4169     0070                     ?_S1_Interrupt:	
  4170                           ; 1 bytes @ 0x0
  4171                           
  4172     0070                     ?_S2_Interrupt:	
  4173                           ; 1 bytes @ 0x0
  4174                           
  4175     0070                     ?_S3_Interrupt:	
  4176                           ; 1 bytes @ 0x0
  4177                           
  4178     0070                     ?_S4_Interrupt:	
  4179                           ; 1 bytes @ 0x0
  4180                           
  4181     0070                     ?_main:	
  4182                           ; 1 bytes @ 0x0
  4183                           
  4184     0070                     ?i1_PWM3_LoadDutyValue:	
  4185                           ; 1 bytes @ 0x0
  4186                           
  4187     0070                     ?i1_DATAEE_ReadByte:	
  4188                           ; 1 bytes @ 0x0
  4189                           
  4190     0070                     ??i1_DATAEE_ReadByte:	
  4191                           ; 1 bytes @ 0x0
  4192                           
  4193     0070                     ?i1_TMR4_StartTimer:	
  4194                           ; 1 bytes @ 0x0
  4195                           
  4196     0070                     ??i1_TMR4_StartTimer:	
  4197                           ; 1 bytes @ 0x0
  4198                           
  4199     0070                     ?i1_sendMotor:	
  4200                           ; 1 bytes @ 0x0
  4201                           
  4202     0070                     ?i1_updateMotor:	
  4203                           ; 1 bytes @ 0x0
  4204                           
  4205     0070                     ?i1_updateMatrix:	
  4206                           ; 1 bytes @ 0x0
  4207                           
  4208     0070                     ?_ADC_GetConversion:	
  4209                           ; 1 bytes @ 0x0
  4210                           
  4211     0070                     ?___wmul:	
  4212                           ; 2 bytes @ 0x0
  4213                           
  4214     0070                     ?___lwdiv:	
  4215                           ; 2 bytes @ 0x0
  4216                           
  4217     0070                     ?___lldiv:	
  4218                           ; 2 bytes @ 0x0
  4219                           
  4220     0070                     _EUSART_is_tx_ready$323:	
  4221                           ; 4 bytes @ 0x0
  4222                           
  4223     0070                     EUSART_Write@txData:	
  4224                           ; 1 bytes @ 0x0
  4225                           
  4226     0070                     TMR6_WriteTimer@timerVal:	
  4227                           ; 1 bytes @ 0x0
  4228                           
  4229     0070                     TMR4_WriteTimer@timerVal:	
  4230                           ; 1 bytes @ 0x0
  4231                           
  4232     0070                     i1DATAEE_ReadByte@bAdd:	
  4233                           ; 1 bytes @ 0x0
  4234                           
  4235     0070                     CCP4_DefaultCallBack@capturedValue:	
  4236                           ; 1 bytes @ 0x0
  4237                           
  4238     0070                     CCP4_Interrupt@capturedValue:	
  4239                           ; 2 bytes @ 0x0
  4240                           
  4241     0070                     ___wmul@multiplier:	
  4242                           ; 2 bytes @ 0x0
  4243                           
  4244     0070                     ___lwdiv@divisor:	
  4245                           ; 2 bytes @ 0x0
  4246                           
  4247     0070                     i1PWM3_LoadDutyValue@dutyValue:	
  4248                           ; 2 bytes @ 0x0
  4249                           
  4250     0070                     ___lldiv@divisor:	
  4251                           ; 2 bytes @ 0x0
  4252                           
  4253                           
  4254                           ; 4 bytes @ 0x0
  4255     0070                     	ds	1
  4256     0071                     ?i1_setMatrix:
  4257     0071                     i1setMatrix@val:	
  4258                           ; 1 bytes @ 0x1
  4259                           
  4260                           
  4261                           ; 1 bytes @ 0x1
  4262     0071                     	ds	1
  4263     0072                     ??_CCP4_DefaultCallBack:
  4264     0072                     ??_ADC_GetConversion:	
  4265                           ; 1 bytes @ 0x2
  4266                           
  4267     0072                     ??_CCP4_Interrupt:	
  4268                           ; 1 bytes @ 0x2
  4269                           
  4270     0072                     ??i1_PWM3_LoadDutyValue:	
  4271                           ; 1 bytes @ 0x2
  4272                           
  4273     0072                     ??i1_setMatrix:	
  4274                           ; 1 bytes @ 0x2
  4275                           
  4276     0072                     ___wmul@multiplicand:	
  4277                           ; 1 bytes @ 0x2
  4278                           
  4279     0072                     ___lwdiv@dividend:	
  4280                           ; 2 bytes @ 0x2
  4281                           
  4282                           
  4283                           ; 2 bytes @ 0x2
  4284     0072                     	ds	1
  4285     0073                     ??_CCP4_CaptureISR:
  4286     0073                     ADC_GetConversion@channel:	
  4287                           ; 1 bytes @ 0x3
  4288                           
  4289     0073                     i1setMatrix@pos:	
  4290                           ; 1 bytes @ 0x3
  4291                           
  4292     0073                     CCP4_CaptureISR@module:	
  4293                           ; 1 bytes @ 0x3
  4294                           
  4295                           
  4296                           ; 2 bytes @ 0x3
  4297     0073                     	ds	1
  4298     0074                     ??___wmul:
  4299     0074                     ??___lwdiv:	
  4300                           ; 1 bytes @ 0x4
  4301                           
  4302     0074                     ??i1_sendMotor:	
  4303                           ; 1 bytes @ 0x4
  4304                           
  4305     0074                     i1setMatrix@eeAdd:	
  4306                           ; 1 bytes @ 0x4
  4307                           
  4308     0074                     ___wmul@product:	
  4309                           ; 1 bytes @ 0x4
  4310                           
  4311     0074                     ___lldiv@dividend:	
  4312                           ; 2 bytes @ 0x4
  4313                           
  4314                           
  4315                           ; 4 bytes @ 0x4
  4316     0074                     	ds	1
  4317     0075                     i1setMatrix@i:
  4318     0075                     ___lwdiv@quotient:	
  4319                           ; 1 bytes @ 0x5
  4320                           
  4321                           
  4322                           ; 2 bytes @ 0x5
  4323     0075                     	ds	1
  4324     0076                     ??i1_updateMotor:
  4325     0076                     ??i1_updateMatrix:	
  4326                           ; 1 bytes @ 0x6
  4327                           
  4328     0076                     i1updateMatrix@direction:	
  4329                           ; 1 bytes @ 0x6
  4330                           
  4331                           
  4332                           ; 1 bytes @ 0x6
  4333     0076                     	ds	1
  4334     0077                     ??_PIN_MANAGER_IOC:
  4335     0077                     ??_TMR4_ISR:	
  4336                           ; 1 bytes @ 0x7
  4337                           
  4338     0077                     ??_CMP2_ISR:	
  4339                           ; 1 bytes @ 0x7
  4340                           
  4341     0077                     ??_CMP1_ISR:	
  4342                           ; 1 bytes @ 0x7
  4343                           
  4344     0077                     ??_TMR6_ISR:	
  4345                           ; 1 bytes @ 0x7
  4346                           
  4347     0077                     ??_IOCBF0_ISR:	
  4348                           ; 1 bytes @ 0x7
  4349                           
  4350     0077                     ??_IOCBF3_ISR:	
  4351                           ; 1 bytes @ 0x7
  4352                           
  4353     0077                     ??_TMR6_CallBack:	
  4354                           ; 1 bytes @ 0x7
  4355                           
  4356     0077                     ??_TMR4_CallBack:	
  4357                           ; 1 bytes @ 0x7
  4358                           
  4359     0077                     ??_TMR4_Interrupt:	
  4360                           ; 1 bytes @ 0x7
  4361                           
  4362     0077                     ??_TMR6_Interrupt:	
  4363                           ; 1 bytes @ 0x7
  4364                           
  4365     0077                     ??_S1_Interrupt:	
  4366                           ; 1 bytes @ 0x7
  4367                           
  4368     0077                     ??_S2_Interrupt:	
  4369                           ; 1 bytes @ 0x7
  4370                           
  4371     0077                     ??_S3_Interrupt:	
  4372                           ; 1 bytes @ 0x7
  4373                           
  4374     0077                     ??_S4_Interrupt:	
  4375                           ; 1 bytes @ 0x7
  4376                           
  4377     0077                     ___lwdiv@counter:	
  4378                           ; 1 bytes @ 0x7
  4379                           
  4380                           
  4381                           ; 1 bytes @ 0x7
  4382     0077                     	ds	1
  4383     0078                     ??___lldiv:
  4384                           
  4385                           ; 1 bytes @ 0x8
  4386     0078                     	ds	1
  4387     0079                     ___lldiv@quotient:
  4388                           
  4389                           ; 4 bytes @ 0x9
  4390     0079                     	ds	4
  4391     007D                     ___lldiv@counter:
  4392                           
  4393                           ; 1 bytes @ 0xD
  4394     007D                     	ds	1
  4395     007E                     ??_TMR0_ISR:
  4396     007E                     ??_TMR0_CallBack:	
  4397                           ; 1 bytes @ 0xE
  4398                           
  4399     007E                     ??_INTERRUPT_InterruptManager:	
  4400                           ; 1 bytes @ 0xE
  4401                           
  4402                           
  4403                           	psect	cstackBANK0
  4404     0050                     __pcstackBANK0:	
  4405                           ; 1 bytes @ 0xE
  4406                           
  4407     0050                     ??_TMR0_Interrupt:
  4408                           
  4409                           ; 1 bytes @ 0x0
  4410     0050                     	ds	4
  4411     0054                     TMR0_Interrupt@v:
  4412                           
  4413                           ; 4 bytes @ 0x4
  4414     0054                     	ds	4
  4415     0058                     TMR0_Interrupt@i:
  4416                           
  4417                           ; 2 bytes @ 0x8
  4418     0058                     	ds	2
  4419     005A                     TMR0_Interrupt@i_1692:
  4420                           
  4421                           ; 2 bytes @ 0xA
  4422     005A                     	ds	2
  4423     005C                     TMR0_Interrupt@t:
  4424                           
  4425                           ; 4 bytes @ 0xC
  4426     005C                     	ds	4
  4427     0060                     TMR0_Interrupt@p:
  4428                           
  4429                           ; 2 bytes @ 0x10
  4430     0060                     	ds	2
  4431                           
  4432                           	psect	maintext
  4433     0180                     __pmaintext:	
  4434 ;;
  4435 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  4436 ;;
  4437 ;; *************** function _main *****************
  4438 ;; Defined at:
  4439 ;;		line 233 in file "main.c"
  4440 ;; Parameters:    Size  Location     Type
  4441 ;;		None
  4442 ;; Auto vars:     Size  Location     Type
  4443 ;;  receivedData    1    9[BANK1 ] unsigned char 
  4444 ;; Return value:  Size  Location     Type
  4445 ;;                  1    wreg      void 
  4446 ;; Registers used:
  4447 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4448 ;; Tracked objects:
  4449 ;;		On entry : B1F/0
  4450 ;;		On exit  : 0/0
  4451 ;;		Unchanged: 0/0
  4452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4453 ;;      Params:         0       0       0       0       0       0
  4454 ;;      Locals:         0       0       1       0       0       0
  4455 ;;      Temps:          0       0       2       0       0       0
  4456 ;;      Totals:         0       0       3       0       0       0
  4457 ;;Total ram usage:        3 bytes
  4458 ;; Hardware stack levels required when called: 10
  4459 ;; This function calls:
  4460 ;;		_CCP4_SetCallBack
  4461 ;;		_CMP1_SetInterruptHandler
  4462 ;;		_CMP2_SetInterruptHandler
  4463 ;;		_EUSART_Read
  4464 ;;		_EUSART_is_rx_ready
  4465 ;;		_IOCBF0_SetInterruptHandler
  4466 ;;		_IOCBF3_SetInterruptHandler
  4467 ;;		_PWM3_LoadDutyValue
  4468 ;;		_SYSTEM_Initialize
  4469 ;;		_TMR0_SetInterruptHandler
  4470 ;;		_TMR4_SetInterruptHandler
  4471 ;;		_TMR6_SetInterruptHandler
  4472 ;;		_initMAX7219
  4473 ;;		_updateMatrix
  4474 ;;		_updateMotor
  4475 ;; This function is called by:
  4476 ;;		Startup code after reset
  4477 ;; This function uses a non-reentrant model
  4478 ;;
  4479                           
  4480     0180                     _main:	
  4481                           ;psect for function _main
  4482                           
  4483     0180                     l3926:	
  4484                           ;incstack = 0
  4485                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4486                           
  4487                           
  4488                           ;main.c: 236:     SYSTEM_Initialize();
  4489     0180  3183  2328  3181   	fcall	_SYSTEM_Initialize
  4490                           
  4491                           ;main.c: 238:     TMR0_SetInterruptHandler(TMR0_Interrupt);
  4492     0183  308C               	movlw	low _TMR0_Interrupt
  4493     0184  0021               	movlb	1	; select bank1
  4494     0185  00B0               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  4495     0186  3000               	movlw	high _TMR0_Interrupt
  4496     0187  00B1               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4497     0188  3187  27A5  3181   	fcall	_TMR0_SetInterruptHandler
  4498                           
  4499                           ;main.c: 239:     TMR4_SetInterruptHandler(TMR4_Interrupt);
  4500     018B  30B2               	movlw	low _TMR4_Interrupt
  4501     018C  0021               	movlb	1	; select bank1
  4502     018D  00B0               	movwf	TMR4_SetInterruptHandler@InterruptHandler^(0+128)
  4503     018E  3006               	movlw	high _TMR4_Interrupt
  4504     018F  00B1               	movwf	(TMR4_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4505     0190  3187  279C  3181   	fcall	_TMR4_SetInterruptHandler
  4506                           
  4507                           ;main.c: 240:     TMR6_SetInterruptHandler(TMR6_Interrupt);
  4508     0193  30A2               	movlw	low _TMR6_Interrupt
  4509     0194  0021               	movlb	1	; select bank1
  4510     0195  00B0               	movwf	TMR6_SetInterruptHandler@InterruptHandler^(0+128)
  4511     0196  3006               	movlw	high _TMR6_Interrupt
  4512     0197  00B1               	movwf	(TMR6_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4513     0198  3187  2793  3181   	fcall	_TMR6_SetInterruptHandler
  4514                           
  4515                           ;main.c: 241:     CCP4_SetCallBack(CCP4_Interrupt);
  4516     019B  305C               	movlw	low _CCP4_Interrupt
  4517     019C  0021               	movlb	1	; select bank1
  4518     019D  00B0               	movwf	CCP4_SetCallBack@customCallBack^(0+128)
  4519     019E  3003               	movlw	high _CCP4_Interrupt
  4520     019F  00B1               	movwf	(CCP4_SetCallBack@customCallBack^(0+128)+1)
  4521     01A0  3187  27DB  3181   	fcall	_CCP4_SetCallBack
  4522                           
  4523                           ;main.c: 242:     IOCBF0_SetInterruptHandler(S1_Interrupt);
  4524     01A3  30BC               	movlw	low _S1_Interrupt
  4525     01A4  0021               	movlb	1	; select bank1
  4526     01A5  00B0               	movwf	IOCBF0_SetInterruptHandler@InterruptHandler^(0+128)
  4527     01A6  3005               	movlw	high _S1_Interrupt
  4528     01A7  00B1               	movwf	(IOCBF0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4529     01A8  3187  27C0  3181   	fcall	_IOCBF0_SetInterruptHandler
  4530                           
  4531                           ;main.c: 243:     IOCBF3_SetInterruptHandler(S2_Interrupt);
  4532     01AB  304D               	movlw	low _S2_Interrupt
  4533     01AC  0021               	movlb	1	; select bank1
  4534     01AD  00B0               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler^(0+128)
  4535     01AE  3005               	movlw	high _S2_Interrupt
  4536     01AF  00B1               	movwf	(IOCBF3_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4537     01B0  3187  27B7  3181   	fcall	_IOCBF3_SetInterruptHandler
  4538                           
  4539                           ;main.c: 244:     CMP1_SetInterruptHandler(S3_Interrupt);
  4540     01B3  3085               	movlw	low _S3_Interrupt
  4541     01B4  0021               	movlb	1	; select bank1
  4542     01B5  00B0               	movwf	CMP1_SetInterruptHandler@InterruptHandler^(0+128)
  4543     01B6  3005               	movlw	high _S3_Interrupt
  4544     01B7  00B1               	movwf	(CMP1_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4545     01B8  3187  27ED  3181   	fcall	_CMP1_SetInterruptHandler
  4546                           
  4547                           ;main.c: 245:     CMP2_SetInterruptHandler(S4_Interrupt);
  4548     01BB  3069               	movlw	low _S4_Interrupt
  4549     01BC  0021               	movlb	1	; select bank1
  4550     01BD  00B0               	movwf	CMP2_SetInterruptHandler@InterruptHandler^(0+128)
  4551     01BE  3005               	movlw	high _S4_Interrupt
  4552     01BF  00B1               	movwf	(CMP2_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4553     01C0  3187  27E4  3181   	fcall	_CMP2_SetInterruptHandler
  4554     01C3                     l3928:
  4555                           
  4556                           ;main.c: 251:     (INTCONbits.GIE = 1);
  4557     01C3  178B               	bsf	11,7	;volatile
  4558     01C4                     l3930:
  4559                           
  4560                           ;main.c: 254:     (INTCONbits.PEIE = 1);
  4561     01C4  170B               	bsf	11,6	;volatile
  4562                           
  4563                           ;main.c: 262:     initMAX7219();
  4564     01C5  3184  24F6  3181   	fcall	_initMAX7219
  4565     01C8                     l3932:
  4566     01C8  0022               	movlb	2	; select bank2
  4567     01C9  178C               	bsf	12,7	;volatile
  4568     01CA                     l897:
  4569                           
  4570                           ;main.c: 264:     PWM3_LoadDutyValue(409);
  4571     01CA  3099               	movlw	153
  4572     01CB  0021               	movlb	1	; select bank1
  4573     01CC  00B0               	movwf	PWM3_LoadDutyValue@dutyValue^(0+128)
  4574     01CD  3001               	movlw	1
  4575     01CE  00B1               	movwf	(PWM3_LoadDutyValue@dutyValue^(0+128)+1)
  4576     01CF  3185  2531  3181   	fcall	_PWM3_LoadDutyValue
  4577     01D2                     l3934:
  4578                           
  4579                           ;main.c: 265:     _delay((unsigned long)((2000)*(8000000/4000.0)));
  4580     01D2  3015               	movlw	21
  4581     01D3  0021               	movlb	1	; select bank1
  4582     01D4  00B8               	movwf	(??_main^(0+128)+1)
  4583     01D5  304B               	movlw	75
  4584     01D6  00B7               	movwf	??_main^(0+128)
  4585     01D7  30BE               	movlw	190
  4586     01D8                     u2397:
  4587     01D8  0B89               	decfsz	9,f
  4588     01D9  29D8               	goto	u2397
  4589     01DA  0BB7               	decfsz	??_main^(0+128),f
  4590     01DB  29D8               	goto	u2397
  4591     01DC  0BB8               	decfsz	(??_main^(0+128)+1),f
  4592     01DD  29D8               	goto	u2397
  4593     01DE  0000               	nop
  4594     01DF                     l3936:
  4595                           
  4596                           ;main.c: 266:     updateMotor();
  4597     01DF  3183  238F  3181   	fcall	_updateMotor
  4598     01E2                     l3938:
  4599                           
  4600                           ;main.c: 268:     uint8_t receivedData = 0;
  4601     01E2  0021               	movlb	1	; select bank1
  4602     01E3  01B9               	clrf	main@receivedData^(0+128)
  4603     01E4                     l3940:
  4604                           
  4605                           ;main.c: 271:     {;main.c: 272:         if(EUSART_is_rx_ready()){
  4606     01E4  318F  27D4  3181   	fcall	_EUSART_is_rx_ready
  4607     01E7  3A00               	xorlw	0
  4608     01E8  1903               	skipnz
  4609     01E9  29EB               	goto	u2351
  4610     01EA  29EC               	goto	u2350
  4611     01EB                     u2351:
  4612     01EB  29E4               	goto	l3940
  4613     01EC                     u2350:
  4614     01EC  29F2               	goto	l3946
  4615     01ED                     l3944:
  4616                           
  4617                           ;main.c: 274:                 receivedData = EUSART_Read();
  4618     01ED  3186  26C2  3181   	fcall	_EUSART_Read
  4619     01F0  0021               	movlb	1	; select bank1
  4620     01F1  00B9               	movwf	main@receivedData^(0+128)
  4621     01F2                     l3946:
  4622                           
  4623                           ;main.c: 273:             while(EUSART_is_rx_ready()){
  4624     01F2  318F  27D4  3181   	fcall	_EUSART_is_rx_ready
  4625     01F5  3A00               	xorlw	0
  4626     01F6  1D03               	skipz
  4627     01F7  29F9               	goto	u2361
  4628     01F8  29FA               	goto	u2360
  4629     01F9                     u2361:
  4630     01F9  29ED               	goto	l3944
  4631     01FA                     u2360:
  4632     01FA                     l3948:
  4633                           
  4634                           ;main.c: 276:             targetFloor = receivedData+1;
  4635     01FA  0021               	movlb	1	; select bank1
  4636     01FB  0839               	movf	main@receivedData^(0+128),w
  4637     01FC  3E01               	addlw	1
  4638     01FD  0020               	movlb	0	; select bank0
  4639     01FE  00E3               	movwf	_targetFloor
  4640                           
  4641                           ;main.c: 277:             if(motorState==0){
  4642     01FF  0838               	movf	_motorState,w
  4643     0200  1D03               	btfss	3,2
  4644     0201  2A03               	goto	u2371
  4645     0202  2A04               	goto	u2370
  4646     0203                     u2371:
  4647     0203  29E4               	goto	l3940
  4648     0204                     u2370:
  4649     0204                     l3950:
  4650                           
  4651                           ;main.c: 278:                 updateMotor();
  4652     0204  3183  238F  3181   	fcall	_updateMotor
  4653     0207                     l3952:
  4654                           
  4655                           ;main.c: 279:                 updateMatrix();
  4656     0207  3184  246C  3181   	fcall	_updateMatrix
  4657     020A  29E4               	goto	l3940
  4658     020B  3180  286A         	ljmp	start
  4659     020D                     __end_of_main:
  4660                           
  4661                           	psect	text1
  4662     038F                     __ptext1:	
  4663 ;; *************** function _updateMotor *****************
  4664 ;; Defined at:
  4665 ;;		line 85 in file "main.c"
  4666 ;; Parameters:    Size  Location     Type
  4667 ;;		None
  4668 ;; Auto vars:     Size  Location     Type
  4669 ;;		None
  4670 ;; Return value:  Size  Location     Type
  4671 ;;                  1    wreg      void 
  4672 ;; Registers used:
  4673 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4674 ;; Tracked objects:
  4675 ;;		On entry : 0/0
  4676 ;;		On exit  : 0/0
  4677 ;;		Unchanged: 0/0
  4678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4679 ;;      Params:         0       0       0       0       0       0
  4680 ;;      Locals:         0       0       0       0       0       0
  4681 ;;      Temps:          0       0       0       0       0       0
  4682 ;;      Totals:         0       0       0       0       0       0
  4683 ;;Total ram usage:        0 bytes
  4684 ;; Hardware stack levels used: 1
  4685 ;; Hardware stack levels required when called: 9
  4686 ;; This function calls:
  4687 ;;		_TMR4_StartTimer
  4688 ;;		_sendMotor
  4689 ;; This function is called by:
  4690 ;;		_main
  4691 ;; This function uses a non-reentrant model
  4692 ;;
  4693                           
  4694     038F                     _updateMotor:	
  4695                           ;psect for function _updateMotor
  4696                           
  4697     038F                     l3878:	
  4698                           ;incstack = 0
  4699                           ; Regs used in _updateMotor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4700                           
  4701                           
  4702                           ;main.c: 86:     if(currentFloor==targetFloor){
  4703     038F  0020               	movlb	0	; select bank0
  4704     0390  0864               	movf	_currentFloor,w
  4705     0391  0663               	xorwf	_targetFloor,w
  4706     0392  1D03               	skipz
  4707     0393  2B95               	goto	u2291
  4708     0394  2B96               	goto	u2290
  4709     0395                     u2291:
  4710     0395  2B98               	goto	l3882
  4711     0396                     u2290:
  4712     0396                     l3880:
  4713                           
  4714                           ;main.c: 87:         motorState = 0;
  4715     0396  01B8               	clrf	_motorState
  4716                           
  4717                           ;main.c: 88:     } else if(currentFloor < targetFloor){
  4718     0397  2BBA               	goto	l3900
  4719     0398                     l3882:
  4720     0398  0863               	movf	_targetFloor,w
  4721     0399  0264               	subwf	_currentFloor,w
  4722     039A  1803               	skipnc
  4723     039B  2B9D               	goto	u2301
  4724     039C  2B9E               	goto	u2300
  4725     039D                     u2301:
  4726     039D  2BAD               	goto	l3892
  4727     039E                     u2300:
  4728     039E                     l3884:
  4729                           
  4730                           ;main.c: 89:         if(motorState == 2){
  4731     039E  3002               	movlw	2
  4732     039F  0638               	xorwf	_motorState,w
  4733     03A0  1D03               	btfss	3,2
  4734     03A1  2BA3               	goto	u2311
  4735     03A2  2BA4               	goto	u2310
  4736     03A3                     u2311:
  4737     03A3  2BA9               	goto	l3890
  4738     03A4                     u2310:
  4739     03A4                     l3886:
  4740                           
  4741                           ;main.c: 90:             directionFlag = 1;
  4742     03A4  01B5               	clrf	_directionFlag
  4743     03A5  0AB5               	incf	_directionFlag,f
  4744     03A6                     l3888:
  4745                           
  4746                           ;main.c: 91:             TMR4_StartTimer();
  4747     03A6  318F  27B8  3183   	fcall	_TMR4_StartTimer
  4748     03A9                     l3890:
  4749                           
  4750                           ;main.c: 93:         motorState = 1;
  4751     03A9  0020               	movlb	0	; select bank0
  4752     03AA  01B8               	clrf	_motorState
  4753     03AB  0AB8               	incf	_motorState,f
  4754                           
  4755                           ;main.c: 94:     } else{
  4756     03AC  2BBA               	goto	l3900
  4757     03AD                     l3892:
  4758                           
  4759                           ;main.c: 95:         if(motorState == 1){
  4760     03AD  0338               	decf	_motorState,w
  4761     03AE  1D03               	btfss	3,2
  4762     03AF  2BB1               	goto	u2321
  4763     03B0  2BB2               	goto	u2320
  4764     03B1                     u2321:
  4765     03B1  2BB7               	goto	l3898
  4766     03B2                     u2320:
  4767     03B2                     l3894:
  4768                           
  4769                           ;main.c: 96:             directionFlag = 1;
  4770     03B2  01B5               	clrf	_directionFlag
  4771     03B3  0AB5               	incf	_directionFlag,f
  4772     03B4                     l3896:
  4773                           
  4774                           ;main.c: 97:             TMR4_StartTimer();
  4775     03B4  318F  27B8  3183   	fcall	_TMR4_StartTimer
  4776     03B7                     l3898:
  4777                           
  4778                           ;main.c: 99:         motorState = 2;
  4779     03B7  3002               	movlw	2
  4780     03B8  0020               	movlb	0	; select bank0
  4781     03B9  00B8               	movwf	_motorState
  4782     03BA                     l3900:
  4783                           
  4784                           ;main.c: 101:     sendMotor();
  4785     03BA  3182  2267  3183   	fcall	_sendMotor
  4786     03BD                     l846:
  4787     03BD  0008               	return
  4788     03BE                     __end_of_updateMotor:
  4789                           
  4790                           	psect	text2
  4791     0267                     __ptext2:	
  4792 ;; *************** function _sendMotor *****************
  4793 ;; Defined at:
  4794 ;;		line 57 in file "main.c"
  4795 ;; Parameters:    Size  Location     Type
  4796 ;;		None
  4797 ;; Auto vars:     Size  Location     Type
  4798 ;;		None
  4799 ;; Return value:  Size  Location     Type
  4800 ;;                  1    wreg      void 
  4801 ;; Registers used:
  4802 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4803 ;; Tracked objects:
  4804 ;;		On entry : 0/0
  4805 ;;		On exit  : 0/0
  4806 ;;		Unchanged: 0/0
  4807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4808 ;;      Params:         0       0       0       0       0       0
  4809 ;;      Locals:         0       0       0       0       0       0
  4810 ;;      Temps:          0       0       2       0       0       0
  4811 ;;      Totals:         0       0       2       0       0       0
  4812 ;;Total ram usage:        2 bytes
  4813 ;; Hardware stack levels used: 1
  4814 ;; Hardware stack levels required when called: 8
  4815 ;; This function calls:
  4816 ;;		_PWM3_LoadDutyValue
  4817 ;; This function is called by:
  4818 ;;		_updateMotor
  4819 ;; This function uses a non-reentrant model
  4820 ;;
  4821                           
  4822     0267                     _sendMotor:	
  4823                           ;psect for function _sendMotor
  4824                           
  4825     0267                     l3806:	
  4826                           ;incstack = 0
  4827                           ; Regs used in _sendMotor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4828                           
  4829                           
  4830                           ;main.c: 58:     if(floorFlag || directionFlag){
  4831     0267  0020               	movlb	0	; select bank0
  4832     0268  0836               	movf	_floorFlag,w
  4833     0269  1D03               	btfss	3,2
  4834     026A  2A6C               	goto	u2191
  4835     026B  2A6D               	goto	u2190
  4836     026C                     u2191:
  4837     026C  2A72               	goto	l3810
  4838     026D                     u2190:
  4839     026D                     l3808:
  4840     026D  0835               	movf	_directionFlag,w
  4841     026E  1903               	btfsc	3,2
  4842     026F  2A71               	goto	u2201
  4843     0270  2A72               	goto	u2200
  4844     0271                     u2201:
  4845     0271  2A96               	goto	l3828
  4846     0272                     u2200:
  4847     0272                     l3810:
  4848                           
  4849                           ;main.c: 59:         PWM3_LoadDutyValue(0);
  4850     0272  3000               	movlw	0
  4851     0273  0021               	movlb	1	; select bank1
  4852     0274  00B0               	movwf	PWM3_LoadDutyValue@dutyValue^(0+128)
  4853     0275  00B1               	movwf	(PWM3_LoadDutyValue@dutyValue+1)^(0+128)
  4854     0276  3185  2531  3182   	fcall	_PWM3_LoadDutyValue
  4855                           
  4856                           ;main.c: 60:     } else{
  4857     0279  2AAA               	goto	l837
  4858     027A                     l828:	
  4859                           ;main.c: 66:                 do { LATAbits.LATA7 = 1; } while(0);
  4860                           
  4861     027A  0022               	movlb	2	; select bank2
  4862     027B  178C               	bsf	12,7	;volatile
  4863     027C                     l3814:
  4864                           
  4865                           ;main.c: 67:                 if(currentFloor == 4){
  4866     027C  3004               	movlw	4
  4867     027D  0020               	movlb	0	; select bank0
  4868     027E  0664               	xorwf	_currentFloor,w
  4869     027F  1D03               	btfss	3,2
  4870     0280  2A82               	goto	u2211
  4871     0281  2A83               	goto	u2210
  4872     0282                     u2211:
  4873     0282  2A84               	goto	l3818
  4874     0283                     u2210:
  4875     0283  2A72               	goto	l3810
  4876     0284                     l3818:
  4877                           
  4878                           ;main.c: 70:                     PWM3_LoadDutyValue(409);
  4879     0284  3099               	movlw	153
  4880     0285  0021               	movlb	1	; select bank1
  4881     0286  00B0               	movwf	PWM3_LoadDutyValue@dutyValue^(0+128)
  4882     0287  3001               	movlw	1
  4883     0288  00B1               	movwf	(PWM3_LoadDutyValue@dutyValue^(0+128)+1)
  4884     0289  3185  2531  3182   	fcall	_PWM3_LoadDutyValue
  4885     028C  2AAA               	goto	l837
  4886     028D                     l833:	
  4887                           ;main.c: 74:                 do { LATAbits.LATA7 = 0; } while(0);
  4888                           
  4889     028D  0022               	movlb	2	; select bank2
  4890     028E  138C               	bcf	12,7	;volatile
  4891     028F                     l3820:
  4892                           
  4893                           ;main.c: 75:                 if(currentFloor == 1){
  4894     028F  0020               	movlb	0	; select bank0
  4895     0290  0364               	decf	_currentFloor,w
  4896     0291  1D03               	btfss	3,2
  4897     0292  2A94               	goto	u2221
  4898     0293  2A95               	goto	u2220
  4899     0294                     u2221:
  4900     0294  2A84               	goto	l3818
  4901     0295                     u2220:
  4902     0295  2A72               	goto	l3810
  4903     0296                     l3828:
  4904     0296  0838               	movf	_motorState,w
  4905     0297  0021               	movlb	1	; select bank1
  4906     0298  00B4               	movwf	??_sendMotor^(0+128)
  4907     0299  01B5               	clrf	(??_sendMotor^(0+128)+1)
  4908                           
  4909                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4910                           ; Switch size 1, requested type "simple"
  4911                           ; Number of cases is 1, Range of values is 0 to 0
  4912                           ; switch strategies available:
  4913                           ; Name         Instructions Cycles
  4914                           ; simple_byte            4     3 (average)
  4915                           ; direct_byte            8     6 (fixed)
  4916                           ; jumptable            260     6 (fixed)
  4917                           ;	Chosen strategy is simple_byte
  4918     029A  0835               	movf	(??_sendMotor+1)^(0+128),w
  4919     029B  3A00               	xorlw	0	; case 0
  4920     029C  1903               	skipnz
  4921     029D  2A9F               	goto	l4006
  4922     029E  2AAA               	goto	l837
  4923     029F                     l4006:
  4924                           
  4925                           ; Switch size 1, requested type "simple"
  4926                           ; Number of cases is 3, Range of values is 0 to 2
  4927                           ; switch strategies available:
  4928                           ; Name         Instructions Cycles
  4929                           ; simple_byte           10     6 (average)
  4930                           ; direct_byte           12     6 (fixed)
  4931                           ; jumptable            260     6 (fixed)
  4932                           ;	Chosen strategy is simple_byte
  4933     029F  0834               	movf	??_sendMotor^(0+128),w
  4934     02A0  3A00               	xorlw	0	; case 0
  4935     02A1  1903               	skipnz
  4936     02A2  2A72               	goto	l3810
  4937     02A3  3A01               	xorlw	1	; case 1
  4938     02A4  1903               	skipnz
  4939     02A5  2A7A               	goto	l828
  4940     02A6  3A03               	xorlw	3	; case 2
  4941     02A7  1903               	skipnz
  4942     02A8  2A8D               	goto	l833
  4943     02A9  2AAA               	goto	l837
  4944     02AA                     l837:
  4945     02AA  0008               	return
  4946     02AB                     __end_of_sendMotor:
  4947                           
  4948                           	psect	text3
  4949     0531                     __ptext3:	
  4950 ;; *************** function _PWM3_LoadDutyValue *****************
  4951 ;; Defined at:
  4952 ;;		line 82 in file "mcc_generated_files/pwm3.c"
  4953 ;; Parameters:    Size  Location     Type
  4954 ;;  dutyValue       2    0[BANK1 ] unsigned short 
  4955 ;; Auto vars:     Size  Location     Type
  4956 ;;		None
  4957 ;; Return value:  Size  Location     Type
  4958 ;;                  1    wreg      void 
  4959 ;; Registers used:
  4960 ;;		wreg, status,2, status,0
  4961 ;; Tracked objects:
  4962 ;;		On entry : 0/0
  4963 ;;		On exit  : 0/0
  4964 ;;		Unchanged: 0/0
  4965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4966 ;;      Params:         0       0       2       0       0       0
  4967 ;;      Locals:         0       0       0       0       0       0
  4968 ;;      Temps:          0       0       2       0       0       0
  4969 ;;      Totals:         0       0       4       0       0       0
  4970 ;;Total ram usage:        4 bytes
  4971 ;; Hardware stack levels used: 1
  4972 ;; Hardware stack levels required when called: 7
  4973 ;; This function calls:
  4974 ;;		Nothing
  4975 ;; This function is called by:
  4976 ;;		_sendMotor
  4977 ;;		_main
  4978 ;; This function uses a non-reentrant model
  4979 ;;
  4980                           
  4981     0531                     _PWM3_LoadDutyValue:	
  4982                           ;psect for function _PWM3_LoadDutyValue
  4983                           
  4984     0531                     l3606:	
  4985                           ;incstack = 0
  4986                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2+status,0]
  4987                           
  4988                           
  4989                           ;mcc_generated_files/pwm3.c: 82: void PWM3_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm3.c: 83: {;mcc_generated_files/pwm3.c: 85:     CCPR3L = ((dutyValue & 0x03FC
      +                          )>>2);
  4990     0531  0021               	movlb	1	; select bank1
  4991     0532  0831               	movf	(PWM3_LoadDutyValue@dutyValue+1)^(0+128),w
  4992     0533  00B3               	movwf	(??_PWM3_LoadDutyValue^(0+128)+1)
  4993     0534  0830               	movf	PWM3_LoadDutyValue@dutyValue^(0+128),w
  4994     0535  00B2               	movwf	??_PWM3_LoadDutyValue^(0+128)
  4995     0536  36B3               	lsrf	(??_PWM3_LoadDutyValue^(0+128)+1),f
  4996     0537  0CB2               	rrf	??_PWM3_LoadDutyValue^(0+128),f
  4997     0538  36B3               	lsrf	(??_PWM3_LoadDutyValue^(0+128)+1),f
  4998     0539  0CB2               	rrf	??_PWM3_LoadDutyValue^(0+128),f
  4999     053A  0832               	movf	??_PWM3_LoadDutyValue^(0+128),w
  5000     053B  0026               	movlb	6	; select bank6
  5001     053C  0091               	movwf	17	;volatile
  5002                           
  5003                           ;mcc_generated_files/pwm3.c: 88:     CCP3CON = ((uint8_t)(CCP3CON & 0xCF) | ((dutyValue 
      +                          & 0x0003)<<4));
  5004     053D  0021               	movlb	1	; select bank1
  5005     053E  0830               	movf	PWM3_LoadDutyValue@dutyValue^(0+128),w
  5006     053F  3903               	andlw	3
  5007     0540  00B2               	movwf	??_PWM3_LoadDutyValue^(0+128)
  5008     0541  3004               	movlw	4
  5009     0542                     u2185:
  5010     0542  35B2               	lslf	??_PWM3_LoadDutyValue^(0+128),f
  5011     0543  0B89               	decfsz	9,f
  5012     0544  2D42               	goto	u2185
  5013     0545  0026               	movlb	6	; select bank6
  5014     0546  0813               	movf	19,w	;volatile
  5015     0547  39CF               	andlw	207
  5016     0548  0021               	movlb	1	; select bank1
  5017     0549  0432               	iorwf	??_PWM3_LoadDutyValue^(0+128),w
  5018     054A  0026               	movlb	6	; select bank6
  5019     054B  0093               	movwf	19	;volatile
  5020     054C                     l75:
  5021     054C  0008               	return
  5022     054D                     __end_of_PWM3_LoadDutyValue:
  5023                           
  5024                           	psect	text4
  5025     0FB8                     __ptext4:	
  5026 ;; *************** function _TMR4_StartTimer *****************
  5027 ;; Defined at:
  5028 ;;		line 87 in file "mcc_generated_files/tmr4.c"
  5029 ;; Parameters:    Size  Location     Type
  5030 ;;		None
  5031 ;; Auto vars:     Size  Location     Type
  5032 ;;		None
  5033 ;; Return value:  Size  Location     Type
  5034 ;;                  1    wreg      void 
  5035 ;; Registers used:
  5036 ;;		None
  5037 ;; Tracked objects:
  5038 ;;		On entry : 0/0
  5039 ;;		On exit  : 0/0
  5040 ;;		Unchanged: 0/0
  5041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5042 ;;      Params:         0       0       0       0       0       0
  5043 ;;      Locals:         0       0       0       0       0       0
  5044 ;;      Temps:          0       0       0       0       0       0
  5045 ;;      Totals:         0       0       0       0       0       0
  5046 ;;Total ram usage:        0 bytes
  5047 ;; Hardware stack levels used: 1
  5048 ;; Hardware stack levels required when called: 7
  5049 ;; This function calls:
  5050 ;;		Nothing
  5051 ;; This function is called by:
  5052 ;;		_updateMotor
  5053 ;; This function uses a non-reentrant model
  5054 ;;
  5055                           
  5056     0FB8                     _TMR4_StartTimer:	
  5057                           ;psect for function _TMR4_StartTimer
  5058                           
  5059     0FB8                     l3804:	
  5060                           ;incstack = 0
  5061                           ; Regs used in _TMR4_StartTimer: []
  5062                           
  5063                           
  5064                           ;mcc_generated_files/tmr4.c: 90:     T4CONbits.TMR4ON = 1;
  5065     0FB8  0028               	movlb	8	; select bank8
  5066     0FB9  1517               	bsf	23,2	;volatile
  5067     0FBA                     l686:
  5068     0FBA  0008               	return
  5069     0FBB                     __end_of_TMR4_StartTimer:
  5070                           
  5071                           	psect	text5
  5072     046C                     __ptext5:	
  5073 ;; *************** function _updateMatrix *****************
  5074 ;; Defined at:
  5075 ;;		line 104 in file "main.c"
  5076 ;; Parameters:    Size  Location     Type
  5077 ;;		None
  5078 ;; Auto vars:     Size  Location     Type
  5079 ;;  direction       1    6[BANK1 ] unsigned char 
  5080 ;; Return value:  Size  Location     Type
  5081 ;;                  1    wreg      void 
  5082 ;; Registers used:
  5083 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5084 ;; Tracked objects:
  5085 ;;		On entry : 0/0
  5086 ;;		On exit  : 0/0
  5087 ;;		Unchanged: 0/0
  5088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5089 ;;      Params:         0       0       0       0       0       0
  5090 ;;      Locals:         0       0       1       0       0       0
  5091 ;;      Temps:          0       0       0       0       0       0
  5092 ;;      Totals:         0       0       1       0       0       0
  5093 ;;Total ram usage:        1 bytes
  5094 ;; Hardware stack levels used: 1
  5095 ;; Hardware stack levels required when called: 9
  5096 ;; This function calls:
  5097 ;;		_setMatrix
  5098 ;; This function is called by:
  5099 ;;		_main
  5100 ;; This function uses a non-reentrant model
  5101 ;;
  5102                           
  5103     046C                     _updateMatrix:	
  5104                           ;psect for function _updateMatrix
  5105                           
  5106     046C                     l3902:	
  5107                           ;incstack = 0
  5108                           ; Regs used in _updateMatrix: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5109                           
  5110                           
  5111                           ;main.c: 105:     setMatrix(0, currentFloor);
  5112     046C  0020               	movlb	0	; select bank0
  5113     046D  0864               	movf	_currentFloor,w
  5114     046E  0021               	movlb	1	; select bank1
  5115     046F  00B1               	movwf	setMatrix@val^(0+128)
  5116     0470  3000               	movlw	0
  5117     0471  3184  241C  3184   	fcall	_setMatrix
  5118     0474                     l3904:
  5119     0474                     l3906:
  5120                           
  5121                           ;main.c: 108:     if(motorState==0){
  5122     0474  0020               	movlb	0	; select bank0
  5123     0475  0838               	movf	_motorState,w
  5124     0476  1D03               	btfss	3,2
  5125     0477  2C79               	goto	u2331
  5126     0478  2C7A               	goto	u2330
  5127     0479                     u2331:
  5128     0479  2C7E               	goto	l3910
  5129     047A                     u2330:
  5130     047A                     l3908:
  5131                           
  5132                           ;main.c: 109:         direction = 12;
  5133     047A  300C               	movlw	12
  5134     047B  0021               	movlb	1	; select bank1
  5135     047C  00B6               	movwf	updateMatrix@direction^(0+128)
  5136                           
  5137                           ;main.c: 110:     } else if(motorState==1){
  5138     047D  2C8A               	goto	l3916
  5139     047E                     l3910:
  5140     047E  0338               	decf	_motorState,w
  5141     047F  1D03               	btfss	3,2
  5142     0480  2C82               	goto	u2341
  5143     0481  2C83               	goto	u2340
  5144     0482                     u2341:
  5145     0482  2C87               	goto	l3914
  5146     0483                     u2340:
  5147     0483                     l3912:
  5148                           
  5149                           ;main.c: 111:         direction = 10;
  5150     0483  300A               	movlw	10
  5151     0484  0021               	movlb	1	; select bank1
  5152     0485  00B6               	movwf	updateMatrix@direction^(0+128)
  5153                           
  5154                           ;main.c: 112:     } else{
  5155     0486  2C8A               	goto	l3916
  5156     0487                     l3914:
  5157                           
  5158                           ;main.c: 113:         direction = 11;
  5159     0487  300B               	movlw	11
  5160     0488  0021               	movlb	1	; select bank1
  5161     0489  00B6               	movwf	updateMatrix@direction^(0+128)
  5162     048A                     l3916:
  5163                           
  5164                           ;main.c: 116:     setMatrix(4, direction);
  5165     048A  0836               	movf	updateMatrix@direction^(0+128),w
  5166     048B  00B1               	movwf	setMatrix@val^(0+128)
  5167     048C  3004               	movlw	4
  5168     048D  3184  241C  3184   	fcall	_setMatrix
  5169     0490                     l853:
  5170     0490  0008               	return
  5171     0491                     __end_of_updateMatrix:
  5172                           
  5173                           	psect	text6
  5174     041C                     __ptext6:	
  5175 ;; *************** function _setMatrix *****************
  5176 ;; Defined at:
  5177 ;;		line 110 in file "ledMatrix.c"
  5178 ;; Parameters:    Size  Location     Type
  5179 ;;  pos             1    wreg     unsigned char 
  5180 ;;  val             1    1[BANK1 ] unsigned char 
  5181 ;; Auto vars:     Size  Location     Type
  5182 ;;  pos             1    3[BANK1 ] unsigned char 
  5183 ;;  i               1    5[BANK1 ] unsigned char 
  5184 ;;  eeAdd           1    4[BANK1 ] unsigned char 
  5185 ;; Return value:  Size  Location     Type
  5186 ;;                  1    wreg      void 
  5187 ;; Registers used:
  5188 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5189 ;; Tracked objects:
  5190 ;;		On entry : 0/0
  5191 ;;		On exit  : 0/0
  5192 ;;		Unchanged: 0/0
  5193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5194 ;;      Params:         0       0       1       0       0       0
  5195 ;;      Locals:         0       0       3       0       0       0
  5196 ;;      Temps:          0       0       1       0       0       0
  5197 ;;      Totals:         0       0       5       0       0       0
  5198 ;;Total ram usage:        5 bytes
  5199 ;; Hardware stack levels used: 1
  5200 ;; Hardware stack levels required when called: 8
  5201 ;; This function calls:
  5202 ;;		_DATAEE_ReadByte
  5203 ;; This function is called by:
  5204 ;;		_updateMatrix
  5205 ;; This function uses a non-reentrant model
  5206 ;;
  5207                           
  5208     041C                     _setMatrix:	
  5209                           ;psect for function _setMatrix
  5210                           
  5211                           
  5212                           ;incstack = 0
  5213                           ; Regs used in _setMatrix: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5214                           ;setMatrix@pos stored from wreg
  5215     041C  0021               	movlb	1	; select bank1
  5216     041D  00B3               	movwf	setMatrix@pos^(0+128)
  5217     041E                     l3834:
  5218                           
  5219                           ;ledMatrix.c: 114:  uint8_t eeAdd = val<<2;
  5220     041E  0831               	movf	setMatrix@val^(0+128),w
  5221     041F  00B2               	movwf	??_setMatrix^(0+128)
  5222     0420  3001               	movlw	1
  5223     0421                     u2235:
  5224     0421  35B2               	lslf	??_setMatrix^(0+128),f
  5225     0422  3EFF               	addlw	-1
  5226     0423  1D03               	skipz
  5227     0424  2C21               	goto	u2235
  5228     0425  3532               	lslf	??_setMatrix^(0+128),w
  5229     0426  00B4               	movwf	setMatrix@eeAdd^(0+128)
  5230     0427                     l3836:
  5231                           
  5232                           ;ledMatrix.c: 115:  for(uint8_t i=0;i<4;i++){
  5233     0427  01B5               	clrf	setMatrix@i^(0+128)
  5234     0428                     l3842:
  5235                           
  5236                           ;ledMatrix.c: 116:   matrix[pos++]=DATAEE_ReadByte(eeAdd++);
  5237     0428  0833               	movf	setMatrix@pos^(0+128),w
  5238     0429  3E20               	addlw	(low (_matrix| 0))& (0+255)
  5239     042A  0086               	movwf	6
  5240     042B  0187               	clrf	7
  5241     042C  0834               	movf	setMatrix@eeAdd^(0+128),w
  5242     042D  3187  271A  3184   	fcall	_DATAEE_ReadByte
  5243     0430  0081               	movwf	1
  5244     0431                     l3844:
  5245     0431  3001               	movlw	1
  5246     0432  0021               	movlb	1	; select bank1
  5247     0433  00B2               	movwf	??_setMatrix^(0+128)
  5248     0434  0832               	movf	??_setMatrix^(0+128),w
  5249     0435  07B4               	addwf	setMatrix@eeAdd^(0+128),f
  5250     0436                     l3846:
  5251     0436  3001               	movlw	1
  5252     0437  00B2               	movwf	??_setMatrix^(0+128)
  5253     0438  0832               	movf	??_setMatrix^(0+128),w
  5254     0439  07B3               	addwf	setMatrix@pos^(0+128),f
  5255     043A                     l3848:
  5256                           
  5257                           ;ledMatrix.c: 117:     }
  5258     043A  3001               	movlw	1
  5259     043B  00B2               	movwf	??_setMatrix^(0+128)
  5260     043C  0832               	movf	??_setMatrix^(0+128),w
  5261     043D  07B5               	addwf	setMatrix@i^(0+128),f
  5262     043E                     l3850:
  5263     043E  3004               	movlw	4
  5264     043F  0235               	subwf	setMatrix@i^(0+128),w
  5265     0440  1C03               	skipc
  5266     0441  2C43               	goto	u2241
  5267     0442  2C44               	goto	u2240
  5268     0443                     u2241:
  5269     0443  2C28               	goto	l3842
  5270     0444                     u2240:
  5271     0444                     l941:
  5272     0444  0008               	return
  5273     0445                     __end_of_setMatrix:
  5274                           
  5275                           	psect	text7
  5276     071A                     __ptext7:	
  5277 ;; *************** function _DATAEE_ReadByte *****************
  5278 ;; Defined at:
  5279 ;;		line 211 in file "mcc_generated_files/memory.c"
  5280 ;; Parameters:    Size  Location     Type
  5281 ;;  bAdd            1    wreg     unsigned char 
  5282 ;; Auto vars:     Size  Location     Type
  5283 ;;  bAdd            1    0[BANK1 ] unsigned char 
  5284 ;; Return value:  Size  Location     Type
  5285 ;;                  1    wreg      unsigned char 
  5286 ;; Registers used:
  5287 ;;		wreg
  5288 ;; Tracked objects:
  5289 ;;		On entry : 0/0
  5290 ;;		On exit  : 0/0
  5291 ;;		Unchanged: 0/0
  5292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5293 ;;      Params:         0       0       0       0       0       0
  5294 ;;      Locals:         0       0       1       0       0       0
  5295 ;;      Temps:          0       0       0       0       0       0
  5296 ;;      Totals:         0       0       1       0       0       0
  5297 ;;Total ram usage:        1 bytes
  5298 ;; Hardware stack levels used: 1
  5299 ;; Hardware stack levels required when called: 7
  5300 ;; This function calls:
  5301 ;;		Nothing
  5302 ;; This function is called by:
  5303 ;;		_setMatrix
  5304 ;; This function uses a non-reentrant model
  5305 ;;
  5306                           
  5307     071A                     _DATAEE_ReadByte:	
  5308                           ;psect for function _DATAEE_ReadByte
  5309                           
  5310                           
  5311                           ;incstack = 0
  5312                           ; Regs used in _DATAEE_ReadByte: [wreg]
  5313                           ;DATAEE_ReadByte@bAdd stored from wreg
  5314     071A  0021               	movlb	1	; select bank1
  5315     071B  00B0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  5316     071C                     l3622:
  5317                           
  5318                           ;mcc_generated_files/memory.c: 211: uint8_t DATAEE_ReadByte(uint8_t bAdd);mcc_generated_
      +                          files/memory.c: 212: {;mcc_generated_files/memory.c: 213:     EEADRL = (uint8_t)(bAdd & 
      +                          0x0ff);
  5319     071C  0830               	movf	DATAEE_ReadByte@bAdd^(0+128),w
  5320     071D  0023               	movlb	3	; select bank3
  5321     071E  0091               	movwf	17	;volatile
  5322     071F                     l3624:
  5323                           
  5324                           ;mcc_generated_files/memory.c: 214:     EECON1bits.CFGS = 0;
  5325     071F  1315               	bcf	21,6	;volsfr
  5326     0720                     l3626:
  5327                           
  5328                           ;mcc_generated_files/memory.c: 215:     EECON1bits.EEPGD = 0;
  5329     0720  1395               	bcf	21,7	;volsfr
  5330     0721                     l3628:
  5331                           
  5332                           ;mcc_generated_files/memory.c: 216:     EECON1bits.RD = 1;
  5333     0721  1415               	bsf	21,0	;volsfr
  5334     0722                     l3630:
  5335                           
  5336                           ;mcc_generated_files/memory.c: 217:     __nop();
  5337     0722  0000               	nop
  5338     0723                     l3632:
  5339                           
  5340                           ;mcc_generated_files/memory.c: 218:     __nop();
  5341     0723  0000               	nop
  5342                           
  5343                           ;mcc_generated_files/memory.c: 220:     return (EEDATL);
  5344     0724  0023               	movlb	3	; select bank3
  5345     0725  0813               	movf	19,w	;volatile
  5346     0726                     l568:
  5347     0726  0008               	return
  5348     0727                     __end_of_DATAEE_ReadByte:
  5349                           
  5350                           	psect	text8
  5351     04F6                     __ptext8:	
  5352 ;; *************** function _initMAX7219 *****************
  5353 ;; Defined at:
  5354 ;;		line 85 in file "ledMatrix.c"
  5355 ;; Parameters:    Size  Location     Type
  5356 ;;		None
  5357 ;; Auto vars:     Size  Location     Type
  5358 ;;		None
  5359 ;; Return value:  Size  Location     Type
  5360 ;;                  1    wreg      void 
  5361 ;; Registers used:
  5362 ;;		wreg, status,2, status,0, pclath, cstack
  5363 ;; Tracked objects:
  5364 ;;		On entry : 0/0
  5365 ;;		On exit  : 0/0
  5366 ;;		Unchanged: 0/0
  5367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5368 ;;      Params:         0       0       0       0       0       0
  5369 ;;      Locals:         0       0       0       0       0       0
  5370 ;;      Temps:          0       0       2       0       0       0
  5371 ;;      Totals:         0       0       2       0       0       0
  5372 ;;Total ram usage:        2 bytes
  5373 ;; Hardware stack levels used: 1
  5374 ;; Hardware stack levels required when called: 9
  5375 ;; This function calls:
  5376 ;;		_txMAX7219
  5377 ;; This function is called by:
  5378 ;;		_main
  5379 ;; This function uses a non-reentrant model
  5380 ;;
  5381                           
  5382     04F6                     _initMAX7219:	
  5383                           ;psect for function _initMAX7219
  5384                           
  5385     04F6                     l3918:	
  5386                           ;incstack = 0
  5387                           ; Regs used in _initMAX7219: [wreg+status,2+status,0+pclath+cstack]
  5388                           
  5389                           
  5390                           ;ledMatrix.c: 86:     TRISB = TRISB & 0b11111101;
  5391     04F6  0021               	movlb	1	; select bank1
  5392     04F7  080D               	movf	13,w	;volatile
  5393     04F8  39FD               	andlw	253
  5394     04F9  008D               	movwf	13	;volatile
  5395     04FA                     l3920:
  5396                           
  5397                           ;ledMatrix.c: 87:     txMAX7219(0x0F,0x01);
  5398     04FA  01B1               	clrf	txMAX7219@dat0^(0+128)
  5399     04FB  0AB1               	incf	txMAX7219@dat0^(0+128),f
  5400     04FC  300F               	movlw	15
  5401     04FD  3185  2514  3184   	fcall	_txMAX7219
  5402     0500                     l3922:
  5403                           
  5404                           ;ledMatrix.c: 88:     _delay((unsigned long)((1000)*(8000000/4000.0)));
  5405     0500  300B               	movlw	11
  5406     0501  0021               	movlb	1	; select bank1
  5407     0502  00B4               	movwf	(??_initMAX7219^(0+128)+1)
  5408     0503  3026               	movlw	38
  5409     0504  00B3               	movwf	??_initMAX7219^(0+128)
  5410     0505  305D               	movlw	93
  5411     0506                     u2407:
  5412     0506  0B89               	decfsz	9,f
  5413     0507  2D06               	goto	u2407
  5414     0508  0BB3               	decfsz	??_initMAX7219^(0+128),f
  5415     0509  2D06               	goto	u2407
  5416     050A  0BB4               	decfsz	(??_initMAX7219^(0+128)+1),f
  5417     050B  2D06               	goto	u2407
  5418     050C  3200               	nop2
  5419     050D                     l3924:
  5420                           
  5421                           ;ledMatrix.c: 89:     txMAX7219(0x0F,0x00);
  5422     050D  0021               	movlb	1	; select bank1
  5423     050E  01B1               	clrf	txMAX7219@dat0^(0+128)
  5424     050F  300F               	movlw	15
  5425     0510  3185  2514  3184   	fcall	_txMAX7219
  5426     0513                     l936:
  5427     0513  0008               	return
  5428     0514                     __end_of_initMAX7219:
  5429                           
  5430                           	psect	text9
  5431     0514                     __ptext9:	
  5432 ;; *************** function _txMAX7219 *****************
  5433 ;; Defined at:
  5434 ;;		line 74 in file "ledMatrix.c"
  5435 ;; Parameters:    Size  Location     Type
  5436 ;;  addr0           1    wreg     unsigned char 
  5437 ;;  dat0            1    1[BANK1 ] unsigned char 
  5438 ;; Auto vars:     Size  Location     Type
  5439 ;;  addr0           1    2[BANK1 ] unsigned char 
  5440 ;; Return value:  Size  Location     Type
  5441 ;;                  1    wreg      void 
  5442 ;; Registers used:
  5443 ;;		wreg, status,2, status,0, pclath, cstack
  5444 ;; Tracked objects:
  5445 ;;		On entry : 0/0
  5446 ;;		On exit  : 0/0
  5447 ;;		Unchanged: 0/0
  5448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5449 ;;      Params:         0       0       1       0       0       0
  5450 ;;      Locals:         0       0       1       0       0       0
  5451 ;;      Temps:          0       0       0       0       0       0
  5452 ;;      Totals:         0       0       2       0       0       0
  5453 ;;Total ram usage:        2 bytes
  5454 ;; Hardware stack levels used: 1
  5455 ;; Hardware stack levels required when called: 8
  5456 ;; This function calls:
  5457 ;;		_SPI1_WriteByte
  5458 ;; This function is called by:
  5459 ;;		_initMAX7219
  5460 ;;		_sendMatrix
  5461 ;; This function uses a non-reentrant model
  5462 ;;
  5463                           
  5464     0514                     _txMAX7219:	
  5465                           ;psect for function _txMAX7219
  5466                           
  5467                           
  5468                           ;incstack = 0
  5469                           ; Regs used in _txMAX7219: [wreg+status,2+status,0+pclath+cstack]
  5470                           ;txMAX7219@addr0 stored from wreg
  5471     0514  0021               	movlb	1	; select bank1
  5472     0515  00B2               	movwf	txMAX7219@addr0^(0+128)
  5473     0516                     l923:	
  5474                           ;ledMatrix.c: 75:     do { LATBbits.LATB1 = 0; } while(0);
  5475                           
  5476     0516  0022               	movlb	2	; select bank2
  5477     0517  108D               	bcf	13,1	;volatile
  5478     0518                     l3852:
  5479                           
  5480                           ;ledMatrix.c: 76:     SPI1_WriteByte(addr0);
  5481     0518  0021               	movlb	1	; select bank1
  5482     0519  0832               	movf	txMAX7219@addr0^(0+128),w
  5483     051A  318F  27E5  3185   	fcall	_SPI1_WriteByte
  5484     051D                     l925:	
  5485                           ;ledMatrix.c: 77:     while(!PIR1bits.SSP1IF);
  5486                           
  5487     051D  0020               	movlb	0	; select bank0
  5488     051E  1D91               	btfss	17,3	;volatile
  5489     051F  2D21               	goto	u2251
  5490     0520  2D22               	goto	u2250
  5491     0521                     u2251:
  5492     0521  2D1D               	goto	l925
  5493     0522                     u2250:
  5494     0522                     l927:
  5495                           
  5496                           ;ledMatrix.c: 78:     PIR1bits.SSP1IF = 0;
  5497     0522  1191               	bcf	17,3	;volatile
  5498     0523                     l3854:
  5499                           
  5500                           ;ledMatrix.c: 79:     SPI1_WriteByte(dat0);
  5501     0523  0021               	movlb	1	; select bank1
  5502     0524  0831               	movf	txMAX7219@dat0^(0+128),w
  5503     0525  318F  27E5  3185   	fcall	_SPI1_WriteByte
  5504     0528                     l928:	
  5505                           ;ledMatrix.c: 80:     while(!PIR1bits.SSP1IF);
  5506                           
  5507     0528  0020               	movlb	0	; select bank0
  5508     0529  1D91               	btfss	17,3	;volatile
  5509     052A  2D2C               	goto	u2261
  5510     052B  2D2D               	goto	u2260
  5511     052C                     u2261:
  5512     052C  2D28               	goto	l928
  5513     052D                     u2260:
  5514     052D                     l930:
  5515                           
  5516                           ;ledMatrix.c: 81:     PIR1bits.SSP1IF = 0;
  5517     052D  1191               	bcf	17,3	;volatile
  5518     052E                     l931:	
  5519                           ;ledMatrix.c: 82:     do { LATBbits.LATB1 = 1; } while(0);
  5520                           
  5521     052E  0022               	movlb	2	; select bank2
  5522     052F  148D               	bsf	13,1	;volatile
  5523     0530                     l933:
  5524     0530  0008               	return
  5525     0531                     __end_of_txMAX7219:
  5526                           
  5527                           	psect	text10
  5528     0FE5                     __ptext10:	
  5529 ;; *************** function _SPI1_WriteByte *****************
  5530 ;; Defined at:
  5531 ;;		line 131 in file "mcc_generated_files/spi1.c"
  5532 ;; Parameters:    Size  Location     Type
  5533 ;;  byte            1    wreg     unsigned char 
  5534 ;; Auto vars:     Size  Location     Type
  5535 ;;  byte            1    0[BANK1 ] unsigned char 
  5536 ;; Return value:  Size  Location     Type
  5537 ;;                  1    wreg      void 
  5538 ;; Registers used:
  5539 ;;		wreg
  5540 ;; Tracked objects:
  5541 ;;		On entry : 0/0
  5542 ;;		On exit  : 0/0
  5543 ;;		Unchanged: 0/0
  5544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5545 ;;      Params:         0       0       0       0       0       0
  5546 ;;      Locals:         0       0       1       0       0       0
  5547 ;;      Temps:          0       0       0       0       0       0
  5548 ;;      Totals:         0       0       1       0       0       0
  5549 ;;Total ram usage:        1 bytes
  5550 ;; Hardware stack levels used: 1
  5551 ;; Hardware stack levels required when called: 7
  5552 ;; This function calls:
  5553 ;;		Nothing
  5554 ;; This function is called by:
  5555 ;;		_txMAX7219
  5556 ;; This function uses a non-reentrant model
  5557 ;;
  5558                           
  5559     0FE5                     _SPI1_WriteByte:	
  5560                           ;psect for function _SPI1_WriteByte
  5561                           
  5562                           
  5563                           ;incstack = 0
  5564                           ; Regs used in _SPI1_WriteByte: [wreg]
  5565                           ;SPI1_WriteByte@byte stored from wreg
  5566     0FE5  0021               	movlb	1	; select bank1
  5567     0FE6  00B0               	movwf	SPI1_WriteByte@byte^(0+128)
  5568     0FE7                     l3604:
  5569                           
  5570                           ;mcc_generated_files/spi1.c: 131: void SPI1_WriteByte(uint8_t byte);mcc_generated_files/
      +                          spi1.c: 132: {;mcc_generated_files/spi1.c: 133:     SSP1BUF = byte;
  5571     0FE7  0830               	movf	SPI1_WriteByte@byte^(0+128),w
  5572     0FE8  0024               	movlb	4	; select bank4
  5573     0FE9  0091               	movwf	17	;volatile
  5574     0FEA                     l58:
  5575     0FEA  0008               	return
  5576     0FEB                     __end_of_SPI1_WriteByte:
  5577                           
  5578                           	psect	text11
  5579     0328                     __ptext11:	
  5580 ;; *************** function _SYSTEM_Initialize *****************
  5581 ;; Defined at:
  5582 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5583 ;; Parameters:    Size  Location     Type
  5584 ;;		None
  5585 ;; Auto vars:     Size  Location     Type
  5586 ;;		None
  5587 ;; Return value:  Size  Location     Type
  5588 ;;                  1    wreg      void 
  5589 ;; Registers used:
  5590 ;;		wreg, status,2, status,0, pclath, cstack
  5591 ;; Tracked objects:
  5592 ;;		On entry : 0/0
  5593 ;;		On exit  : 0/0
  5594 ;;		Unchanged: 0/0
  5595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5596 ;;      Params:         0       0       0       0       0       0
  5597 ;;      Locals:         0       0       0       0       0       0
  5598 ;;      Temps:          0       0       0       0       0       0
  5599 ;;      Totals:         0       0       0       0       0       0
  5600 ;;Total ram usage:        0 bytes
  5601 ;; Hardware stack levels used: 1
  5602 ;; Hardware stack levels required when called: 9
  5603 ;; This function calls:
  5604 ;;		_ADC_Initialize
  5605 ;;		_CCP4_Initialize
  5606 ;;		_CMP1_Initialize
  5607 ;;		_CMP2_Initialize
  5608 ;;		_DAC_Initialize
  5609 ;;		_EUSART_Initialize
  5610 ;;		_FVR_Initialize
  5611 ;;		_OSCILLATOR_Initialize
  5612 ;;		_PIN_MANAGER_Initialize
  5613 ;;		_PWM3_Initialize
  5614 ;;		_SPI1_Initialize
  5615 ;;		_TMR0_Initialize
  5616 ;;		_TMR1_Initialize
  5617 ;;		_TMR2_Initialize
  5618 ;;		_TMR4_Initialize
  5619 ;;		_TMR6_Initialize
  5620 ;;		_WDT_Initialize
  5621 ;; This function is called by:
  5622 ;;		_main
  5623 ;; This function uses a non-reentrant model
  5624 ;;
  5625                           
  5626     0328                     _SYSTEM_Initialize:	
  5627                           ;psect for function _SYSTEM_Initialize
  5628                           
  5629     0328                     l3872:	
  5630                           ;incstack = 0
  5631                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5632                           
  5633                           
  5634                           ;mcc_generated_files/mcc.c: 53:     SPI1_Initialize();
  5635     0328  3187  277E  3183   	fcall	_SPI1_Initialize
  5636                           
  5637                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  5638     032B  3183  23BE  3183   	fcall	_PIN_MANAGER_Initialize
  5639                           
  5640                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  5641     032E  318F  27F1  3183   	fcall	_OSCILLATOR_Initialize
  5642                           
  5643                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  5644     0331  318F  27C6  3183   	fcall	_WDT_Initialize
  5645                           
  5646                           ;mcc_generated_files/mcc.c: 57:     CMP2_Initialize();
  5647     0334  3187  275A  3183   	fcall	_CMP2_Initialize
  5648                           
  5649                           ;mcc_generated_files/mcc.c: 58:     FVR_Initialize();
  5650     0337  318F  27C2  3183   	fcall	_FVR_Initialize
  5651                           
  5652                           ;mcc_generated_files/mcc.c: 59:     DAC_Initialize();
  5653     033A  318F  27D9  3183   	fcall	_DAC_Initialize
  5654                           
  5655                           ;mcc_generated_files/mcc.c: 60:     TMR4_Initialize();
  5656     033D  3186  265A  3183   	fcall	_TMR4_Initialize
  5657                           
  5658                           ;mcc_generated_files/mcc.c: 61:     TMR2_Initialize();
  5659     0340  3187  27F6  3183   	fcall	_TMR2_Initialize
  5660                           
  5661                           ;mcc_generated_files/mcc.c: 62:     TMR0_Initialize();
  5662     0343  3186  2632  3183   	fcall	_TMR0_Initialize
  5663                           
  5664                           ;mcc_generated_files/mcc.c: 63:     TMR6_Initialize();
  5665     0346  3186  2647  3183   	fcall	_TMR6_Initialize
  5666                           
  5667                           ;mcc_generated_files/mcc.c: 64:     CMP1_Initialize();
  5668     0349  3187  2766  3183   	fcall	_CMP1_Initialize
  5669                           
  5670                           ;mcc_generated_files/mcc.c: 65:     ADC_Initialize();
  5671     034C  318F  27F8  3183   	fcall	_ADC_Initialize
  5672                           
  5673                           ;mcc_generated_files/mcc.c: 66:     CCP4_Initialize();
  5674     034F  3186  266D  3183   	fcall	_CCP4_Initialize
  5675                           
  5676                           ;mcc_generated_files/mcc.c: 67:     PWM3_Initialize();
  5677     0352  3187  27AE  3183   	fcall	_PWM3_Initialize
  5678                           
  5679                           ;mcc_generated_files/mcc.c: 68:     TMR1_Initialize();
  5680     0355  3187  274E  3183   	fcall	_TMR1_Initialize
  5681                           
  5682                           ;mcc_generated_files/mcc.c: 69:     EUSART_Initialize();
  5683     0358  3184  2491  3183   	fcall	_EUSART_Initialize
  5684     035B                     l353:
  5685     035B  0008               	return
  5686     035C                     __end_of_SYSTEM_Initialize:
  5687                           
  5688                           	psect	text12
  5689     0FC6                     __ptext12:	
  5690 ;; *************** function _WDT_Initialize *****************
  5691 ;; Defined at:
  5692 ;;		line 82 in file "mcc_generated_files/mcc.c"
  5693 ;; Parameters:    Size  Location     Type
  5694 ;;		None
  5695 ;; Auto vars:     Size  Location     Type
  5696 ;;		None
  5697 ;; Return value:  Size  Location     Type
  5698 ;;                  1    wreg      void 
  5699 ;; Registers used:
  5700 ;;		wreg
  5701 ;; Tracked objects:
  5702 ;;		On entry : 0/0
  5703 ;;		On exit  : 0/0
  5704 ;;		Unchanged: 0/0
  5705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5706 ;;      Params:         0       0       0       0       0       0
  5707 ;;      Locals:         0       0       0       0       0       0
  5708 ;;      Temps:          0       0       0       0       0       0
  5709 ;;      Totals:         0       0       0       0       0       0
  5710 ;;Total ram usage:        0 bytes
  5711 ;; Hardware stack levels used: 1
  5712 ;; Hardware stack levels required when called: 7
  5713 ;; This function calls:
  5714 ;;		Nothing
  5715 ;; This function is called by:
  5716 ;;		_SYSTEM_Initialize
  5717 ;; This function uses a non-reentrant model
  5718 ;;
  5719                           
  5720     0FC6                     _WDT_Initialize:	
  5721                           ;psect for function _WDT_Initialize
  5722                           
  5723     0FC6                     l3724:	
  5724                           ;incstack = 0
  5725                           ; Regs used in _WDT_Initialize: [wreg]
  5726                           
  5727                           
  5728                           ;mcc_generated_files/mcc.c: 85:     WDTCON = 0x16;
  5729     0FC6  3016               	movlw	22
  5730     0FC7  0021               	movlb	1	; select bank1
  5731     0FC8  0097               	movwf	23	;volatile
  5732     0FC9                     l359:
  5733     0FC9  0008               	return
  5734     0FCA                     __end_of_WDT_Initialize:
  5735                           
  5736                           	psect	text13
  5737     0647                     __ptext13:	
  5738 ;; *************** function _TMR6_Initialize *****************
  5739 ;; Defined at:
  5740 ;;		line 64 in file "mcc_generated_files/tmr6.c"
  5741 ;; Parameters:    Size  Location     Type
  5742 ;;		None
  5743 ;; Auto vars:     Size  Location     Type
  5744 ;;		None
  5745 ;; Return value:  Size  Location     Type
  5746 ;;                  1    wreg      void 
  5747 ;; Registers used:
  5748 ;;		wreg, status,2, status,0, pclath, cstack
  5749 ;; Tracked objects:
  5750 ;;		On entry : 0/0
  5751 ;;		On exit  : 0/0
  5752 ;;		Unchanged: 0/0
  5753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5754 ;;      Params:         0       0       0       0       0       0
  5755 ;;      Locals:         0       0       0       0       0       0
  5756 ;;      Temps:          0       0       0       0       0       0
  5757 ;;      Totals:         0       0       0       0       0       0
  5758 ;;Total ram usage:        0 bytes
  5759 ;; Hardware stack levels used: 1
  5760 ;; Hardware stack levels required when called: 8
  5761 ;; This function calls:
  5762 ;;		_TMR6_SetInterruptHandler
  5763 ;; This function is called by:
  5764 ;;		_SYSTEM_Initialize
  5765 ;; This function uses a non-reentrant model
  5766 ;;
  5767                           
  5768     0647                     _TMR6_Initialize:	
  5769                           ;psect for function _TMR6_Initialize
  5770                           
  5771     0647                     l3770:	
  5772                           ;incstack = 0
  5773                           ; Regs used in _TMR6_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5774                           
  5775                           
  5776                           ;mcc_generated_files/tmr6.c: 69:     PR6 = 0xF9;
  5777     0647  30F9               	movlw	249
  5778     0648  0028               	movlb	8	; select bank8
  5779     0649  009D               	movwf	29	;volatile
  5780     064A                     l3772:
  5781                           
  5782                           ;mcc_generated_files/tmr6.c: 72:     TMR6 = 0x00;
  5783     064A  019C               	clrf	28	;volatile
  5784     064B                     l3774:
  5785                           
  5786                           ;mcc_generated_files/tmr6.c: 75:     PIR3bits.TMR6IF = 0;
  5787     064B  0020               	movlb	0	; select bank0
  5788     064C  1193               	bcf	19,3	;volatile
  5789     064D                     l3776:
  5790                           
  5791                           ;mcc_generated_files/tmr6.c: 78:     PIE3bits.TMR6IE = 1;
  5792     064D  0021               	movlb	1	; select bank1
  5793     064E  1593               	bsf	19,3	;volatile
  5794     064F                     l3778:
  5795                           
  5796                           ;mcc_generated_files/tmr6.c: 81:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
  5797     064F  3003               	movlw	low _TMR6_DefaultInterruptHandler
  5798     0650  00B0               	movwf	TMR6_SetInterruptHandler@InterruptHandler^(0+128)
  5799     0651  3000               	movlw	high _TMR6_DefaultInterruptHandler
  5800     0652  00B1               	movwf	(TMR6_SetInterruptHandler@InterruptHandler^(0+128)+1)
  5801     0653  3187  2793  3186   	fcall	_TMR6_SetInterruptHandler
  5802     0656                     l3780:
  5803                           
  5804                           ;mcc_generated_files/tmr6.c: 84:     T6CON = 0x49;
  5805     0656  3049               	movlw	73
  5806     0657  0028               	movlb	8	; select bank8
  5807     0658  009E               	movwf	30	;volatile
  5808     0659                     l629:
  5809     0659  0008               	return
  5810     065A                     __end_of_TMR6_Initialize:
  5811                           
  5812                           	psect	text14
  5813     0793                     __ptext14:	
  5814 ;; *************** function _TMR6_SetInterruptHandler *****************
  5815 ;; Defined at:
  5816 ;;		line 147 in file "mcc_generated_files/tmr6.c"
  5817 ;; Parameters:    Size  Location     Type
  5818 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  5819 ;;		 -> TMR6_Interrupt(1), TMR6_DefaultInterruptHandler(1), 
  5820 ;; Auto vars:     Size  Location     Type
  5821 ;;		None
  5822 ;; Return value:  Size  Location     Type
  5823 ;;                  1    wreg      void 
  5824 ;; Registers used:
  5825 ;;		wreg
  5826 ;; Tracked objects:
  5827 ;;		On entry : 0/0
  5828 ;;		On exit  : 0/0
  5829 ;;		Unchanged: 0/0
  5830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5831 ;;      Params:         0       0       2       0       0       0
  5832 ;;      Locals:         0       0       0       0       0       0
  5833 ;;      Temps:          0       0       0       0       0       0
  5834 ;;      Totals:         0       0       2       0       0       0
  5835 ;;Total ram usage:        2 bytes
  5836 ;; Hardware stack levels used: 1
  5837 ;; Hardware stack levels required when called: 7
  5838 ;; This function calls:
  5839 ;;		Nothing
  5840 ;; This function is called by:
  5841 ;;		_TMR6_Initialize
  5842 ;;		_main
  5843 ;; This function uses a non-reentrant model
  5844 ;;
  5845                           
  5846     0793                     _TMR6_SetInterruptHandler:	
  5847                           ;psect for function _TMR6_SetInterruptHandler
  5848                           
  5849     0793                     l3636:	
  5850                           ;incstack = 0
  5851                           ; Regs used in _TMR6_SetInterruptHandler: [wreg]
  5852                           
  5853                           
  5854                           ;mcc_generated_files/tmr6.c: 148:     TMR6_InterruptHandler = InterruptHandler;
  5855     0793  0021               	movlb	1	; select bank1
  5856     0794  0831               	movf	(TMR6_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  5857     0795  0020               	movlb	0	; select bank0
  5858     0796  00BE               	movwf	_TMR6_InterruptHandler+1
  5859     0797  0021               	movlb	1	; select bank1
  5860     0798  0830               	movf	TMR6_SetInterruptHandler@InterruptHandler^(0+128),w
  5861     0799  0020               	movlb	0	; select bank0
  5862     079A  00BD               	movwf	_TMR6_InterruptHandler
  5863     079B                     l657:
  5864     079B  0008               	return
  5865     079C                     __end_of_TMR6_SetInterruptHandler:
  5866                           
  5867                           	psect	text15
  5868     065A                     __ptext15:	
  5869 ;; *************** function _TMR4_Initialize *****************
  5870 ;; Defined at:
  5871 ;;		line 64 in file "mcc_generated_files/tmr4.c"
  5872 ;; Parameters:    Size  Location     Type
  5873 ;;		None
  5874 ;; Auto vars:     Size  Location     Type
  5875 ;;		None
  5876 ;; Return value:  Size  Location     Type
  5877 ;;                  1    wreg      void 
  5878 ;; Registers used:
  5879 ;;		wreg, status,2, status,0, pclath, cstack
  5880 ;; Tracked objects:
  5881 ;;		On entry : 0/0
  5882 ;;		On exit  : 0/0
  5883 ;;		Unchanged: 0/0
  5884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5885 ;;      Params:         0       0       0       0       0       0
  5886 ;;      Locals:         0       0       0       0       0       0
  5887 ;;      Temps:          0       0       0       0       0       0
  5888 ;;      Totals:         0       0       0       0       0       0
  5889 ;;Total ram usage:        0 bytes
  5890 ;; Hardware stack levels used: 1
  5891 ;; Hardware stack levels required when called: 8
  5892 ;; This function calls:
  5893 ;;		_TMR4_SetInterruptHandler
  5894 ;; This function is called by:
  5895 ;;		_SYSTEM_Initialize
  5896 ;; This function uses a non-reentrant model
  5897 ;;
  5898                           
  5899     065A                     _TMR4_Initialize:	
  5900                           ;psect for function _TMR4_Initialize
  5901                           
  5902     065A                     l3738:	
  5903                           ;incstack = 0
  5904                           ; Regs used in _TMR4_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5905                           
  5906                           
  5907                           ;mcc_generated_files/tmr4.c: 69:     PR4 = 0xF9;
  5908     065A  30F9               	movlw	249
  5909     065B  0028               	movlb	8	; select bank8
  5910     065C  0096               	movwf	22	;volatile
  5911     065D                     l3740:
  5912                           
  5913                           ;mcc_generated_files/tmr4.c: 72:     TMR4 = 0x00;
  5914     065D  0195               	clrf	21	;volatile
  5915     065E                     l3742:
  5916                           
  5917                           ;mcc_generated_files/tmr4.c: 75:     PIR3bits.TMR4IF = 0;
  5918     065E  0020               	movlb	0	; select bank0
  5919     065F  1093               	bcf	19,1	;volatile
  5920     0660                     l3744:
  5921                           
  5922                           ;mcc_generated_files/tmr4.c: 78:     PIE3bits.TMR4IE = 1;
  5923     0660  0021               	movlb	1	; select bank1
  5924     0661  1493               	bsf	19,1	;volatile
  5925     0662                     l3746:
  5926                           
  5927                           ;mcc_generated_files/tmr4.c: 81:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
  5928     0662  3002               	movlw	low _TMR4_DefaultInterruptHandler
  5929     0663  00B0               	movwf	TMR4_SetInterruptHandler@InterruptHandler^(0+128)
  5930     0664  3000               	movlw	high _TMR4_DefaultInterruptHandler
  5931     0665  00B1               	movwf	(TMR4_SetInterruptHandler@InterruptHandler^(0+128)+1)
  5932     0666  3187  279C  3186   	fcall	_TMR4_SetInterruptHandler
  5933     0669                     l3748:
  5934                           
  5935                           ;mcc_generated_files/tmr4.c: 84:     T4CON = 0x49;
  5936     0669  3049               	movlw	73
  5937     066A  0028               	movlb	8	; select bank8
  5938     066B  0097               	movwf	23	;volatile
  5939     066C                     l683:
  5940     066C  0008               	return
  5941     066D                     __end_of_TMR4_Initialize:
  5942                           
  5943                           	psect	text16
  5944     079C                     __ptext16:	
  5945 ;; *************** function _TMR4_SetInterruptHandler *****************
  5946 ;; Defined at:
  5947 ;;		line 147 in file "mcc_generated_files/tmr4.c"
  5948 ;; Parameters:    Size  Location     Type
  5949 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  5950 ;;		 -> TMR4_Interrupt(1), TMR4_DefaultInterruptHandler(1), 
  5951 ;; Auto vars:     Size  Location     Type
  5952 ;;		None
  5953 ;; Return value:  Size  Location     Type
  5954 ;;                  1    wreg      void 
  5955 ;; Registers used:
  5956 ;;		wreg
  5957 ;; Tracked objects:
  5958 ;;		On entry : 0/0
  5959 ;;		On exit  : 0/0
  5960 ;;		Unchanged: 0/0
  5961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5962 ;;      Params:         0       0       2       0       0       0
  5963 ;;      Locals:         0       0       0       0       0       0
  5964 ;;      Temps:          0       0       0       0       0       0
  5965 ;;      Totals:         0       0       2       0       0       0
  5966 ;;Total ram usage:        2 bytes
  5967 ;; Hardware stack levels used: 1
  5968 ;; Hardware stack levels required when called: 7
  5969 ;; This function calls:
  5970 ;;		Nothing
  5971 ;; This function is called by:
  5972 ;;		_TMR4_Initialize
  5973 ;;		_main
  5974 ;; This function uses a non-reentrant model
  5975 ;;
  5976                           
  5977     079C                     _TMR4_SetInterruptHandler:	
  5978                           ;psect for function _TMR4_SetInterruptHandler
  5979                           
  5980     079C                     l3638:	
  5981                           ;incstack = 0
  5982                           ; Regs used in _TMR4_SetInterruptHandler: [wreg]
  5983                           
  5984                           
  5985                           ;mcc_generated_files/tmr4.c: 148:     TMR4_InterruptHandler = InterruptHandler;
  5986     079C  0021               	movlb	1	; select bank1
  5987     079D  0831               	movf	(TMR4_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  5988     079E  0020               	movlb	0	; select bank0
  5989     079F  00BC               	movwf	_TMR4_InterruptHandler+1
  5990     07A0  0021               	movlb	1	; select bank1
  5991     07A1  0830               	movf	TMR4_SetInterruptHandler@InterruptHandler^(0+128),w
  5992     07A2  0020               	movlb	0	; select bank0
  5993     07A3  00BB               	movwf	_TMR4_InterruptHandler
  5994     07A4                     l711:
  5995     07A4  0008               	return
  5996     07A5                     __end_of_TMR4_SetInterruptHandler:
  5997                           
  5998                           	psect	text17
  5999     07F6                     __ptext17:	
  6000 ;; *************** function _TMR2_Initialize *****************
  6001 ;; Defined at:
  6002 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  6003 ;; Parameters:    Size  Location     Type
  6004 ;;		None
  6005 ;; Auto vars:     Size  Location     Type
  6006 ;;		None
  6007 ;; Return value:  Size  Location     Type
  6008 ;;                  1    wreg      void 
  6009 ;; Registers used:
  6010 ;;		wreg, status,2
  6011 ;; Tracked objects:
  6012 ;;		On entry : 0/0
  6013 ;;		On exit  : 0/0
  6014 ;;		Unchanged: 0/0
  6015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6016 ;;      Params:         0       0       0       0       0       0
  6017 ;;      Locals:         0       0       0       0       0       0
  6018 ;;      Temps:          0       0       0       0       0       0
  6019 ;;      Totals:         0       0       0       0       0       0
  6020 ;;Total ram usage:        0 bytes
  6021 ;; Hardware stack levels used: 1
  6022 ;; Hardware stack levels required when called: 7
  6023 ;; This function calls:
  6024 ;;		Nothing
  6025 ;; This function is called by:
  6026 ;;		_SYSTEM_Initialize
  6027 ;; This function uses a non-reentrant model
  6028 ;;
  6029                           
  6030     07F6                     _TMR2_Initialize:	
  6031                           ;psect for function _TMR2_Initialize
  6032                           
  6033     07F6                     l3750:	
  6034                           ;incstack = 0
  6035                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  6036                           
  6037                           
  6038                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xFF;
  6039     07F6  30FF               	movlw	255
  6040     07F7  0020               	movlb	0	; select bank0
  6041     07F8  009B               	movwf	27	;volatile
  6042     07F9                     l3752:
  6043                           
  6044                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  6045     07F9  019A               	clrf	26	;volatile
  6046     07FA                     l3754:
  6047                           
  6048                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  6049     07FA  1091               	bcf	17,1	;volatile
  6050     07FB                     l3756:
  6051                           
  6052                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x04;
  6053     07FB  3004               	movlw	4
  6054     07FC  009C               	movwf	28	;volatile
  6055     07FD                     l372:
  6056     07FD  0008               	return
  6057     07FE                     __end_of_TMR2_Initialize:
  6058                           
  6059                           	psect	text18
  6060     074E                     __ptext18:	
  6061 ;; *************** function _TMR1_Initialize *****************
  6062 ;; Defined at:
  6063 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  6064 ;; Parameters:    Size  Location     Type
  6065 ;;		None
  6066 ;; Auto vars:     Size  Location     Type
  6067 ;;		None
  6068 ;; Return value:  Size  Location     Type
  6069 ;;                  1    wreg      void 
  6070 ;; Registers used:
  6071 ;;		wreg, status,2
  6072 ;; Tracked objects:
  6073 ;;		On entry : 0/0
  6074 ;;		On exit  : 0/0
  6075 ;;		Unchanged: 0/0
  6076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6077 ;;      Params:         0       0       0       0       0       0
  6078 ;;      Locals:         0       0       0       0       0       0
  6079 ;;      Temps:          0       0       0       0       0       0
  6080 ;;      Totals:         0       0       0       0       0       0
  6081 ;;Total ram usage:        0 bytes
  6082 ;; Hardware stack levels used: 1
  6083 ;; Hardware stack levels required when called: 7
  6084 ;; This function calls:
  6085 ;;		Nothing
  6086 ;; This function is called by:
  6087 ;;		_SYSTEM_Initialize
  6088 ;; This function uses a non-reentrant model
  6089 ;;
  6090                           
  6091     074E                     _TMR1_Initialize:	
  6092                           ;psect for function _TMR1_Initialize
  6093                           
  6094     074E                     l3796:	
  6095                           ;incstack = 0
  6096                           ; Regs used in _TMR1_Initialize: [wreg+status,2]
  6097                           
  6098                           
  6099                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
  6100     074E  0020               	movlb	0	; select bank0
  6101     074F  0199               	clrf	25	;volatile
  6102                           
  6103                           ;mcc_generated_files/tmr1.c: 71:     TMR1H = 0x00;
  6104     0750  0197               	clrf	23	;volatile
  6105                           
  6106                           ;mcc_generated_files/tmr1.c: 74:     TMR1L = 0x00;
  6107     0751  0196               	clrf	22	;volatile
  6108     0752                     l3798:
  6109                           
  6110                           ;mcc_generated_files/tmr1.c: 77:     PIR1bits.TMR1IF = 0;
  6111     0752  1011               	bcf	17,0	;volatile
  6112     0753                     l3800:
  6113                           
  6114                           ;mcc_generated_files/tmr1.c: 80:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  6115     0753  0817               	movf	23,w	;volatile
  6116     0754  00C4               	movwf	_timer1ReloadVal+1	;volatile
  6117     0755  0816               	movf	22,w	;volatile
  6118     0756  00C3               	movwf	_timer1ReloadVal	;volatile
  6119     0757                     l3802:
  6120                           
  6121                           ;mcc_generated_files/tmr1.c: 83:     T1CON = 0x35;
  6122     0757  3035               	movlw	53
  6123     0758  0098               	movwf	24	;volatile
  6124     0759                     l410:
  6125     0759  0008               	return
  6126     075A                     __end_of_TMR1_Initialize:
  6127                           
  6128                           	psect	text19
  6129     0632                     __ptext19:	
  6130 ;; *************** function _TMR0_Initialize *****************
  6131 ;; Defined at:
  6132 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  6133 ;; Parameters:    Size  Location     Type
  6134 ;;		None
  6135 ;; Auto vars:     Size  Location     Type
  6136 ;;		None
  6137 ;; Return value:  Size  Location     Type
  6138 ;;                  1    wreg      void 
  6139 ;; Registers used:
  6140 ;;		wreg, status,2, status,0, pclath, cstack
  6141 ;; Tracked objects:
  6142 ;;		On entry : 0/0
  6143 ;;		On exit  : 0/0
  6144 ;;		Unchanged: 0/0
  6145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6146 ;;      Params:         0       0       0       0       0       0
  6147 ;;      Locals:         0       0       0       0       0       0
  6148 ;;      Temps:          0       0       0       0       0       0
  6149 ;;      Totals:         0       0       0       0       0       0
  6150 ;;Total ram usage:        0 bytes
  6151 ;; Hardware stack levels used: 1
  6152 ;; Hardware stack levels required when called: 8
  6153 ;; This function calls:
  6154 ;;		_TMR0_SetInterruptHandler
  6155 ;; This function is called by:
  6156 ;;		_SYSTEM_Initialize
  6157 ;; This function uses a non-reentrant model
  6158 ;;
  6159                           
  6160     0632                     _TMR0_Initialize:	
  6161                           ;psect for function _TMR0_Initialize
  6162                           
  6163     0632                     l3758:	
  6164                           ;incstack = 0
  6165                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6166                           
  6167                           
  6168                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD1 
      +                          & 0x3F));
  6169     0632  0021               	movlb	1	; select bank1
  6170     0633  0815               	movf	21,w	;volatile
  6171     0634  39C0               	andlw	192
  6172     0635  3811               	iorlw	17
  6173     0636  0095               	movwf	21	;volatile
  6174     0637                     l3760:
  6175                           
  6176                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0x06;
  6177     0637  3006               	movlw	6
  6178     0638  0020               	movlb	0	; select bank0
  6179     0639  0095               	movwf	21	;volatile
  6180     063A                     l3762:
  6181                           
  6182                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 6;
  6183     063A  3006               	movlw	6
  6184     063B  00CF               	movwf	_timer0ReloadVal	;volatile
  6185     063C                     l3764:
  6186                           
  6187                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
  6188     063C  110B               	bcf	11,2	;volatile
  6189     063D                     l3766:
  6190                           
  6191                           ;mcc_generated_files/tmr0.c: 81:     INTCONbits.TMR0IE = 1;
  6192     063D  168B               	bsf	11,5	;volatile
  6193     063E                     l3768:
  6194                           
  6195                           ;mcc_generated_files/tmr0.c: 84:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  6196     063E  30AB               	movlw	low _TMR0_DefaultInterruptHandler
  6197     063F  0021               	movlb	1	; select bank1
  6198     0640  00B0               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  6199     0641  300F               	movlw	high _TMR0_DefaultInterruptHandler
  6200     0642  00B1               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  6201     0643  3187  27A5  3186   	fcall	_TMR0_SetInterruptHandler
  6202     0646                     l455:
  6203     0646  0008               	return
  6204     0647                     __end_of_TMR0_Initialize:
  6205                           
  6206                           	psect	text20
  6207     07A5                     __ptext20:	
  6208 ;; *************** function _TMR0_SetInterruptHandler *****************
  6209 ;; Defined at:
  6210 ;;		line 140 in file "mcc_generated_files/tmr0.c"
  6211 ;; Parameters:    Size  Location     Type
  6212 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  6213 ;;		 -> TMR0_Interrupt(1), TMR0_DefaultInterruptHandler(1), 
  6214 ;; Auto vars:     Size  Location     Type
  6215 ;;		None
  6216 ;; Return value:  Size  Location     Type
  6217 ;;                  1    wreg      void 
  6218 ;; Registers used:
  6219 ;;		wreg
  6220 ;; Tracked objects:
  6221 ;;		On entry : 0/0
  6222 ;;		On exit  : 0/0
  6223 ;;		Unchanged: 0/0
  6224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6225 ;;      Params:         0       0       2       0       0       0
  6226 ;;      Locals:         0       0       0       0       0       0
  6227 ;;      Temps:          0       0       0       0       0       0
  6228 ;;      Totals:         0       0       2       0       0       0
  6229 ;;Total ram usage:        2 bytes
  6230 ;; Hardware stack levels used: 1
  6231 ;; Hardware stack levels required when called: 7
  6232 ;; This function calls:
  6233 ;;		Nothing
  6234 ;; This function is called by:
  6235 ;;		_TMR0_Initialize
  6236 ;;		_main
  6237 ;; This function uses a non-reentrant model
  6238 ;;
  6239                           
  6240     07A5                     _TMR0_SetInterruptHandler:	
  6241                           ;psect for function _TMR0_SetInterruptHandler
  6242                           
  6243     07A5                     l3620:	
  6244                           ;incstack = 0
  6245                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  6246                           
  6247                           
  6248                           ;mcc_generated_files/tmr0.c: 141:     TMR0_InterruptHandler = InterruptHandler;
  6249     07A5  0021               	movlb	1	; select bank1
  6250     07A6  0831               	movf	(TMR0_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  6251     07A7  0020               	movlb	0	; select bank0
  6252     07A8  00C2               	movwf	_TMR0_InterruptHandler+1
  6253     07A9  0021               	movlb	1	; select bank1
  6254     07AA  0830               	movf	TMR0_SetInterruptHandler@InterruptHandler^(0+128),w
  6255     07AB  0020               	movlb	0	; select bank0
  6256     07AC  00C1               	movwf	_TMR0_InterruptHandler
  6257     07AD                     l477:
  6258     07AD  0008               	return
  6259     07AE                     __end_of_TMR0_SetInterruptHandler:
  6260                           
  6261                           	psect	text21
  6262     077E                     __ptext21:	
  6263 ;; *************** function _SPI1_Initialize *****************
  6264 ;; Defined at:
  6265 ;;		line 62 in file "mcc_generated_files/spi1.c"
  6266 ;; Parameters:    Size  Location     Type
  6267 ;;		None
  6268 ;; Auto vars:     Size  Location     Type
  6269 ;;		None
  6270 ;; Return value:  Size  Location     Type
  6271 ;;                  1    wreg      void 
  6272 ;; Registers used:
  6273 ;;		wreg, status,2
  6274 ;; Tracked objects:
  6275 ;;		On entry : 0/0
  6276 ;;		On exit  : 0/0
  6277 ;;		Unchanged: 0/0
  6278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6279 ;;      Params:         0       0       0       0       0       0
  6280 ;;      Locals:         0       0       0       0       0       0
  6281 ;;      Temps:          0       0       0       0       0       0
  6282 ;;      Totals:         0       0       0       0       0       0
  6283 ;;Total ram usage:        0 bytes
  6284 ;; Hardware stack levels used: 1
  6285 ;; Hardware stack levels required when called: 7
  6286 ;; This function calls:
  6287 ;;		Nothing
  6288 ;; This function is called by:
  6289 ;;		_SYSTEM_Initialize
  6290 ;; This function uses a non-reentrant model
  6291 ;;
  6292                           
  6293     077E                     _SPI1_Initialize:	
  6294                           ;psect for function _SPI1_Initialize
  6295                           
  6296     077E                     l3640:	
  6297                           ;incstack = 0
  6298                           ; Regs used in _SPI1_Initialize: [wreg+status,2]
  6299                           
  6300                           
  6301                           ;mcc_generated_files/spi1.c: 65:     SSP1STAT = 0x00;
  6302     077E  0024               	movlb	4	; select bank4
  6303     077F  0194               	clrf	20	;volatile
  6304     0780                     l3642:
  6305                           
  6306                           ;mcc_generated_files/spi1.c: 66:     SSP1CON1 = 0x11;
  6307     0780  3011               	movlw	17
  6308     0781  0095               	movwf	21	;volatile
  6309     0782                     l3644:
  6310                           
  6311                           ;mcc_generated_files/spi1.c: 67:     SSP1ADD = 0x01;
  6312     0782  3001               	movlw	1
  6313     0783  0092               	movwf	18	;volatile
  6314     0784                     l3646:
  6315                           
  6316                           ;mcc_generated_files/spi1.c: 68:     TRISBbits.TRISB4 = 0;
  6317     0784  0021               	movlb	1	; select bank1
  6318     0785  120D               	bcf	13,4	;volatile
  6319     0786                     l3648:
  6320                           
  6321                           ;mcc_generated_files/spi1.c: 69:     SSP1CON1bits.SSPEN = 0;
  6322     0786  0024               	movlb	4	; select bank4
  6323     0787  1295               	bcf	21,5	;volatile
  6324     0788                     l21:
  6325     0788  0008               	return
  6326     0789                     __end_of_SPI1_Initialize:
  6327                           
  6328                           	psect	text22
  6329     07AE                     __ptext22:	
  6330 ;; *************** function _PWM3_Initialize *****************
  6331 ;; Defined at:
  6332 ;;		line 64 in file "mcc_generated_files/pwm3.c"
  6333 ;; Parameters:    Size  Location     Type
  6334 ;;		None
  6335 ;; Auto vars:     Size  Location     Type
  6336 ;;		None
  6337 ;; Return value:  Size  Location     Type
  6338 ;;                  1    wreg      void 
  6339 ;; Registers used:
  6340 ;;		wreg, status,2, status,0
  6341 ;; Tracked objects:
  6342 ;;		On entry : 0/0
  6343 ;;		On exit  : 0/0
  6344 ;;		Unchanged: 0/0
  6345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6346 ;;      Params:         0       0       0       0       0       0
  6347 ;;      Locals:         0       0       0       0       0       0
  6348 ;;      Temps:          0       0       0       0       0       0
  6349 ;;      Totals:         0       0       0       0       0       0
  6350 ;;Total ram usage:        0 bytes
  6351 ;; Hardware stack levels used: 1
  6352 ;; Hardware stack levels required when called: 7
  6353 ;; This function calls:
  6354 ;;		Nothing
  6355 ;; This function is called by:
  6356 ;;		_SYSTEM_Initialize
  6357 ;; This function uses a non-reentrant model
  6358 ;;
  6359                           
  6360     07AE                     _PWM3_Initialize:	
  6361                           ;psect for function _PWM3_Initialize
  6362                           
  6363     07AE                     l3650:	
  6364                           ;incstack = 0
  6365                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
  6366                           
  6367                           
  6368                           ;mcc_generated_files/pwm3.c: 69:  CCP3CON = 0x0C;
  6369     07AE  300C               	movlw	12
  6370     07AF  0026               	movlb	6	; select bank6
  6371     07B0  0093               	movwf	19	;volatile
  6372     07B1                     l3652:
  6373                           
  6374                           ;mcc_generated_files/pwm3.c: 72:  CCPR3L = 0x00;
  6375     07B1  0191               	clrf	17	;volatile
  6376     07B2                     l3654:
  6377                           
  6378                           ;mcc_generated_files/pwm3.c: 75:  CCPR3H = 0x00;
  6379     07B2  0192               	clrf	18	;volatile
  6380     07B3                     l3656:
  6381                           
  6382                           ;mcc_generated_files/pwm3.c: 78:  CCPTMRS0bits.C3TSEL = 0x0;
  6383     07B3  30CF               	movlw	-49
  6384     07B4  0025               	movlb	5	; select bank5
  6385     07B5  059E               	andwf	30,f	;volatile
  6386     07B6                     l72:
  6387     07B6  0008               	return
  6388     07B7                     __end_of_PWM3_Initialize:
  6389                           
  6390                           	psect	text23
  6391     03BE                     __ptext23:	
  6392 ;; *************** function _PIN_MANAGER_Initialize *****************
  6393 ;; Defined at:
  6394 ;;		line 58 in file "mcc_generated_files/pin_manager.c"
  6395 ;; Parameters:    Size  Location     Type
  6396 ;;		None
  6397 ;; Auto vars:     Size  Location     Type
  6398 ;;		None
  6399 ;; Return value:  Size  Location     Type
  6400 ;;                  1    wreg      void 
  6401 ;; Registers used:
  6402 ;;		wreg, status,2, status,0, pclath, cstack
  6403 ;; Tracked objects:
  6404 ;;		On entry : 0/0
  6405 ;;		On exit  : 0/0
  6406 ;;		Unchanged: 0/0
  6407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6408 ;;      Params:         0       0       0       0       0       0
  6409 ;;      Locals:         0       0       0       0       0       0
  6410 ;;      Temps:          0       0       0       0       0       0
  6411 ;;      Totals:         0       0       0       0       0       0
  6412 ;;Total ram usage:        0 bytes
  6413 ;; Hardware stack levels used: 1
  6414 ;; Hardware stack levels required when called: 8
  6415 ;; This function calls:
  6416 ;;		_IOCBF0_SetInterruptHandler
  6417 ;;		_IOCBF3_SetInterruptHandler
  6418 ;; This function is called by:
  6419 ;;		_SYSTEM_Initialize
  6420 ;; This function uses a non-reentrant model
  6421 ;;
  6422                           
  6423     03BE                     _PIN_MANAGER_Initialize:	
  6424                           ;psect for function _PIN_MANAGER_Initialize
  6425                           
  6426     03BE                     l3670:	
  6427                           ;incstack = 0
  6428                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6429                           
  6430                           
  6431                           ;mcc_generated_files/pin_manager.c: 63:     LATA = 0x00;
  6432     03BE  0022               	movlb	2	; select bank2
  6433     03BF  018C               	clrf	12	;volatile
  6434                           
  6435                           ;mcc_generated_files/pin_manager.c: 64:     LATB = 0x00;
  6436     03C0  018D               	clrf	13	;volatile
  6437     03C1                     l3672:
  6438                           
  6439                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0x37;
  6440     03C1  3037               	movlw	55
  6441     03C2  0021               	movlb	1	; select bank1
  6442     03C3  008C               	movwf	12	;volatile
  6443     03C4                     l3674:
  6444                           
  6445                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0xEF;
  6446     03C4  30EF               	movlw	239
  6447     03C5  008D               	movwf	13	;volatile
  6448                           
  6449                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x00;
  6450     03C6  0023               	movlb	3	; select bank3
  6451     03C7  018D               	clrf	13	;volatile
  6452     03C8                     l3676:
  6453                           
  6454                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x07;
  6455     03C8  3007               	movlw	7
  6456     03C9  008C               	movwf	12	;volatile
  6457     03CA                     l3678:
  6458                           
  6459                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  6460     03CA  0024               	movlb	4	; select bank4
  6461     03CB  018D               	clrf	13	;volatile
  6462     03CC                     l3680:
  6463                           
  6464                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  6465     03CC  018C               	clrf	12	;volatile
  6466     03CD                     l3682:
  6467                           
  6468                           ;mcc_generated_files/pin_manager.c: 83:     OPTION_REGbits.nWPUEN = 1;
  6469     03CD  0021               	movlb	1	; select bank1
  6470     03CE  1795               	bsf	21,7	;volatile
  6471     03CF                     l3684:
  6472                           
  6473                           ;mcc_generated_files/pin_manager.c: 89:     APFCON0 = 0xC0;
  6474     03CF  30C0               	movlw	192
  6475     03D0  0022               	movlb	2	; select bank2
  6476     03D1  009D               	movwf	29	;volatile
  6477     03D2                     l3686:
  6478                           
  6479                           ;mcc_generated_files/pin_manager.c: 90:     APFCON1 = 0x01;
  6480     03D2  3001               	movlw	1
  6481     03D3  009E               	movwf	30	;volatile
  6482     03D4                     l3688:
  6483                           
  6484                           ;mcc_generated_files/pin_manager.c: 96:     IOCBFbits.IOCBF0 = 0;
  6485     03D4  0027               	movlb	7	; select bank7
  6486     03D5  1016               	bcf	22,0	;volatile
  6487     03D6                     l3690:
  6488                           
  6489                           ;mcc_generated_files/pin_manager.c: 98:     IOCBFbits.IOCBF3 = 0;
  6490     03D6  1196               	bcf	22,3	;volatile
  6491     03D7                     l3692:
  6492                           
  6493                           ;mcc_generated_files/pin_manager.c: 100:     IOCBNbits.IOCBN0 = 1;
  6494     03D7  1415               	bsf	21,0	;volatile
  6495     03D8                     l3694:
  6496                           
  6497                           ;mcc_generated_files/pin_manager.c: 102:     IOCBNbits.IOCBN3 = 1;
  6498     03D8  1595               	bsf	21,3	;volatile
  6499     03D9                     l3696:
  6500                           
  6501                           ;mcc_generated_files/pin_manager.c: 104:     IOCBPbits.IOCBP0 = 1;
  6502     03D9  1414               	bsf	20,0	;volatile
  6503     03DA                     l3698:
  6504                           
  6505                           ;mcc_generated_files/pin_manager.c: 106:     IOCBPbits.IOCBP3 = 1;
  6506     03DA  1594               	bsf	20,3	;volatile
  6507     03DB                     l3700:
  6508                           
  6509                           ;mcc_generated_files/pin_manager.c: 111:     IOCBF0_SetInterruptHandler(IOCBF0_DefaultIn
      +                          terruptHandler);
  6510     03DB  30A9               	movlw	low _IOCBF0_DefaultInterruptHandler
  6511     03DC  0021               	movlb	1	; select bank1
  6512     03DD  00B0               	movwf	IOCBF0_SetInterruptHandler@InterruptHandler^(0+128)
  6513     03DE  300F               	movlw	high _IOCBF0_DefaultInterruptHandler
  6514     03DF  00B1               	movwf	(IOCBF0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  6515     03E0  3187  27C0  3183   	fcall	_IOCBF0_SetInterruptHandler
  6516     03E3                     l3702:
  6517                           
  6518                           ;mcc_generated_files/pin_manager.c: 112:     IOCBF3_SetInterruptHandler(IOCBF3_DefaultIn
      +                          terruptHandler);
  6519     03E3  30AA               	movlw	low _IOCBF3_DefaultInterruptHandler
  6520     03E4  0021               	movlb	1	; select bank1
  6521     03E5  00B0               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler^(0+128)
  6522     03E6  300F               	movlw	high _IOCBF3_DefaultInterruptHandler
  6523     03E7  00B1               	movwf	(IOCBF3_SetInterruptHandler@InterruptHandler^(0+128)+1)
  6524     03E8  3187  27B7  3183   	fcall	_IOCBF3_SetInterruptHandler
  6525     03EB                     l3704:
  6526                           
  6527                           ;mcc_generated_files/pin_manager.c: 115:     INTCONbits.IOCIE = 1;
  6528     03EB  158B               	bsf	11,3	;volatile
  6529     03EC                     l257:
  6530     03EC  0008               	return
  6531     03ED                     __end_of_PIN_MANAGER_Initialize:
  6532                           
  6533                           	psect	text24
  6534     07B7                     __ptext24:	
  6535 ;; *************** function _IOCBF3_SetInterruptHandler *****************
  6536 ;; Defined at:
  6537 ;;		line 181 in file "mcc_generated_files/pin_manager.c"
  6538 ;; Parameters:    Size  Location     Type
  6539 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  6540 ;;		 -> S2_Interrupt(1), IOCBF3_DefaultInterruptHandler(1), 
  6541 ;; Auto vars:     Size  Location     Type
  6542 ;;		None
  6543 ;; Return value:  Size  Location     Type
  6544 ;;                  1    wreg      void 
  6545 ;; Registers used:
  6546 ;;		wreg
  6547 ;; Tracked objects:
  6548 ;;		On entry : 0/0
  6549 ;;		On exit  : 0/0
  6550 ;;		Unchanged: 0/0
  6551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6552 ;;      Params:         0       0       2       0       0       0
  6553 ;;      Locals:         0       0       0       0       0       0
  6554 ;;      Temps:          0       0       0       0       0       0
  6555 ;;      Totals:         0       0       2       0       0       0
  6556 ;;Total ram usage:        2 bytes
  6557 ;; Hardware stack levels used: 1
  6558 ;; Hardware stack levels required when called: 7
  6559 ;; This function calls:
  6560 ;;		Nothing
  6561 ;; This function is called by:
  6562 ;;		_PIN_MANAGER_Initialize
  6563 ;;		_main
  6564 ;; This function uses a non-reentrant model
  6565 ;;
  6566                           
  6567     07B7                     _IOCBF3_SetInterruptHandler:	
  6568                           ;psect for function _IOCBF3_SetInterruptHandler
  6569                           
  6570     07B7                     l3616:	
  6571                           ;incstack = 0
  6572                           ; Regs used in _IOCBF3_SetInterruptHandler: [wreg]
  6573                           
  6574                           
  6575                           ;mcc_generated_files/pin_manager.c: 182:     IOCBF3_InterruptHandler = InterruptHandler;
  6576     07B7  0021               	movlb	1	; select bank1
  6577     07B8  0831               	movf	(IOCBF3_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  6578     07B9  0020               	movlb	0	; select bank0
  6579     07BA  00C8               	movwf	_IOCBF3_InterruptHandler+1
  6580     07BB  0021               	movlb	1	; select bank1
  6581     07BC  0830               	movf	IOCBF3_SetInterruptHandler@InterruptHandler^(0+128),w
  6582     07BD  0020               	movlb	0	; select bank0
  6583     07BE  00C7               	movwf	_IOCBF3_InterruptHandler
  6584     07BF                     l279:
  6585     07BF  0008               	return
  6586     07C0                     __end_of_IOCBF3_SetInterruptHandler:
  6587                           
  6588                           	psect	text25
  6589     07C0                     __ptext25:	
  6590 ;; *************** function _IOCBF0_SetInterruptHandler *****************
  6591 ;; Defined at:
  6592 ;;		line 151 in file "mcc_generated_files/pin_manager.c"
  6593 ;; Parameters:    Size  Location     Type
  6594 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  6595 ;;		 -> S1_Interrupt(1), IOCBF0_DefaultInterruptHandler(1), 
  6596 ;; Auto vars:     Size  Location     Type
  6597 ;;		None
  6598 ;; Return value:  Size  Location     Type
  6599 ;;                  1    wreg      void 
  6600 ;; Registers used:
  6601 ;;		wreg
  6602 ;; Tracked objects:
  6603 ;;		On entry : 0/0
  6604 ;;		On exit  : 0/0
  6605 ;;		Unchanged: 0/0
  6606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6607 ;;      Params:         0       0       2       0       0       0
  6608 ;;      Locals:         0       0       0       0       0       0
  6609 ;;      Temps:          0       0       0       0       0       0
  6610 ;;      Totals:         0       0       2       0       0       0
  6611 ;;Total ram usage:        2 bytes
  6612 ;; Hardware stack levels used: 1
  6613 ;; Hardware stack levels required when called: 7
  6614 ;; This function calls:
  6615 ;;		Nothing
  6616 ;; This function is called by:
  6617 ;;		_PIN_MANAGER_Initialize
  6618 ;;		_main
  6619 ;; This function uses a non-reentrant model
  6620 ;;
  6621                           
  6622     07C0                     _IOCBF0_SetInterruptHandler:	
  6623                           ;psect for function _IOCBF0_SetInterruptHandler
  6624                           
  6625     07C0                     l3614:	
  6626                           ;incstack = 0
  6627                           ; Regs used in _IOCBF0_SetInterruptHandler: [wreg]
  6628                           
  6629                           
  6630                           ;mcc_generated_files/pin_manager.c: 152:     IOCBF0_InterruptHandler = InterruptHandler;
  6631     07C0  0021               	movlb	1	; select bank1
  6632     07C1  0831               	movf	(IOCBF0_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  6633     07C2  0020               	movlb	0	; select bank0
  6634     07C3  00CA               	movwf	_IOCBF0_InterruptHandler+1
  6635     07C4  0021               	movlb	1	; select bank1
  6636     07C5  0830               	movf	IOCBF0_SetInterruptHandler@InterruptHandler^(0+128),w
  6637     07C6  0020               	movlb	0	; select bank0
  6638     07C7  00C9               	movwf	_IOCBF0_InterruptHandler
  6639     07C8                     l269:
  6640     07C8  0008               	return
  6641     07C9                     __end_of_IOCBF0_SetInterruptHandler:
  6642                           
  6643                           	psect	text26
  6644     0FF1                     __ptext26:	
  6645 ;; *************** function _OSCILLATOR_Initialize *****************
  6646 ;; Defined at:
  6647 ;;		line 72 in file "mcc_generated_files/mcc.c"
  6648 ;; Parameters:    Size  Location     Type
  6649 ;;		None
  6650 ;; Auto vars:     Size  Location     Type
  6651 ;;		None
  6652 ;; Return value:  Size  Location     Type
  6653 ;;                  1    wreg      void 
  6654 ;; Registers used:
  6655 ;;		wreg, status,2
  6656 ;; Tracked objects:
  6657 ;;		On entry : 0/0
  6658 ;;		On exit  : 0/0
  6659 ;;		Unchanged: 0/0
  6660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6661 ;;      Params:         0       0       0       0       0       0
  6662 ;;      Locals:         0       0       0       0       0       0
  6663 ;;      Temps:          0       0       0       0       0       0
  6664 ;;      Totals:         0       0       0       0       0       0
  6665 ;;Total ram usage:        0 bytes
  6666 ;; Hardware stack levels used: 1
  6667 ;; Hardware stack levels required when called: 7
  6668 ;; This function calls:
  6669 ;;		Nothing
  6670 ;; This function is called by:
  6671 ;;		_SYSTEM_Initialize
  6672 ;; This function uses a non-reentrant model
  6673 ;;
  6674                           
  6675     0FF1                     _OSCILLATOR_Initialize:	
  6676                           ;psect for function _OSCILLATOR_Initialize
  6677                           
  6678     0FF1                     l3718:	
  6679                           ;incstack = 0
  6680                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  6681                           
  6682                           
  6683                           ;mcc_generated_files/mcc.c: 75:     OSCCON = 0x70;
  6684     0FF1  3070               	movlw	112
  6685     0FF2  0021               	movlb	1	; select bank1
  6686     0FF3  0099               	movwf	25	;volatile
  6687     0FF4                     l3720:
  6688                           
  6689                           ;mcc_generated_files/mcc.c: 77:     OSCTUNE = 0x00;
  6690     0FF4  0198               	clrf	24	;volatile
  6691     0FF5                     l3722:
  6692                           
  6693                           ;mcc_generated_files/mcc.c: 79:     BORCON = 0x00;
  6694     0FF5  0022               	movlb	2	; select bank2
  6695     0FF6  0196               	clrf	22	;volatile
  6696     0FF7                     l356:
  6697     0FF7  0008               	return
  6698     0FF8                     __end_of_OSCILLATOR_Initialize:
  6699                           
  6700                           	psect	text27
  6701     0FC2                     __ptext27:	
  6702 ;; *************** function _FVR_Initialize *****************
  6703 ;; Defined at:
  6704 ;;		line 58 in file "mcc_generated_files/fvr.c"
  6705 ;; Parameters:    Size  Location     Type
  6706 ;;		None
  6707 ;; Auto vars:     Size  Location     Type
  6708 ;;		None
  6709 ;; Return value:  Size  Location     Type
  6710 ;;                  1    wreg      void 
  6711 ;; Registers used:
  6712 ;;		wreg
  6713 ;; Tracked objects:
  6714 ;;		On entry : 0/0
  6715 ;;		On exit  : 0/0
  6716 ;;		Unchanged: 0/0
  6717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6718 ;;      Params:         0       0       0       0       0       0
  6719 ;;      Locals:         0       0       0       0       0       0
  6720 ;;      Temps:          0       0       0       0       0       0
  6721 ;;      Totals:         0       0       0       0       0       0
  6722 ;;Total ram usage:        0 bytes
  6723 ;; Hardware stack levels used: 1
  6724 ;; Hardware stack levels required when called: 7
  6725 ;; This function calls:
  6726 ;;		Nothing
  6727 ;; This function is called by:
  6728 ;;		_SYSTEM_Initialize
  6729 ;; This function uses a non-reentrant model
  6730 ;;
  6731                           
  6732     0FC2                     _FVR_Initialize:	
  6733                           ;psect for function _FVR_Initialize
  6734                           
  6735     0FC2                     l3734:	
  6736                           ;incstack = 0
  6737                           ; Regs used in _FVR_Initialize: [wreg]
  6738                           
  6739                           
  6740                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x82;
  6741     0FC2  3082               	movlw	130
  6742     0FC3  0022               	movlb	2	; select bank2
  6743     0FC4  0097               	movwf	23	;volatile
  6744     0FC5                     l953:
  6745     0FC5  0008               	return
  6746     0FC6                     __end_of_FVR_Initialize:
  6747                           
  6748                           	psect	text28
  6749     0491                     __ptext28:	
  6750 ;; *************** function _EUSART_Initialize *****************
  6751 ;; Defined at:
  6752 ;;		line 66 in file "mcc_generated_files/eusart.c"
  6753 ;; Parameters:    Size  Location     Type
  6754 ;;		None
  6755 ;; Auto vars:     Size  Location     Type
  6756 ;;		None
  6757 ;; Return value:  Size  Location     Type
  6758 ;;                  1    wreg      void 
  6759 ;; Registers used:
  6760 ;;		wreg, status,2, status,0, pclath, cstack
  6761 ;; Tracked objects:
  6762 ;;		On entry : 0/0
  6763 ;;		On exit  : 0/0
  6764 ;;		Unchanged: 0/0
  6765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6766 ;;      Params:         0       0       0       0       0       0
  6767 ;;      Locals:         0       0       0       0       0       0
  6768 ;;      Temps:          0       0       0       0       0       0
  6769 ;;      Totals:         0       0       0       0       0       0
  6770 ;;Total ram usage:        0 bytes
  6771 ;; Hardware stack levels used: 1
  6772 ;; Hardware stack levels required when called: 8
  6773 ;; This function calls:
  6774 ;;		_EUSART_SetErrorHandler
  6775 ;;		_EUSART_SetFramingErrorHandler
  6776 ;;		_EUSART_SetOverrunErrorHandler
  6777 ;; This function is called by:
  6778 ;;		_SYSTEM_Initialize
  6779 ;; This function uses a non-reentrant model
  6780 ;;
  6781                           
  6782     0491                     _EUSART_Initialize:	
  6783                           ;psect for function _EUSART_Initialize
  6784                           
  6785     0491                     l3658:	
  6786                           ;incstack = 0
  6787                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6788                           
  6789                           
  6790                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  6791     0491  3008               	movlw	8
  6792     0492  0023               	movlb	3	; select bank3
  6793     0493  009F               	movwf	31	;volatile
  6794                           
  6795                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  6796     0494  3090               	movlw	144
  6797     0495  009D               	movwf	29	;volatile
  6798                           
  6799                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0xA4;
  6800     0496  30A4               	movlw	164
  6801     0497  009E               	movwf	30	;volatile
  6802                           
  6803                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x67;
  6804     0498  3067               	movlw	103
  6805     0499  009B               	movwf	27	;volatile
  6806     049A                     l3660:
  6807                           
  6808                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  6809     049A  019C               	clrf	28	;volatile
  6810     049B                     l3662:
  6811                           
  6812                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  6813     049B  3000               	movlw	0
  6814     049C  0021               	movlb	1	; select bank1
  6815     049D  00B0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128)
  6816     049E  3000               	movlw	0
  6817     049F  00B1               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler^(0+128)+1)
  6818     04A0  3187  27D2  3184   	fcall	_EUSART_SetFramingErrorHandler
  6819     04A3                     l3664:
  6820                           
  6821                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  6822     04A3  3000               	movlw	0
  6823     04A4  0021               	movlb	1	; select bank1
  6824     04A5  00B0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)
  6825     04A6  3000               	movlw	0
  6826     04A7  00B1               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)+1)
  6827     04A8  3187  27C9  3184   	fcall	_EUSART_SetOverrunErrorHandler
  6828     04AB                     l3666:
  6829                           
  6830                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  6831     04AB  3000               	movlw	0
  6832     04AC  0021               	movlb	1	; select bank1
  6833     04AD  00B0               	movwf	EUSART_SetErrorHandler@interruptHandler^(0+128)
  6834     04AE  3000               	movlw	0
  6835     04AF  00B1               	movwf	(EUSART_SetErrorHandler@interruptHandler^(0+128)+1)
  6836     04B0  318F  27DF  3184   	fcall	_EUSART_SetErrorHandler
  6837     04B3                     l3668:
  6838                           
  6839                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  6840     04B3  0020               	movlb	0	; select bank0
  6841     04B4  01B7               	clrf	_eusartRxLastError	;volatile
  6842     04B5                     l118:
  6843     04B5  0008               	return
  6844     04B6                     __end_of_EUSART_Initialize:
  6845                           
  6846                           	psect	text29
  6847     07C9                     __ptext29:	
  6848 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  6849 ;; Defined at:
  6850 ;;		line 161 in file "mcc_generated_files/eusart.c"
  6851 ;; Parameters:    Size  Location     Type
  6852 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  6853 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  6854 ;; Auto vars:     Size  Location     Type
  6855 ;;		None
  6856 ;; Return value:  Size  Location     Type
  6857 ;;                  1    wreg      void 
  6858 ;; Registers used:
  6859 ;;		wreg
  6860 ;; Tracked objects:
  6861 ;;		On entry : 0/0
  6862 ;;		On exit  : 0/0
  6863 ;;		Unchanged: 0/0
  6864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6865 ;;      Params:         0       0       2       0       0       0
  6866 ;;      Locals:         0       0       0       0       0       0
  6867 ;;      Temps:          0       0       0       0       0       0
  6868 ;;      Totals:         0       0       2       0       0       0
  6869 ;;Total ram usage:        2 bytes
  6870 ;; Hardware stack levels used: 1
  6871 ;; Hardware stack levels required when called: 7
  6872 ;; This function calls:
  6873 ;;		Nothing
  6874 ;; This function is called by:
  6875 ;;		_EUSART_Initialize
  6876 ;; This function uses a non-reentrant model
  6877 ;;
  6878                           
  6879     07C9                     _EUSART_SetOverrunErrorHandler:	
  6880                           ;psect for function _EUSART_SetOverrunErrorHandler
  6881                           
  6882     07C9                     l3610:	
  6883                           ;incstack = 0
  6884                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  6885                           
  6886                           
  6887                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  6888     07C9  0021               	movlb	1	; select bank1
  6889     07CA  0831               	movf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^(0+128),w
  6890     07CB  0020               	movlb	0	; select bank0
  6891     07CC  00CC               	movwf	_EUSART_OverrunErrorHandler+1
  6892     07CD  0021               	movlb	1	; select bank1
  6893     07CE  0830               	movf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128),w
  6894     07CF  0020               	movlb	0	; select bank0
  6895     07D0  00CB               	movwf	_EUSART_OverrunErrorHandler
  6896     07D1                     l160:
  6897     07D1  0008               	return
  6898     07D2                     __end_of_EUSART_SetOverrunErrorHandler:
  6899                           
  6900                           	psect	text30
  6901     07D2                     __ptext30:	
  6902 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  6903 ;; Defined at:
  6904 ;;		line 157 in file "mcc_generated_files/eusart.c"
  6905 ;; Parameters:    Size  Location     Type
  6906 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  6907 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  6908 ;; Auto vars:     Size  Location     Type
  6909 ;;		None
  6910 ;; Return value:  Size  Location     Type
  6911 ;;                  1    wreg      void 
  6912 ;; Registers used:
  6913 ;;		wreg
  6914 ;; Tracked objects:
  6915 ;;		On entry : 0/0
  6916 ;;		On exit  : 0/0
  6917 ;;		Unchanged: 0/0
  6918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6919 ;;      Params:         0       0       2       0       0       0
  6920 ;;      Locals:         0       0       0       0       0       0
  6921 ;;      Temps:          0       0       0       0       0       0
  6922 ;;      Totals:         0       0       2       0       0       0
  6923 ;;Total ram usage:        2 bytes
  6924 ;; Hardware stack levels used: 1
  6925 ;; Hardware stack levels required when called: 7
  6926 ;; This function calls:
  6927 ;;		Nothing
  6928 ;; This function is called by:
  6929 ;;		_EUSART_Initialize
  6930 ;; This function uses a non-reentrant model
  6931 ;;
  6932                           
  6933     07D2                     _EUSART_SetFramingErrorHandler:	
  6934                           ;psect for function _EUSART_SetFramingErrorHandler
  6935                           
  6936     07D2                     l3608:	
  6937                           ;incstack = 0
  6938                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  6939                           
  6940                           
  6941                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  6942     07D2  0021               	movlb	1	; select bank1
  6943     07D3  0831               	movf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^(0+128),w
  6944     07D4  0020               	movlb	0	; select bank0
  6945     07D5  00CE               	movwf	_EUSART_FramingErrorHandler+1
  6946     07D6  0021               	movlb	1	; select bank1
  6947     07D7  0830               	movf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128),w
  6948     07D8  0020               	movlb	0	; select bank0
  6949     07D9  00CD               	movwf	_EUSART_FramingErrorHandler
  6950     07DA                     l157:
  6951     07DA  0008               	return
  6952     07DB                     __end_of_EUSART_SetFramingErrorHandler:
  6953                           
  6954                           	psect	text31
  6955     0FDF                     __ptext31:	
  6956 ;; *************** function _EUSART_SetErrorHandler *****************
  6957 ;; Defined at:
  6958 ;;		line 165 in file "mcc_generated_files/eusart.c"
  6959 ;; Parameters:    Size  Location     Type
  6960 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  6961 ;;		 -> EUSART_DefaultErrorHandler(1), 
  6962 ;; Auto vars:     Size  Location     Type
  6963 ;;		None
  6964 ;; Return value:  Size  Location     Type
  6965 ;;                  1    wreg      void 
  6966 ;; Registers used:
  6967 ;;		wreg
  6968 ;; Tracked objects:
  6969 ;;		On entry : 0/0
  6970 ;;		On exit  : 0/0
  6971 ;;		Unchanged: 0/0
  6972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6973 ;;      Params:         0       0       2       0       0       0
  6974 ;;      Locals:         0       0       0       0       0       0
  6975 ;;      Temps:          0       0       0       0       0       0
  6976 ;;      Totals:         0       0       2       0       0       0
  6977 ;;Total ram usage:        2 bytes
  6978 ;; Hardware stack levels used: 1
  6979 ;; Hardware stack levels required when called: 7
  6980 ;; This function calls:
  6981 ;;		Nothing
  6982 ;; This function is called by:
  6983 ;;		_EUSART_Initialize
  6984 ;; This function uses a non-reentrant model
  6985 ;;
  6986                           
  6987     0FDF                     _EUSART_SetErrorHandler:	
  6988                           ;psect for function _EUSART_SetErrorHandler
  6989                           
  6990     0FDF                     l3612:	
  6991                           ;incstack = 0
  6992                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  6993                           
  6994                           
  6995                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  6996     0FDF  0021               	movlb	1	; select bank1
  6997     0FE0  0831               	movf	(EUSART_SetErrorHandler@interruptHandler+1)^(0+128),w
  6998     0FE1  00BB               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  6999     0FE2  0830               	movf	EUSART_SetErrorHandler@interruptHandler^(0+128),w
  7000     0FE3  00BA               	movwf	_EUSART_ErrorHandler^(0+128)
  7001     0FE4                     l163:
  7002     0FE4  0008               	return
  7003     0FE5                     __end_of_EUSART_SetErrorHandler:
  7004                           
  7005                           	psect	text32
  7006     0FD9                     __ptext32:	
  7007 ;; *************** function _DAC_Initialize *****************
  7008 ;; Defined at:
  7009 ;;		line 58 in file "mcc_generated_files/dac.c"
  7010 ;; Parameters:    Size  Location     Type
  7011 ;;		None
  7012 ;; Auto vars:     Size  Location     Type
  7013 ;;		None
  7014 ;; Return value:  Size  Location     Type
  7015 ;;                  1    wreg      void 
  7016 ;; Registers used:
  7017 ;;		wreg
  7018 ;; Tracked objects:
  7019 ;;		On entry : 0/0
  7020 ;;		On exit  : 0/0
  7021 ;;		Unchanged: 0/0
  7022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7023 ;;      Params:         0       0       0       0       0       0
  7024 ;;      Locals:         0       0       0       0       0       0
  7025 ;;      Temps:          0       0       0       0       0       0
  7026 ;;      Totals:         0       0       0       0       0       0
  7027 ;;Total ram usage:        0 bytes
  7028 ;; Hardware stack levels used: 1
  7029 ;; Hardware stack levels required when called: 7
  7030 ;; This function calls:
  7031 ;;		Nothing
  7032 ;; This function is called by:
  7033 ;;		_SYSTEM_Initialize
  7034 ;; This function uses a non-reentrant model
  7035 ;;
  7036                           
  7037     0FD9                     _DAC_Initialize:	
  7038                           ;psect for function _DAC_Initialize
  7039                           
  7040     0FD9                     l3736:	
  7041                           ;incstack = 0
  7042                           ; Regs used in _DAC_Initialize: [wreg]
  7043                           
  7044                           
  7045                           ;mcc_generated_files/dac.c: 61:     DACCON0 = 0x80;
  7046     0FD9  3080               	movlw	128
  7047     0FDA  0022               	movlb	2	; select bank2
  7048     0FDB  0098               	movwf	24	;volatile
  7049                           
  7050                           ;mcc_generated_files/dac.c: 63:     DACCON1 = 0x10;
  7051     0FDC  3010               	movlw	16
  7052     0FDD  0099               	movwf	25	;volatile
  7053     0FDE                     l600:
  7054     0FDE  0008               	return
  7055     0FDF                     __end_of_DAC_Initialize:
  7056                           
  7057                           	psect	text33
  7058     075A                     __ptext33:	
  7059 ;; *************** function _CMP2_Initialize *****************
  7060 ;; Defined at:
  7061 ;;		line 64 in file "mcc_generated_files/cmp2.c"
  7062 ;; Parameters:    Size  Location     Type
  7063 ;;		None
  7064 ;; Auto vars:     Size  Location     Type
  7065 ;;		None
  7066 ;; Return value:  Size  Location     Type
  7067 ;;                  1    wreg      void 
  7068 ;; Registers used:
  7069 ;;		wreg
  7070 ;; Tracked objects:
  7071 ;;		On entry : 0/0
  7072 ;;		On exit  : 0/0
  7073 ;;		Unchanged: 0/0
  7074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7075 ;;      Params:         0       0       0       0       0       0
  7076 ;;      Locals:         0       0       0       0       0       0
  7077 ;;      Temps:          0       0       0       0       0       0
  7078 ;;      Totals:         0       0       0       0       0       0
  7079 ;;Total ram usage:        0 bytes
  7080 ;; Hardware stack levels used: 1
  7081 ;; Hardware stack levels required when called: 7
  7082 ;; This function calls:
  7083 ;;		Nothing
  7084 ;; This function is called by:
  7085 ;;		_SYSTEM_Initialize
  7086 ;; This function uses a non-reentrant model
  7087 ;;
  7088                           
  7089     075A                     _CMP2_Initialize:	
  7090                           ;psect for function _CMP2_Initialize
  7091                           
  7092     075A                     l3726:	
  7093                           ;incstack = 0
  7094                           ; Regs used in _CMP2_Initialize: [wreg]
  7095                           
  7096                           
  7097                           ;mcc_generated_files/cmp2.c: 71:     PIE2bits.C2IE = 0;
  7098     075A  0021               	movlb	1	; select bank1
  7099     075B  1312               	bcf	18,6	;volatile
  7100     075C                     l3728:
  7101                           
  7102                           ;mcc_generated_files/cmp2.c: 74:     CM2CON0 = 0x84;
  7103     075C  3084               	movlw	132
  7104     075D  0022               	movlb	2	; select bank2
  7105     075E  0093               	movwf	19	;volatile
  7106                           
  7107                           ;mcc_generated_files/cmp2.c: 77:     CM2CON1 = 0x91;
  7108     075F  3091               	movlw	145
  7109     0760  0094               	movwf	20	;volatile
  7110     0761                     l3730:
  7111                           
  7112                           ;mcc_generated_files/cmp2.c: 80:     PIR2bits.C2IF = 0;
  7113     0761  0020               	movlb	0	; select bank0
  7114     0762  1312               	bcf	18,6	;volatile
  7115     0763                     l3732:
  7116                           
  7117                           ;mcc_generated_files/cmp2.c: 83:     PIE2bits.C2IE = 1;
  7118     0763  0021               	movlb	1	; select bank1
  7119     0764  1712               	bsf	18,6	;volatile
  7120     0765                     l583:
  7121     0765  0008               	return
  7122     0766                     __end_of_CMP2_Initialize:
  7123                           
  7124                           	psect	text34
  7125     0766                     __ptext34:	
  7126 ;; *************** function _CMP1_Initialize *****************
  7127 ;; Defined at:
  7128 ;;		line 64 in file "mcc_generated_files/cmp1.c"
  7129 ;; Parameters:    Size  Location     Type
  7130 ;;		None
  7131 ;; Auto vars:     Size  Location     Type
  7132 ;;		None
  7133 ;; Return value:  Size  Location     Type
  7134 ;;                  1    wreg      void 
  7135 ;; Registers used:
  7136 ;;		wreg
  7137 ;; Tracked objects:
  7138 ;;		On entry : 0/0
  7139 ;;		On exit  : 0/0
  7140 ;;		Unchanged: 0/0
  7141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7142 ;;      Params:         0       0       0       0       0       0
  7143 ;;      Locals:         0       0       0       0       0       0
  7144 ;;      Temps:          0       0       0       0       0       0
  7145 ;;      Totals:         0       0       0       0       0       0
  7146 ;;Total ram usage:        0 bytes
  7147 ;; Hardware stack levels used: 1
  7148 ;; Hardware stack levels required when called: 7
  7149 ;; This function calls:
  7150 ;;		Nothing
  7151 ;; This function is called by:
  7152 ;;		_SYSTEM_Initialize
  7153 ;; This function uses a non-reentrant model
  7154 ;;
  7155                           
  7156     0766                     _CMP1_Initialize:	
  7157                           ;psect for function _CMP1_Initialize
  7158                           
  7159     0766                     l3782:	
  7160                           ;incstack = 0
  7161                           ; Regs used in _CMP1_Initialize: [wreg]
  7162                           
  7163                           
  7164                           ;mcc_generated_files/cmp1.c: 71:     PIE2bits.C1IE = 0;
  7165     0766  0021               	movlb	1	; select bank1
  7166     0767  1292               	bcf	18,5	;volatile
  7167     0768                     l3784:
  7168                           
  7169                           ;mcc_generated_files/cmp1.c: 74:     CM1CON0 = 0x84;
  7170     0768  3084               	movlw	132
  7171     0769  0022               	movlb	2	; select bank2
  7172     076A  0091               	movwf	17	;volatile
  7173                           
  7174                           ;mcc_generated_files/cmp1.c: 77:     CM1CON1 = 0x90;
  7175     076B  3090               	movlw	144
  7176     076C  0092               	movwf	18	;volatile
  7177     076D                     l3786:
  7178                           
  7179                           ;mcc_generated_files/cmp1.c: 80:     PIR2bits.C1IF = 0;
  7180     076D  0020               	movlb	0	; select bank0
  7181     076E  1292               	bcf	18,5	;volatile
  7182     076F                     l3788:
  7183                           
  7184                           ;mcc_generated_files/cmp1.c: 83:     PIE2bits.C1IE = 1;
  7185     076F  0021               	movlb	1	; select bank1
  7186     0770  1692               	bsf	18,5	;volatile
  7187     0771                     l729:
  7188     0771  0008               	return
  7189     0772                     __end_of_CMP1_Initialize:
  7190                           
  7191                           	psect	text35
  7192     066D                     __ptext35:	
  7193 ;; *************** function _CCP4_Initialize *****************
  7194 ;; Defined at:
  7195 ;;		line 65 in file "mcc_generated_files/ccp4.c"
  7196 ;; Parameters:    Size  Location     Type
  7197 ;;		None
  7198 ;; Auto vars:     Size  Location     Type
  7199 ;;		None
  7200 ;; Return value:  Size  Location     Type
  7201 ;;                  1    wreg      void 
  7202 ;; Registers used:
  7203 ;;		wreg, status,2, status,0, pclath, cstack
  7204 ;; Tracked objects:
  7205 ;;		On entry : 0/0
  7206 ;;		On exit  : 0/0
  7207 ;;		Unchanged: 0/0
  7208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7209 ;;      Params:         0       0       0       0       0       0
  7210 ;;      Locals:         0       0       0       0       0       0
  7211 ;;      Temps:          0       0       0       0       0       0
  7212 ;;      Totals:         0       0       0       0       0       0
  7213 ;;Total ram usage:        0 bytes
  7214 ;; Hardware stack levels used: 1
  7215 ;; Hardware stack levels required when called: 8
  7216 ;; This function calls:
  7217 ;;		_CCP4_SetCallBack
  7218 ;; This function is called by:
  7219 ;;		_SYSTEM_Initialize
  7220 ;; This function uses a non-reentrant model
  7221 ;;
  7222                           
  7223     066D                     _CCP4_Initialize:	
  7224                           ;psect for function _CCP4_Initialize
  7225                           
  7226     066D                     l3706:	
  7227                           ;incstack = 0
  7228                           ; Regs used in _CCP4_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7229                           
  7230                           
  7231                           ;mcc_generated_files/ccp4.c: 70:  CCP4CON = 0x04;
  7232     066D  3004               	movlw	4
  7233     066E  0026               	movlb	6	; select bank6
  7234     066F  009A               	movwf	26	;volatile
  7235     0670                     l3708:
  7236                           
  7237                           ;mcc_generated_files/ccp4.c: 73:  CCPR4L = 0x00;
  7238     0670  0198               	clrf	24	;volatile
  7239     0671                     l3710:
  7240                           
  7241                           ;mcc_generated_files/ccp4.c: 76:  CCPR4H = 0x00;
  7242     0671  0199               	clrf	25	;volatile
  7243     0672                     l3712:
  7244                           
  7245                           ;mcc_generated_files/ccp4.c: 79:     CCP4_SetCallBack(CCP4_DefaultCallBack);
  7246     0672  30A8               	movlw	low _CCP4_DefaultCallBack
  7247     0673  0021               	movlb	1	; select bank1
  7248     0674  00B0               	movwf	CCP4_SetCallBack@customCallBack^(0+128)
  7249     0675  300F               	movlw	high _CCP4_DefaultCallBack
  7250     0676  00B1               	movwf	(CCP4_SetCallBack@customCallBack^(0+128)+1)
  7251     0677  3187  27DB  3186   	fcall	_CCP4_SetCallBack
  7252     067A                     l3714:
  7253                           
  7254                           ;mcc_generated_files/ccp4.c: 83:     PIR3bits.CCP4IF = 0;
  7255     067A  0020               	movlb	0	; select bank0
  7256     067B  1293               	bcf	19,5	;volatile
  7257     067C                     l3716:
  7258                           
  7259                           ;mcc_generated_files/ccp4.c: 86:     PIE3bits.CCP4IE = 1;
  7260     067C  0021               	movlb	1	; select bank1
  7261     067D  1693               	bsf	19,5	;volatile
  7262     067E                     l302:
  7263     067E  0008               	return
  7264     067F                     __end_of_CCP4_Initialize:
  7265                           
  7266                           	psect	text36
  7267     07DB                     __ptext36:	
  7268 ;; *************** function _CCP4_SetCallBack *****************
  7269 ;; Defined at:
  7270 ;;		line 104 in file "mcc_generated_files/ccp4.c"
  7271 ;; Parameters:    Size  Location     Type
  7272 ;;  customCallBa    2    0[BANK1 ] PTR FTN(unsigned short ,
  7273 ;;		 -> CCP4_Interrupt(1), CCP4_DefaultCallBack(1), 
  7274 ;; Auto vars:     Size  Location     Type
  7275 ;;		None
  7276 ;; Return value:  Size  Location     Type
  7277 ;;                  1    wreg      void 
  7278 ;; Registers used:
  7279 ;;		wreg
  7280 ;; Tracked objects:
  7281 ;;		On entry : 0/0
  7282 ;;		On exit  : 0/0
  7283 ;;		Unchanged: 0/0
  7284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7285 ;;      Params:         0       0       2       0       0       0
  7286 ;;      Locals:         0       0       0       0       0       0
  7287 ;;      Temps:          0       0       0       0       0       0
  7288 ;;      Totals:         0       0       2       0       0       0
  7289 ;;Total ram usage:        2 bytes
  7290 ;; Hardware stack levels used: 1
  7291 ;; Hardware stack levels required when called: 7
  7292 ;; This function calls:
  7293 ;;		Nothing
  7294 ;; This function is called by:
  7295 ;;		_CCP4_Initialize
  7296 ;;		_main
  7297 ;; This function uses a non-reentrant model
  7298 ;;
  7299                           
  7300     07DB                     _CCP4_SetCallBack:	
  7301                           ;psect for function _CCP4_SetCallBack
  7302                           
  7303     07DB                     l3618:	
  7304                           ;incstack = 0
  7305                           ; Regs used in _CCP4_SetCallBack: [wreg]
  7306                           
  7307                           
  7308                           ;mcc_generated_files/ccp4.c: 105:     CCP4_CallBack = customCallBack;
  7309     07DB  0021               	movlb	1	; select bank1
  7310     07DC  0831               	movf	(CCP4_SetCallBack@customCallBack+1)^(0+128),w
  7311     07DD  0020               	movlb	0	; select bank0
  7312     07DE  00C6               	movwf	_CCP4_CallBack+1
  7313     07DF  0021               	movlb	1	; select bank1
  7314     07E0  0830               	movf	CCP4_SetCallBack@customCallBack^(0+128),w
  7315     07E1  0020               	movlb	0	; select bank0
  7316     07E2  00C5               	movwf	_CCP4_CallBack
  7317     07E3                     l308:
  7318     07E3  0008               	return
  7319     07E4                     __end_of_CCP4_SetCallBack:
  7320                           
  7321                           	psect	text37
  7322     0FF8                     __ptext37:	
  7323 ;; *************** function _ADC_Initialize *****************
  7324 ;; Defined at:
  7325 ;;		line 67 in file "mcc_generated_files/adc.c"
  7326 ;; Parameters:    Size  Location     Type
  7327 ;;		None
  7328 ;; Auto vars:     Size  Location     Type
  7329 ;;		None
  7330 ;; Return value:  Size  Location     Type
  7331 ;;                  1    wreg      void 
  7332 ;; Registers used:
  7333 ;;		wreg, status,2
  7334 ;; Tracked objects:
  7335 ;;		On entry : 0/0
  7336 ;;		On exit  : 0/0
  7337 ;;		Unchanged: 0/0
  7338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7339 ;;      Params:         0       0       0       0       0       0
  7340 ;;      Locals:         0       0       0       0       0       0
  7341 ;;      Temps:          0       0       0       0       0       0
  7342 ;;      Totals:         0       0       0       0       0       0
  7343 ;;Total ram usage:        0 bytes
  7344 ;; Hardware stack levels used: 1
  7345 ;; Hardware stack levels required when called: 7
  7346 ;; This function calls:
  7347 ;;		Nothing
  7348 ;; This function is called by:
  7349 ;;		_SYSTEM_Initialize
  7350 ;; This function uses a non-reentrant model
  7351 ;;
  7352                           
  7353     0FF8                     _ADC_Initialize:	
  7354                           ;psect for function _ADC_Initialize
  7355                           
  7356     0FF8                     l3790:	
  7357                           ;incstack = 0
  7358                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  7359                           
  7360                           
  7361                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0x93;
  7362     0FF8  3093               	movlw	147
  7363     0FF9  0021               	movlb	1	; select bank1
  7364     0FFA  009E               	movwf	30	;volatile
  7365     0FFB                     l3792:
  7366                           
  7367                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  7368     0FFB  019B               	clrf	27	;volatile
  7369     0FFC                     l3794:
  7370                           
  7371                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  7372     0FFC  019C               	clrf	28	;volatile
  7373                           
  7374                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x01;
  7375     0FFD  3001               	movlw	1
  7376     0FFE  009D               	movwf	29	;volatile
  7377     0FFF                     l497:
  7378     0FFF  0008               	return
  7379     1000                     __end_of_ADC_Initialize:
  7380                           
  7381                           	psect	text38
  7382     0FD4                     __ptext38:	
  7383 ;; *************** function _EUSART_is_rx_ready *****************
  7384 ;; Defined at:
  7385 ;;		line 99 in file "mcc_generated_files/eusart.c"
  7386 ;; Parameters:    Size  Location     Type
  7387 ;;		None
  7388 ;; Auto vars:     Size  Location     Type
  7389 ;;		None
  7390 ;; Return value:  Size  Location     Type
  7391 ;;                  1    wreg      _Bool 
  7392 ;; Registers used:
  7393 ;;		wreg, status,2, status,0
  7394 ;; Tracked objects:
  7395 ;;		On entry : 0/0
  7396 ;;		On exit  : 0/0
  7397 ;;		Unchanged: 0/0
  7398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7399 ;;      Params:         0       0       0       0       0       0
  7400 ;;      Locals:         0       0       0       0       0       0
  7401 ;;      Temps:          0       0       0       0       0       0
  7402 ;;      Totals:         0       0       0       0       0       0
  7403 ;;Total ram usage:        0 bytes
  7404 ;; Hardware stack levels used: 1
  7405 ;; Hardware stack levels required when called: 7
  7406 ;; This function calls:
  7407 ;;		Nothing
  7408 ;; This function is called by:
  7409 ;;		_main
  7410 ;; This function uses a non-reentrant model
  7411 ;;
  7412                           
  7413     0FD4                     _EUSART_is_rx_ready:	
  7414                           ;psect for function _EUSART_is_rx_ready
  7415                           
  7416     0FD4                     l3856:	
  7417                           ;incstack = 0
  7418                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
  7419                           
  7420                           
  7421                           ;mcc_generated_files/eusart.c: 101:     return (_Bool)(PIR1bits.RCIF);
  7422     0FD4  0020               	movlb	0	; select bank0
  7423     0FD5  0E11               	swapf	17,w	;volatile
  7424     0FD6  0C89               	rrf	9,f
  7425     0FD7  3901               	andlw	1
  7426     0FD8                     l126:
  7427     0FD8  0008               	return
  7428     0FD9                     __end_of_EUSART_is_rx_ready:
  7429                           
  7430                           	psect	text39
  7431     06C2                     __ptext39:	
  7432 ;; *************** function _EUSART_Read *****************
  7433 ;; Defined at:
  7434 ;;		line 113 in file "mcc_generated_files/eusart.c"
  7435 ;; Parameters:    Size  Location     Type
  7436 ;;		None
  7437 ;; Auto vars:     Size  Location     Type
  7438 ;;		None
  7439 ;; Return value:  Size  Location     Type
  7440 ;;                  1    wreg      unsigned char 
  7441 ;; Registers used:
  7442 ;;		wreg, status,2
  7443 ;; Tracked objects:
  7444 ;;		On entry : 0/0
  7445 ;;		On exit  : 0/0
  7446 ;;		Unchanged: 0/0
  7447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7448 ;;      Params:         0       0       0       0       0       0
  7449 ;;      Locals:         0       0       0       0       0       0
  7450 ;;      Temps:          0       0       0       0       0       0
  7451 ;;      Totals:         0       0       0       0       0       0
  7452 ;;Total ram usage:        0 bytes
  7453 ;; Hardware stack levels used: 1
  7454 ;; Hardware stack levels required when called: 7
  7455 ;; This function calls:
  7456 ;;		Nothing
  7457 ;; This function is called by:
  7458 ;;		_main
  7459 ;; This function uses a non-reentrant model
  7460 ;;
  7461                           
  7462     06C2                     _EUSART_Read:	
  7463                           ;psect for function _EUSART_Read
  7464                           
  7465     06C2                     l3860:	
  7466                           ;incstack = 0
  7467                           ; Regs used in _EUSART_Read: [wreg+status,2]
  7468                           
  7469     06C2                     l135:	
  7470                           ;mcc_generated_files/eusart.c: 116:     {;mcc_generated_files/eusart.c: 117:     }
  7471                           
  7472                           
  7473                           ;mcc_generated_files/eusart.c: 115:     while(!PIR1bits.RCIF)
  7474     06C2  0020               	movlb	0	; select bank0
  7475     06C3  1E91               	btfss	17,5	;volatile
  7476     06C4  2EC6               	goto	u2271
  7477     06C5  2EC7               	goto	u2270
  7478     06C6                     u2271:
  7479     06C6  2EC2               	goto	l135
  7480     06C7                     u2270:
  7481     06C7                     l3862:
  7482                           
  7483                           ;mcc_generated_files/eusart.c: 119:     eusartRxLastError.status = 0;
  7484     06C7  01B7               	clrf	_eusartRxLastError	;volatile
  7485     06C8                     l3864:
  7486                           
  7487                           ;mcc_generated_files/eusart.c: 121:     if(1 == RCSTAbits.OERR)
  7488     06C8  0023               	movlb	3	; select bank3
  7489     06C9  1C9D               	btfss	29,1	;volatile
  7490     06CA  2ECC               	goto	u2281
  7491     06CB  2ECD               	goto	u2280
  7492     06CC                     u2281:
  7493     06CC  2ECF               	goto	l3868
  7494     06CD                     u2280:
  7495     06CD                     l3866:
  7496                           
  7497                           ;mcc_generated_files/eusart.c: 122:     {;mcc_generated_files/eusart.c: 125:         RCS
      +                          TAbits.CREN = 0;
  7498     06CD  121D               	bcf	29,4	;volatile
  7499                           
  7500                           ;mcc_generated_files/eusart.c: 126:         RCSTAbits.CREN = 1;
  7501     06CE  161D               	bsf	29,4	;volatile
  7502     06CF                     l3868:
  7503                           
  7504                           ;mcc_generated_files/eusart.c: 129:     return RCREG;
  7505     06CF  0819               	movf	25,w	;volatile
  7506     06D0                     l139:
  7507     06D0  0008               	return
  7508     06D1                     __end_of_EUSART_Read:
  7509                           
  7510                           	psect	text40
  7511     07E4                     __ptext40:	
  7512 ;; *************** function _CMP2_SetInterruptHandler *****************
  7513 ;; Defined at:
  7514 ;;		line 105 in file "mcc_generated_files/cmp2.c"
  7515 ;; Parameters:    Size  Location     Type
  7516 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  7517 ;;		 -> S4_Interrupt(1), 
  7518 ;; Auto vars:     Size  Location     Type
  7519 ;;		None
  7520 ;; Return value:  Size  Location     Type
  7521 ;;                  1    wreg      void 
  7522 ;; Registers used:
  7523 ;;		wreg
  7524 ;; Tracked objects:
  7525 ;;		On entry : 0/0
  7526 ;;		On exit  : 0/0
  7527 ;;		Unchanged: 0/0
  7528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7529 ;;      Params:         0       0       2       0       0       0
  7530 ;;      Locals:         0       0       0       0       0       0
  7531 ;;      Temps:          0       0       0       0       0       0
  7532 ;;      Totals:         0       0       2       0       0       0
  7533 ;;Total ram usage:        2 bytes
  7534 ;; Hardware stack levels used: 1
  7535 ;; Hardware stack levels required when called: 7
  7536 ;; This function calls:
  7537 ;;		Nothing
  7538 ;; This function is called by:
  7539 ;;		_main
  7540 ;; This function uses a non-reentrant model
  7541 ;;
  7542                           
  7543     07E4                     _CMP2_SetInterruptHandler:	
  7544                           ;psect for function _CMP2_SetInterruptHandler
  7545                           
  7546     07E4                     l3874:	
  7547                           ;incstack = 0
  7548                           ; Regs used in _CMP2_SetInterruptHandler: [wreg]
  7549                           
  7550                           
  7551                           ;mcc_generated_files/cmp2.c: 106:     CMP2_InterruptHandler = InterruptHandler;
  7552     07E4  0021               	movlb	1	; select bank1
  7553     07E5  0831               	movf	(CMP2_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  7554     07E6  0020               	movlb	0	; select bank0
  7555     07E7  00C0               	movwf	_CMP2_InterruptHandler+1
  7556     07E8  0021               	movlb	1	; select bank1
  7557     07E9  0830               	movf	CMP2_SetInterruptHandler@InterruptHandler^(0+128),w
  7558     07EA  0020               	movlb	0	; select bank0
  7559     07EB  00BF               	movwf	_CMP2_InterruptHandler
  7560     07EC                     l593:
  7561     07EC  0008               	return
  7562     07ED                     __end_of_CMP2_SetInterruptHandler:
  7563                           
  7564                           	psect	text41
  7565     07ED                     __ptext41:	
  7566 ;; *************** function _CMP1_SetInterruptHandler *****************
  7567 ;; Defined at:
  7568 ;;		line 105 in file "mcc_generated_files/cmp1.c"
  7569 ;; Parameters:    Size  Location     Type
  7570 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  7571 ;;		 -> S3_Interrupt(1), 
  7572 ;; Auto vars:     Size  Location     Type
  7573 ;;		None
  7574 ;; Return value:  Size  Location     Type
  7575 ;;                  1    wreg      void 
  7576 ;; Registers used:
  7577 ;;		wreg
  7578 ;; Tracked objects:
  7579 ;;		On entry : 0/0
  7580 ;;		On exit  : 0/0
  7581 ;;		Unchanged: 0/0
  7582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7583 ;;      Params:         0       0       2       0       0       0
  7584 ;;      Locals:         0       0       0       0       0       0
  7585 ;;      Temps:          0       0       0       0       0       0
  7586 ;;      Totals:         0       0       2       0       0       0
  7587 ;;Total ram usage:        2 bytes
  7588 ;; Hardware stack levels used: 1
  7589 ;; Hardware stack levels required when called: 7
  7590 ;; This function calls:
  7591 ;;		Nothing
  7592 ;; This function is called by:
  7593 ;;		_main
  7594 ;; This function uses a non-reentrant model
  7595 ;;
  7596                           
  7597     07ED                     _CMP1_SetInterruptHandler:	
  7598                           ;psect for function _CMP1_SetInterruptHandler
  7599                           
  7600     07ED                     l3876:	
  7601                           ;incstack = 0
  7602                           ; Regs used in _CMP1_SetInterruptHandler: [wreg]
  7603                           
  7604                           
  7605                           ;mcc_generated_files/cmp1.c: 106:     CMP1_InterruptHandler = InterruptHandler;
  7606     07ED  0021               	movlb	1	; select bank1
  7607     07EE  0831               	movf	(CMP1_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  7608     07EF  0020               	movlb	0	; select bank0
  7609     07F0  00BA               	movwf	_CMP1_InterruptHandler+1
  7610     07F1  0021               	movlb	1	; select bank1
  7611     07F2  0830               	movf	CMP1_SetInterruptHandler@InterruptHandler^(0+128),w
  7612     07F3  0020               	movlb	0	; select bank0
  7613     07F4  00B9               	movwf	_CMP1_InterruptHandler
  7614     07F5                     l739:
  7615     07F5  0008               	return
  7616     07F6                     __end_of_CMP1_SetInterruptHandler:
  7617                           
  7618                           	psect	intentry
  7619     0004                     __pintentry:	
  7620 ;; *************** function _INTERRUPT_InterruptManager *****************
  7621 ;; Defined at:
  7622 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  7623 ;; Parameters:    Size  Location     Type
  7624 ;;		None
  7625 ;; Auto vars:     Size  Location     Type
  7626 ;;		None
  7627 ;; Return value:  Size  Location     Type
  7628 ;;                  1    wreg      void 
  7629 ;; Registers used:
  7630 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7631 ;; Tracked objects:
  7632 ;;		On entry : 0/0
  7633 ;;		On exit  : 0/0
  7634 ;;		Unchanged: 0/0
  7635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7636 ;;      Params:         0       0       0       0       0       0
  7637 ;;      Locals:         0       0       0       0       0       0
  7638 ;;      Temps:          0       0       0       0       0       0
  7639 ;;      Totals:         0       0       0       0       0       0
  7640 ;;Total ram usage:        0 bytes
  7641 ;; Hardware stack levels used: 1
  7642 ;; Hardware stack levels required when called: 6
  7643 ;; This function calls:
  7644 ;;		_CCP4_CaptureISR
  7645 ;;		_CMP1_ISR
  7646 ;;		_CMP2_ISR
  7647 ;;		_PIN_MANAGER_IOC
  7648 ;;		_TMR0_ISR
  7649 ;;		_TMR4_ISR
  7650 ;;		_TMR6_ISR
  7651 ;; This function is called by:
  7652 ;;		Interrupt level 1
  7653 ;; This function uses a non-reentrant model
  7654 ;;
  7655                           
  7656     0004                     _INTERRUPT_InterruptManager:
  7657                           
  7658                           ;incstack = 0
  7659     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  7660                           
  7661                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7662     0005  3180               	pagesel	$
  7663     0006                     i1l3488:
  7664                           
  7665                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.IOCIE == 1 && INTCONbits
      +                          .IOCIF == 1)
  7666     0006  1D8B               	btfss	11,3	;volatile
  7667     0007  2809               	goto	u199_21
  7668     0008  280A               	goto	u199_20
  7669     0009                     u199_21:
  7670     0009  2812               	goto	i1l192
  7671     000A                     u199_20:
  7672     000A                     i1l3490:
  7673     000A  1C0B               	btfss	11,0	;volatile
  7674     000B  280D               	goto	u200_21
  7675     000C  280E               	goto	u200_20
  7676     000D                     u200_21:
  7677     000D  2812               	goto	i1l192
  7678     000E                     u200_20:
  7679     000E                     i1l3492:
  7680                           
  7681                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
  7682     000E  3186  2691  3180   	fcall	_PIN_MANAGER_IOC
  7683                           
  7684                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  7685     0011  2868               	goto	i1l208
  7686     0012                     i1l192:	
  7687                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.TMR0IE == 1 && INTC
      +                          ONbits.TMR0IF == 1)
  7688                           
  7689     0012  1E8B               	btfss	11,5	;volatile
  7690     0013  2815               	goto	u201_21
  7691     0014  2816               	goto	u201_20
  7692     0015                     u201_21:
  7693     0015  281E               	goto	i1l194
  7694     0016                     u201_20:
  7695     0016                     i1l3494:
  7696     0016  1D0B               	btfss	11,2	;volatile
  7697     0017  2819               	goto	u202_21
  7698     0018  281A               	goto	u202_20
  7699     0019                     u202_21:
  7700     0019  281E               	goto	i1l194
  7701     001A                     u202_20:
  7702     001A                     i1l3496:
  7703                           
  7704                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         TMR0_ISR();
  7705     001A  3185  25D7  3180   	fcall	_TMR0_ISR
  7706                           
  7707                           ;mcc_generated_files/interrupt_manager.c: 62:     }
  7708     001D  2868               	goto	i1l208
  7709     001E                     i1l194:	
  7710                           ;mcc_generated_files/interrupt_manager.c: 63:     else if(INTCONbits.PEIE == 1)
  7711                           
  7712     001E  1F0B               	btfss	11,6	;volatile
  7713     001F  2821               	goto	u203_21
  7714     0020  2822               	goto	u203_20
  7715     0021                     u203_21:
  7716     0021  2868               	goto	i1l202
  7717     0022                     u203_20:
  7718     0022                     i1l3498:
  7719                           
  7720                           ;mcc_generated_files/interrupt_manager.c: 64:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 65:         if(PIE3bits.TMR4IE == 1 && PIR3bits.TMR4IF == 1)
  7721     0022  0021               	movlb	1	; select bank1
  7722     0023  1C93               	btfss	19,1	;volatile
  7723     0024  2826               	goto	u204_21
  7724     0025  2827               	goto	u204_20
  7725     0026                     u204_21:
  7726     0026  2830               	goto	i1l197
  7727     0027                     u204_20:
  7728     0027                     i1l3500:
  7729     0027  0020               	movlb	0	; select bank0
  7730     0028  1C93               	btfss	19,1	;volatile
  7731     0029  282B               	goto	u205_21
  7732     002A  282C               	goto	u205_20
  7733     002B                     u205_21:
  7734     002B  2830               	goto	i1l197
  7735     002C                     u205_20:
  7736     002C                     i1l3502:
  7737                           
  7738                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             TMR4_ISR();
  7739     002C  3186  261C  3180   	fcall	_TMR4_ISR
  7740                           
  7741                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  7742     002F  2868               	goto	i1l208
  7743     0030                     i1l197:	
  7744                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE2bits.C2IE == 1 && PIR2
      +                          bits.C2IF == 1)
  7745                           
  7746     0030  0021               	movlb	1	; select bank1
  7747     0031  1F12               	btfss	18,6	;volatile
  7748     0032  2834               	goto	u206_21
  7749     0033  2835               	goto	u206_20
  7750     0034                     u206_21:
  7751     0034  283E               	goto	i1l199
  7752     0035                     u206_20:
  7753     0035                     i1l3504:
  7754     0035  0020               	movlb	0	; select bank0
  7755     0036  1F12               	btfss	18,6	;volatile
  7756     0037  2839               	goto	u207_21
  7757     0038  283A               	goto	u207_20
  7758     0039                     u207_21:
  7759     0039  283E               	goto	i1l199
  7760     003A                     u207_20:
  7761     003A                     i1l3506:
  7762                           
  7763                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             CMP2_ISR();
  7764     003A  3186  26FE  3180   	fcall	_CMP2_ISR
  7765                           
  7766                           ;mcc_generated_files/interrupt_manager.c: 72:         }
  7767     003D  2868               	goto	i1l208
  7768     003E                     i1l199:	
  7769                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE2bits.C1IE == 1 && PIR2
      +                          bits.C1IF == 1)
  7770                           
  7771     003E  0021               	movlb	1	; select bank1
  7772     003F  1E92               	btfss	18,5	;volatile
  7773     0040  2842               	goto	u208_21
  7774     0041  2843               	goto	u208_20
  7775     0042                     u208_21:
  7776     0042  284C               	goto	i1l201
  7777     0043                     u208_20:
  7778     0043                     i1l3508:
  7779     0043  0020               	movlb	0	; select bank0
  7780     0044  1E92               	btfss	18,5	;volatile
  7781     0045  2847               	goto	u209_21
  7782     0046  2848               	goto	u209_20
  7783     0047                     u209_21:
  7784     0047  284C               	goto	i1l201
  7785     0048                     u209_20:
  7786     0048                     i1l3510:
  7787                           
  7788                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             CMP1_ISR();
  7789     0048  3187  270C  3180   	fcall	_CMP1_ISR
  7790                           
  7791                           ;mcc_generated_files/interrupt_manager.c: 76:         }
  7792     004B  2868               	goto	i1l208
  7793     004C                     i1l201:	
  7794                           ;mcc_generated_files/interrupt_manager.c: 77:         else if(PIE3bits.CCP4IE == 1 && PI
      +                          R3bits.CCP4IF == 1)
  7795                           
  7796     004C  0021               	movlb	1	; select bank1
  7797     004D  1E93               	btfss	19,5	;volatile
  7798     004E  2850               	goto	u210_21
  7799     004F  2851               	goto	u210_20
  7800     0050                     u210_21:
  7801     0050  285A               	goto	i1l203
  7802     0051                     u210_20:
  7803     0051                     i1l3512:
  7804     0051  0020               	movlb	0	; select bank0
  7805     0052  1E93               	btfss	19,5	;volatile
  7806     0053  2855               	goto	u211_21
  7807     0054  2856               	goto	u211_20
  7808     0055                     u211_21:
  7809     0055  285A               	goto	i1l203
  7810     0056                     u211_20:
  7811     0056                     i1l3514:
  7812                           
  7813                           ;mcc_generated_files/interrupt_manager.c: 78:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 79:             CCP4_CaptureISR();
  7814     0056  3186  267F  3180   	fcall	_CCP4_CaptureISR
  7815                           
  7816                           ;mcc_generated_files/interrupt_manager.c: 80:         }
  7817     0059  2868               	goto	i1l208
  7818     005A                     i1l203:	
  7819                           ;mcc_generated_files/interrupt_manager.c: 81:         else if(PIE3bits.TMR6IE == 1 && PI
      +                          R3bits.TMR6IF == 1)
  7820                           
  7821     005A  0021               	movlb	1	; select bank1
  7822     005B  1D93               	btfss	19,3	;volatile
  7823     005C  285E               	goto	u212_21
  7824     005D  285F               	goto	u212_20
  7825     005E                     u212_21:
  7826     005E  2868               	goto	i1l202
  7827     005F                     u212_20:
  7828     005F                     i1l3516:
  7829     005F  0020               	movlb	0	; select bank0
  7830     0060  1D93               	btfss	19,3	;volatile
  7831     0061  2863               	goto	u213_21
  7832     0062  2864               	goto	u213_20
  7833     0063                     u213_21:
  7834     0063  2868               	goto	i1l202
  7835     0064                     u213_20:
  7836     0064                     i1l3518:
  7837                           
  7838                           ;mcc_generated_files/interrupt_manager.c: 82:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 83:             TMR6_ISR();
  7839     0064  3186  2606  3180   	fcall	_TMR6_ISR
  7840                           
  7841                           ;mcc_generated_files/interrupt_manager.c: 84:         }
  7842     0067  2868               	goto	i1l208
  7843     0068                     i1l202:
  7844     0068                     i1l208:
  7845     0068  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  7846     0069  0009               	retfie
  7847     006A                     __end_of_INTERRUPT_InterruptManager:
  7848                           
  7849                           	psect	text43
  7850     0606                     __ptext43:	
  7851 ;; *************** function _TMR6_ISR *****************
  7852 ;; Defined at:
  7853 ;;		line 119 in file "mcc_generated_files/tmr6.c"
  7854 ;; Parameters:    Size  Location     Type
  7855 ;;		None
  7856 ;; Auto vars:     Size  Location     Type
  7857 ;;		None
  7858 ;; Return value:  Size  Location     Type
  7859 ;;                  1    wreg      void 
  7860 ;; Registers used:
  7861 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7862 ;; Tracked objects:
  7863 ;;		On entry : 0/0
  7864 ;;		On exit  : 0/0
  7865 ;;		Unchanged: 0/0
  7866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7867 ;;      Params:         0       0       0       0       0       0
  7868 ;;      Locals:         0       0       0       0       0       0
  7869 ;;      Temps:          0       0       0       0       0       0
  7870 ;;      Totals:         0       0       0       0       0       0
  7871 ;;Total ram usage:        0 bytes
  7872 ;; Hardware stack levels used: 1
  7873 ;; Hardware stack levels required when called: 5
  7874 ;; This function calls:
  7875 ;;		_TMR6_CallBack
  7876 ;; This function is called by:
  7877 ;;		_INTERRUPT_InterruptManager
  7878 ;; This function uses a non-reentrant model
  7879 ;;
  7880                           
  7881     0606                     _TMR6_ISR:	
  7882                           ;psect for function _TMR6_ISR
  7883                           
  7884     0606                     i1l3412:	
  7885                           ;incstack = 0
  7886                           ; Regs used in _TMR6_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7887                           
  7888                           
  7889                           ;mcc_generated_files/tmr6.c: 121:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr6.c: 124:     PIR3bits.TMR6IF = 0;
  7890     0606  0020               	movlb	0	; select bank0
  7891     0607  1193               	bcf	19,3	;volatile
  7892     0608                     i1l3414:
  7893                           
  7894                           ;mcc_generated_files/tmr6.c: 127:     if (++CountCallBack >= 400)
  7895     0608  3001               	movlw	1
  7896     0609  07AE               	addwf	TMR6_ISR@CountCallBack,f	;volatile
  7897     060A  3000               	movlw	0
  7898     060B  3DAF               	addwfc	TMR6_ISR@CountCallBack+1,f	;volatile
  7899     060C  3001               	movlw	1
  7900     060D  022F               	subwf	TMR6_ISR@CountCallBack+1,w	;volatile
  7901     060E  3090               	movlw	144
  7902     060F  1903               	skipnz
  7903     0610  022E               	subwf	TMR6_ISR@CountCallBack,w	;volatile
  7904     0611  1C03               	skipc
  7905     0612  2E14               	goto	u191_21
  7906     0613  2E15               	goto	u191_20
  7907     0614                     u191_21:
  7908     0614  2E1B               	goto	i1l650
  7909     0615                     u191_20:
  7910     0615                     i1l3416:
  7911                           
  7912                           ;mcc_generated_files/tmr6.c: 128:     {;mcc_generated_files/tmr6.c: 130:         TMR6_Ca
      +                          llBack();
  7913     0615  3187  2727  3186   	fcall	_TMR6_CallBack
  7914     0618                     i1l3418:
  7915                           
  7916                           ;mcc_generated_files/tmr6.c: 133:         CountCallBack = 0;
  7917     0618  0020               	movlb	0	; select bank0
  7918     0619  01AE               	clrf	TMR6_ISR@CountCallBack	;volatile
  7919     061A  01AF               	clrf	TMR6_ISR@CountCallBack+1	;volatile
  7920     061B                     i1l650:
  7921     061B  0008               	return
  7922     061C                     __end_of_TMR6_ISR:
  7923                           
  7924                           	psect	text44
  7925     0727                     __ptext44:	
  7926 ;; *************** function _TMR6_CallBack *****************
  7927 ;; Defined at:
  7928 ;;		line 137 in file "mcc_generated_files/tmr6.c"
  7929 ;; Parameters:    Size  Location     Type
  7930 ;;		None
  7931 ;; Auto vars:     Size  Location     Type
  7932 ;;		None
  7933 ;; Return value:  Size  Location     Type
  7934 ;;                  1    wreg      void 
  7935 ;; Registers used:
  7936 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7937 ;; Tracked objects:
  7938 ;;		On entry : 0/0
  7939 ;;		On exit  : 0/0
  7940 ;;		Unchanged: 0/0
  7941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7942 ;;      Params:         0       0       0       0       0       0
  7943 ;;      Locals:         0       0       0       0       0       0
  7944 ;;      Temps:          0       0       0       0       0       0
  7945 ;;      Totals:         0       0       0       0       0       0
  7946 ;;Total ram usage:        0 bytes
  7947 ;; Hardware stack levels used: 1
  7948 ;; Hardware stack levels required when called: 4
  7949 ;; This function calls:
  7950 ;;		Absolute function
  7951 ;;		_TMR6_DefaultInterruptHandler
  7952 ;;		_TMR6_Interrupt
  7953 ;; This function is called by:
  7954 ;;		_TMR6_ISR
  7955 ;; This function uses a non-reentrant model
  7956 ;;
  7957                           
  7958     0727                     _TMR6_CallBack:	
  7959                           ;psect for function _TMR6_CallBack
  7960                           
  7961     0727                     i1l3248:	
  7962                           ;incstack = 0
  7963                           ; Regs used in _TMR6_CallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7964                           
  7965                           
  7966                           ;mcc_generated_files/tmr6.c: 141:     if(TMR6_InterruptHandler)
  7967     0727  0020               	movlb	0	; select bank0
  7968     0728  083D               	movf	_TMR6_InterruptHandler,w
  7969     0729  043E               	iorwf	_TMR6_InterruptHandler+1,w
  7970     072A  1903               	btfsc	3,2
  7971     072B  2F2D               	goto	u166_21
  7972     072C  2F2E               	goto	u166_20
  7973     072D                     u166_21:
  7974     072D  2F33               	goto	i1l654
  7975     072E                     u166_20:
  7976     072E                     i1l3250:
  7977                           
  7978                           ;mcc_generated_files/tmr6.c: 142:     {;mcc_generated_files/tmr6.c: 143:         TMR6_In
      +                          terruptHandler();
  7979     072E  083E               	movf	_TMR6_InterruptHandler+1,w
  7980     072F  008A               	movwf	10
  7981     0730  083D               	movf	_TMR6_InterruptHandler,w
  7982     0731  000A               	callw
  7983     0732  3187               	pagesel	$
  7984     0733                     i1l654:
  7985     0733  0008               	return
  7986     0734                     __end_of_TMR6_CallBack:
  7987                           
  7988                           	psect	text45
  7989     0003                     __ptext45:	
  7990 ;; *************** function _TMR6_DefaultInterruptHandler *****************
  7991 ;; Defined at:
  7992 ;;		line 151 in file "mcc_generated_files/tmr6.c"
  7993 ;; Parameters:    Size  Location     Type
  7994 ;;		None
  7995 ;; Auto vars:     Size  Location     Type
  7996 ;;		None
  7997 ;; Return value:  Size  Location     Type
  7998 ;;                  1    wreg      void 
  7999 ;; Registers used:
  8000 ;;		None
  8001 ;; Tracked objects:
  8002 ;;		On entry : 0/0
  8003 ;;		On exit  : 0/0
  8004 ;;		Unchanged: 0/0
  8005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8006 ;;      Params:         0       0       0       0       0       0
  8007 ;;      Locals:         0       0       0       0       0       0
  8008 ;;      Temps:          0       0       0       0       0       0
  8009 ;;      Totals:         0       0       0       0       0       0
  8010 ;;Total ram usage:        0 bytes
  8011 ;; Hardware stack levels used: 1
  8012 ;; This function calls:
  8013 ;;		Nothing
  8014 ;; This function is called by:
  8015 ;;		_TMR6_Initialize
  8016 ;;		_TMR6_CallBack
  8017 ;; This function uses a non-reentrant model
  8018 ;;
  8019                           
  8020     0003                     _TMR6_DefaultInterruptHandler:	
  8021                           ;psect for function _TMR6_DefaultInterruptHandler
  8022                           
  8023     0003                     i1l660:	
  8024                           ;incstack = 0
  8025                           ; Regs used in _TMR6_DefaultInterruptHandler: []
  8026                           
  8027     0003  0008               	return
  8028     0004                     __end_of_TMR6_DefaultInterruptHandler:
  8029                           
  8030                           	psect	text46
  8031     06A2                     __ptext46:	
  8032 ;; *************** function _TMR6_Interrupt *****************
  8033 ;; Defined at:
  8034 ;;		line 161 in file "main.c"
  8035 ;; Parameters:    Size  Location     Type
  8036 ;;		None
  8037 ;; Auto vars:     Size  Location     Type
  8038 ;;		None
  8039 ;; Return value:  Size  Location     Type
  8040 ;;                  1    wreg      void 
  8041 ;; Registers used:
  8042 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8043 ;; Tracked objects:
  8044 ;;		On entry : 0/0
  8045 ;;		On exit  : 0/0
  8046 ;;		Unchanged: 0/0
  8047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8048 ;;      Params:         0       0       0       0       0       0
  8049 ;;      Locals:         0       0       0       0       0       0
  8050 ;;      Temps:          0       0       0       0       0       0
  8051 ;;      Totals:         0       0       0       0       0       0
  8052 ;;Total ram usage:        0 bytes
  8053 ;; Hardware stack levels used: 1
  8054 ;; Hardware stack levels required when called: 3
  8055 ;; This function calls:
  8056 ;;		_TMR6_StopTimer
  8057 ;;		_TMR6_WriteTimer
  8058 ;;		i1_updateMatrix
  8059 ;;		i1_updateMotor
  8060 ;; This function is called by:
  8061 ;;		_main
  8062 ;;		_TMR6_CallBack
  8063 ;; This function uses a non-reentrant model
  8064 ;;
  8065                           
  8066     06A2                     _TMR6_Interrupt:	
  8067                           ;psect for function _TMR6_Interrupt
  8068                           
  8069     06A2                     i1l3028:	
  8070                           ;incstack = 0
  8071                           ; Regs used in _TMR6_Interrupt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8072                           
  8073                           
  8074                           ;main.c: 162:     TMR6_StopTimer();
  8075     06A2  318F  27B5  3186   	fcall	_TMR6_StopTimer
  8076     06A5                     i1l3030:
  8077                           
  8078                           ;main.c: 163:     TMR6_WriteTimer(0);
  8079     06A5  3000               	movlw	0
  8080     06A6  318F  27CF  3186   	fcall	_TMR6_WriteTimer
  8081     06A9                     i1l3032:
  8082                           
  8083                           ;main.c: 164:     floorFlag = 0;
  8084     06A9  0020               	movlb	0	; select bank0
  8085     06AA  01B6               	clrf	_floorFlag
  8086     06AB                     i1l3034:
  8087                           
  8088                           ;main.c: 165:     updateMotor();
  8089     06AB  3183  23ED  3186   	fcall	i1_updateMotor
  8090     06AE                     i1l3036:
  8091                           
  8092                           ;main.c: 166:     updateMatrix();
  8093     06AE  3184  24B6  3186   	fcall	i1_updateMatrix
  8094     06B1                     i1l867:
  8095     06B1  0008               	return
  8096     06B2                     __end_of_TMR6_Interrupt:
  8097                           
  8098                           	psect	text47
  8099     0FCF                     __ptext47:	
  8100 ;; *************** function _TMR6_WriteTimer *****************
  8101 ;; Defined at:
  8102 ;;		line 108 in file "mcc_generated_files/tmr6.c"
  8103 ;; Parameters:    Size  Location     Type
  8104 ;;  timerVal        1    wreg     unsigned char 
  8105 ;; Auto vars:     Size  Location     Type
  8106 ;;  timerVal        1    0[COMMON] unsigned char 
  8107 ;; Return value:  Size  Location     Type
  8108 ;;                  1    wreg      void 
  8109 ;; Registers used:
  8110 ;;		wreg
  8111 ;; Tracked objects:
  8112 ;;		On entry : 0/0
  8113 ;;		On exit  : 0/0
  8114 ;;		Unchanged: 0/0
  8115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8116 ;;      Params:         0       0       0       0       0       0
  8117 ;;      Locals:         1       0       0       0       0       0
  8118 ;;      Temps:          0       0       0       0       0       0
  8119 ;;      Totals:         1       0       0       0       0       0
  8120 ;;Total ram usage:        1 bytes
  8121 ;; Hardware stack levels used: 1
  8122 ;; This function calls:
  8123 ;;		Nothing
  8124 ;; This function is called by:
  8125 ;;		_TMR6_Interrupt
  8126 ;; This function uses a non-reentrant model
  8127 ;;
  8128                           
  8129     0FCF                     _TMR6_WriteTimer:	
  8130                           ;psect for function _TMR6_WriteTimer
  8131                           
  8132                           
  8133                           ;incstack = 0
  8134                           ; Regs used in _TMR6_WriteTimer: [wreg]
  8135                           ;TMR6_WriteTimer@timerVal stored from wreg
  8136     0FCF  00F0               	movwf	TMR6_WriteTimer@timerVal
  8137     0FD0                     i1l2822:
  8138                           
  8139                           ;mcc_generated_files/tmr6.c: 108: void TMR6_WriteTimer(uint8_t timerVal);mcc_generated_f
      +                          iles/tmr6.c: 109: {;mcc_generated_files/tmr6.c: 111:     TMR6 = timerVal;
  8140     0FD0  0870               	movf	TMR6_WriteTimer@timerVal,w
  8141     0FD1  0028               	movlb	8	; select bank8
  8142     0FD2  009C               	movwf	28	;volatile
  8143     0FD3                     i1l641:
  8144     0FD3  0008               	return
  8145     0FD4                     __end_of_TMR6_WriteTimer:
  8146                           
  8147                           	psect	text48
  8148     0FB5                     __ptext48:	
  8149 ;; *************** function _TMR6_StopTimer *****************
  8150 ;; Defined at:
  8151 ;;		line 93 in file "mcc_generated_files/tmr6.c"
  8152 ;; Parameters:    Size  Location     Type
  8153 ;;		None
  8154 ;; Auto vars:     Size  Location     Type
  8155 ;;		None
  8156 ;; Return value:  Size  Location     Type
  8157 ;;                  1    wreg      void 
  8158 ;; Registers used:
  8159 ;;		None
  8160 ;; Tracked objects:
  8161 ;;		On entry : 0/0
  8162 ;;		On exit  : 0/0
  8163 ;;		Unchanged: 0/0
  8164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8165 ;;      Params:         0       0       0       0       0       0
  8166 ;;      Locals:         0       0       0       0       0       0
  8167 ;;      Temps:          0       0       0       0       0       0
  8168 ;;      Totals:         0       0       0       0       0       0
  8169 ;;Total ram usage:        0 bytes
  8170 ;; Hardware stack levels used: 1
  8171 ;; This function calls:
  8172 ;;		Nothing
  8173 ;; This function is called by:
  8174 ;;		_TMR6_Interrupt
  8175 ;; This function uses a non-reentrant model
  8176 ;;
  8177                           
  8178     0FB5                     _TMR6_StopTimer:	
  8179                           ;psect for function _TMR6_StopTimer
  8180                           
  8181     0FB5                     i1l2820:	
  8182                           ;incstack = 0
  8183                           ; Regs used in _TMR6_StopTimer: []
  8184                           
  8185                           
  8186                           ;mcc_generated_files/tmr6.c: 96:     T6CONbits.TMR6ON = 0;
  8187     0FB5  0028               	movlb	8	; select bank8
  8188     0FB6  111E               	bcf	30,2	;volatile
  8189     0FB7                     i1l635:
  8190     0FB7  0008               	return
  8191     0FB8                     __end_of_TMR6_StopTimer:
  8192                           
  8193                           	psect	text49
  8194     061C                     __ptext49:	
  8195 ;; *************** function _TMR4_ISR *****************
  8196 ;; Defined at:
  8197 ;;		line 119 in file "mcc_generated_files/tmr4.c"
  8198 ;; Parameters:    Size  Location     Type
  8199 ;;		None
  8200 ;; Auto vars:     Size  Location     Type
  8201 ;;		None
  8202 ;; Return value:  Size  Location     Type
  8203 ;;                  1    wreg      void 
  8204 ;; Registers used:
  8205 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8206 ;; Tracked objects:
  8207 ;;		On entry : 0/0
  8208 ;;		On exit  : 0/0
  8209 ;;		Unchanged: 0/0
  8210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8211 ;;      Params:         0       0       0       0       0       0
  8212 ;;      Locals:         0       0       0       0       0       0
  8213 ;;      Temps:          0       0       0       0       0       0
  8214 ;;      Totals:         0       0       0       0       0       0
  8215 ;;Total ram usage:        0 bytes
  8216 ;; Hardware stack levels used: 1
  8217 ;; Hardware stack levels required when called: 5
  8218 ;; This function calls:
  8219 ;;		_TMR4_CallBack
  8220 ;; This function is called by:
  8221 ;;		_INTERRUPT_InterruptManager
  8222 ;; This function uses a non-reentrant model
  8223 ;;
  8224                           
  8225     061C                     _TMR4_ISR:	
  8226                           ;psect for function _TMR4_ISR
  8227                           
  8228     061C                     i1l3386:	
  8229                           ;incstack = 0
  8230                           ; Regs used in _TMR4_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8231                           
  8232                           
  8233                           ;mcc_generated_files/tmr4.c: 121:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr4.c: 124:     PIR3bits.TMR4IF = 0;
  8234     061C  0020               	movlb	0	; select bank0
  8235     061D  1093               	bcf	19,1	;volatile
  8236     061E                     i1l3388:
  8237                           
  8238                           ;mcc_generated_files/tmr4.c: 127:     if (++CountCallBack >= 100)
  8239     061E  3001               	movlw	1
  8240     061F  07AC               	addwf	TMR4_ISR@CountCallBack,f	;volatile
  8241     0620  3000               	movlw	0
  8242     0621  3DAD               	addwfc	TMR4_ISR@CountCallBack+1,f	;volatile
  8243     0622  3000               	movlw	0
  8244     0623  022D               	subwf	TMR4_ISR@CountCallBack+1,w	;volatile
  8245     0624  3064               	movlw	100
  8246     0625  1903               	skipnz
  8247     0626  022C               	subwf	TMR4_ISR@CountCallBack,w	;volatile
  8248     0627  1C03               	skipc
  8249     0628  2E2A               	goto	u188_21
  8250     0629  2E2B               	goto	u188_20
  8251     062A                     u188_21:
  8252     062A  2E31               	goto	i1l704
  8253     062B                     u188_20:
  8254     062B                     i1l3390:
  8255                           
  8256                           ;mcc_generated_files/tmr4.c: 128:     {;mcc_generated_files/tmr4.c: 130:         TMR4_Ca
      +                          llBack();
  8257     062B  3187  2734  3186   	fcall	_TMR4_CallBack
  8258     062E                     i1l3392:
  8259                           
  8260                           ;mcc_generated_files/tmr4.c: 133:         CountCallBack = 0;
  8261     062E  0020               	movlb	0	; select bank0
  8262     062F  01AC               	clrf	TMR4_ISR@CountCallBack	;volatile
  8263     0630  01AD               	clrf	TMR4_ISR@CountCallBack+1	;volatile
  8264     0631                     i1l704:
  8265     0631  0008               	return
  8266     0632                     __end_of_TMR4_ISR:
  8267                           
  8268                           	psect	text50
  8269     0734                     __ptext50:	
  8270 ;; *************** function _TMR4_CallBack *****************
  8271 ;; Defined at:
  8272 ;;		line 137 in file "mcc_generated_files/tmr4.c"
  8273 ;; Parameters:    Size  Location     Type
  8274 ;;		None
  8275 ;; Auto vars:     Size  Location     Type
  8276 ;;		None
  8277 ;; Return value:  Size  Location     Type
  8278 ;;                  1    wreg      void 
  8279 ;; Registers used:
  8280 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8281 ;; Tracked objects:
  8282 ;;		On entry : 0/0
  8283 ;;		On exit  : 0/0
  8284 ;;		Unchanged: 0/0
  8285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8286 ;;      Params:         0       0       0       0       0       0
  8287 ;;      Locals:         0       0       0       0       0       0
  8288 ;;      Temps:          0       0       0       0       0       0
  8289 ;;      Totals:         0       0       0       0       0       0
  8290 ;;Total ram usage:        0 bytes
  8291 ;; Hardware stack levels used: 1
  8292 ;; Hardware stack levels required when called: 4
  8293 ;; This function calls:
  8294 ;;		Absolute function
  8295 ;;		_TMR4_DefaultInterruptHandler
  8296 ;;		_TMR4_Interrupt
  8297 ;; This function is called by:
  8298 ;;		_TMR4_ISR
  8299 ;; This function uses a non-reentrant model
  8300 ;;
  8301                           
  8302     0734                     _TMR4_CallBack:	
  8303                           ;psect for function _TMR4_CallBack
  8304                           
  8305     0734                     i1l3254:	
  8306                           ;incstack = 0
  8307                           ; Regs used in _TMR4_CallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8308                           
  8309                           
  8310                           ;mcc_generated_files/tmr4.c: 141:     if(TMR4_InterruptHandler)
  8311     0734  0020               	movlb	0	; select bank0
  8312     0735  083B               	movf	_TMR4_InterruptHandler,w
  8313     0736  043C               	iorwf	_TMR4_InterruptHandler+1,w
  8314     0737  1903               	btfsc	3,2
  8315     0738  2F3A               	goto	u167_21
  8316     0739  2F3B               	goto	u167_20
  8317     073A                     u167_21:
  8318     073A  2F40               	goto	i1l708
  8319     073B                     u167_20:
  8320     073B                     i1l3256:
  8321                           
  8322                           ;mcc_generated_files/tmr4.c: 142:     {;mcc_generated_files/tmr4.c: 143:         TMR4_In
      +                          terruptHandler();
  8323     073B  083C               	movf	_TMR4_InterruptHandler+1,w
  8324     073C  008A               	movwf	10
  8325     073D  083B               	movf	_TMR4_InterruptHandler,w
  8326     073E  000A               	callw
  8327     073F  3187               	pagesel	$
  8328     0740                     i1l708:
  8329     0740  0008               	return
  8330     0741                     __end_of_TMR4_CallBack:
  8331                           
  8332                           	psect	text51
  8333     0002                     __ptext51:	
  8334 ;; *************** function _TMR4_DefaultInterruptHandler *****************
  8335 ;; Defined at:
  8336 ;;		line 151 in file "mcc_generated_files/tmr4.c"
  8337 ;; Parameters:    Size  Location     Type
  8338 ;;		None
  8339 ;; Auto vars:     Size  Location     Type
  8340 ;;		None
  8341 ;; Return value:  Size  Location     Type
  8342 ;;                  1    wreg      void 
  8343 ;; Registers used:
  8344 ;;		None
  8345 ;; Tracked objects:
  8346 ;;		On entry : 0/0
  8347 ;;		On exit  : 0/0
  8348 ;;		Unchanged: 0/0
  8349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8350 ;;      Params:         0       0       0       0       0       0
  8351 ;;      Locals:         0       0       0       0       0       0
  8352 ;;      Temps:          0       0       0       0       0       0
  8353 ;;      Totals:         0       0       0       0       0       0
  8354 ;;Total ram usage:        0 bytes
  8355 ;; Hardware stack levels used: 1
  8356 ;; This function calls:
  8357 ;;		Nothing
  8358 ;; This function is called by:
  8359 ;;		_TMR4_Initialize
  8360 ;;		_TMR4_CallBack
  8361 ;; This function uses a non-reentrant model
  8362 ;;
  8363                           
  8364     0002                     _TMR4_DefaultInterruptHandler:	
  8365                           ;psect for function _TMR4_DefaultInterruptHandler
  8366                           
  8367     0002                     i1l714:	
  8368                           ;incstack = 0
  8369                           ; Regs used in _TMR4_DefaultInterruptHandler: []
  8370                           
  8371     0002  0008               	return
  8372     0003                     __end_of_TMR4_DefaultInterruptHandler:
  8373                           
  8374                           	psect	text52
  8375     06B2                     __ptext52:	
  8376 ;; *************** function _TMR4_Interrupt *****************
  8377 ;; Defined at:
  8378 ;;		line 153 in file "main.c"
  8379 ;; Parameters:    Size  Location     Type
  8380 ;;		None
  8381 ;; Auto vars:     Size  Location     Type
  8382 ;;		None
  8383 ;; Return value:  Size  Location     Type
  8384 ;;                  1    wreg      void 
  8385 ;; Registers used:
  8386 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8387 ;; Tracked objects:
  8388 ;;		On entry : 0/0
  8389 ;;		On exit  : 0/0
  8390 ;;		Unchanged: 0/0
  8391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8392 ;;      Params:         0       0       0       0       0       0
  8393 ;;      Locals:         0       0       0       0       0       0
  8394 ;;      Temps:          0       0       0       0       0       0
  8395 ;;      Totals:         0       0       0       0       0       0
  8396 ;;Total ram usage:        0 bytes
  8397 ;; Hardware stack levels used: 1
  8398 ;; Hardware stack levels required when called: 3
  8399 ;; This function calls:
  8400 ;;		_TMR4_StopTimer
  8401 ;;		_TMR4_WriteTimer
  8402 ;;		i1_updateMatrix
  8403 ;;		i1_updateMotor
  8404 ;; This function is called by:
  8405 ;;		_main
  8406 ;;		_TMR4_CallBack
  8407 ;; This function uses a non-reentrant model
  8408 ;;
  8409                           
  8410     06B2                     _TMR4_Interrupt:	
  8411                           ;psect for function _TMR4_Interrupt
  8412                           
  8413     06B2                     i1l3018:	
  8414                           ;incstack = 0
  8415                           ; Regs used in _TMR4_Interrupt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8416                           
  8417                           
  8418                           ;main.c: 154:     TMR4_StopTimer();
  8419     06B2  318F  27B2  3186   	fcall	_TMR4_StopTimer
  8420     06B5                     i1l3020:
  8421                           
  8422                           ;main.c: 155:     TMR4_WriteTimer(0);
  8423     06B5  3000               	movlw	0
  8424     06B6  318F  27CA  3186   	fcall	_TMR4_WriteTimer
  8425     06B9                     i1l3022:
  8426                           
  8427                           ;main.c: 156:     directionFlag = 0;
  8428     06B9  0020               	movlb	0	; select bank0
  8429     06BA  01B5               	clrf	_directionFlag
  8430     06BB                     i1l3024:
  8431                           
  8432                           ;main.c: 157:     updateMotor();
  8433     06BB  3183  23ED  3186   	fcall	i1_updateMotor
  8434     06BE                     i1l3026:
  8435                           
  8436                           ;main.c: 158:     updateMatrix();
  8437     06BE  3184  24B6  3186   	fcall	i1_updateMatrix
  8438     06C1                     i1l864:
  8439     06C1  0008               	return
  8440     06C2                     __end_of_TMR4_Interrupt:
  8441                           
  8442                           	psect	text53
  8443     0FCA                     __ptext53:	
  8444 ;; *************** function _TMR4_WriteTimer *****************
  8445 ;; Defined at:
  8446 ;;		line 108 in file "mcc_generated_files/tmr4.c"
  8447 ;; Parameters:    Size  Location     Type
  8448 ;;  timerVal        1    wreg     unsigned char 
  8449 ;; Auto vars:     Size  Location     Type
  8450 ;;  timerVal        1    0[COMMON] unsigned char 
  8451 ;; Return value:  Size  Location     Type
  8452 ;;                  1    wreg      void 
  8453 ;; Registers used:
  8454 ;;		wreg
  8455 ;; Tracked objects:
  8456 ;;		On entry : 0/0
  8457 ;;		On exit  : 0/0
  8458 ;;		Unchanged: 0/0
  8459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8460 ;;      Params:         0       0       0       0       0       0
  8461 ;;      Locals:         1       0       0       0       0       0
  8462 ;;      Temps:          0       0       0       0       0       0
  8463 ;;      Totals:         1       0       0       0       0       0
  8464 ;;Total ram usage:        1 bytes
  8465 ;; Hardware stack levels used: 1
  8466 ;; This function calls:
  8467 ;;		Nothing
  8468 ;; This function is called by:
  8469 ;;		_TMR4_Interrupt
  8470 ;; This function uses a non-reentrant model
  8471 ;;
  8472                           
  8473     0FCA                     _TMR4_WriteTimer:	
  8474                           ;psect for function _TMR4_WriteTimer
  8475                           
  8476                           
  8477                           ;incstack = 0
  8478                           ; Regs used in _TMR4_WriteTimer: [wreg]
  8479                           ;TMR4_WriteTimer@timerVal stored from wreg
  8480     0FCA  00F0               	movwf	TMR4_WriteTimer@timerVal
  8481     0FCB                     i1l2826:
  8482                           
  8483                           ;mcc_generated_files/tmr4.c: 108: void TMR4_WriteTimer(uint8_t timerVal);mcc_generated_f
      +                          iles/tmr4.c: 109: {;mcc_generated_files/tmr4.c: 111:     TMR4 = timerVal;
  8484     0FCB  0870               	movf	TMR4_WriteTimer@timerVal,w
  8485     0FCC  0028               	movlb	8	; select bank8
  8486     0FCD  0095               	movwf	21	;volatile
  8487     0FCE                     i1l695:
  8488     0FCE  0008               	return
  8489     0FCF                     __end_of_TMR4_WriteTimer:
  8490                           
  8491                           	psect	text54
  8492     0FB2                     __ptext54:	
  8493 ;; *************** function _TMR4_StopTimer *****************
  8494 ;; Defined at:
  8495 ;;		line 93 in file "mcc_generated_files/tmr4.c"
  8496 ;; Parameters:    Size  Location     Type
  8497 ;;		None
  8498 ;; Auto vars:     Size  Location     Type
  8499 ;;		None
  8500 ;; Return value:  Size  Location     Type
  8501 ;;                  1    wreg      void 
  8502 ;; Registers used:
  8503 ;;		None
  8504 ;; Tracked objects:
  8505 ;;		On entry : 0/0
  8506 ;;		On exit  : 0/0
  8507 ;;		Unchanged: 0/0
  8508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8509 ;;      Params:         0       0       0       0       0       0
  8510 ;;      Locals:         0       0       0       0       0       0
  8511 ;;      Temps:          0       0       0       0       0       0
  8512 ;;      Totals:         0       0       0       0       0       0
  8513 ;;Total ram usage:        0 bytes
  8514 ;; Hardware stack levels used: 1
  8515 ;; This function calls:
  8516 ;;		Nothing
  8517 ;; This function is called by:
  8518 ;;		_TMR4_Interrupt
  8519 ;; This function uses a non-reentrant model
  8520 ;;
  8521                           
  8522     0FB2                     _TMR4_StopTimer:	
  8523                           ;psect for function _TMR4_StopTimer
  8524                           
  8525     0FB2                     i1l2824:	
  8526                           ;incstack = 0
  8527                           ; Regs used in _TMR4_StopTimer: []
  8528                           
  8529                           
  8530                           ;mcc_generated_files/tmr4.c: 96:     T4CONbits.TMR4ON = 0;
  8531     0FB2  0028               	movlb	8	; select bank8
  8532     0FB3  1117               	bcf	23,2	;volatile
  8533     0FB4                     i1l689:
  8534     0FB4  0008               	return
  8535     0FB5                     __end_of_TMR4_StopTimer:
  8536                           
  8537                           	psect	text55
  8538     05D7                     __ptext55:	
  8539 ;; *************** function _TMR0_ISR *****************
  8540 ;; Defined at:
  8541 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  8542 ;; Parameters:    Size  Location     Type
  8543 ;;		None
  8544 ;; Auto vars:     Size  Location     Type
  8545 ;;		None
  8546 ;; Return value:  Size  Location     Type
  8547 ;;                  1    wreg      void 
  8548 ;; Registers used:
  8549 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8550 ;; Tracked objects:
  8551 ;;		On entry : 0/0
  8552 ;;		On exit  : 0/0
  8553 ;;		Unchanged: 0/0
  8554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8555 ;;      Params:         0       0       0       0       0       0
  8556 ;;      Locals:         0       0       0       0       0       0
  8557 ;;      Temps:          0       0       0       0       0       0
  8558 ;;      Totals:         0       0       0       0       0       0
  8559 ;;Total ram usage:        0 bytes
  8560 ;; Hardware stack levels used: 1
  8561 ;; Hardware stack levels required when called: 3
  8562 ;; This function calls:
  8563 ;;		_TMR0_CallBack
  8564 ;; This function is called by:
  8565 ;;		_INTERRUPT_InterruptManager
  8566 ;; This function uses a non-reentrant model
  8567 ;;
  8568                           
  8569     05D7                     _TMR0_ISR:	
  8570                           ;psect for function _TMR0_ISR
  8571                           
  8572     05D7                     i1l3378:	
  8573                           ;incstack = 0
  8574                           ; Regs used in _TMR0_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8575                           
  8576                           
  8577                           ;mcc_generated_files/tmr0.c: 110:     static volatile uint16_t CountCallBack = 0;;mcc_ge
      +                          nerated_files/tmr0.c: 113:     INTCONbits.TMR0IF = 0;
  8578     05D7  110B               	bcf	11,2	;volatile
  8579     05D8                     i1l3380:
  8580                           
  8581                           ;mcc_generated_files/tmr0.c: 115:     TMR0 = timer0ReloadVal;
  8582     05D8  0020               	movlb	0	; select bank0
  8583     05D9  084F               	movf	_timer0ReloadVal,w	;volatile
  8584     05DA  0095               	movwf	21	;volatile
  8585                           
  8586                           ;mcc_generated_files/tmr0.c: 118:     if (++CountCallBack >= 200)
  8587     05DB  3001               	movlw	1
  8588     05DC  07B2               	addwf	TMR0_ISR@CountCallBack,f	;volatile
  8589     05DD  3000               	movlw	0
  8590     05DE  3DB3               	addwfc	TMR0_ISR@CountCallBack+1,f	;volatile
  8591     05DF  3000               	movlw	0
  8592     05E0  0233               	subwf	TMR0_ISR@CountCallBack+1,w	;volatile
  8593     05E1  30C8               	movlw	200
  8594     05E2  1903               	skipnz
  8595     05E3  0232               	subwf	TMR0_ISR@CountCallBack,w	;volatile
  8596     05E4  1C03               	skipc
  8597     05E5  2DE7               	goto	u187_21
  8598     05E6  2DE8               	goto	u187_20
  8599     05E7                     u187_21:
  8600     05E7  2DEE               	goto	i1l470
  8601     05E8                     u187_20:
  8602     05E8                     i1l3382:
  8603                           
  8604                           ;mcc_generated_files/tmr0.c: 119:     {;mcc_generated_files/tmr0.c: 121:         TMR0_Ca
      +                          llBack();
  8605     05E8  3187  2741  3185   	fcall	_TMR0_CallBack
  8606     05EB                     i1l3384:
  8607                           
  8608                           ;mcc_generated_files/tmr0.c: 124:         CountCallBack = 0;
  8609     05EB  0020               	movlb	0	; select bank0
  8610     05EC  01B2               	clrf	TMR0_ISR@CountCallBack	;volatile
  8611     05ED  01B3               	clrf	TMR0_ISR@CountCallBack+1	;volatile
  8612     05EE                     i1l470:
  8613     05EE  0008               	return
  8614     05EF                     __end_of_TMR0_ISR:
  8615                           
  8616                           	psect	text56
  8617     0741                     __ptext56:	
  8618 ;; *************** function _TMR0_CallBack *****************
  8619 ;; Defined at:
  8620 ;;		line 130 in file "mcc_generated_files/tmr0.c"
  8621 ;; Parameters:    Size  Location     Type
  8622 ;;		None
  8623 ;; Auto vars:     Size  Location     Type
  8624 ;;		None
  8625 ;; Return value:  Size  Location     Type
  8626 ;;                  1    wreg      void 
  8627 ;; Registers used:
  8628 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8629 ;; Tracked objects:
  8630 ;;		On entry : 0/0
  8631 ;;		On exit  : 0/0
  8632 ;;		Unchanged: 0/0
  8633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8634 ;;      Params:         0       0       0       0       0       0
  8635 ;;      Locals:         0       0       0       0       0       0
  8636 ;;      Temps:          0       0       0       0       0       0
  8637 ;;      Totals:         0       0       0       0       0       0
  8638 ;;Total ram usage:        0 bytes
  8639 ;; Hardware stack levels used: 1
  8640 ;; Hardware stack levels required when called: 2
  8641 ;; This function calls:
  8642 ;;		Absolute function
  8643 ;;		_TMR0_DefaultInterruptHandler
  8644 ;;		_TMR0_Interrupt
  8645 ;; This function is called by:
  8646 ;;		_TMR0_ISR
  8647 ;; This function uses a non-reentrant model
  8648 ;;
  8649                           
  8650     0741                     _TMR0_CallBack:	
  8651                           ;psect for function _TMR0_CallBack
  8652                           
  8653     0741                     i1l3244:	
  8654                           ;incstack = 0
  8655                           ; Regs used in _TMR0_CallBack: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8656                           
  8657                           
  8658                           ;mcc_generated_files/tmr0.c: 134:     if(TMR0_InterruptHandler)
  8659     0741  0020               	movlb	0	; select bank0
  8660     0742  0841               	movf	_TMR0_InterruptHandler,w
  8661     0743  0442               	iorwf	_TMR0_InterruptHandler+1,w
  8662     0744  1903               	btfsc	3,2
  8663     0745  2F47               	goto	u165_21
  8664     0746  2F48               	goto	u165_20
  8665     0747                     u165_21:
  8666     0747  2F4D               	goto	i1l474
  8667     0748                     u165_20:
  8668     0748                     i1l3246:
  8669                           
  8670                           ;mcc_generated_files/tmr0.c: 135:     {;mcc_generated_files/tmr0.c: 136:         TMR0_In
      +                          terruptHandler();
  8671     0748  0842               	movf	_TMR0_InterruptHandler+1,w
  8672     0749  008A               	movwf	10
  8673     074A  0841               	movf	_TMR0_InterruptHandler,w
  8674     074B  000A               	callw
  8675     074C  3187               	pagesel	$
  8676     074D                     i1l474:
  8677     074D  0008               	return
  8678     074E                     __end_of_TMR0_CallBack:
  8679                           
  8680                           	psect	text57
  8681     0FAB                     __ptext57:	
  8682 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  8683 ;; Defined at:
  8684 ;;		line 144 in file "mcc_generated_files/tmr0.c"
  8685 ;; Parameters:    Size  Location     Type
  8686 ;;		None
  8687 ;; Auto vars:     Size  Location     Type
  8688 ;;		None
  8689 ;; Return value:  Size  Location     Type
  8690 ;;                  1    wreg      void 
  8691 ;; Registers used:
  8692 ;;		None
  8693 ;; Tracked objects:
  8694 ;;		On entry : 0/0
  8695 ;;		On exit  : 0/0
  8696 ;;		Unchanged: 0/0
  8697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8698 ;;      Params:         0       0       0       0       0       0
  8699 ;;      Locals:         0       0       0       0       0       0
  8700 ;;      Temps:          0       0       0       0       0       0
  8701 ;;      Totals:         0       0       0       0       0       0
  8702 ;;Total ram usage:        0 bytes
  8703 ;; Hardware stack levels used: 1
  8704 ;; This function calls:
  8705 ;;		Nothing
  8706 ;; This function is called by:
  8707 ;;		_TMR0_Initialize
  8708 ;;		_TMR0_CallBack
  8709 ;; This function uses a non-reentrant model
  8710 ;;
  8711                           
  8712     0FAB                     _TMR0_DefaultInterruptHandler:	
  8713                           ;psect for function _TMR0_DefaultInterruptHandler
  8714                           
  8715     0FAB                     i1l480:	
  8716                           ;incstack = 0
  8717                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  8718                           
  8719     0FAB  0008               	return
  8720     0FAC                     __end_of_TMR0_DefaultInterruptHandler:
  8721                           
  8722                           	psect	text58
  8723     008C                     __ptext58:	
  8724 ;; *************** function _TMR0_Interrupt *****************
  8725 ;; Defined at:
  8726 ;;		line 120 in file "main.c"
  8727 ;; Parameters:    Size  Location     Type
  8728 ;;		None
  8729 ;; Auto vars:     Size  Location     Type
  8730 ;;  i               2   10[BANK0 ] int 
  8731 ;;  i               2    8[BANK0 ] int 
  8732 ;;  t               4   12[BANK0 ] unsigned long 
  8733 ;;  v               4    4[BANK0 ] unsigned long 
  8734 ;;  p               2   16[BANK0 ] unsigned short 
  8735 ;; Return value:  Size  Location     Type
  8736 ;;                  1    wreg      void 
  8737 ;; Registers used:
  8738 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8739 ;; Tracked objects:
  8740 ;;		On entry : 0/0
  8741 ;;		On exit  : 0/0
  8742 ;;		Unchanged: 0/0
  8743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8744 ;;      Params:         0       0       0       0       0       0
  8745 ;;      Locals:         0      14       0       0       0       0
  8746 ;;      Temps:          0       4       0       0       0       0
  8747 ;;      Totals:         0      18       0       0       0       0
  8748 ;;Total ram usage:       18 bytes
  8749 ;; Hardware stack levels used: 1
  8750 ;; Hardware stack levels required when called: 1
  8751 ;; This function calls:
  8752 ;;		_ADC_GetConversion
  8753 ;;		_EUSART_Write
  8754 ;;		_EUSART_is_tx_ready
  8755 ;;		___lldiv
  8756 ;;		___lwdiv
  8757 ;;		___wmul
  8758 ;; This function is called by:
  8759 ;;		_main
  8760 ;;		_TMR0_CallBack
  8761 ;; This function uses a non-reentrant model
  8762 ;;
  8763                           
  8764     008C                     _TMR0_Interrupt:	
  8765                           ;psect for function _TMR0_Interrupt
  8766                           
  8767     008C                     i1l2972:	
  8768                           ;incstack = 0
  8769                           ; Regs used in _TMR0_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8770                           
  8771                           
  8772                           ;main.c: 123:     uint16_t p = position;
  8773     008C  0020               	movlb	0	; select bank0
  8774     008D  0862               	movf	_position,w
  8775     008E  00D0               	movwf	??_TMR0_Interrupt
  8776     008F  01D1               	clrf	??_TMR0_Interrupt+1
  8777     0090  0850               	movf	??_TMR0_Interrupt,w
  8778     0091  00E0               	movwf	TMR0_Interrupt@p
  8779     0092  0851               	movf	??_TMR0_Interrupt+1,w
  8780     0093  00E1               	movwf	TMR0_Interrupt@p+1
  8781     0094                     i1l2974:
  8782                           
  8783                           ;main.c: 124:     p *= 180;
  8784     0094  30B4               	movlw	180
  8785     0095  00F0               	movwf	___wmul@multiplier
  8786     0096  3000               	movlw	0
  8787     0097  00F1               	movwf	___wmul@multiplier+1
  8788     0098  0861               	movf	TMR0_Interrupt@p+1,w
  8789     0099  00F3               	movwf	___wmul@multiplicand+1
  8790     009A  0860               	movf	TMR0_Interrupt@p,w
  8791     009B  00F2               	movwf	___wmul@multiplicand
  8792     009C  3184  24D7  3180   	fcall	___wmul
  8793     009F  0871               	movf	?___wmul+1,w
  8794     00A0  0020               	movlb	0	; select bank0
  8795     00A1  00E1               	movwf	TMR0_Interrupt@p+1
  8796     00A2  0870               	movf	?___wmul,w
  8797     00A3  00E0               	movwf	TMR0_Interrupt@p
  8798     00A4                     i1l2976:
  8799                           
  8800                           ;main.c: 125:     p /= 215;
  8801     00A4  30D7               	movlw	215
  8802     00A5  00F0               	movwf	___lwdiv@divisor
  8803     00A6  3000               	movlw	0
  8804     00A7  00F1               	movwf	___lwdiv@divisor+1
  8805     00A8  0861               	movf	TMR0_Interrupt@p+1,w
  8806     00A9  00F3               	movwf	___lwdiv@dividend+1
  8807     00AA  0860               	movf	TMR0_Interrupt@p,w
  8808     00AB  00F2               	movwf	___lwdiv@dividend
  8809     00AC  3182  22EC  3180   	fcall	___lwdiv
  8810     00AF  0871               	movf	?___lwdiv+1,w
  8811     00B0  0020               	movlb	0	; select bank0
  8812     00B1  00E1               	movwf	TMR0_Interrupt@p+1
  8813     00B2  0870               	movf	?___lwdiv,w
  8814     00B3  00E0               	movwf	TMR0_Interrupt@p
  8815                           
  8816                           ;main.c: 129:     uint32_t v = 0;
  8817     00B4  3000               	movlw	0
  8818     00B5  00D7               	movwf	TMR0_Interrupt@v+3
  8819     00B6  3000               	movlw	0
  8820     00B7  00D6               	movwf	TMR0_Interrupt@v+2
  8821     00B8  3000               	movlw	0
  8822     00B9  00D5               	movwf	TMR0_Interrupt@v+1
  8823     00BA  3000               	movlw	0
  8824     00BB  00D4               	movwf	TMR0_Interrupt@v
  8825     00BC                     i1l2978:
  8826                           
  8827                           ;main.c: 130:     for(int i = 0; i < 16; i++){
  8828     00BC  01D8               	clrf	TMR0_Interrupt@i
  8829     00BD  01D9               	clrf	TMR0_Interrupt@i+1
  8830     00BE                     i1l2984:
  8831                           
  8832                           ;main.c: 131:         v += velocity[i];
  8833     00BE  0020               	movlb	0	; select bank0
  8834     00BF  0858               	movf	TMR0_Interrupt@i,w
  8835     00C0  3EA0               	addlw	(low (_velocity| 0))& (0+255)
  8836     00C1  0086               	movwf	6
  8837     00C2  0187               	clrf	7
  8838     00C3  0801               	movf	1,w
  8839     00C4  00D0               	movwf	??_TMR0_Interrupt
  8840     00C5  01D1               	clrf	??_TMR0_Interrupt+1
  8841     00C6  01D2               	clrf	??_TMR0_Interrupt+2
  8842     00C7  01D3               	clrf	??_TMR0_Interrupt+3
  8843     00C8  0850               	movf	??_TMR0_Interrupt,w
  8844     00C9  07D4               	addwf	TMR0_Interrupt@v,f
  8845     00CA  0851               	movf	??_TMR0_Interrupt+1,w
  8846     00CB  3DD5               	addwfc	TMR0_Interrupt@v+1,f
  8847     00CC  0852               	movf	??_TMR0_Interrupt+2,w
  8848     00CD  3DD6               	addwfc	TMR0_Interrupt@v+2,f
  8849     00CE  0853               	movf	??_TMR0_Interrupt+3,w
  8850     00CF  3DD7               	addwfc	TMR0_Interrupt@v+3,f
  8851     00D0                     i1l2986:
  8852                           
  8853                           ;main.c: 132:     }
  8854     00D0  3001               	movlw	1
  8855     00D1  07D8               	addwf	TMR0_Interrupt@i,f
  8856     00D2  3000               	movlw	0
  8857     00D3  3DD9               	addwfc	TMR0_Interrupt@i+1,f
  8858     00D4                     i1l2988:
  8859     00D4  0859               	movf	TMR0_Interrupt@i+1,w
  8860     00D5  3A80               	xorlw	128
  8861     00D6  00D0               	movwf	??_TMR0_Interrupt
  8862     00D7  3080               	movlw	128
  8863     00D8  0250               	subwf	??_TMR0_Interrupt,w
  8864     00D9  1D03               	skipz
  8865     00DA  28DD               	goto	u152_25
  8866     00DB  3010               	movlw	16
  8867     00DC  0258               	subwf	TMR0_Interrupt@i,w
  8868     00DD                     u152_25:
  8869     00DD  1C03               	skipc
  8870     00DE  28E0               	goto	u152_21
  8871     00DF  28E1               	goto	u152_20
  8872     00E0                     u152_21:
  8873     00E0  28BE               	goto	i1l2984
  8874     00E1                     u152_20:
  8875     00E1                     i1l2990:
  8876                           
  8877                           ;main.c: 133:     v = v>>4;
  8878     00E1  0020               	movlb	0	; select bank0
  8879     00E2  0854               	movf	TMR0_Interrupt@v,w
  8880     00E3  00D0               	movwf	??_TMR0_Interrupt
  8881     00E4  0855               	movf	TMR0_Interrupt@v+1,w
  8882     00E5  00D1               	movwf	??_TMR0_Interrupt+1
  8883     00E6  0856               	movf	TMR0_Interrupt@v+2,w
  8884     00E7  00D2               	movwf	??_TMR0_Interrupt+2
  8885     00E8  0857               	movf	TMR0_Interrupt@v+3,w
  8886     00E9  00D3               	movwf	??_TMR0_Interrupt+3
  8887     00EA  3004               	movlw	4
  8888     00EB                     u153_25:
  8889     00EB  36D3               	lsrf	??_TMR0_Interrupt+3,f
  8890     00EC  0CD2               	rrf	??_TMR0_Interrupt+2,f
  8891     00ED  0CD1               	rrf	??_TMR0_Interrupt+1,f
  8892     00EE  0CD0               	rrf	??_TMR0_Interrupt,f
  8893     00EF                     u153_20:
  8894     00EF  0B89               	decfsz	9,f
  8895     00F0  28EB               	goto	u153_25
  8896     00F1  0853               	movf	??_TMR0_Interrupt+3,w
  8897     00F2  00D7               	movwf	TMR0_Interrupt@v+3
  8898     00F3  0852               	movf	??_TMR0_Interrupt+2,w
  8899     00F4  00D6               	movwf	TMR0_Interrupt@v+2
  8900     00F5  0851               	movf	??_TMR0_Interrupt+1,w
  8901     00F6  00D5               	movwf	TMR0_Interrupt@v+1
  8902     00F7  0850               	movf	??_TMR0_Interrupt,w
  8903     00F8  00D4               	movwf	TMR0_Interrupt@v
  8904     00F9                     i1l2992:
  8905                           
  8906                           ;main.c: 137:     uint32_t t = ADC_GetConversion(channel_AN2);
  8907     00F9  3002               	movlw	2
  8908     00FA  3185  25A1  3180   	fcall	_ADC_GetConversion
  8909     00FD  0870               	movf	?_ADC_GetConversion,w
  8910     00FE  0020               	movlb	0	; select bank0
  8911     00FF  00DC               	movwf	TMR0_Interrupt@t
  8912     0100  0871               	movf	?_ADC_GetConversion+1,w
  8913     0101  00DD               	movwf	TMR0_Interrupt@t+1
  8914     0102  01DE               	clrf	TMR0_Interrupt@t+2
  8915     0103  01DF               	clrf	TMR0_Interrupt@t+3
  8916     0104                     i1l2994:
  8917                           
  8918                           ;main.c: 138:     t = t<<12;
  8919     0104  085C               	movf	TMR0_Interrupt@t,w
  8920     0105  00D0               	movwf	??_TMR0_Interrupt
  8921     0106  085D               	movf	TMR0_Interrupt@t+1,w
  8922     0107  00D1               	movwf	??_TMR0_Interrupt+1
  8923     0108  085E               	movf	TMR0_Interrupt@t+2,w
  8924     0109  00D2               	movwf	??_TMR0_Interrupt+2
  8925     010A  085F               	movf	TMR0_Interrupt@t+3,w
  8926     010B  00D3               	movwf	??_TMR0_Interrupt+3
  8927     010C  300C               	movlw	12
  8928     010D                     u154_25:
  8929     010D  35D0               	lslf	??_TMR0_Interrupt,f
  8930     010E  0DD1               	rlf	??_TMR0_Interrupt+1,f
  8931     010F  0DD2               	rlf	??_TMR0_Interrupt+2,f
  8932     0110  0DD3               	rlf	??_TMR0_Interrupt+3,f
  8933     0111                     u154_20:
  8934     0111  0B89               	decfsz	9,f
  8935     0112  290D               	goto	u154_25
  8936     0113  0853               	movf	??_TMR0_Interrupt+3,w
  8937     0114  00DF               	movwf	TMR0_Interrupt@t+3
  8938     0115  0852               	movf	??_TMR0_Interrupt+2,w
  8939     0116  00DE               	movwf	TMR0_Interrupt@t+2
  8940     0117  0851               	movf	??_TMR0_Interrupt+1,w
  8941     0118  00DD               	movwf	TMR0_Interrupt@t+1
  8942     0119  0850               	movf	??_TMR0_Interrupt,w
  8943     011A  00DC               	movwf	TMR0_Interrupt@t
  8944                           
  8945                           ;main.c: 139:     t /= 10230;
  8946     011B  3000               	movlw	0
  8947     011C  00F3               	movwf	___lldiv@divisor+3
  8948     011D  3000               	movlw	0
  8949     011E  00F2               	movwf	___lldiv@divisor+2
  8950     011F  3027               	movlw	39
  8951     0120  00F1               	movwf	___lldiv@divisor+1
  8952     0121  30F6               	movlw	246
  8953     0122  00F0               	movwf	___lldiv@divisor
  8954     0123  085F               	movf	TMR0_Interrupt@t+3,w
  8955     0124  00F7               	movwf	___lldiv@dividend+3
  8956     0125  085E               	movf	TMR0_Interrupt@t+2,w
  8957     0126  00F6               	movwf	___lldiv@dividend+2
  8958     0127  085D               	movf	TMR0_Interrupt@t+1,w
  8959     0128  00F5               	movwf	___lldiv@dividend+1
  8960     0129  085C               	movf	TMR0_Interrupt@t,w
  8961     012A  00F4               	movwf	___lldiv@dividend
  8962     012B  3182  220D  3180   	fcall	___lldiv
  8963     012E  0873               	movf	?___lldiv+3,w
  8964     012F  0020               	movlb	0	; select bank0
  8965     0130  00DF               	movwf	TMR0_Interrupt@t+3
  8966     0131  0872               	movf	?___lldiv+2,w
  8967     0132  00DE               	movwf	TMR0_Interrupt@t+2
  8968     0133  0871               	movf	?___lldiv+1,w
  8969     0134  00DD               	movwf	TMR0_Interrupt@t+1
  8970     0135  0870               	movf	?___lldiv,w
  8971     0136  00DC               	movwf	TMR0_Interrupt@t
  8972     0137                     i1l2996:
  8973                           
  8974                           ;main.c: 141:     data_tx[0] = (0x80 | ((motorState<<4) | (currentFloor-1))) & 0xB3;
  8975     0137  0838               	movf	_motorState,w
  8976     0138  00D0               	movwf	??_TMR0_Interrupt
  8977     0139  3004               	movlw	4
  8978     013A                     u155_25:
  8979     013A  35D0               	lslf	??_TMR0_Interrupt,f
  8980     013B  0B89               	decfsz	9,f
  8981     013C  293A               	goto	u155_25
  8982     013D  0864               	movf	_currentFloor,w
  8983     013E  3EFF               	addlw	255
  8984     013F  0450               	iorwf	??_TMR0_Interrupt,w
  8985     0140  3880               	iorlw	128
  8986     0141  39B3               	andlw	179
  8987     0142  00A8               	movwf	_data_tx
  8988     0143                     i1l2998:
  8989                           
  8990                           ;main.c: 142:     data_tx[1] = (p>>1) & 0x7F;
  8991     0143  0861               	movf	TMR0_Interrupt@p+1,w
  8992     0144  00D1               	movwf	??_TMR0_Interrupt+1
  8993     0145  0860               	movf	TMR0_Interrupt@p,w
  8994     0146  00D0               	movwf	??_TMR0_Interrupt
  8995     0147  36D1               	lsrf	??_TMR0_Interrupt+1,f
  8996     0148  0CD0               	rrf	??_TMR0_Interrupt,f
  8997     0149  0850               	movf	??_TMR0_Interrupt,w
  8998     014A  397F               	andlw	127
  8999     014B  00A9               	movwf	_data_tx+1
  9000     014C                     i1l3000:
  9001                           
  9002                           ;main.c: 143:     data_tx[2] = (v<<2) & 0x7F;
  9003     014C  0854               	movf	TMR0_Interrupt@v,w
  9004     014D  00D0               	movwf	??_TMR0_Interrupt
  9005     014E  3001               	movlw	1
  9006     014F                     u156_25:
  9007     014F  35D0               	lslf	??_TMR0_Interrupt,f
  9008     0150  3EFF               	addlw	-1
  9009     0151  1D03               	skipz
  9010     0152  294F               	goto	u156_25
  9011     0153  3550               	lslf	??_TMR0_Interrupt,w
  9012     0154  397F               	andlw	127
  9013     0155  00AA               	movwf	_data_tx+2
  9014     0156                     i1l3002:
  9015                           
  9016                           ;main.c: 144:     data_tx[3] = t<<1 & 0x7F;
  9017     0156  355C               	lslf	TMR0_Interrupt@t,w
  9018     0157  397F               	andlw	127
  9019     0158  00AB               	movwf	_data_tx+3
  9020     0159                     i1l3004:
  9021                           
  9022                           ;main.c: 146:     if(EUSART_is_tx_ready()){
  9023     0159  3186  26D1  3180   	fcall	_EUSART_is_tx_ready
  9024     015C  3A00               	xorlw	0
  9025     015D  1903               	skipnz
  9026     015E  2960               	goto	u157_21
  9027     015F  2961               	goto	u157_20
  9028     0160                     u157_21:
  9029     0160  297F               	goto	i1l861
  9030     0161                     u157_20:
  9031     0161                     i1l3006:
  9032                           
  9033                           ;main.c: 147:         for(int i = 0; i<4; i++){
  9034     0161  0020               	movlb	0	; select bank0
  9035     0162  01DA               	clrf	TMR0_Interrupt@i_1692
  9036     0163  01DB               	clrf	TMR0_Interrupt@i_1692+1
  9037     0164                     i1l3012:
  9038                           
  9039                           ;main.c: 148:             EUSART_Write(data_tx[i]);
  9040     0164  0020               	movlb	0	; select bank0
  9041     0165  085A               	movf	TMR0_Interrupt@i_1692,w
  9042     0166  3E28               	addlw	(low (_data_tx| 0))& (0+255)
  9043     0167  0086               	movwf	6
  9044     0168  0187               	clrf	7
  9045     0169  0801               	movf	1,w
  9046     016A  3187  2789  3180   	fcall	_EUSART_Write
  9047     016D                     i1l3014:
  9048                           
  9049                           ;main.c: 149:         }
  9050     016D  3001               	movlw	1
  9051     016E  0020               	movlb	0	; select bank0
  9052     016F  07DA               	addwf	TMR0_Interrupt@i_1692,f
  9053     0170  3000               	movlw	0
  9054     0171  3DDB               	addwfc	TMR0_Interrupt@i_1692+1,f
  9055     0172                     i1l3016:
  9056     0172  085B               	movf	TMR0_Interrupt@i_1692+1,w
  9057     0173  3A80               	xorlw	128
  9058     0174  00D0               	movwf	??_TMR0_Interrupt
  9059     0175  3080               	movlw	128
  9060     0176  0250               	subwf	??_TMR0_Interrupt,w
  9061     0177  1D03               	skipz
  9062     0178  297B               	goto	u158_25
  9063     0179  3004               	movlw	4
  9064     017A  025A               	subwf	TMR0_Interrupt@i_1692,w
  9065     017B                     u158_25:
  9066     017B  1C03               	skipc
  9067     017C  297E               	goto	u158_21
  9068     017D  297F               	goto	u158_20
  9069     017E                     u158_21:
  9070     017E  2964               	goto	i1l3012
  9071     017F                     u158_20:
  9072     017F                     i1l861:
  9073     017F  0008               	return
  9074     0180                     __end_of_TMR0_Interrupt:
  9075                           
  9076                           	psect	text59
  9077     04D7                     __ptext59:	
  9078 ;; *************** function ___wmul *****************
  9079 ;; Defined at:
  9080 ;;		line 15 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  9081 ;; Parameters:    Size  Location     Type
  9082 ;;  multiplier      2    0[COMMON] unsigned int 
  9083 ;;  multiplicand    2    2[COMMON] unsigned int 
  9084 ;; Auto vars:     Size  Location     Type
  9085 ;;  product         2    4[COMMON] unsigned int 
  9086 ;; Return value:  Size  Location     Type
  9087 ;;                  2    0[COMMON] unsigned int 
  9088 ;; Registers used:
  9089 ;;		wreg, status,2, status,0
  9090 ;; Tracked objects:
  9091 ;;		On entry : 0/0
  9092 ;;		On exit  : 0/0
  9093 ;;		Unchanged: 0/0
  9094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9095 ;;      Params:         4       0       0       0       0       0
  9096 ;;      Locals:         2       0       0       0       0       0
  9097 ;;      Temps:          0       0       0       0       0       0
  9098 ;;      Totals:         6       0       0       0       0       0
  9099 ;;Total ram usage:        6 bytes
  9100 ;; Hardware stack levels used: 1
  9101 ;; This function calls:
  9102 ;;		Nothing
  9103 ;; This function is called by:
  9104 ;;		_TMR0_Interrupt
  9105 ;; This function uses a non-reentrant model
  9106 ;;
  9107                           
  9108     04D7                     ___wmul:	
  9109                           ;psect for function ___wmul
  9110                           
  9111     04D7                     i1l2828:	
  9112                           ;incstack = 0
  9113                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  9114                           
  9115     04D7  01F4               	clrf	___wmul@product
  9116     04D8  01F5               	clrf	___wmul@product+1
  9117     04D9                     i1l2830:
  9118     04D9  1C70               	btfss	___wmul@multiplier,0
  9119     04DA  2CDC               	goto	u127_21
  9120     04DB  2CDD               	goto	u127_20
  9121     04DC                     u127_21:
  9122     04DC  2CE1               	goto	i1l1106
  9123     04DD                     u127_20:
  9124     04DD                     i1l2832:
  9125     04DD  0872               	movf	___wmul@multiplicand,w
  9126     04DE  07F4               	addwf	___wmul@product,f
  9127     04DF  0873               	movf	___wmul@multiplicand+1,w
  9128     04E0  3DF5               	addwfc	___wmul@product+1,f
  9129     04E1                     i1l1106:
  9130     04E1  3001               	movlw	1
  9131     04E2                     u128_25:
  9132     04E2  35F2               	lslf	___wmul@multiplicand,f
  9133     04E3  0DF3               	rlf	___wmul@multiplicand+1,f
  9134     04E4  0B89               	decfsz	9,f
  9135     04E5  2CE2               	goto	u128_25
  9136     04E6                     i1l2834:
  9137     04E6  3001               	movlw	1
  9138     04E7                     u129_25:
  9139     04E7  36F1               	lsrf	___wmul@multiplier+1,f
  9140     04E8  0CF0               	rrf	___wmul@multiplier,f
  9141     04E9  0B89               	decfsz	9,f
  9142     04EA  2CE7               	goto	u129_25
  9143     04EB                     i1l2836:
  9144     04EB  0870               	movf	___wmul@multiplier,w
  9145     04EC  0471               	iorwf	___wmul@multiplier+1,w
  9146     04ED  1D03               	btfss	3,2
  9147     04EE  2CF0               	goto	u130_21
  9148     04EF  2CF1               	goto	u130_20
  9149     04F0                     u130_21:
  9150     04F0  2CD9               	goto	i1l2830
  9151     04F1                     u130_20:
  9152     04F1                     i1l2838:
  9153     04F1  0875               	movf	___wmul@product+1,w
  9154     04F2  00F1               	movwf	?___wmul+1
  9155     04F3  0874               	movf	___wmul@product,w
  9156     04F4  00F0               	movwf	?___wmul
  9157     04F5                     i1l1108:
  9158     04F5  0008               	return
  9159     04F6                     __end_of___wmul:
  9160                           
  9161                           	psect	text60
  9162     02EC                     __ptext60:	
  9163 ;; *************** function ___lwdiv *****************
  9164 ;; Defined at:
  9165 ;;		line 5 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  9166 ;; Parameters:    Size  Location     Type
  9167 ;;  divisor         2    0[COMMON] unsigned int 
  9168 ;;  dividend        2    2[COMMON] unsigned int 
  9169 ;; Auto vars:     Size  Location     Type
  9170 ;;  quotient        2    5[COMMON] unsigned int 
  9171 ;;  counter         1    7[COMMON] unsigned char 
  9172 ;; Return value:  Size  Location     Type
  9173 ;;                  2    0[COMMON] unsigned int 
  9174 ;; Registers used:
  9175 ;;		wreg, status,2, status,0
  9176 ;; Tracked objects:
  9177 ;;		On entry : 0/0
  9178 ;;		On exit  : 0/0
  9179 ;;		Unchanged: 0/0
  9180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9181 ;;      Params:         4       0       0       0       0       0
  9182 ;;      Locals:         3       0       0       0       0       0
  9183 ;;      Temps:          1       0       0       0       0       0
  9184 ;;      Totals:         8       0       0       0       0       0
  9185 ;;Total ram usage:        8 bytes
  9186 ;; Hardware stack levels used: 1
  9187 ;; This function calls:
  9188 ;;		Nothing
  9189 ;; This function is called by:
  9190 ;;		_TMR0_Interrupt
  9191 ;; This function uses a non-reentrant model
  9192 ;;
  9193                           
  9194     02EC                     ___lwdiv:	
  9195                           ;psect for function ___lwdiv
  9196                           
  9197     02EC                     i1l2866:	
  9198                           ;incstack = 0
  9199                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  9200                           
  9201     02EC  01F5               	clrf	___lwdiv@quotient
  9202     02ED  01F6               	clrf	___lwdiv@quotient+1
  9203     02EE                     i1l2868:
  9204     02EE  0870               	movf	___lwdiv@divisor,w
  9205     02EF  0471               	iorwf	___lwdiv@divisor+1,w
  9206     02F0  1903               	btfsc	3,2
  9207     02F1  2AF3               	goto	u138_21
  9208     02F2  2AF4               	goto	u138_20
  9209     02F3                     u138_21:
  9210     02F3  2B23               	goto	i1l2888
  9211     02F4                     u138_20:
  9212     02F4                     i1l2870:
  9213     02F4  01F7               	clrf	___lwdiv@counter
  9214     02F5  0AF7               	incf	___lwdiv@counter,f
  9215     02F6  2B00               	goto	i1l2876
  9216     02F7                     i1l2872:
  9217     02F7  3001               	movlw	1
  9218     02F8                     u139_25:
  9219     02F8  35F0               	lslf	___lwdiv@divisor,f
  9220     02F9  0DF1               	rlf	___lwdiv@divisor+1,f
  9221     02FA  0B89               	decfsz	9,f
  9222     02FB  2AF8               	goto	u139_25
  9223     02FC                     i1l2874:
  9224     02FC  3001               	movlw	1
  9225     02FD  00F4               	movwf	??___lwdiv
  9226     02FE  0874               	movf	??___lwdiv,w
  9227     02FF  07F7               	addwf	___lwdiv@counter,f
  9228     0300                     i1l2876:
  9229     0300  1FF1               	btfss	___lwdiv@divisor+1,7
  9230     0301  2B03               	goto	u140_21
  9231     0302  2B04               	goto	u140_20
  9232     0303                     u140_21:
  9233     0303  2AF7               	goto	i1l2872
  9234     0304                     u140_20:
  9235     0304                     i1l2878:
  9236     0304  3001               	movlw	1
  9237     0305                     u141_25:
  9238     0305  35F5               	lslf	___lwdiv@quotient,f
  9239     0306  0DF6               	rlf	___lwdiv@quotient+1,f
  9240     0307  0B89               	decfsz	9,f
  9241     0308  2B05               	goto	u141_25
  9242     0309  0871               	movf	___lwdiv@divisor+1,w
  9243     030A  0273               	subwf	___lwdiv@dividend+1,w
  9244     030B  1D03               	skipz
  9245     030C  2B0F               	goto	u142_25
  9246     030D  0870               	movf	___lwdiv@divisor,w
  9247     030E  0272               	subwf	___lwdiv@dividend,w
  9248     030F                     u142_25:
  9249     030F  1C03               	skipc
  9250     0310  2B12               	goto	u142_21
  9251     0311  2B13               	goto	u142_20
  9252     0312                     u142_21:
  9253     0312  2B18               	goto	i1l2884
  9254     0313                     u142_20:
  9255     0313                     i1l2880:
  9256     0313  0870               	movf	___lwdiv@divisor,w
  9257     0314  02F2               	subwf	___lwdiv@dividend,f
  9258     0315  0871               	movf	___lwdiv@divisor+1,w
  9259     0316  3BF3               	subwfb	___lwdiv@dividend+1,f
  9260     0317                     i1l2882:
  9261     0317  1475               	bsf	___lwdiv@quotient,0
  9262     0318                     i1l2884:
  9263     0318  3001               	movlw	1
  9264     0319                     u143_25:
  9265     0319  36F1               	lsrf	___lwdiv@divisor+1,f
  9266     031A  0CF0               	rrf	___lwdiv@divisor,f
  9267     031B  0B89               	decfsz	9,f
  9268     031C  2B19               	goto	u143_25
  9269     031D                     i1l2886:
  9270     031D  3001               	movlw	1
  9271     031E  02F7               	subwf	___lwdiv@counter,f
  9272     031F  1D03               	btfss	3,2
  9273     0320  2B22               	goto	u144_21
  9274     0321  2B23               	goto	u144_20
  9275     0322                     u144_21:
  9276     0322  2B04               	goto	i1l2878
  9277     0323                     u144_20:
  9278     0323                     i1l2888:
  9279     0323  0876               	movf	___lwdiv@quotient+1,w
  9280     0324  00F1               	movwf	?___lwdiv+1
  9281     0325  0875               	movf	___lwdiv@quotient,w
  9282     0326  00F0               	movwf	?___lwdiv
  9283     0327                     i1l1386:
  9284     0327  0008               	return
  9285     0328                     __end_of___lwdiv:
  9286                           
  9287                           	psect	text61
  9288     020D                     __ptext61:	
  9289 ;; *************** function ___lldiv *****************
  9290 ;; Defined at:
  9291 ;;		line 5 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\__lldiv.c"
  9292 ;; Parameters:    Size  Location     Type
  9293 ;;  divisor         4    0[COMMON] unsigned long 
  9294 ;;  dividend        4    4[COMMON] unsigned long 
  9295 ;; Auto vars:     Size  Location     Type
  9296 ;;  quotient        4    9[COMMON] unsigned long 
  9297 ;;  counter         1   13[COMMON] unsigned char 
  9298 ;; Return value:  Size  Location     Type
  9299 ;;                  4    0[COMMON] unsigned long 
  9300 ;; Registers used:
  9301 ;;		wreg, status,2, status,0
  9302 ;; Tracked objects:
  9303 ;;		On entry : 0/0
  9304 ;;		On exit  : 0/0
  9305 ;;		Unchanged: 0/0
  9306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9307 ;;      Params:         8       0       0       0       0       0
  9308 ;;      Locals:         5       0       0       0       0       0
  9309 ;;      Temps:          1       0       0       0       0       0
  9310 ;;      Totals:        14       0       0       0       0       0
  9311 ;;Total ram usage:       14 bytes
  9312 ;; Hardware stack levels used: 1
  9313 ;; This function calls:
  9314 ;;		Nothing
  9315 ;; This function is called by:
  9316 ;;		_TMR0_Interrupt
  9317 ;; This function uses a non-reentrant model
  9318 ;;
  9319                           
  9320     020D                     ___lldiv:	
  9321                           ;psect for function ___lldiv
  9322                           
  9323     020D                     i1l2842:	
  9324                           ;incstack = 0
  9325                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  9326                           
  9327     020D  3000               	movlw	0
  9328     020E  00FC               	movwf	___lldiv@quotient+3
  9329     020F  3000               	movlw	0
  9330     0210  00FB               	movwf	___lldiv@quotient+2
  9331     0211  3000               	movlw	0
  9332     0212  00FA               	movwf	___lldiv@quotient+1
  9333     0213  3000               	movlw	0
  9334     0214  00F9               	movwf	___lldiv@quotient
  9335     0215  0873               	movf	___lldiv@divisor+3,w
  9336     0216  0472               	iorwf	___lldiv@divisor+2,w
  9337     0217  0471               	iorwf	___lldiv@divisor+1,w
  9338     0218  0470               	iorwf	___lldiv@divisor,w
  9339     0219  1903               	skipnz
  9340     021A  2A1C               	goto	u131_21
  9341     021B  2A1D               	goto	u131_20
  9342     021C                     u131_21:
  9343     021C  2A5E               	goto	i1l2862
  9344     021D                     u131_20:
  9345     021D                     i1l2844:
  9346     021D  01FD               	clrf	___lldiv@counter
  9347     021E  0AFD               	incf	___lldiv@counter,f
  9348     021F  2A2B               	goto	i1l2848
  9349     0220                     i1l2846:
  9350     0220  3001               	movlw	1
  9351     0221                     u132_25:
  9352     0221  35F0               	lslf	___lldiv@divisor,f
  9353     0222  0DF1               	rlf	___lldiv@divisor+1,f
  9354     0223  0DF2               	rlf	___lldiv@divisor+2,f
  9355     0224  0DF3               	rlf	___lldiv@divisor+3,f
  9356     0225  0B89               	decfsz	9,f
  9357     0226  2A21               	goto	u132_25
  9358     0227  3001               	movlw	1
  9359     0228  00F8               	movwf	??___lldiv
  9360     0229  0878               	movf	??___lldiv,w
  9361     022A  07FD               	addwf	___lldiv@counter,f
  9362     022B                     i1l2848:
  9363     022B  1FF3               	btfss	___lldiv@divisor+3,7
  9364     022C  2A2E               	goto	u133_21
  9365     022D  2A2F               	goto	u133_20
  9366     022E                     u133_21:
  9367     022E  2A20               	goto	i1l2846
  9368     022F                     u133_20:
  9369     022F                     i1l2850:
  9370     022F  3001               	movlw	1
  9371     0230                     u134_25:
  9372     0230  35F9               	lslf	___lldiv@quotient,f
  9373     0231  0DFA               	rlf	___lldiv@quotient+1,f
  9374     0232  0DFB               	rlf	___lldiv@quotient+2,f
  9375     0233  0DFC               	rlf	___lldiv@quotient+3,f
  9376     0234  0B89               	decfsz	9,f
  9377     0235  2A30               	goto	u134_25
  9378     0236                     i1l2852:
  9379     0236  0873               	movf	___lldiv@divisor+3,w
  9380     0237  0277               	subwf	___lldiv@dividend+3,w
  9381     0238  1D03               	skipz
  9382     0239  2A44               	goto	u135_25
  9383     023A  0872               	movf	___lldiv@divisor+2,w
  9384     023B  0276               	subwf	___lldiv@dividend+2,w
  9385     023C  1D03               	skipz
  9386     023D  2A44               	goto	u135_25
  9387     023E  0871               	movf	___lldiv@divisor+1,w
  9388     023F  0275               	subwf	___lldiv@dividend+1,w
  9389     0240  1D03               	skipz
  9390     0241  2A44               	goto	u135_25
  9391     0242  0870               	movf	___lldiv@divisor,w
  9392     0243  0274               	subwf	___lldiv@dividend,w
  9393     0244                     u135_25:
  9394     0244  1C03               	skipc
  9395     0245  2A47               	goto	u135_21
  9396     0246  2A48               	goto	u135_20
  9397     0247                     u135_21:
  9398     0247  2A51               	goto	i1l2858
  9399     0248                     u135_20:
  9400     0248                     i1l2854:
  9401     0248  0870               	movf	___lldiv@divisor,w
  9402     0249  02F4               	subwf	___lldiv@dividend,f
  9403     024A  0871               	movf	___lldiv@divisor+1,w
  9404     024B  3BF5               	subwfb	___lldiv@dividend+1,f
  9405     024C  0872               	movf	___lldiv@divisor+2,w
  9406     024D  3BF6               	subwfb	___lldiv@dividend+2,f
  9407     024E  0873               	movf	___lldiv@divisor+3,w
  9408     024F  3BF7               	subwfb	___lldiv@dividend+3,f
  9409     0250                     i1l2856:
  9410     0250  1479               	bsf	___lldiv@quotient,0
  9411     0251                     i1l2858:
  9412     0251  3001               	movlw	1
  9413     0252                     u136_25:
  9414     0252  36F3               	lsrf	___lldiv@divisor+3,f
  9415     0253  0CF2               	rrf	___lldiv@divisor+2,f
  9416     0254  0CF1               	rrf	___lldiv@divisor+1,f
  9417     0255  0CF0               	rrf	___lldiv@divisor,f
  9418     0256  0B89               	decfsz	9,f
  9419     0257  2A52               	goto	u136_25
  9420     0258                     i1l2860:
  9421     0258  3001               	movlw	1
  9422     0259  02FD               	subwf	___lldiv@counter,f
  9423     025A  1D03               	btfss	3,2
  9424     025B  2A5D               	goto	u137_21
  9425     025C  2A5E               	goto	u137_20
  9426     025D                     u137_21:
  9427     025D  2A2F               	goto	i1l2850
  9428     025E                     u137_20:
  9429     025E                     i1l2862:
  9430     025E  087C               	movf	___lldiv@quotient+3,w
  9431     025F  00F3               	movwf	?___lldiv+3
  9432     0260  087B               	movf	___lldiv@quotient+2,w
  9433     0261  00F2               	movwf	?___lldiv+2
  9434     0262  087A               	movf	___lldiv@quotient+1,w
  9435     0263  00F1               	movwf	?___lldiv+1
  9436     0264  0879               	movf	___lldiv@quotient,w
  9437     0265  00F0               	movwf	?___lldiv
  9438     0266                     i1l1142:
  9439     0266  0008               	return
  9440     0267                     __end_of___lldiv:
  9441                           
  9442                           	psect	text62
  9443     06D1                     __ptext62:	
  9444 ;; *************** function _EUSART_is_tx_ready *****************
  9445 ;; Defined at:
  9446 ;;		line 94 in file "mcc_generated_files/eusart.c"
  9447 ;; Parameters:    Size  Location     Type
  9448 ;;		None
  9449 ;; Auto vars:     Size  Location     Type
  9450 ;;		None
  9451 ;; Return value:  Size  Location     Type
  9452 ;;                  1    wreg      _Bool 
  9453 ;; Registers used:
  9454 ;;		wreg, status,2
  9455 ;; Tracked objects:
  9456 ;;		On entry : 0/0
  9457 ;;		On exit  : 0/0
  9458 ;;		Unchanged: 0/0
  9459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9460 ;;      Params:         0       0       0       0       0       0
  9461 ;;      Locals:         1       0       0       0       0       0
  9462 ;;      Temps:          0       0       0       0       0       0
  9463 ;;      Totals:         1       0       0       0       0       0
  9464 ;;Total ram usage:        1 bytes
  9465 ;; Hardware stack levels used: 1
  9466 ;; This function calls:
  9467 ;;		Nothing
  9468 ;; This function is called by:
  9469 ;;		_TMR0_Interrupt
  9470 ;; This function uses a non-reentrant model
  9471 ;;
  9472                           
  9473     06D1                     _EUSART_is_tx_ready:	
  9474                           ;psect for function _EUSART_is_tx_ready
  9475                           
  9476     06D1                     i1l2790:	
  9477                           ;incstack = 0
  9478                           ; Regs used in _EUSART_is_tx_ready: [wreg+status,2]
  9479                           
  9480                           
  9481                           ;mcc_generated_files/eusart.c: 96:     return (_Bool)(PIR1bits.TXIF && TXSTAbits.TXEN);
  9482     06D1  01F0               	clrf	_EUSART_is_tx_ready$323
  9483     06D2                     i1l2792:
  9484     06D2  0020               	movlb	0	; select bank0
  9485     06D3  1E11               	btfss	17,4	;volatile
  9486     06D4  2ED6               	goto	u123_21
  9487     06D5  2ED7               	goto	u123_20
  9488     06D6                     u123_21:
  9489     06D6  2EDE               	goto	i1l2798
  9490     06D7                     u123_20:
  9491     06D7                     i1l2794:
  9492     06D7  0023               	movlb	3	; select bank3
  9493     06D8  1E9E               	btfss	30,5	;volatile
  9494     06D9  2EDB               	goto	u124_21
  9495     06DA  2EDC               	goto	u124_20
  9496     06DB                     u124_21:
  9497     06DB  2EDE               	goto	i1l2798
  9498     06DC                     u124_20:
  9499     06DC                     i1l2796:
  9500     06DC  01F0               	clrf	_EUSART_is_tx_ready$323
  9501     06DD  0AF0               	incf	_EUSART_is_tx_ready$323,f
  9502     06DE                     i1l2798:
  9503     06DE  0870               	movf	_EUSART_is_tx_ready$323,w
  9504     06DF                     i1l123:
  9505     06DF  0008               	return
  9506     06E0                     __end_of_EUSART_is_tx_ready:
  9507                           
  9508                           	psect	text63
  9509     0789                     __ptext63:	
  9510 ;; *************** function _EUSART_Write *****************
  9511 ;; Defined at:
  9512 ;;		line 132 in file "mcc_generated_files/eusart.c"
  9513 ;; Parameters:    Size  Location     Type
  9514 ;;  txData          1    wreg     unsigned char 
  9515 ;; Auto vars:     Size  Location     Type
  9516 ;;  txData          1    0[COMMON] unsigned char 
  9517 ;; Return value:  Size  Location     Type
  9518 ;;                  1    wreg      void 
  9519 ;; Registers used:
  9520 ;;		wreg
  9521 ;; Tracked objects:
  9522 ;;		On entry : 0/0
  9523 ;;		On exit  : 0/0
  9524 ;;		Unchanged: 0/0
  9525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9526 ;;      Params:         0       0       0       0       0       0
  9527 ;;      Locals:         1       0       0       0       0       0
  9528 ;;      Temps:          0       0       0       0       0       0
  9529 ;;      Totals:         1       0       0       0       0       0
  9530 ;;Total ram usage:        1 bytes
  9531 ;; Hardware stack levels used: 1
  9532 ;; This function calls:
  9533 ;;		Nothing
  9534 ;; This function is called by:
  9535 ;;		_TMR0_Interrupt
  9536 ;; This function uses a non-reentrant model
  9537 ;;
  9538                           
  9539     0789                     _EUSART_Write:	
  9540                           ;psect for function _EUSART_Write
  9541                           
  9542                           
  9543                           ;incstack = 0
  9544                           ; Regs used in _EUSART_Write: [wreg]
  9545                           ;EUSART_Write@txData stored from wreg
  9546     0789  00F0               	movwf	EUSART_Write@txData
  9547     078A                     i1l2802:
  9548     078A                     i1l142:	
  9549                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
  9550                           
  9551                           
  9552                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
  9553     078A  0020               	movlb	0	; select bank0
  9554     078B  1E11               	btfss	17,4	;volatile
  9555     078C  2F8E               	goto	u125_21
  9556     078D  2F8F               	goto	u125_20
  9557     078E                     u125_21:
  9558     078E  2F8A               	goto	i1l142
  9559     078F                     u125_20:
  9560     078F                     i1l2804:
  9561                           
  9562                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
  9563     078F  0870               	movf	EUSART_Write@txData,w
  9564     0790  0023               	movlb	3	; select bank3
  9565     0791  009A               	movwf	26	;volatile
  9566     0792                     i1l145:
  9567     0792  0008               	return
  9568     0793                     __end_of_EUSART_Write:
  9569                           
  9570                           	psect	text64
  9571     05A1                     __ptext64:	
  9572 ;; *************** function _ADC_GetConversion *****************
  9573 ;; Defined at:
  9574 ;;		line 112 in file "mcc_generated_files/adc.c"
  9575 ;; Parameters:    Size  Location     Type
  9576 ;;  channel         1    wreg     enum E2485
  9577 ;; Auto vars:     Size  Location     Type
  9578 ;;  channel         1    3[COMMON] enum E2485
  9579 ;; Return value:  Size  Location     Type
  9580 ;;                  2    0[COMMON] unsigned short 
  9581 ;; Registers used:
  9582 ;;		wreg, status,2, status,0
  9583 ;; Tracked objects:
  9584 ;;		On entry : 0/0
  9585 ;;		On exit  : 0/0
  9586 ;;		Unchanged: 0/0
  9587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9588 ;;      Params:         2       0       0       0       0       0
  9589 ;;      Locals:         1       0       0       0       0       0
  9590 ;;      Temps:          1       0       0       0       0       0
  9591 ;;      Totals:         4       0       0       0       0       0
  9592 ;;Total ram usage:        4 bytes
  9593 ;; Hardware stack levels used: 1
  9594 ;; This function calls:
  9595 ;;		Nothing
  9596 ;; This function is called by:
  9597 ;;		_TMR0_Interrupt
  9598 ;; This function uses a non-reentrant model
  9599 ;;
  9600                           
  9601     05A1                     _ADC_GetConversion:	
  9602                           ;psect for function _ADC_GetConversion
  9603                           
  9604                           
  9605                           ;incstack = 0
  9606                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  9607                           ;ADC_GetConversion@channel stored from wreg
  9608     05A1  00F3               	movwf	ADC_GetConversion@channel
  9609     05A2                     i1l2806:
  9610                           
  9611                           ;mcc_generated_files/adc.c: 112: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = ch
      +                          annel;
  9612     05A2  0873               	movf	ADC_GetConversion@channel,w
  9613     05A3  00F2               	movwf	??_ADC_GetConversion
  9614     05A4  0DF2               	rlf	??_ADC_GetConversion,f
  9615     05A5  0DF2               	rlf	??_ADC_GetConversion,f
  9616     05A6  0021               	movlb	1	; select bank1
  9617     05A7  081D               	movf	29,w	;volatile
  9618     05A8  0672               	xorwf	??_ADC_GetConversion,w
  9619     05A9  3983               	andlw	-125
  9620     05AA  0672               	xorwf	??_ADC_GetConversion,w
  9621     05AB  009D               	movwf	29	;volatile
  9622     05AC                     i1l2808:
  9623                           
  9624                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
  9625     05AC  141D               	bsf	29,0	;volatile
  9626     05AD                     i1l2810:
  9627                           
  9628                           ;mcc_generated_files/adc.c: 121:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  9629     05AD  3003               	movlw	3
  9630     05AE                     u241_27:
  9631     05AE  0B89               	decfsz	9,f
  9632     05AF  2DAE               	goto	u241_27
  9633     05B0  0000               	nop
  9634     05B1                     i1l2812:
  9635                           
  9636                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GO_nDONE = 1;
  9637     05B1  0021               	movlb	1	; select bank1
  9638     05B2  149D               	bsf	29,1	;volatile
  9639     05B3                     i1l512:	
  9640                           ;mcc_generated_files/adc.c: 128:     {;mcc_generated_files/adc.c: 129:     }
  9641                           
  9642                           
  9643                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GO_nDONE)
  9644     05B3  189D               	btfsc	29,1	;volatile
  9645     05B4  2DB6               	goto	u126_21
  9646     05B5  2DB7               	goto	u126_20
  9647     05B6                     u126_21:
  9648     05B6  2DB3               	goto	i1l512
  9649     05B7                     u126_20:
  9650     05B7                     i1l2814:
  9651                           
  9652                           ;mcc_generated_files/adc.c: 132:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  9653     05B7  081C               	movf	28,w	;volatile
  9654     05B8  00F1               	movwf	?_ADC_GetConversion+1
  9655     05B9  081B               	movf	27,w	;volatile
  9656     05BA  00F0               	movwf	?_ADC_GetConversion
  9657     05BB                     i1l515:
  9658     05BB  0008               	return
  9659     05BC                     __end_of_ADC_GetConversion:
  9660                           
  9661                           	psect	text65
  9662     0691                     __ptext65:	
  9663 ;; *************** function _PIN_MANAGER_IOC *****************
  9664 ;; Defined at:
  9665 ;;		line 119 in file "mcc_generated_files/pin_manager.c"
  9666 ;; Parameters:    Size  Location     Type
  9667 ;;		None
  9668 ;; Auto vars:     Size  Location     Type
  9669 ;;		None
  9670 ;; Return value:  Size  Location     Type
  9671 ;;                  1    wreg      void 
  9672 ;; Registers used:
  9673 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9674 ;; Tracked objects:
  9675 ;;		On entry : 0/0
  9676 ;;		On exit  : 0/0
  9677 ;;		Unchanged: 0/0
  9678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9679 ;;      Params:         0       0       0       0       0       0
  9680 ;;      Locals:         0       0       0       0       0       0
  9681 ;;      Temps:          0       0       0       0       0       0
  9682 ;;      Totals:         0       0       0       0       0       0
  9683 ;;Total ram usage:        0 bytes
  9684 ;; Hardware stack levels used: 1
  9685 ;; Hardware stack levels required when called: 5
  9686 ;; This function calls:
  9687 ;;		_IOCBF0_ISR
  9688 ;;		_IOCBF3_ISR
  9689 ;; This function is called by:
  9690 ;;		_INTERRUPT_InterruptManager
  9691 ;; This function uses a non-reentrant model
  9692 ;;
  9693                           
  9694     0691                     _PIN_MANAGER_IOC:	
  9695                           ;psect for function _PIN_MANAGER_IOC
  9696                           
  9697     0691                     i1l3370:	
  9698                           ;incstack = 0
  9699                           ; Regs used in _PIN_MANAGER_IOC: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9700                           
  9701                           
  9702                           ;mcc_generated_files/pin_manager.c: 122:     if(IOCBFbits.IOCBF0 == 1)
  9703     0691  0027               	movlb	7	; select bank7
  9704     0692  1C16               	btfss	22,0	;volatile
  9705     0693  2E95               	goto	u185_21
  9706     0694  2E96               	goto	u185_20
  9707     0695                     u185_21:
  9708     0695  2E99               	goto	i1l3374
  9709     0696                     u185_20:
  9710     0696                     i1l3372:
  9711                           
  9712                           ;mcc_generated_files/pin_manager.c: 123:     {;mcc_generated_files/pin_manager.c: 124:  
      +                                 IOCBF0_ISR();
  9713     0696  3186  26EF  3186   	fcall	_IOCBF0_ISR
  9714     0699                     i1l3374:
  9715                           
  9716                           ;mcc_generated_files/pin_manager.c: 127:     if(IOCBFbits.IOCBF3 == 1)
  9717     0699  0027               	movlb	7	; select bank7
  9718     069A  1D96               	btfss	22,3	;volatile
  9719     069B  2E9D               	goto	u186_21
  9720     069C  2E9E               	goto	u186_20
  9721     069D                     u186_21:
  9722     069D  2EA1               	goto	i1l262
  9723     069E                     u186_20:
  9724     069E                     i1l3376:
  9725                           
  9726                           ;mcc_generated_files/pin_manager.c: 128:     {;mcc_generated_files/pin_manager.c: 129:  
      +                                 IOCBF3_ISR();
  9727     069E  3186  26E0  3186   	fcall	_IOCBF3_ISR
  9728     06A1                     i1l262:
  9729     06A1  0008               	return
  9730     06A2                     __end_of_PIN_MANAGER_IOC:
  9731                           
  9732                           	psect	text66
  9733     06E0                     __ptext66:	
  9734 ;; *************** function _IOCBF3_ISR *****************
  9735 ;; Defined at:
  9736 ;;		line 166 in file "mcc_generated_files/pin_manager.c"
  9737 ;; Parameters:    Size  Location     Type
  9738 ;;		None
  9739 ;; Auto vars:     Size  Location     Type
  9740 ;;		None
  9741 ;; Return value:  Size  Location     Type
  9742 ;;                  1    wreg      void 
  9743 ;; Registers used:
  9744 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9745 ;; Tracked objects:
  9746 ;;		On entry : 0/0
  9747 ;;		On exit  : 0/0
  9748 ;;		Unchanged: 0/0
  9749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9750 ;;      Params:         0       0       0       0       0       0
  9751 ;;      Locals:         0       0       0       0       0       0
  9752 ;;      Temps:          0       0       0       0       0       0
  9753 ;;      Totals:         0       0       0       0       0       0
  9754 ;;Total ram usage:        0 bytes
  9755 ;; Hardware stack levels used: 1
  9756 ;; Hardware stack levels required when called: 4
  9757 ;; This function calls:
  9758 ;;		Absolute function
  9759 ;;		_IOCBF3_DefaultInterruptHandler
  9760 ;;		_S2_Interrupt
  9761 ;; This function is called by:
  9762 ;;		_PIN_MANAGER_IOC
  9763 ;; This function uses a non-reentrant model
  9764 ;;
  9765                           
  9766     06E0                     _IOCBF3_ISR:	
  9767                           ;psect for function _IOCBF3_ISR
  9768                           
  9769     06E0                     i1l3140:	
  9770                           ;incstack = 0
  9771                           ; Regs used in _IOCBF3_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9772                           
  9773                           
  9774                           ;mcc_generated_files/pin_manager.c: 171:     if(IOCBF3_InterruptHandler)
  9775     06E0  0020               	movlb	0	; select bank0
  9776     06E1  0847               	movf	_IOCBF3_InterruptHandler,w
  9777     06E2  0448               	iorwf	_IOCBF3_InterruptHandler+1,w
  9778     06E3  1903               	btfsc	3,2
  9779     06E4  2EE6               	goto	u164_21
  9780     06E5  2EE7               	goto	u164_20
  9781     06E6                     u164_21:
  9782     06E6  2EEC               	goto	i1l3144
  9783     06E7                     u164_20:
  9784     06E7                     i1l3142:
  9785                           
  9786                           ;mcc_generated_files/pin_manager.c: 172:     {;mcc_generated_files/pin_manager.c: 173:  
      +                                 IOCBF3_InterruptHandler();
  9787     06E7  0848               	movf	_IOCBF3_InterruptHandler+1,w
  9788     06E8  008A               	movwf	10
  9789     06E9  0847               	movf	_IOCBF3_InterruptHandler,w
  9790     06EA  000A               	callw
  9791     06EB  3186               	pagesel	$
  9792     06EC                     i1l3144:
  9793                           
  9794                           ;mcc_generated_files/pin_manager.c: 175:     IOCBFbits.IOCBF3 = 0;
  9795     06EC  0027               	movlb	7	; select bank7
  9796     06ED  1196               	bcf	22,3	;volatile
  9797     06EE                     i1l276:
  9798     06EE  0008               	return
  9799     06EF                     __end_of_IOCBF3_ISR:
  9800                           
  9801                           	psect	text67
  9802     0FAA                     __ptext67:	
  9803 ;; *************** function _IOCBF3_DefaultInterruptHandler *****************
  9804 ;; Defined at:
  9805 ;;		line 188 in file "mcc_generated_files/pin_manager.c"
  9806 ;; Parameters:    Size  Location     Type
  9807 ;;		None
  9808 ;; Auto vars:     Size  Location     Type
  9809 ;;		None
  9810 ;; Return value:  Size  Location     Type
  9811 ;;                  1    wreg      void 
  9812 ;; Registers used:
  9813 ;;		None
  9814 ;; Tracked objects:
  9815 ;;		On entry : 0/0
  9816 ;;		On exit  : 0/0
  9817 ;;		Unchanged: 0/0
  9818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9819 ;;      Params:         0       0       0       0       0       0
  9820 ;;      Locals:         0       0       0       0       0       0
  9821 ;;      Temps:          0       0       0       0       0       0
  9822 ;;      Totals:         0       0       0       0       0       0
  9823 ;;Total ram usage:        0 bytes
  9824 ;; Hardware stack levels used: 1
  9825 ;; This function calls:
  9826 ;;		Nothing
  9827 ;; This function is called by:
  9828 ;;		_PIN_MANAGER_Initialize
  9829 ;;		_IOCBF3_ISR
  9830 ;; This function uses a non-reentrant model
  9831 ;;
  9832                           
  9833     0FAA                     _IOCBF3_DefaultInterruptHandler:	
  9834                           ;psect for function _IOCBF3_DefaultInterruptHandler
  9835                           
  9836     0FAA                     i1l282:	
  9837                           ;incstack = 0
  9838                           ; Regs used in _IOCBF3_DefaultInterruptHandler: []
  9839                           
  9840     0FAA  0008               	return
  9841     0FAB                     __end_of_IOCBF3_DefaultInterruptHandler:
  9842                           
  9843                           	psect	text68
  9844     054D                     __ptext68:	
  9845 ;; *************** function _S2_Interrupt *****************
  9846 ;; Defined at:
  9847 ;;		line 199 in file "main.c"
  9848 ;; Parameters:    Size  Location     Type
  9849 ;;		None
  9850 ;; Auto vars:     Size  Location     Type
  9851 ;;		None
  9852 ;; Return value:  Size  Location     Type
  9853 ;;                  1    wreg      void 
  9854 ;; Registers used:
  9855 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9856 ;; Tracked objects:
  9857 ;;		On entry : 0/0
  9858 ;;		On exit  : 0/0
  9859 ;;		Unchanged: 0/0
  9860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9861 ;;      Params:         0       0       0       0       0       0
  9862 ;;      Locals:         0       0       0       0       0       0
  9863 ;;      Temps:          0       0       0       0       0       0
  9864 ;;      Totals:         0       0       0       0       0       0
  9865 ;;Total ram usage:        0 bytes
  9866 ;; Hardware stack levels used: 1
  9867 ;; Hardware stack levels required when called: 3
  9868 ;; This function calls:
  9869 ;;		_TMR6_StartTimer
  9870 ;;		i1_updateMatrix
  9871 ;;		i1_updateMotor
  9872 ;; This function is called by:
  9873 ;;		_main
  9874 ;;		_IOCBF3_ISR
  9875 ;; This function uses a non-reentrant model
  9876 ;;
  9877                           
  9878     054D                     _S2_Interrupt:	
  9879                           ;psect for function _S2_Interrupt
  9880                           
  9881     054D                     i1l3054:	
  9882                           ;incstack = 0
  9883                           ; Regs used in _S2_Interrupt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9884                           
  9885                           
  9886                           ;main.c: 200:     if(targetFloor == 2 && currentFloor != 2){
  9887     054D  3002               	movlw	2
  9888     054E  0020               	movlb	0	; select bank0
  9889     054F  0663               	xorwf	_targetFloor,w
  9890     0550  1D03               	btfss	3,2
  9891     0551  2D53               	goto	u161_21
  9892     0552  2D54               	goto	u161_20
  9893     0553                     u161_21:
  9894     0553  2D5F               	goto	i1l3062
  9895     0554                     u161_20:
  9896     0554                     i1l3056:
  9897     0554  3002               	movlw	2
  9898     0555  0664               	xorwf	_currentFloor,w
  9899     0556  1903               	btfsc	3,2
  9900     0557  2D59               	goto	u162_21
  9901     0558  2D5A               	goto	u162_20
  9902     0559                     u162_21:
  9903     0559  2D5F               	goto	i1l3062
  9904     055A                     u162_20:
  9905     055A                     i1l3058:
  9906                           
  9907                           ;main.c: 201:         floorFlag = 1;
  9908     055A  01B6               	clrf	_floorFlag
  9909     055B  0AB6               	incf	_floorFlag,f
  9910     055C                     i1l3060:
  9911                           
  9912                           ;main.c: 202:         TMR6_StartTimer();
  9913     055C  318F  27AC  3185   	fcall	_TMR6_StartTimer
  9914     055F                     i1l3062:
  9915                           
  9916                           ;main.c: 204:     currentFloor = 2;
  9917     055F  3002               	movlw	2
  9918     0560  0020               	movlb	0	; select bank0
  9919     0561  00E4               	movwf	_currentFloor
  9920     0562                     i1l3064:
  9921                           
  9922                           ;main.c: 205:     updateMotor();
  9923     0562  3183  23ED  3185   	fcall	i1_updateMotor
  9924     0565                     i1l3066:
  9925                           
  9926                           ;main.c: 206:     updateMatrix();
  9927     0565  3184  24B6  3185   	fcall	i1_updateMatrix
  9928     0568                     i1l883:
  9929     0568  0008               	return
  9930     0569                     __end_of_S2_Interrupt:
  9931                           
  9932                           	psect	text69
  9933     06EF                     __ptext69:	
  9934 ;; *************** function _IOCBF0_ISR *****************
  9935 ;; Defined at:
  9936 ;;		line 136 in file "mcc_generated_files/pin_manager.c"
  9937 ;; Parameters:    Size  Location     Type
  9938 ;;		None
  9939 ;; Auto vars:     Size  Location     Type
  9940 ;;		None
  9941 ;; Return value:  Size  Location     Type
  9942 ;;                  1    wreg      void 
  9943 ;; Registers used:
  9944 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9945 ;; Tracked objects:
  9946 ;;		On entry : 0/0
  9947 ;;		On exit  : 0/0
  9948 ;;		Unchanged: 0/0
  9949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9950 ;;      Params:         0       0       0       0       0       0
  9951 ;;      Locals:         0       0       0       0       0       0
  9952 ;;      Temps:          0       0       0       0       0       0
  9953 ;;      Totals:         0       0       0       0       0       0
  9954 ;;Total ram usage:        0 bytes
  9955 ;; Hardware stack levels used: 1
  9956 ;; Hardware stack levels required when called: 4
  9957 ;; This function calls:
  9958 ;;		Absolute function
  9959 ;;		_IOCBF0_DefaultInterruptHandler
  9960 ;;		_S1_Interrupt
  9961 ;; This function is called by:
  9962 ;;		_PIN_MANAGER_IOC
  9963 ;; This function uses a non-reentrant model
  9964 ;;
  9965                           
  9966     06EF                     _IOCBF0_ISR:	
  9967                           ;psect for function _IOCBF0_ISR
  9968                           
  9969     06EF                     i1l3134:	
  9970                           ;incstack = 0
  9971                           ; Regs used in _IOCBF0_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9972                           
  9973                           
  9974                           ;mcc_generated_files/pin_manager.c: 141:     if(IOCBF0_InterruptHandler)
  9975     06EF  0020               	movlb	0	; select bank0
  9976     06F0  0849               	movf	_IOCBF0_InterruptHandler,w
  9977     06F1  044A               	iorwf	_IOCBF0_InterruptHandler+1,w
  9978     06F2  1903               	btfsc	3,2
  9979     06F3  2EF5               	goto	u163_21
  9980     06F4  2EF6               	goto	u163_20
  9981     06F5                     u163_21:
  9982     06F5  2EFB               	goto	i1l3138
  9983     06F6                     u163_20:
  9984     06F6                     i1l3136:
  9985                           
  9986                           ;mcc_generated_files/pin_manager.c: 142:     {;mcc_generated_files/pin_manager.c: 143:  
      +                                 IOCBF0_InterruptHandler();
  9987     06F6  084A               	movf	_IOCBF0_InterruptHandler+1,w
  9988     06F7  008A               	movwf	10
  9989     06F8  0849               	movf	_IOCBF0_InterruptHandler,w
  9990     06F9  000A               	callw
  9991     06FA  3186               	pagesel	$
  9992     06FB                     i1l3138:
  9993                           
  9994                           ;mcc_generated_files/pin_manager.c: 145:     IOCBFbits.IOCBF0 = 0;
  9995     06FB  0027               	movlb	7	; select bank7
  9996     06FC  1016               	bcf	22,0	;volatile
  9997     06FD                     i1l266:
  9998     06FD  0008               	return
  9999     06FE                     __end_of_IOCBF0_ISR:
 10000                           
 10001                           	psect	text70
 10002     0FA9                     __ptext70:	
 10003 ;; *************** function _IOCBF0_DefaultInterruptHandler *****************
 10004 ;; Defined at:
 10005 ;;		line 158 in file "mcc_generated_files/pin_manager.c"
 10006 ;; Parameters:    Size  Location     Type
 10007 ;;		None
 10008 ;; Auto vars:     Size  Location     Type
 10009 ;;		None
 10010 ;; Return value:  Size  Location     Type
 10011 ;;                  1    wreg      void 
 10012 ;; Registers used:
 10013 ;;		None
 10014 ;; Tracked objects:
 10015 ;;		On entry : 0/0
 10016 ;;		On exit  : 0/0
 10017 ;;		Unchanged: 0/0
 10018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10019 ;;      Params:         0       0       0       0       0       0
 10020 ;;      Locals:         0       0       0       0       0       0
 10021 ;;      Temps:          0       0       0       0       0       0
 10022 ;;      Totals:         0       0       0       0       0       0
 10023 ;;Total ram usage:        0 bytes
 10024 ;; Hardware stack levels used: 1
 10025 ;; This function calls:
 10026 ;;		Nothing
 10027 ;; This function is called by:
 10028 ;;		_PIN_MANAGER_Initialize
 10029 ;;		_IOCBF0_ISR
 10030 ;; This function uses a non-reentrant model
 10031 ;;
 10032                           
 10033     0FA9                     _IOCBF0_DefaultInterruptHandler:	
 10034                           ;psect for function _IOCBF0_DefaultInterruptHandler
 10035                           
 10036     0FA9                     i1l272:	
 10037                           ;incstack = 0
 10038                           ; Regs used in _IOCBF0_DefaultInterruptHandler: []
 10039                           
 10040     0FA9  0008               	return
 10041     0FAA                     __end_of_IOCBF0_DefaultInterruptHandler:
 10042                           
 10043                           	psect	text71
 10044     05BC                     __ptext71:	
 10045 ;; *************** function _S1_Interrupt *****************
 10046 ;; Defined at:
 10047 ;;		line 188 in file "main.c"
 10048 ;; Parameters:    Size  Location     Type
 10049 ;;		None
 10050 ;; Auto vars:     Size  Location     Type
 10051 ;;		None
 10052 ;; Return value:  Size  Location     Type
 10053 ;;                  1    wreg      void 
 10054 ;; Registers used:
 10055 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10056 ;; Tracked objects:
 10057 ;;		On entry : 0/0
 10058 ;;		On exit  : 0/0
 10059 ;;		Unchanged: 0/0
 10060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10061 ;;      Params:         0       0       0       0       0       0
 10062 ;;      Locals:         0       0       0       0       0       0
 10063 ;;      Temps:          0       0       0       0       0       0
 10064 ;;      Totals:         0       0       0       0       0       0
 10065 ;;Total ram usage:        0 bytes
 10066 ;; Hardware stack levels used: 1
 10067 ;; Hardware stack levels required when called: 3
 10068 ;; This function calls:
 10069 ;;		_TMR6_StartTimer
 10070 ;;		i1_updateMatrix
 10071 ;;		i1_updateMotor
 10072 ;; This function is called by:
 10073 ;;		_main
 10074 ;;		_IOCBF0_ISR
 10075 ;; This function uses a non-reentrant model
 10076 ;;
 10077                           
 10078     05BC                     _S1_Interrupt:	
 10079                           ;psect for function _S1_Interrupt
 10080                           
 10081     05BC                     i1l3038:	
 10082                           ;incstack = 0
 10083                           ; Regs used in _S1_Interrupt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10084                           
 10085                           
 10086                           ;main.c: 189:     position = 0;
 10087     05BC  0020               	movlb	0	; select bank0
 10088     05BD  01E2               	clrf	_position
 10089     05BE                     i1l3040:
 10090                           
 10091                           ;main.c: 190:     if(targetFloor == 1 && currentFloor != 1){
 10092     05BE  0363               	decf	_targetFloor,w
 10093     05BF  1D03               	btfss	3,2
 10094     05C0  2DC2               	goto	u159_21
 10095     05C1  2DC3               	goto	u159_20
 10096     05C2                     u159_21:
 10097     05C2  2DCD               	goto	i1l3048
 10098     05C3                     u159_20:
 10099     05C3                     i1l3042:
 10100     05C3  0364               	decf	_currentFloor,w
 10101     05C4  1903               	btfsc	3,2
 10102     05C5  2DC7               	goto	u160_21
 10103     05C6  2DC8               	goto	u160_20
 10104     05C7                     u160_21:
 10105     05C7  2DCD               	goto	i1l3048
 10106     05C8                     u160_20:
 10107     05C8                     i1l3044:
 10108                           
 10109                           ;main.c: 191:         floorFlag = 1;
 10110     05C8  01B6               	clrf	_floorFlag
 10111     05C9  0AB6               	incf	_floorFlag,f
 10112     05CA                     i1l3046:
 10113                           
 10114                           ;main.c: 192:         TMR6_StartTimer();
 10115     05CA  318F  27AC  3185   	fcall	_TMR6_StartTimer
 10116     05CD                     i1l3048:
 10117                           
 10118                           ;main.c: 194:     currentFloor = 1;
 10119     05CD  0020               	movlb	0	; select bank0
 10120     05CE  01E4               	clrf	_currentFloor
 10121     05CF  0AE4               	incf	_currentFloor,f
 10122     05D0                     i1l3050:
 10123                           
 10124                           ;main.c: 195:     updateMotor();
 10125     05D0  3183  23ED  3185   	fcall	i1_updateMotor
 10126     05D3                     i1l3052:
 10127                           
 10128                           ;main.c: 196:     updateMatrix();
 10129     05D3  3184  24B6  3185   	fcall	i1_updateMatrix
 10130     05D6                     i1l879:
 10131     05D6  0008               	return
 10132     05D7                     __end_of_S1_Interrupt:
 10133                           
 10134                           	psect	text72
 10135     06FE                     __ptext72:	
 10136 ;; *************** function _CMP2_ISR *****************
 10137 ;; Defined at:
 10138 ;;		line 91 in file "mcc_generated_files/cmp2.c"
 10139 ;; Parameters:    Size  Location     Type
 10140 ;;		None
 10141 ;; Auto vars:     Size  Location     Type
 10142 ;;		None
 10143 ;; Return value:  Size  Location     Type
 10144 ;;                  1    wreg      void 
 10145 ;; Registers used:
 10146 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10147 ;; Tracked objects:
 10148 ;;		On entry : 0/0
 10149 ;;		On exit  : 0/0
 10150 ;;		Unchanged: 0/0
 10151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10152 ;;      Params:         0       0       0       0       0       0
 10153 ;;      Locals:         0       0       0       0       0       0
 10154 ;;      Temps:          0       0       0       0       0       0
 10155 ;;      Totals:         0       0       0       0       0       0
 10156 ;;Total ram usage:        0 bytes
 10157 ;; Hardware stack levels used: 1
 10158 ;; Hardware stack levels required when called: 4
 10159 ;; This function calls:
 10160 ;;		Absolute function
 10161 ;;		_S4_Interrupt
 10162 ;; This function is called by:
 10163 ;;		_INTERRUPT_InterruptManager
 10164 ;; This function uses a non-reentrant model
 10165 ;;
 10166                           
 10167     06FE                     _CMP2_ISR:	
 10168                           ;psect for function _CMP2_ISR
 10169                           
 10170     06FE                     i1l3394:	
 10171                           ;incstack = 0
 10172                           ; Regs used in _CMP2_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10173                           
 10174                           
 10175                           ;mcc_generated_files/cmp2.c: 94:     PIR2bits.C2IF = 0;
 10176     06FE  0020               	movlb	0	; select bank0
 10177     06FF  1312               	bcf	18,6	;volatile
 10178     0700                     i1l3396:
 10179                           
 10180                           ;mcc_generated_files/cmp2.c: 96:     if(CMP2_InterruptHandler)
 10181     0700  083F               	movf	_CMP2_InterruptHandler,w
 10182     0701  0440               	iorwf	_CMP2_InterruptHandler+1,w
 10183     0702  1903               	btfsc	3,2
 10184     0703  2F05               	goto	u189_21
 10185     0704  2F06               	goto	u189_20
 10186     0705                     u189_21:
 10187     0705  2F0B               	goto	i1l590
 10188     0706                     u189_20:
 10189     0706                     i1l3398:
 10190                           
 10191                           ;mcc_generated_files/cmp2.c: 97:     {;mcc_generated_files/cmp2.c: 98:         CMP2_Inte
      +                          rruptHandler();
 10192     0706  0840               	movf	_CMP2_InterruptHandler+1,w
 10193     0707  008A               	movwf	10
 10194     0708  083F               	movf	_CMP2_InterruptHandler,w
 10195     0709  000A               	callw
 10196     070A  3186               	pagesel	$
 10197     070B                     i1l590:
 10198     070B  0008               	return
 10199     070C                     __end_of_CMP2_ISR:
 10200                           
 10201                           	psect	text73
 10202     0569                     __ptext73:	
 10203 ;; *************** function _S4_Interrupt *****************
 10204 ;; Defined at:
 10205 ;;		line 219 in file "main.c"
 10206 ;; Parameters:    Size  Location     Type
 10207 ;;		None
 10208 ;; Auto vars:     Size  Location     Type
 10209 ;;		None
 10210 ;; Return value:  Size  Location     Type
 10211 ;;                  1    wreg      void 
 10212 ;; Registers used:
 10213 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10214 ;; Tracked objects:
 10215 ;;		On entry : 0/0
 10216 ;;		On exit  : 0/0
 10217 ;;		Unchanged: 0/0
 10218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10219 ;;      Params:         0       0       0       0       0       0
 10220 ;;      Locals:         0       0       0       0       0       0
 10221 ;;      Temps:          0       0       0       0       0       0
 10222 ;;      Totals:         0       0       0       0       0       0
 10223 ;;Total ram usage:        0 bytes
 10224 ;; Hardware stack levels used: 1
 10225 ;; Hardware stack levels required when called: 3
 10226 ;; This function calls:
 10227 ;;		_TMR6_StartTimer
 10228 ;;		i1_updateMatrix
 10229 ;;		i1_updateMotor
 10230 ;; This function is called by:
 10231 ;;		_main
 10232 ;;		_CMP2_ISR
 10233 ;; This function uses a non-reentrant model
 10234 ;;
 10235                           
 10236     0569                     _S4_Interrupt:	
 10237                           ;psect for function _S4_Interrupt
 10238                           
 10239     0569                     i1l3336:	
 10240                           ;incstack = 0
 10241                           ; Regs used in _S4_Interrupt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10242                           
 10243                           
 10244                           ;main.c: 220:     if(targetFloor == 4 && currentFloor != 4){
 10245     0569  3004               	movlw	4
 10246     056A  0020               	movlb	0	; select bank0
 10247     056B  0663               	xorwf	_targetFloor,w
 10248     056C  1D03               	btfss	3,2
 10249     056D  2D6F               	goto	u179_21
 10250     056E  2D70               	goto	u179_20
 10251     056F                     u179_21:
 10252     056F  2D7B               	goto	i1l3344
 10253     0570                     u179_20:
 10254     0570                     i1l3338:
 10255     0570  3004               	movlw	4
 10256     0571  0664               	xorwf	_currentFloor,w
 10257     0572  1903               	btfsc	3,2
 10258     0573  2D75               	goto	u180_21
 10259     0574  2D76               	goto	u180_20
 10260     0575                     u180_21:
 10261     0575  2D7B               	goto	i1l3344
 10262     0576                     u180_20:
 10263     0576                     i1l3340:
 10264                           
 10265                           ;main.c: 221:         floorFlag = 1;
 10266     0576  01B6               	clrf	_floorFlag
 10267     0577  0AB6               	incf	_floorFlag,f
 10268     0578                     i1l3342:
 10269                           
 10270                           ;main.c: 222:         TMR6_StartTimer();
 10271     0578  318F  27AC  3185   	fcall	_TMR6_StartTimer
 10272     057B                     i1l3344:
 10273                           
 10274                           ;main.c: 224:     currentFloor = 4;
 10275     057B  3004               	movlw	4
 10276     057C  0020               	movlb	0	; select bank0
 10277     057D  00E4               	movwf	_currentFloor
 10278     057E                     i1l3346:
 10279                           
 10280                           ;main.c: 225:     updateMotor();
 10281     057E  3183  23ED  3185   	fcall	i1_updateMotor
 10282     0581                     i1l3348:
 10283                           
 10284                           ;main.c: 226:     updateMatrix();
 10285     0581  3184  24B6  3185   	fcall	i1_updateMatrix
 10286     0584                     i1l891:
 10287     0584  0008               	return
 10288     0585                     __end_of_S4_Interrupt:
 10289                           
 10290                           	psect	text74
 10291     070C                     __ptext74:	
 10292 ;; *************** function _CMP1_ISR *****************
 10293 ;; Defined at:
 10294 ;;		line 91 in file "mcc_generated_files/cmp1.c"
 10295 ;; Parameters:    Size  Location     Type
 10296 ;;		None
 10297 ;; Auto vars:     Size  Location     Type
 10298 ;;		None
 10299 ;; Return value:  Size  Location     Type
 10300 ;;                  1    wreg      void 
 10301 ;; Registers used:
 10302 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10303 ;; Tracked objects:
 10304 ;;		On entry : 0/0
 10305 ;;		On exit  : 0/0
 10306 ;;		Unchanged: 0/0
 10307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10308 ;;      Params:         0       0       0       0       0       0
 10309 ;;      Locals:         0       0       0       0       0       0
 10310 ;;      Temps:          0       0       0       0       0       0
 10311 ;;      Totals:         0       0       0       0       0       0
 10312 ;;Total ram usage:        0 bytes
 10313 ;; Hardware stack levels used: 1
 10314 ;; Hardware stack levels required when called: 4
 10315 ;; This function calls:
 10316 ;;		Absolute function
 10317 ;;		_S3_Interrupt
 10318 ;; This function is called by:
 10319 ;;		_INTERRUPT_InterruptManager
 10320 ;; This function uses a non-reentrant model
 10321 ;;
 10322                           
 10323     070C                     _CMP1_ISR:	
 10324                           ;psect for function _CMP1_ISR
 10325                           
 10326     070C                     i1l3400:	
 10327                           ;incstack = 0
 10328                           ; Regs used in _CMP1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10329                           
 10330                           
 10331                           ;mcc_generated_files/cmp1.c: 94:     PIR2bits.C1IF = 0;
 10332     070C  0020               	movlb	0	; select bank0
 10333     070D  1292               	bcf	18,5	;volatile
 10334     070E                     i1l3402:
 10335                           
 10336                           ;mcc_generated_files/cmp1.c: 96:     if(CMP1_InterruptHandler)
 10337     070E  0839               	movf	_CMP1_InterruptHandler,w
 10338     070F  043A               	iorwf	_CMP1_InterruptHandler+1,w
 10339     0710  1903               	btfsc	3,2
 10340     0711  2F13               	goto	u190_21
 10341     0712  2F14               	goto	u190_20
 10342     0713                     u190_21:
 10343     0713  2F19               	goto	i1l736
 10344     0714                     u190_20:
 10345     0714                     i1l3404:
 10346                           
 10347                           ;mcc_generated_files/cmp1.c: 97:     {;mcc_generated_files/cmp1.c: 98:         CMP1_Inte
      +                          rruptHandler();
 10348     0714  083A               	movf	_CMP1_InterruptHandler+1,w
 10349     0715  008A               	movwf	10
 10350     0716  0839               	movf	_CMP1_InterruptHandler,w
 10351     0717  000A               	callw
 10352     0718  3187               	pagesel	$
 10353     0719                     i1l736:
 10354     0719  0008               	return
 10355     071A                     __end_of_CMP1_ISR:
 10356                           
 10357                           	psect	text75
 10358     0585                     __ptext75:	
 10359 ;; *************** function _S3_Interrupt *****************
 10360 ;; Defined at:
 10361 ;;		line 209 in file "main.c"
 10362 ;; Parameters:    Size  Location     Type
 10363 ;;		None
 10364 ;; Auto vars:     Size  Location     Type
 10365 ;;		None
 10366 ;; Return value:  Size  Location     Type
 10367 ;;                  1    wreg      void 
 10368 ;; Registers used:
 10369 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10370 ;; Tracked objects:
 10371 ;;		On entry : 0/0
 10372 ;;		On exit  : 0/0
 10373 ;;		Unchanged: 0/0
 10374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10375 ;;      Params:         0       0       0       0       0       0
 10376 ;;      Locals:         0       0       0       0       0       0
 10377 ;;      Temps:          0       0       0       0       0       0
 10378 ;;      Totals:         0       0       0       0       0       0
 10379 ;;Total ram usage:        0 bytes
 10380 ;; Hardware stack levels used: 1
 10381 ;; Hardware stack levels required when called: 3
 10382 ;; This function calls:
 10383 ;;		_TMR6_StartTimer
 10384 ;;		i1_updateMatrix
 10385 ;;		i1_updateMotor
 10386 ;; This function is called by:
 10387 ;;		_main
 10388 ;;		_CMP1_ISR
 10389 ;; This function uses a non-reentrant model
 10390 ;;
 10391                           
 10392     0585                     _S3_Interrupt:	
 10393                           ;psect for function _S3_Interrupt
 10394                           
 10395     0585                     i1l3322:	
 10396                           ;incstack = 0
 10397                           ; Regs used in _S3_Interrupt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10398                           
 10399                           
 10400                           ;main.c: 210:     if(targetFloor == 3 && currentFloor != 3){
 10401     0585  3003               	movlw	3
 10402     0586  0020               	movlb	0	; select bank0
 10403     0587  0663               	xorwf	_targetFloor,w
 10404     0588  1D03               	btfss	3,2
 10405     0589  2D8B               	goto	u177_21
 10406     058A  2D8C               	goto	u177_20
 10407     058B                     u177_21:
 10408     058B  2D97               	goto	i1l3330
 10409     058C                     u177_20:
 10410     058C                     i1l3324:
 10411     058C  3003               	movlw	3
 10412     058D  0664               	xorwf	_currentFloor,w
 10413     058E  1903               	btfsc	3,2
 10414     058F  2D91               	goto	u178_21
 10415     0590  2D92               	goto	u178_20
 10416     0591                     u178_21:
 10417     0591  2D97               	goto	i1l3330
 10418     0592                     u178_20:
 10419     0592                     i1l3326:
 10420                           
 10421                           ;main.c: 211:         floorFlag = 1;
 10422     0592  01B6               	clrf	_floorFlag
 10423     0593  0AB6               	incf	_floorFlag,f
 10424     0594                     i1l3328:
 10425                           
 10426                           ;main.c: 212:         TMR6_StartTimer();
 10427     0594  318F  27AC  3185   	fcall	_TMR6_StartTimer
 10428     0597                     i1l3330:
 10429                           
 10430                           ;main.c: 214:     currentFloor = 3;
 10431     0597  3003               	movlw	3
 10432     0598  0020               	movlb	0	; select bank0
 10433     0599  00E4               	movwf	_currentFloor
 10434     059A                     i1l3332:
 10435                           
 10436                           ;main.c: 215:     updateMotor();
 10437     059A  3183  23ED  3185   	fcall	i1_updateMotor
 10438     059D                     i1l3334:
 10439                           
 10440                           ;main.c: 216:     updateMatrix();
 10441     059D  3184  24B6  3185   	fcall	i1_updateMatrix
 10442     05A0                     i1l887:
 10443     05A0  0008               	return
 10444     05A1                     __end_of_S3_Interrupt:
 10445                           
 10446                           	psect	text76
 10447     03ED                     __ptext76:	
 10448 ;; *************** function i1_updateMotor *****************
 10449 ;; Defined at:
 10450 ;;		line 85 in file "main.c"
 10451 ;; Parameters:    Size  Location     Type
 10452 ;;		None
 10453 ;; Auto vars:     Size  Location     Type
 10454 ;;		None
 10455 ;; Return value:  Size  Location     Type
 10456 ;;                  1    wreg      void 
 10457 ;; Registers used:
 10458 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10459 ;; Tracked objects:
 10460 ;;		On entry : 0/0
 10461 ;;		On exit  : 0/0
 10462 ;;		Unchanged: 0/0
 10463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10464 ;;      Params:         0       0       0       0       0       0
 10465 ;;      Locals:         0       0       0       0       0       0
 10466 ;;      Temps:          0       0       0       0       0       0
 10467 ;;      Totals:         0       0       0       0       0       0
 10468 ;;Total ram usage:        0 bytes
 10469 ;; Hardware stack levels used: 1
 10470 ;; Hardware stack levels required when called: 2
 10471 ;; This function calls:
 10472 ;;		i1_TMR4_StartTimer
 10473 ;;		i1_sendMotor
 10474 ;; This function is called by:
 10475 ;;		_TMR4_Interrupt
 10476 ;;		_TMR6_Interrupt
 10477 ;;		_S1_Interrupt
 10478 ;;		_S2_Interrupt
 10479 ;;		_S3_Interrupt
 10480 ;;		_S4_Interrupt
 10481 ;; This function uses a non-reentrant model
 10482 ;;
 10483                           
 10484     03ED                     i1_updateMotor:	
 10485                           ;psect for function i1_updateMotor
 10486                           
 10487     03ED                     i1l2892:	
 10488                           ;incstack = 0
 10489                           ; Regs used in i1_updateMotor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10490                           
 10491                           
 10492                           ;main.c: 86:     if(currentFloor==targetFloor){
 10493     03ED  0020               	movlb	0	; select bank0
 10494     03EE  0864               	movf	_currentFloor,w
 10495     03EF  0663               	xorwf	_targetFloor,w
 10496     03F0  1D03               	skipz
 10497     03F1  2BF3               	goto	u145_21
 10498     03F2  2BF4               	goto	u145_20
 10499     03F3                     u145_21:
 10500     03F3  2BF6               	goto	i1l2896
 10501     03F4                     u145_20:
 10502     03F4                     i1l2894:
 10503                           
 10504                           ;main.c: 87:         motorState = 0;
 10505     03F4  01B8               	clrf	_motorState
 10506                           
 10507                           ;main.c: 88:     } else if(currentFloor < targetFloor){
 10508     03F5  2C18               	goto	i1l2914
 10509     03F6                     i1l2896:
 10510     03F6  0863               	movf	_targetFloor,w
 10511     03F7  0264               	subwf	_currentFloor,w
 10512     03F8  1803               	skipnc
 10513     03F9  2BFB               	goto	u146_21
 10514     03FA  2BFC               	goto	u146_20
 10515     03FB                     u146_21:
 10516     03FB  2C0B               	goto	i1l2906
 10517     03FC                     u146_20:
 10518     03FC                     i1l2898:
 10519                           
 10520                           ;main.c: 89:         if(motorState == 2){
 10521     03FC  3002               	movlw	2
 10522     03FD  0638               	xorwf	_motorState,w
 10523     03FE  1D03               	btfss	3,2
 10524     03FF  2C01               	goto	u147_21
 10525     0400  2C02               	goto	u147_20
 10526     0401                     u147_21:
 10527     0401  2C07               	goto	i1l2904
 10528     0402                     u147_20:
 10529     0402                     i1l2900:
 10530                           
 10531                           ;main.c: 90:             directionFlag = 1;
 10532     0402  01B5               	clrf	_directionFlag
 10533     0403  0AB5               	incf	_directionFlag,f
 10534     0404                     i1l2902:
 10535                           
 10536                           ;main.c: 91:             TMR4_StartTimer();
 10537     0404  318F  27AF  3183   	fcall	i1_TMR4_StartTimer
 10538     0407                     i1l2904:
 10539                           
 10540                           ;main.c: 93:         motorState = 1;
 10541     0407  0020               	movlb	0	; select bank0
 10542     0408  01B8               	clrf	_motorState
 10543     0409  0AB8               	incf	_motorState,f
 10544                           
 10545                           ;main.c: 94:     } else{
 10546     040A  2C18               	goto	i1l2914
 10547     040B                     i1l2906:
 10548                           
 10549                           ;main.c: 95:         if(motorState == 1){
 10550     040B  0338               	decf	_motorState,w
 10551     040C  1D03               	btfss	3,2
 10552     040D  2C0F               	goto	u148_21
 10553     040E  2C10               	goto	u148_20
 10554     040F                     u148_21:
 10555     040F  2C15               	goto	i1l2912
 10556     0410                     u148_20:
 10557     0410                     i1l2908:
 10558                           
 10559                           ;main.c: 96:             directionFlag = 1;
 10560     0410  01B5               	clrf	_directionFlag
 10561     0411  0AB5               	incf	_directionFlag,f
 10562     0412                     i1l2910:
 10563                           
 10564                           ;main.c: 97:             TMR4_StartTimer();
 10565     0412  318F  27AF  3183   	fcall	i1_TMR4_StartTimer
 10566     0415                     i1l2912:
 10567                           
 10568                           ;main.c: 99:         motorState = 2;
 10569     0415  3002               	movlw	2
 10570     0416  0020               	movlb	0	; select bank0
 10571     0417  00B8               	movwf	_motorState
 10572     0418                     i1l2914:
 10573                           
 10574                           ;main.c: 101:     sendMotor();
 10575     0418  3182  22AB  3183   	fcall	i1_sendMotor
 10576     041B                     i1l846:
 10577     041B  0008               	return
 10578     041C                     __end_ofi1_updateMotor:
 10579                           
 10580                           	psect	text77
 10581     02AB                     __ptext77:	
 10582 ;; *************** function i1_sendMotor *****************
 10583 ;; Defined at:
 10584 ;;		line 57 in file "main.c"
 10585 ;; Parameters:    Size  Location     Type
 10586 ;;		None
 10587 ;; Auto vars:     Size  Location     Type
 10588 ;;		None
 10589 ;; Return value:  Size  Location     Type
 10590 ;;                  1    wreg      void 
 10591 ;; Registers used:
 10592 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10593 ;; Tracked objects:
 10594 ;;		On entry : 0/0
 10595 ;;		On exit  : 0/0
 10596 ;;		Unchanged: 0/0
 10597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10598 ;;      Params:         0       0       0       0       0       0
 10599 ;;      Locals:         0       0       0       0       0       0
 10600 ;;      Temps:          2       0       0       0       0       0
 10601 ;;      Totals:         2       0       0       0       0       0
 10602 ;;Total ram usage:        2 bytes
 10603 ;; Hardware stack levels used: 1
 10604 ;; Hardware stack levels required when called: 1
 10605 ;; This function calls:
 10606 ;;		i1_PWM3_LoadDutyValue
 10607 ;; This function is called by:
 10608 ;;		i1_updateMotor
 10609 ;; This function uses a non-reentrant model
 10610 ;;
 10611                           
 10612     02AB                     i1_sendMotor:	
 10613                           ;psect for function i1_sendMotor
 10614                           
 10615     02AB                     i1l2744:	
 10616                           ;incstack = 0
 10617                           ; Regs used in i1_sendMotor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10618                           
 10619                           
 10620                           ;main.c: 58:     if(floorFlag || directionFlag){
 10621     02AB  0020               	movlb	0	; select bank0
 10622     02AC  0836               	movf	_floorFlag,w
 10623     02AD  1D03               	btfss	3,2
 10624     02AE  2AB0               	goto	u117_21
 10625     02AF  2AB1               	goto	u117_20
 10626     02B0                     u117_21:
 10627     02B0  2AB6               	goto	i1l2748
 10628     02B1                     u117_20:
 10629     02B1                     i1l2746:
 10630     02B1  0835               	movf	_directionFlag,w
 10631     02B2  1903               	btfsc	3,2
 10632     02B3  2AB5               	goto	u118_21
 10633     02B4  2AB6               	goto	u118_20
 10634     02B5                     u118_21:
 10635     02B5  2AD8               	goto	i1l2766
 10636     02B6                     u118_20:
 10637     02B6                     i1l2748:
 10638                           
 10639                           ;main.c: 59:         PWM3_LoadDutyValue(0);
 10640     02B6  3000               	movlw	0
 10641     02B7  00F0               	movwf	i1PWM3_LoadDutyValue@dutyValue
 10642     02B8  00F1               	movwf	i1PWM3_LoadDutyValue@dutyValue+1
 10643     02B9  3185  25EF  3182   	fcall	i1_PWM3_LoadDutyValue
 10644                           
 10645                           ;main.c: 60:     } else{
 10646     02BC  2AEB               	goto	i1l837
 10647     02BD                     i1l828:	
 10648                           ;main.c: 66:                 do { LATAbits.LATA7 = 1; } while(0);
 10649                           
 10650     02BD  0022               	movlb	2	; select bank2
 10651     02BE  178C               	bsf	12,7	;volatile
 10652     02BF                     i1l2752:
 10653                           
 10654                           ;main.c: 67:                 if(currentFloor == 4){
 10655     02BF  3004               	movlw	4
 10656     02C0  0020               	movlb	0	; select bank0
 10657     02C1  0664               	xorwf	_currentFloor,w
 10658     02C2  1D03               	btfss	3,2
 10659     02C3  2AC5               	goto	u119_21
 10660     02C4  2AC6               	goto	u119_20
 10661     02C5                     u119_21:
 10662     02C5  2AC7               	goto	i1l2756
 10663     02C6                     u119_20:
 10664     02C6  2AB6               	goto	i1l2748
 10665     02C7                     i1l2756:
 10666                           
 10667                           ;main.c: 70:                     PWM3_LoadDutyValue(409);
 10668     02C7  3099               	movlw	153
 10669     02C8  00F0               	movwf	i1PWM3_LoadDutyValue@dutyValue
 10670     02C9  3001               	movlw	1
 10671     02CA  00F1               	movwf	i1PWM3_LoadDutyValue@dutyValue+1
 10672     02CB  3185  25EF  3182   	fcall	i1_PWM3_LoadDutyValue
 10673     02CE  2AEB               	goto	i1l837
 10674     02CF                     i1l833:	
 10675                           ;main.c: 74:                 do { LATAbits.LATA7 = 0; } while(0);
 10676                           
 10677     02CF  0022               	movlb	2	; select bank2
 10678     02D0  138C               	bcf	12,7	;volatile
 10679     02D1                     i1l2758:
 10680                           
 10681                           ;main.c: 75:                 if(currentFloor == 1){
 10682     02D1  0020               	movlb	0	; select bank0
 10683     02D2  0364               	decf	_currentFloor,w
 10684     02D3  1D03               	btfss	3,2
 10685     02D4  2AD6               	goto	u120_21
 10686     02D5  2AD7               	goto	u120_20
 10687     02D6                     u120_21:
 10688     02D6  2AC7               	goto	i1l2756
 10689     02D7                     u120_20:
 10690     02D7  2AB6               	goto	i1l2748
 10691     02D8                     i1l2766:
 10692     02D8  0838               	movf	_motorState,w
 10693     02D9  00F4               	movwf	??i1_sendMotor
 10694     02DA  01F5               	clrf	??i1_sendMotor+1
 10695                           
 10696                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10697                           ; Switch size 1, requested type "simple"
 10698                           ; Number of cases is 1, Range of values is 0 to 0
 10699                           ; switch strategies available:
 10700                           ; Name         Instructions Cycles
 10701                           ; simple_byte            4     3 (average)
 10702                           ; direct_byte            8     6 (fixed)
 10703                           ; jumptable            260     6 (fixed)
 10704                           ;	Chosen strategy is simple_byte
 10705     02DB  0875               	movf	??i1_sendMotor+1,w
 10706     02DC  3A00               	xorlw	0	; case 0
 10707     02DD  1903               	skipnz
 10708     02DE  2AE0               	goto	i1l4008
 10709     02DF  2AEB               	goto	i1l837
 10710     02E0                     i1l4008:
 10711                           
 10712                           ; Switch size 1, requested type "simple"
 10713                           ; Number of cases is 3, Range of values is 0 to 2
 10714                           ; switch strategies available:
 10715                           ; Name         Instructions Cycles
 10716                           ; simple_byte           10     6 (average)
 10717                           ; direct_byte           12     6 (fixed)
 10718                           ; jumptable            260     6 (fixed)
 10719                           ;	Chosen strategy is simple_byte
 10720     02E0  0874               	movf	??i1_sendMotor,w
 10721     02E1  3A00               	xorlw	0	; case 0
 10722     02E2  1903               	skipnz
 10723     02E3  2AB6               	goto	i1l2748
 10724     02E4  3A01               	xorlw	1	; case 1
 10725     02E5  1903               	skipnz
 10726     02E6  2ABD               	goto	i1l828
 10727     02E7  3A03               	xorlw	3	; case 2
 10728     02E8  1903               	skipnz
 10729     02E9  2ACF               	goto	i1l833
 10730     02EA  2AEB               	goto	i1l837
 10731     02EB                     i1l837:
 10732     02EB  0008               	return
 10733     02EC                     __end_ofi1_sendMotor:
 10734                           
 10735                           	psect	text78
 10736     05EF                     __ptext78:	
 10737 ;; *************** function i1_PWM3_LoadDutyValue *****************
 10738 ;; Defined at:
 10739 ;;		line 82 in file "mcc_generated_files/pwm3.c"
 10740 ;; Parameters:    Size  Location     Type
 10741 ;;  dutyValue       2    0[COMMON] unsigned short 
 10742 ;; Auto vars:     Size  Location     Type
 10743 ;;		None
 10744 ;; Return value:  Size  Location     Type
 10745 ;;                  1    wreg      void 
 10746 ;; Registers used:
 10747 ;;		wreg, status,2, status,0
 10748 ;; Tracked objects:
 10749 ;;		On entry : 0/0
 10750 ;;		On exit  : 0/0
 10751 ;;		Unchanged: 0/0
 10752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10753 ;;      Params:         2       0       0       0       0       0
 10754 ;;      Locals:         0       0       0       0       0       0
 10755 ;;      Temps:          2       0       0       0       0       0
 10756 ;;      Totals:         4       0       0       0       0       0
 10757 ;;Total ram usage:        4 bytes
 10758 ;; Hardware stack levels used: 1
 10759 ;; This function calls:
 10760 ;;		Nothing
 10761 ;; This function is called by:
 10762 ;;		i1_sendMotor
 10763 ;; This function uses a non-reentrant model
 10764 ;;
 10765                           
 10766     05EF                     i1_PWM3_LoadDutyValue:	
 10767                           ;psect for function i1_PWM3_LoadDutyValue
 10768                           
 10769     05EF                     i1l2726:	
 10770                           ;incstack = 0
 10771                           ; Regs used in i1_PWM3_LoadDutyValue: [wreg+status,2+status,0]
 10772                           
 10773                           
 10774                           ;mcc_generated_files/pwm3.c: 82: void PWM3_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm3.c: 83: {;mcc_generated_files/pwm3.c: 85:     CCPR3L = ((dutyValue & 0x03FC
      +                          )>>2);
 10775     05EF  0871               	movf	i1PWM3_LoadDutyValue@dutyValue+1,w
 10776     05F0  00F3               	movwf	??i1_PWM3_LoadDutyValue+1
 10777     05F1  0870               	movf	i1PWM3_LoadDutyValue@dutyValue,w
 10778     05F2  00F2               	movwf	??i1_PWM3_LoadDutyValue
 10779     05F3  36F3               	lsrf	??i1_PWM3_LoadDutyValue+1,f
 10780     05F4  0CF2               	rrf	??i1_PWM3_LoadDutyValue,f
 10781     05F5  36F3               	lsrf	??i1_PWM3_LoadDutyValue+1,f
 10782     05F6  0CF2               	rrf	??i1_PWM3_LoadDutyValue,f
 10783     05F7  0872               	movf	??i1_PWM3_LoadDutyValue,w
 10784     05F8  0026               	movlb	6	; select bank6
 10785     05F9  0091               	movwf	17	;volatile
 10786                           
 10787                           ;mcc_generated_files/pwm3.c: 88:     CCP3CON = ((uint8_t)(CCP3CON & 0xCF) | ((dutyValue 
      +                          & 0x0003)<<4));
 10788     05FA  0870               	movf	i1PWM3_LoadDutyValue@dutyValue,w
 10789     05FB  3903               	andlw	3
 10790     05FC  00F2               	movwf	??i1_PWM3_LoadDutyValue
 10791     05FD  3004               	movlw	4
 10792     05FE                     u116_25:
 10793     05FE  35F2               	lslf	??i1_PWM3_LoadDutyValue,f
 10794     05FF  0B89               	decfsz	9,f
 10795     0600  2DFE               	goto	u116_25
 10796     0601  0813               	movf	19,w	;volatile
 10797     0602  39CF               	andlw	207
 10798     0603  0472               	iorwf	??i1_PWM3_LoadDutyValue,w
 10799     0604  0093               	movwf	19	;volatile
 10800     0605                     i1l75:
 10801     0605  0008               	return
 10802     0606                     __end_ofi1_PWM3_LoadDutyValue:
 10803                           
 10804                           	psect	text79
 10805     0FAF                     __ptext79:	
 10806 ;; *************** function i1_TMR4_StartTimer *****************
 10807 ;; Defined at:
 10808 ;;		line 87 in file "mcc_generated_files/tmr4.c"
 10809 ;; Parameters:    Size  Location     Type
 10810 ;;		None
 10811 ;; Auto vars:     Size  Location     Type
 10812 ;;		None
 10813 ;; Return value:  Size  Location     Type
 10814 ;;                  1    wreg      void 
 10815 ;; Registers used:
 10816 ;;		None
 10817 ;; Tracked objects:
 10818 ;;		On entry : 0/0
 10819 ;;		On exit  : 0/0
 10820 ;;		Unchanged: 0/0
 10821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10822 ;;      Params:         0       0       0       0       0       0
 10823 ;;      Locals:         0       0       0       0       0       0
 10824 ;;      Temps:          0       0       0       0       0       0
 10825 ;;      Totals:         0       0       0       0       0       0
 10826 ;;Total ram usage:        0 bytes
 10827 ;; Hardware stack levels used: 1
 10828 ;; This function calls:
 10829 ;;		Nothing
 10830 ;; This function is called by:
 10831 ;;		i1_updateMotor
 10832 ;; This function uses a non-reentrant model
 10833 ;;
 10834                           
 10835     0FAF                     i1_TMR4_StartTimer:	
 10836                           ;psect for function i1_TMR4_StartTimer
 10837                           
 10838     0FAF                     i1l2742:	
 10839                           ;incstack = 0
 10840                           ; Regs used in i1_TMR4_StartTimer: []
 10841                           
 10842                           
 10843                           ;mcc_generated_files/tmr4.c: 90:     T4CONbits.TMR4ON = 1;
 10844     0FAF  0028               	movlb	8	; select bank8
 10845     0FB0  1517               	bsf	23,2	;volatile
 10846     0FB1                     i1l686:
 10847     0FB1  0008               	return
 10848     0FB2                     __end_ofi1_TMR4_StartTimer:
 10849                           
 10850                           	psect	text80
 10851     04B6                     __ptext80:	
 10852 ;; *************** function i1_updateMatrix *****************
 10853 ;; Defined at:
 10854 ;;		line 104 in file "main.c"
 10855 ;; Parameters:    Size  Location     Type
 10856 ;;		None
 10857 ;; Auto vars:     Size  Location     Type
 10858 ;;  direction       1    6[COMMON] unsigned char 
 10859 ;; Return value:  Size  Location     Type
 10860 ;;                  1    wreg      void 
 10861 ;; Registers used:
 10862 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10863 ;; Tracked objects:
 10864 ;;		On entry : 0/0
 10865 ;;		On exit  : 0/0
 10866 ;;		Unchanged: 0/0
 10867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10868 ;;      Params:         0       0       0       0       0       0
 10869 ;;      Locals:         1       0       0       0       0       0
 10870 ;;      Temps:          0       0       0       0       0       0
 10871 ;;      Totals:         1       0       0       0       0       0
 10872 ;;Total ram usage:        1 bytes
 10873 ;; Hardware stack levels used: 1
 10874 ;; Hardware stack levels required when called: 2
 10875 ;; This function calls:
 10876 ;;		i1_setMatrix
 10877 ;; This function is called by:
 10878 ;;		_TMR4_Interrupt
 10879 ;;		_TMR6_Interrupt
 10880 ;;		_S1_Interrupt
 10881 ;;		_S2_Interrupt
 10882 ;;		_S3_Interrupt
 10883 ;;		_S4_Interrupt
 10884 ;; This function uses a non-reentrant model
 10885 ;;
 10886                           
 10887     04B6                     i1_updateMatrix:	
 10888                           ;psect for function i1_updateMatrix
 10889                           
 10890     04B6                     i1l2916:	
 10891                           ;incstack = 0
 10892                           ; Regs used in i1_updateMatrix: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10893                           
 10894                           
 10895                           ;main.c: 105:     setMatrix(0, currentFloor);
 10896     04B6  0020               	movlb	0	; select bank0
 10897     04B7  0864               	movf	_currentFloor,w
 10898     04B8  00F1               	movwf	i1setMatrix@val
 10899     04B9  3000               	movlw	0
 10900     04BA  3184  2445  3184   	fcall	i1_setMatrix
 10901     04BD                     i1l2918:
 10902     04BD                     i1l2920:
 10903                           
 10904                           ;main.c: 108:     if(motorState==0){
 10905     04BD  0020               	movlb	0	; select bank0
 10906     04BE  0838               	movf	_motorState,w
 10907     04BF  1D03               	btfss	3,2
 10908     04C0  2CC2               	goto	u149_21
 10909     04C1  2CC3               	goto	u149_20
 10910     04C2                     u149_21:
 10911     04C2  2CC6               	goto	i1l2924
 10912     04C3                     u149_20:
 10913     04C3                     i1l2922:
 10914                           
 10915                           ;main.c: 109:         direction = 12;
 10916     04C3  300C               	movlw	12
 10917     04C4  00F6               	movwf	i1updateMatrix@direction
 10918                           
 10919                           ;main.c: 110:     } else if(motorState==1){
 10920     04C5  2CD0               	goto	i1l2930
 10921     04C6                     i1l2924:
 10922     04C6  0338               	decf	_motorState,w
 10923     04C7  1D03               	btfss	3,2
 10924     04C8  2CCA               	goto	u150_21
 10925     04C9  2CCB               	goto	u150_20
 10926     04CA                     u150_21:
 10927     04CA  2CCE               	goto	i1l2928
 10928     04CB                     u150_20:
 10929     04CB                     i1l2926:
 10930                           
 10931                           ;main.c: 111:         direction = 10;
 10932     04CB  300A               	movlw	10
 10933     04CC  00F6               	movwf	i1updateMatrix@direction
 10934                           
 10935                           ;main.c: 112:     } else{
 10936     04CD  2CD0               	goto	i1l2930
 10937     04CE                     i1l2928:
 10938                           
 10939                           ;main.c: 113:         direction = 11;
 10940     04CE  300B               	movlw	11
 10941     04CF  00F6               	movwf	i1updateMatrix@direction
 10942     04D0                     i1l2930:
 10943                           
 10944                           ;main.c: 116:     setMatrix(4, direction);
 10945     04D0  0876               	movf	i1updateMatrix@direction,w
 10946     04D1  00F1               	movwf	i1setMatrix@val
 10947     04D2  3004               	movlw	4
 10948     04D3  3184  2445  3184   	fcall	i1_setMatrix
 10949     04D6                     i1l853:
 10950     04D6  0008               	return
 10951     04D7                     __end_ofi1_updateMatrix:
 10952                           
 10953                           	psect	text81
 10954     0445                     __ptext81:	
 10955 ;; *************** function i1_setMatrix *****************
 10956 ;; Defined at:
 10957 ;;		line 110 in file "ledMatrix.c"
 10958 ;; Parameters:    Size  Location     Type
 10959 ;;  pos             1    wreg     unsigned char 
 10960 ;;  val             1    1[COMMON] unsigned char 
 10961 ;; Auto vars:     Size  Location     Type
 10962 ;;  pos             1    3[COMMON] unsigned char 
 10963 ;;  i               1    5[COMMON] unsigned char 
 10964 ;;  eeAdd           1    4[COMMON] unsigned char 
 10965 ;; Return value:  Size  Location     Type
 10966 ;;                  1    wreg      void 
 10967 ;; Registers used:
 10968 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10969 ;; Tracked objects:
 10970 ;;		On entry : 0/0
 10971 ;;		On exit  : 0/0
 10972 ;;		Unchanged: 0/0
 10973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10974 ;;      Params:         1       0       0       0       0       0
 10975 ;;      Locals:         3       0       0       0       0       0
 10976 ;;      Temps:          1       0       0       0       0       0
 10977 ;;      Totals:         5       0       0       0       0       0
 10978 ;;Total ram usage:        5 bytes
 10979 ;; Hardware stack levels used: 1
 10980 ;; Hardware stack levels required when called: 1
 10981 ;; This function calls:
 10982 ;;		i1_DATAEE_ReadByte
 10983 ;; This function is called by:
 10984 ;;		i1_updateMatrix
 10985 ;; This function uses a non-reentrant model
 10986 ;;
 10987                           
 10988     0445                     i1_setMatrix:	
 10989                           ;psect for function i1_setMatrix
 10990                           
 10991                           
 10992                           ;incstack = 0
 10993                           ; Regs used in i1_setMatrix: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10994                           ;i1setMatrix@pos stored from wreg
 10995     0445  00F3               	movwf	i1setMatrix@pos
 10996     0446                     i1l2772:
 10997                           
 10998                           ;ledMatrix.c: 114:  uint8_t eeAdd = val<<2;
 10999     0446  0871               	movf	i1setMatrix@val,w
 11000     0447  00F2               	movwf	??i1_setMatrix
 11001     0448  3001               	movlw	1
 11002     0449                     u121_25:
 11003     0449  35F2               	lslf	??i1_setMatrix,f
 11004     044A  3EFF               	addlw	-1
 11005     044B  1D03               	skipz
 11006     044C  2C49               	goto	u121_25
 11007     044D  3572               	lslf	??i1_setMatrix,w
 11008     044E  00F4               	movwf	i1setMatrix@eeAdd
 11009     044F                     i1l2774:
 11010                           
 11011                           ;ledMatrix.c: 115:  for(uint8_t i=0;i<4;i++){
 11012     044F  01F5               	clrf	i1setMatrix@i
 11013     0450                     i1l2780:
 11014                           
 11015                           ;ledMatrix.c: 116:   matrix[pos++]=DATAEE_ReadByte(eeAdd++);
 11016     0450  0873               	movf	i1setMatrix@pos,w
 11017     0451  3E20               	addlw	(low (_matrix| 0))& (0+255)
 11018     0452  0086               	movwf	6
 11019     0453  0187               	clrf	7
 11020     0454  0874               	movf	i1setMatrix@eeAdd,w
 11021     0455  3187  2772  3184   	fcall	i1_DATAEE_ReadByte
 11022     0458  0081               	movwf	1
 11023     0459                     i1l2782:
 11024     0459  3001               	movlw	1
 11025     045A  00F2               	movwf	??i1_setMatrix
 11026     045B  0872               	movf	??i1_setMatrix,w
 11027     045C  07F4               	addwf	i1setMatrix@eeAdd,f
 11028     045D                     i1l2784:
 11029     045D  3001               	movlw	1
 11030     045E  00F2               	movwf	??i1_setMatrix
 11031     045F  0872               	movf	??i1_setMatrix,w
 11032     0460  07F3               	addwf	i1setMatrix@pos,f
 11033     0461                     i1l2786:
 11034                           
 11035                           ;ledMatrix.c: 117:     }
 11036     0461  3001               	movlw	1
 11037     0462  00F2               	movwf	??i1_setMatrix
 11038     0463  0872               	movf	??i1_setMatrix,w
 11039     0464  07F5               	addwf	i1setMatrix@i,f
 11040     0465                     i1l2788:
 11041     0465  3004               	movlw	4
 11042     0466  0275               	subwf	i1setMatrix@i,w
 11043     0467  1C03               	skipc
 11044     0468  2C6A               	goto	u122_21
 11045     0469  2C6B               	goto	u122_20
 11046     046A                     u122_21:
 11047     046A  2C50               	goto	i1l2780
 11048     046B                     u122_20:
 11049     046B                     i1l941:
 11050     046B  0008               	return
 11051     046C                     __end_ofi1_setMatrix:
 11052                           
 11053                           	psect	text82
 11054     0772                     __ptext82:	
 11055 ;; *************** function i1_DATAEE_ReadByte *****************
 11056 ;; Defined at:
 11057 ;;		line 211 in file "mcc_generated_files/memory.c"
 11058 ;; Parameters:    Size  Location     Type
 11059 ;;  bAdd            1    wreg     unsigned char 
 11060 ;; Auto vars:     Size  Location     Type
 11061 ;;  bAdd            1    0[COMMON] unsigned char 
 11062 ;; Return value:  Size  Location     Type
 11063 ;;                  1    wreg      unsigned char 
 11064 ;; Registers used:
 11065 ;;		wreg
 11066 ;; Tracked objects:
 11067 ;;		On entry : 0/0
 11068 ;;		On exit  : 0/0
 11069 ;;		Unchanged: 0/0
 11070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11071 ;;      Params:         0       0       0       0       0       0
 11072 ;;      Locals:         1       0       0       0       0       0
 11073 ;;      Temps:          0       0       0       0       0       0
 11074 ;;      Totals:         1       0       0       0       0       0
 11075 ;;Total ram usage:        1 bytes
 11076 ;; Hardware stack levels used: 1
 11077 ;; This function calls:
 11078 ;;		Nothing
 11079 ;; This function is called by:
 11080 ;;		i1_setMatrix
 11081 ;; This function uses a non-reentrant model
 11082 ;;
 11083                           
 11084     0772                     i1_DATAEE_ReadByte:	
 11085                           ;psect for function i1_DATAEE_ReadByte
 11086                           
 11087                           
 11088                           ;incstack = 0
 11089                           ; Regs used in i1_DATAEE_ReadByte: [wreg]
 11090                           ;i1DATAEE_ReadByte@bAdd stored from wreg
 11091     0772  00F0               	movwf	i1DATAEE_ReadByte@bAdd
 11092     0773                     i1l2728:
 11093                           
 11094                           ;mcc_generated_files/memory.c: 211: uint8_t DATAEE_ReadByte(uint8_t bAdd);mcc_generated_
      +                          files/memory.c: 212: {;mcc_generated_files/memory.c: 213:     EEADRL = (uint8_t)(bAdd & 
      +                          0x0ff);
 11095     0773  0870               	movf	i1DATAEE_ReadByte@bAdd,w
 11096     0774  0023               	movlb	3	; select bank3
 11097     0775  0091               	movwf	17	;volatile
 11098     0776                     i1l2730:
 11099                           
 11100                           ;mcc_generated_files/memory.c: 214:     EECON1bits.CFGS = 0;
 11101     0776  1315               	bcf	21,6	;volsfr
 11102     0777                     i1l2732:
 11103                           
 11104                           ;mcc_generated_files/memory.c: 215:     EECON1bits.EEPGD = 0;
 11105     0777  1395               	bcf	21,7	;volsfr
 11106     0778                     i1l2734:
 11107                           
 11108                           ;mcc_generated_files/memory.c: 216:     EECON1bits.RD = 1;
 11109     0778  1415               	bsf	21,0	;volsfr
 11110     0779                     i1l2736:
 11111                           
 11112                           ;mcc_generated_files/memory.c: 217:     __nop();
 11113     0779  0000               	nop
 11114     077A                     i1l2738:
 11115                           
 11116                           ;mcc_generated_files/memory.c: 218:     __nop();
 11117     077A  0000               	nop
 11118                           
 11119                           ;mcc_generated_files/memory.c: 220:     return (EEDATL);
 11120     077B  0023               	movlb	3	; select bank3
 11121     077C  0813               	movf	19,w	;volatile
 11122     077D                     i1l568:
 11123     077D  0008               	return
 11124     077E                     __end_ofi1_DATAEE_ReadByte:
 11125                           
 11126                           	psect	text83
 11127     0FAC                     __ptext83:	
 11128 ;; *************** function _TMR6_StartTimer *****************
 11129 ;; Defined at:
 11130 ;;		line 87 in file "mcc_generated_files/tmr6.c"
 11131 ;; Parameters:    Size  Location     Type
 11132 ;;		None
 11133 ;; Auto vars:     Size  Location     Type
 11134 ;;		None
 11135 ;; Return value:  Size  Location     Type
 11136 ;;                  1    wreg      void 
 11137 ;; Registers used:
 11138 ;;		None
 11139 ;; Tracked objects:
 11140 ;;		On entry : 0/0
 11141 ;;		On exit  : 0/0
 11142 ;;		Unchanged: 0/0
 11143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11144 ;;      Params:         0       0       0       0       0       0
 11145 ;;      Locals:         0       0       0       0       0       0
 11146 ;;      Temps:          0       0       0       0       0       0
 11147 ;;      Totals:         0       0       0       0       0       0
 11148 ;;Total ram usage:        0 bytes
 11149 ;; Hardware stack levels used: 1
 11150 ;; This function calls:
 11151 ;;		Nothing
 11152 ;; This function is called by:
 11153 ;;		_S1_Interrupt
 11154 ;;		_S2_Interrupt
 11155 ;;		_S3_Interrupt
 11156 ;;		_S4_Interrupt
 11157 ;; This function uses a non-reentrant model
 11158 ;;
 11159                           
 11160     0FAC                     _TMR6_StartTimer:	
 11161                           ;psect for function _TMR6_StartTimer
 11162                           
 11163     0FAC                     i1l2818:	
 11164                           ;incstack = 0
 11165                           ; Regs used in _TMR6_StartTimer: []
 11166                           
 11167                           
 11168                           ;mcc_generated_files/tmr6.c: 90:     T6CONbits.TMR6ON = 1;
 11169     0FAC  0028               	movlb	8	; select bank8
 11170     0FAD  151E               	bsf	30,2	;volatile
 11171     0FAE                     i1l632:
 11172     0FAE  0008               	return
 11173     0FAF                     __end_of_TMR6_StartTimer:
 11174                           
 11175                           	psect	text84
 11176     067F                     __ptext84:	
 11177 ;; *************** function _CCP4_CaptureISR *****************
 11178 ;; Defined at:
 11179 ;;		line 89 in file "mcc_generated_files/ccp4.c"
 11180 ;; Parameters:    Size  Location     Type
 11181 ;;		None
 11182 ;; Auto vars:     Size  Location     Type
 11183 ;;  module          2    3[COMMON] struct CCPR4Reg_tag
 11184 ;; Return value:  Size  Location     Type
 11185 ;;                  1    wreg      void 
 11186 ;; Registers used:
 11187 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11188 ;; Tracked objects:
 11189 ;;		On entry : 0/0
 11190 ;;		On exit  : 0/0
 11191 ;;		Unchanged: 0/0
 11192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11193 ;;      Params:         0       0       0       0       0       0
 11194 ;;      Locals:         2       0       0       0       0       0
 11195 ;;      Temps:          0       0       0       0       0       0
 11196 ;;      Totals:         2       0       0       0       0       0
 11197 ;;Total ram usage:        2 bytes
 11198 ;; Hardware stack levels used: 1
 11199 ;; Hardware stack levels required when called: 2
 11200 ;; This function calls:
 11201 ;;		Absolute function
 11202 ;;		_CCP4_DefaultCallBack
 11203 ;;		_CCP4_Interrupt
 11204 ;; This function is called by:
 11205 ;;		_INTERRUPT_InterruptManager
 11206 ;; This function uses a non-reentrant model
 11207 ;;
 11208                           
 11209     067F                     _CCP4_CaptureISR:	
 11210                           ;psect for function _CCP4_CaptureISR
 11211                           
 11212     067F                     i1l3406:	
 11213                           ;incstack = 0
 11214                           ; Regs used in _CCP4_CaptureISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11215                           
 11216                           
 11217                           ;mcc_generated_files/ccp4.c: 91:     CCP4_PERIOD_REG_T module;;mcc_generated_files/ccp4.
      +                          c: 94:     PIR3bits.CCP4IF = 0;
 11218     067F  0020               	movlb	0	; select bank0
 11219     0680  1293               	bcf	19,5	;volatile
 11220     0681                     i1l3408:
 11221                           
 11222                           ;mcc_generated_files/ccp4.c: 97:     module.ccpr4l = CCPR4L;
 11223     0681  0026               	movlb	6	; select bank6
 11224     0682  0818               	movf	24,w	;volatile
 11225     0683  00F3               	movwf	CCP4_CaptureISR@module
 11226                           
 11227                           ;mcc_generated_files/ccp4.c: 98:     module.ccpr4h = CCPR4H;
 11228     0684  0819               	movf	25,w	;volatile
 11229     0685  00F4               	movwf	CCP4_CaptureISR@module+1
 11230     0686                     i1l3410:
 11231                           
 11232                           ;mcc_generated_files/ccp4.c: 101:     CCP4_CallBack(module.ccpr4_16Bit);
 11233     0686  0874               	movf	CCP4_CaptureISR@module+1,w
 11234     0687  00F1               	movwf	CCP4_Interrupt@capturedValue+1
 11235     0688  0873               	movf	CCP4_CaptureISR@module,w
 11236     0689  00F0               	movwf	CCP4_Interrupt@capturedValue
 11237     068A  0020               	movlb	0	; select bank0
 11238     068B  0846               	movf	_CCP4_CallBack+1,w
 11239     068C  008A               	movwf	10
 11240     068D  0845               	movf	_CCP4_CallBack,w
 11241     068E  000A               	callw
 11242     068F  3186               	pagesel	$
 11243     0690                     i1l305:
 11244     0690  0008               	return
 11245     0691                     __end_of_CCP4_CaptureISR:
 11246                           
 11247                           	psect	text85
 11248     0FA8                     __ptext85:	
 11249 ;; *************** function _CCP4_DefaultCallBack *****************
 11250 ;; Defined at:
 11251 ;;		line 60 in file "mcc_generated_files/ccp4.c"
 11252 ;; Parameters:    Size  Location     Type
 11253 ;;  capturedValu    2    0[COMMON] unsigned short 
 11254 ;; Auto vars:     Size  Location     Type
 11255 ;;		None
 11256 ;; Return value:  Size  Location     Type
 11257 ;;                  1    wreg      void 
 11258 ;; Registers used:
 11259 ;;		None
 11260 ;; Tracked objects:
 11261 ;;		On entry : 0/0
 11262 ;;		On exit  : 0/0
 11263 ;;		Unchanged: 0/0
 11264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11265 ;;      Params:         2       0       0       0       0       0
 11266 ;;      Locals:         0       0       0       0       0       0
 11267 ;;      Temps:          0       0       0       0       0       0
 11268 ;;      Totals:         2       0       0       0       0       0
 11269 ;;Total ram usage:        2 bytes
 11270 ;; Hardware stack levels used: 1
 11271 ;; This function calls:
 11272 ;;		Nothing
 11273 ;; This function is called by:
 11274 ;;		_CCP4_Initialize
 11275 ;;		_CCP4_CaptureISR
 11276 ;; This function uses a non-reentrant model
 11277 ;;
 11278                           
 11279     0FA8                     _CCP4_DefaultCallBack:	
 11280                           ;psect for function _CCP4_DefaultCallBack
 11281                           
 11282     0FA8                     i1l299:	
 11283                           ;incstack = 0
 11284                           ; Regs used in _CCP4_DefaultCallBack: []
 11285                           
 11286     0FA8  0008               	return
 11287     0FA9                     __end_of_CCP4_DefaultCallBack:
 11288                           
 11289                           	psect	text86
 11290     035C                     __ptext86:	
 11291 ;; *************** function _CCP4_Interrupt *****************
 11292 ;; Defined at:
 11293 ;;		line 169 in file "main.c"
 11294 ;; Parameters:    Size  Location     Type
 11295 ;;  capturedValu    2    0[COMMON] unsigned short 
 11296 ;; Auto vars:     Size  Location     Type
 11297 ;;		None
 11298 ;; Return value:  Size  Location     Type
 11299 ;;                  1    wreg      void 
 11300 ;; Registers used:
 11301 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11302 ;; Tracked objects:
 11303 ;;		On entry : 0/0
 11304 ;;		On exit  : 0/0
 11305 ;;		Unchanged: 0/0
 11306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11307 ;;      Params:         2       0       0       0       0       0
 11308 ;;      Locals:         0       0       0       0       0       0
 11309 ;;      Temps:          1       0       0       0       0       0
 11310 ;;      Totals:         3       0       0       0       0       0
 11311 ;;Total ram usage:        3 bytes
 11312 ;; Hardware stack levels used: 1
 11313 ;; Hardware stack levels required when called: 1
 11314 ;; This function calls:
 11315 ;;		_TMR1_HasOverflowOccured
 11316 ;; This function is called by:
 11317 ;;		_main
 11318 ;;		_CCP4_CaptureISR
 11319 ;; This function uses a non-reentrant model
 11320 ;;
 11321                           
 11322     035C                     _CCP4_Interrupt:	
 11323                           ;psect for function _CCP4_Interrupt
 11324                           
 11325     035C                     i1l3304:	
 11326                           ;incstack = 0
 11327                           ; Regs used in _CCP4_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11328                           
 11329                           
 11330                           ;main.c: 170:     if(PORTAbits.RA7){
 11331     035C  0020               	movlb	0	; select bank0
 11332     035D  1F8C               	btfss	12,7	;volatile
 11333     035E  2B60               	goto	u174_21
 11334     035F  2B61               	goto	u174_20
 11335     0360                     u174_21:
 11336     0360  2B66               	goto	i1l3308
 11337     0361                     u174_20:
 11338     0361                     i1l3306:
 11339                           
 11340                           ;main.c: 171:         position++;
 11341     0361  3001               	movlw	1
 11342     0362  00F2               	movwf	??_CCP4_Interrupt
 11343     0363  0872               	movf	??_CCP4_Interrupt,w
 11344     0364  07E2               	addwf	_position,f
 11345                           
 11346                           ;main.c: 172:     } else{
 11347     0365  2B68               	goto	i1l3310
 11348     0366                     i1l3308:
 11349                           
 11350                           ;main.c: 173:         position--;
 11351     0366  3001               	movlw	1
 11352     0367  02E2               	subwf	_position,f
 11353     0368                     i1l3310:
 11354                           
 11355                           ;main.c: 175:     if(TMR1_HasOverflowOccured()){
 11356     0368  318F  27BE  3183   	fcall	_TMR1_HasOverflowOccured
 11357     036B  3A00               	xorlw	0
 11358     036C  1903               	skipnz
 11359     036D  2B6F               	goto	u175_21
 11360     036E  2B70               	goto	u175_20
 11361     036F                     u175_21:
 11362     036F  2B7C               	goto	i1l3316
 11363     0370                     u175_20:
 11364     0370                     i1l3312:
 11365                           
 11366                           ;main.c: 176:         velocity[++velocity_idx] = 0;
 11367     0370  3001               	movlw	1
 11368     0371  00F2               	movwf	??_CCP4_Interrupt
 11369     0372  0872               	movf	??_CCP4_Interrupt,w
 11370     0373  0020               	movlb	0	; select bank0
 11371     0374  07B4               	addwf	_velocity_idx,f
 11372     0375  0834               	movf	_velocity_idx,w
 11373     0376  3EA0               	addlw	(low (_velocity| 0))& (0+255)
 11374     0377  0086               	movwf	6
 11375     0378  0187               	clrf	7
 11376     0379  0181               	clrf	1
 11377     037A                     i1l3314:
 11378                           
 11379                           ;main.c: 177:         PIR1bits.TMR1IF = 0;
 11380     037A  1011               	bcf	17,0	;volatile
 11381                           
 11382                           ;main.c: 178:     } else{
 11383     037B  2B87               	goto	i1l3318
 11384     037C                     i1l3316:
 11385                           
 11386                           ;main.c: 179:         velocity[++velocity_idx] = capturedValue;
 11387     037C  3001               	movlw	1
 11388     037D  00F2               	movwf	??_CCP4_Interrupt
 11389     037E  0872               	movf	??_CCP4_Interrupt,w
 11390     037F  0020               	movlb	0	; select bank0
 11391     0380  07B4               	addwf	_velocity_idx,f
 11392     0381  0834               	movf	_velocity_idx,w
 11393     0382  3EA0               	addlw	(low (_velocity| 0))& (0+255)
 11394     0383  0086               	movwf	6
 11395     0384  0187               	clrf	7
 11396     0385  0870               	movf	CCP4_Interrupt@capturedValue,w
 11397     0386  0081               	movwf	1
 11398     0387                     i1l3318:
 11399                           
 11400                           ;main.c: 181:     if(velocity_idx>15){
 11401     0387  3010               	movlw	16
 11402     0388  0234               	subwf	_velocity_idx,w
 11403     0389  1C03               	skipc
 11404     038A  2B8C               	goto	u176_21
 11405     038B  2B8D               	goto	u176_20
 11406     038C                     u176_21:
 11407     038C  2B8E               	goto	i1l875
 11408     038D                     u176_20:
 11409     038D                     i1l3320:
 11410                           
 11411                           ;main.c: 182:         velocity_idx = 0;
 11412     038D  01B4               	clrf	_velocity_idx
 11413     038E                     i1l875:
 11414     038E  0008               	return
 11415     038F                     __end_of_CCP4_Interrupt:
 11416                           
 11417                           	psect	text87
 11418     0FBE                     __ptext87:	
 11419 ;; *************** function _TMR1_HasOverflowOccured *****************
 11420 ;; Defined at:
 11421 ;;		line 150 in file "mcc_generated_files/tmr1.c"
 11422 ;; Parameters:    Size  Location     Type
 11423 ;;		None
 11424 ;; Auto vars:     Size  Location     Type
 11425 ;;		None
 11426 ;; Return value:  Size  Location     Type
 11427 ;;                  1    wreg      _Bool 
 11428 ;; Registers used:
 11429 ;;		wreg, status,2, status,0
 11430 ;; Tracked objects:
 11431 ;;		On entry : 0/0
 11432 ;;		On exit  : 0/0
 11433 ;;		Unchanged: 0/0
 11434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11435 ;;      Params:         0       0       0       0       0       0
 11436 ;;      Locals:         0       0       0       0       0       0
 11437 ;;      Temps:          0       0       0       0       0       0
 11438 ;;      Totals:         0       0       0       0       0       0
 11439 ;;Total ram usage:        0 bytes
 11440 ;; Hardware stack levels used: 1
 11441 ;; This function calls:
 11442 ;;		Nothing
 11443 ;; This function is called by:
 11444 ;;		_CCP4_Interrupt
 11445 ;; This function uses a non-reentrant model
 11446 ;;
 11447                           
 11448     0FBE                     _TMR1_HasOverflowOccured:	
 11449                           ;psect for function _TMR1_HasOverflowOccured
 11450                           
 11451     0FBE                     i1l2948:	
 11452                           ;incstack = 0
 11453                           ; Regs used in _TMR1_HasOverflowOccured: [wreg+status,2+status,0]
 11454                           
 11455                           
 11456                           ;mcc_generated_files/tmr1.c: 153:     return(PIR1bits.TMR1IF);
 11457     0FBE  0020               	movlb	0	; select bank0
 11458     0FBF  0811               	movf	17,w	;volatile
 11459     0FC0  3901               	andlw	1
 11460     0FC1                     i1l436:
 11461     0FC1  0008               	return
 11462     0FC2                     __end_of_TMR1_HasOverflowOccured:
 11463     007E                     btemp	set	126	;btemp
 11464     007E                     int$flags	set	126
 11465     007E                     wtemp0	set	126
 11466                           
 11467                           	psect	idloc
 11468                           
 11469                           ;Config register IDLOC0 @ 0x8000
 11470                           ;	unspecified, using default values
 11471     8000                     	org	32768
 11472     8000  3FFF               	dw	16383
 11473                           
 11474                           ;Config register IDLOC1 @ 0x8001
 11475                           ;	unspecified, using default values
 11476     8001                     	org	32769
 11477     8001  3FFF               	dw	16383
 11478                           
 11479                           ;Config register IDLOC2 @ 0x8002
 11480                           ;	unspecified, using default values
 11481     8002                     	org	32770
 11482     8002  3FFF               	dw	16383
 11483                           
 11484                           ;Config register IDLOC3 @ 0x8003
 11485                           ;	unspecified, using default values
 11486     8003                     	org	32771
 11487     8003  3FFF               	dw	16383
 11488                           
 11489                           	psect	config
 11490                           
 11491                           ;Config register CONFIG1 @ 0x8007
 11492                           ;	Oscillator Selection
 11493                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 11494                           ;	Watchdog Timer Enable
 11495                           ;	WDTE = OFF, WDT disabled
 11496                           ;	Power-up Timer Enable
 11497                           ;	PWRTE = OFF, PWRT disabled
 11498                           ;	MCLR Pin Function Select
 11499                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 11500                           ;	Flash Program Memory Code Protection
 11501                           ;	CP = OFF, Program memory code protection is disabled
 11502                           ;	Data Memory Code Protection
 11503                           ;	CPD = OFF, Data memory code protection is disabled
 11504                           ;	Brown-out Reset Enable
 11505                           ;	BOREN = ON, Brown-out Reset enabled
 11506                           ;	Clock Out Enable
 11507                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 11508                           ;	Internal/External Switchover
 11509                           ;	IESO = ON, Internal/External Switchover mode is enabled
 11510                           ;	Fail-Safe Clock Monitor Enable
 11511                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 11512     8007                     	org	32775
 11513     8007  3FE4               	dw	16356
 11514                           
 11515                           ;Config register CONFIG2 @ 0x8008
 11516                           ;	Flash Memory Self-Write Protection
 11517                           ;	WRT = OFF, Write protection off
 11518                           ;	PLL Enable
 11519                           ;	PLLEN = OFF, 4x PLL disabled
 11520                           ;	Stack Overflow/Underflow Reset Enable
 11521                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 11522                           ;	Brown-out Reset Voltage Selection
 11523                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 11524                           ;	Low-Voltage Programming Enable
 11525                           ;	LVP = ON, Low-voltage programming enabled
 11526     8008                     	org	32776
 11527     8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    4
    Data        3
    BSS         41
    Persistent  57
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     18      69
    BANK1            80     10      28
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    CMP1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> S3_Interrupt(), 

    CMP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> S3_Interrupt(), Absolute function(), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_Interrupt(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_Interrupt(), TMR4_DefaultInterruptHandler(), Absolute function(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR6_Interrupt(), TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR6_Interrupt(), TMR6_DefaultInterruptHandler(), Absolute function(), 

    CMP2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> S4_Interrupt(), 

    CMP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> S4_Interrupt(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Interrupt(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Interrupt(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    CCP4_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_Interrupt(), CCP4_DefaultCallBack(), 

    CCP4_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_Interrupt(), CCP4_DefaultCallBack(), Absolute function(), 

    IOCBF3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> S2_Interrupt(), IOCBF3_DefaultInterruptHandler(), 

    IOCBF3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> S2_Interrupt(), Absolute function(), IOCBF3_DefaultInterruptHandler(), 

    IOCBF0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> S1_Interrupt(), IOCBF0_DefaultInterruptHandler(), 

    IOCBF0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> S1_Interrupt(), Absolute function(), IOCBF0_DefaultInterruptHandler(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR6_Interrupt->i1_updateMatrix
    _TMR4_Interrupt->i1_updateMatrix
    _TMR0_Interrupt->___lldiv
    _S2_Interrupt->i1_updateMatrix
    _S1_Interrupt->i1_updateMatrix
    _S4_Interrupt->i1_updateMatrix
    _S3_Interrupt->i1_updateMatrix
    i1_updateMotor->i1_sendMotor
    i1_sendMotor->i1_PWM3_LoadDutyValue
    i1_updateMatrix->i1_setMatrix
    i1_setMatrix->i1_DATAEE_ReadByte
    _CCP4_CaptureISR->_CCP4_Interrupt

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR0_CallBack->_TMR0_Interrupt

Critical Paths under _main in BANK1

    _main->_updateMatrix
    _updateMotor->_sendMotor
    _sendMotor->_PWM3_LoadDutyValue
    _updateMatrix->_setMatrix
    _setMatrix->_DATAEE_ReadByte
    _initMAX7219->_txMAX7219
    _txMAX7219->_SPI1_WriteByte
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF3_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _CCP4_Initialize->_CCP4_SetCallBack

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    5345
                                              7 BANK1      3     3      0
                   _CCP4_SetCallBack
           _CMP1_SetInterruptHandler
           _CMP2_SetInterruptHandler
                        _EUSART_Read
                 _EUSART_is_rx_ready
         _IOCBF0_SetInterruptHandler
         _IOCBF3_SetInterruptHandler
                 _PWM3_LoadDutyValue
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
           _TMR4_SetInterruptHandler
           _TMR6_SetInterruptHandler
                        _initMAX7219
                       _updateMatrix
                        _updateMotor
 ---------------------------------------------------------------------------------
 (1) _updateMotor                                          0     0      0     692
                    _TMR4_StartTimer
                          _sendMotor
 ---------------------------------------------------------------------------------
 (2) _sendMotor                                            2     2      0     692
                                              4 BANK1      2     2      0
                 _PWM3_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _PWM3_LoadDutyValue                                   4     2      2     692
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _updateMatrix                                         1     1      0     424
                                              6 BANK1      1     1      0
                          _setMatrix
 ---------------------------------------------------------------------------------
 (2) _setMatrix                                            5     4      1     381
                                              1 BANK1      5     4      1
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (3) _DATAEE_ReadByte                                      1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _initMAX7219                                          2     2      0     363
                                              3 BANK1      2     2      0
                          _txMAX7219
 ---------------------------------------------------------------------------------
 (2) _txMAX7219                                            2     1      1     363
                                              1 BANK1      2     1      1
                     _SPI1_WriteByte
 ---------------------------------------------------------------------------------
 (3) _SPI1_WriteByte                                       1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1629
                     _ADC_Initialize
                    _CCP4_Initialize
                    _CMP1_Initialize
                    _CMP2_Initialize
                     _DAC_Initialize
                  _EUSART_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM3_Initialize
                    _SPI1_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                    _TMR6_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     211
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR6_SetInterruptHandler                             2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     211
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     422
         _IOCBF0_SetInterruptHandler
         _IOCBF3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCBF3_SetInterruptHandler                           2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCBF0_SetInterruptHandler                           2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     363
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _DAC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP4_Initialize                                      0     0      0     211
                   _CCP4_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP4_SetCallBack                                     2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CMP2_SetInterruptHandler                             2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _CMP1_SetInterruptHandler                             2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0    3917
                    _CCP4_CaptureISR
                           _CMP1_ISR
                           _CMP2_ISR
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
                           _TMR4_ISR
                           _TMR6_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR6_ISR                                             0     0      0     437
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR6_CallBack                                        0     0      0     437
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
                     _TMR6_Interrupt *
 ---------------------------------------------------------------------------------
 (7) _TMR6_Interrupt                                       0     0      0     437
                     _TMR6_StopTimer
                    _TMR6_WriteTimer
                     i1_updateMatrix
                      i1_updateMotor
 ---------------------------------------------------------------------------------
 (8) _TMR6_WriteTimer                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _TMR6_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR6_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR4_ISR                                             0     0      0     437
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR4_CallBack                                        0     0      0     437
                   Absolute function *
       _TMR4_DefaultInterruptHandler *
                     _TMR4_Interrupt *
 ---------------------------------------------------------------------------------
 (7) _TMR4_Interrupt                                       0     0      0     437
                     _TMR4_StopTimer
                    _TMR4_WriteTimer
                     i1_updateMatrix
                      i1_updateMotor
 ---------------------------------------------------------------------------------
 (8) _TMR4_WriteTimer                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _TMR4_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR4_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0    1261
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR0_CallBack                                        0     0      0    1261
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                     _TMR0_Interrupt *
 ---------------------------------------------------------------------------------
 (7) _TMR0_Interrupt                                      18    18      0    1261
                                              0 BANK0     18    18      0
                  _ADC_GetConversion
                       _EUSART_Write
                 _EUSART_is_tx_ready
                            ___lldiv
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (8) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (8) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (8) _EUSART_is_tx_ready                                   1     1      0      24
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _ADC_GetConversion                                    4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _PIN_MANAGER_IOC                                      0     0      0     830
                         _IOCBF0_ISR
                         _IOCBF3_ISR
 ---------------------------------------------------------------------------------
 (6) _IOCBF3_ISR                                           0     0      0     415
                   Absolute function *
     _IOCBF3_DefaultInterruptHandler *
                       _S2_Interrupt *
 ---------------------------------------------------------------------------------
 (7) _S2_Interrupt                                         0     0      0     415
                    _TMR6_StartTimer
                     i1_updateMatrix
                      i1_updateMotor
 ---------------------------------------------------------------------------------
 (7) _IOCBF3_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _IOCBF0_ISR                                           0     0      0     415
                   Absolute function *
     _IOCBF0_DefaultInterruptHandler *
                       _S1_Interrupt *
 ---------------------------------------------------------------------------------
 (7) _S1_Interrupt                                         0     0      0     415
                    _TMR6_StartTimer
                     i1_updateMatrix
                      i1_updateMotor
 ---------------------------------------------------------------------------------
 (7) _IOCBF0_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _CMP2_ISR                                             0     0      0     415
                   Absolute function *
                       _S4_Interrupt *
 ---------------------------------------------------------------------------------
 (6) _S4_Interrupt                                         0     0      0     415
                    _TMR6_StartTimer
                     i1_updateMatrix
                      i1_updateMotor
 ---------------------------------------------------------------------------------
 (5) _CMP1_ISR                                             0     0      0     415
                   Absolute function *
                       _S3_Interrupt *
 ---------------------------------------------------------------------------------
 (6) _S3_Interrupt                                         0     0      0     415
                    _TMR6_StartTimer
                     i1_updateMatrix
                      i1_updateMotor
 ---------------------------------------------------------------------------------
 (8) i1_updateMotor                                        0     0      0     200
                  i1_TMR4_StartTimer
                        i1_sendMotor
 ---------------------------------------------------------------------------------
 (9) i1_sendMotor                                          2     2      0     200
                                              4 COMMON     2     2      0
               i1_PWM3_LoadDutyValue
 ---------------------------------------------------------------------------------
 (10) i1_PWM3_LoadDutyValue                                4     2      2     200
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (9) i1_TMR4_StartTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) i1_updateMatrix                                       1     1      0     215
                                              6 COMMON     1     1      0
                        i1_setMatrix
 ---------------------------------------------------------------------------------
 (9) i1_setMatrix                                          5     4      1     189
                                              1 COMMON     5     4      1
                  i1_DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (10) i1_DATAEE_ReadByte                                   1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _TMR6_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _CCP4_CaptureISR                                      2     2      0     122
                                              3 COMMON     2     2      0
                   Absolute function *
               _CCP4_DefaultCallBack *
                     _CCP4_Interrupt *
 ---------------------------------------------------------------------------------
 (6) _CCP4_Interrupt                                       3     1      2      75
                                              0 COMMON     3     1      2
            _TMR1_HasOverflowOccured
 ---------------------------------------------------------------------------------
 (7) _TMR1_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CCP4_DefaultCallBack                                 2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CCP4_SetCallBack
   _CMP1_SetInterruptHandler
   _CMP2_SetInterruptHandler
   _EUSART_Read
   _EUSART_is_rx_ready
   _IOCBF0_SetInterruptHandler
   _IOCBF3_SetInterruptHandler
   _PWM3_LoadDutyValue
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP4_Initialize
       _CCP4_SetCallBack
     _CMP1_Initialize
     _CMP2_Initialize
     _DAC_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCBF0_SetInterruptHandler
       _IOCBF3_SetInterruptHandler
     _PWM3_Initialize
     _SPI1_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
     _TMR2_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _WDT_Initialize
   _TMR0_SetInterruptHandler
   _TMR4_SetInterruptHandler
   _TMR6_SetInterruptHandler
   _initMAX7219
     _txMAX7219
       _SPI1_WriteByte
   _updateMatrix
     _setMatrix
       _DATAEE_ReadByte
   _updateMotor
     _TMR4_StartTimer
     _sendMotor
       _PWM3_LoadDutyValue

 _INTERRUPT_InterruptManager (ROOT)
   _CCP4_CaptureISR
     Absolute function(Fake) *
     _CCP4_DefaultCallBack *
     _CCP4_Interrupt *
       _TMR1_HasOverflowOccured
   _CMP1_ISR
     Absolute function(Fake) *
     _S3_Interrupt *
       _TMR6_StartTimer
       i1_updateMatrix
         i1_setMatrix
           i1_DATAEE_ReadByte
       i1_updateMotor
         i1_TMR4_StartTimer
         i1_sendMotor
           i1_PWM3_LoadDutyValue
   _CMP2_ISR
     Absolute function(Fake) *
     _S4_Interrupt *
       _TMR6_StartTimer
       i1_updateMatrix
       i1_updateMotor
   _PIN_MANAGER_IOC
     _IOCBF0_ISR
       Absolute function(Fake) *
       _IOCBF0_DefaultInterruptHandler *
       _S1_Interrupt *
         _TMR6_StartTimer
         i1_updateMatrix
         i1_updateMotor
     _IOCBF3_ISR
       Absolute function(Fake) *
       _IOCBF3_DefaultInterruptHandler *
       _S2_Interrupt *
         _TMR6_StartTimer
         i1_updateMatrix
         i1_updateMotor
   _TMR0_ISR
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *
       _TMR0_Interrupt *
         _ADC_GetConversion
         _EUSART_Write
         _EUSART_is_tx_ready
         ___lldiv
         ___lwdiv
         ___wmul
   _TMR4_ISR
     _TMR4_CallBack
       Absolute function(Fake) *
       _TMR4_DefaultInterruptHandler *
       _TMR4_Interrupt *
         _TMR4_StopTimer
         _TMR4_WriteTimer
         i1_updateMatrix
         i1_updateMotor
   _TMR6_ISR
     _TMR6_CallBack
       Absolute function(Fake) *
       _TMR6_DefaultInterruptHandler *
       _TMR6_Interrupt *
         _TMR6_StopTimer
         _TMR6_WriteTimer
         i1_updateMatrix
         i1_updateMotor

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      6F       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     12      45       6       86.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      A      1C       8       35.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      6F      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Oct 02 22:20:10 2022

                              _CCP4_Initialize 066D                             SPI1_WriteByte@byte 00B0  
             ??_IOCBF3_DefaultInterruptHandler 0070                ?_IOCBF3_DefaultInterruptHandler 0070  
                                           l21 0788                                             l72 07B6  
                                           l58 0FEA                              ??_CMP1_Initialize 00B0  
                                           l75 054C                              ??_TMR6_StartTimer 0070  
                       __end_of_FVR_Initialize 0FC6                            ___wmul@multiplicand 0072  
                             ??_TMR6_StopTimer 0070                                _timer0ReloadVal 004F  
                                          l126 0FD8                                            l302 067E  
                                          l118 04B5                                            l135 06C2  
                                          l160 07D1                                            l410 0759  
                                          l139 06D0                                            l163 0FE4  
                                          l308 07E3                                            l157 07DA  
                                          l600 0FDE                                            l257 03EC  
                                          l353 035B                                            l356 0FF7  
                                          l372 07FD                                            l269 07C8  
                                          l279 07BF                                            l455 0646  
                                          l711 07A4                                            l359 0FC9  
                                          l477 07AD                                            l629 0659  
                                          l583 0765                                            l568 0726  
                                          l593 07EC                                            l497 0FFF  
                                          l729 0771                                            l657 079B  
                                          l833 028D                                            l930 052D  
                                          l739 07F5                                            l683 066C  
                                          l931 052E                                            l923 0516  
                                          l828 027A                                            l933 0530  
                                          l925 051D                                            l941 0444  
                                          l853 0490                                            l837 02AA  
                                          l686 0FBA                                            l846 03BD  
                                          l927 0522                                            l928 0528  
                                          l936 0513                                            l953 0FC5  
                                          l897 01CA                                            _PR2 001B  
                                          _PR4 0416                                            _PR6 041D  
                              _timer1ReloadVal 0043                      ?_CMP2_SetInterruptHandler 00B0  
               ?_EUSART_SetFramingErrorHandler 00B0                                _TMR2_Initialize 07F6  
               CCP4_SetCallBack@customCallBack 00B0                                            wreg 0009  
                             _CCP4_SetCallBack 07DB                                   ?_initMAX7219 0070  
                      __end_of_CCP4_CaptureISR 0691                                TMR0_Interrupt@i 0058  
                              TMR0_Interrupt@p 0060                                TMR0_Interrupt@t 005C  
                              TMR0_Interrupt@v 0054                                   ?_EUSART_Read 0070  
                                         l4006 029F                                           l3610 07C9  
                                         l3612 0FDF                                           l3700 03DB  
                                         l3620 07A5                                           l3604 0FE7  
                                         l3710 0671                                           l3614 07C0  
                                         l3702 03E3                                           l3630 0722  
                                         l3622 071C                                           l3606 0531  
                                         l3712 0672                                           l3608 07D2  
                                         l3720 0FF4                                           l3616 07B7  
                                         l3704 03EB                                           l3640 077E  
                                         l3800 0753                                           l3632 0723  
                                         l3624 071F                                           l3618 07DB  
                                         l3714 067A                                           l3706 066D  
                                         l3730 0761                                           l3722 0FF5  
                                         l3650 07AE                                           l3642 0780  
                                         l3802 0757                                           l3626 0720  
                                         l3810 0272                                           l3716 067C  
                                         l3708 0670                                           l3732 0763  
                                         l3660 049A                                           l3652 07B1  
                                         l3644 0782                                           l3740 065D  
                                         l3636 0793                                           l3724 0FC6  
                                         l3628 0721                                           l3804 0FB8  
                                         l3820 028F                                           l3900 03BA  
                                         l3726 075A                                           l3662 049B  
                                         l3734 0FC2                                           l3718 0FF1  
                                         l3670 03BE                                           l3654 07B2  
                                         l3646 0784                                           l3750 07F6  
                                         l3638 079C                                           l3742 065E  
                                         l3910 047E                                           l3902 046C  
                                         l3814 027C                                           l3806 0267  
                                         l3728 075C                                           l3736 0FD9  
                                         l3664 04A3                                           l3680 03CC  
                                         l3672 03C1                                           l3656 07B3  
                                         l3648 0786                                           l3760 0637  
                                         l3752 07F9                                           l3744 0660  
                                         l3920 04FA                                           l3912 0483  
                                         l3904 0474                                           l3808 026D  
                                         l3666 04AB                                           l3658 0491  
                                         l3690 03D6                                           l3682 03CD  
                                         l3674 03C4                                           l3762 063A  
                                         l3754 07FA                                           l3746 0662  
                                         l3738 065A                                           l3770 0647  
                                         l3922 0500                                           l3850 043E  
                                         l3842 0428                                           l3834 041E  
                                         l3914 0487                                           l3906 0474  
                                         l3818 0284                                           l3930 01C4  
                                         l3860 06C2                                           l3668 04B3  
                                         l3692 03D7                                           l3684 03CF  
                                         l3676 03C8                                           l3764 063C  
                                         l3756 07FB                                           l3748 0669  
                                         l3780 0656                                           l3772 064A  
                                         l3852 0518                                           l3924 050D  
                                         l3844 0431                                           l3836 0427  
                                         l3916 048A                                           l3908 047A  
                                         l3828 0296                                           l3940 01E4  
                                         l3932 01C8                                           l3862 06C7  
                                         l3790 0FF8                                           l3782 0766  
                                         l3694 03D8                                           l3686 03D2  
                                         l3678 03CA                                           l3766 063D  
                                         l3758 0632                                           l3774 064B  
                                         l3854 0523                                           l3918 04F6  
                                         l3846 0436                                           l3950 0204  
                                         l3934 01D2                                           l3926 0180  
                                         l3864 06C8                                           l3856 0FD4  
                                         l3792 0FFB                                           l3784 0768  
                                         l3696 03D9                                           l3688 03D4  
                                         l3768 063E                                           l3776 064D  
                                         l3872 0328                                           l3848 043A  
                                         l3880 0396                                           l3952 0207  
                                         l3944 01ED                                           l3936 01DF  
                                         l3928 01C3                                           l3874 07E4  
                                         l3866 06CD                                           l3794 0FFC  
                                         l3786 076D                                           l3698 03DA  
                                         l3778 064F                                           l3890 03A9  
                                         l3882 0398                                           l3946 01F2  
                                         l3938 01E2                                           l3876 07ED  
                                         l3868 06CF                                           l3788 076F  
                                         l3796 074E                                           l3884 039E  
                                         l3892 03AD                                           l3948 01FA  
                                         l3798 0752                                           l3894 03B2  
                                         l3886 03A4                                           l3878 038F  
                                         l3896 03B4                                           l3888 03A6  
                                         l3898 03B7                                           u2200 0272  
                                         u2201 0271                                           u2210 0283  
                                         u2211 0282                                           u2220 0295  
                                         u2300 039E                                           u2221 0294  
                                         u2301 039D                                           _LATA 010C  
                                         u2310 03A4                                           _LATB 010D  
                                         u2311 03A3                                           u2240 0444  
                                         u2320 03B2                                           u2241 0443  
                                         u2321 03B1                                           u2250 0522  
                                         u2330 047A                                           u2251 0521  
                                         u2235 0421                                           u2331 0479  
                                         u2260 052D                                           u2340 0483  
                                         u2261 052C                                           u2341 0482  
                                         u2270 06C7                                           u2190 026D  
                                         u2350 01EC                                           u2271 06C6  
                                         u2407 0506                                           u2191 026C  
                                         u2351 01EB                                           u2280 06CD  
                                         u2360 01FA                                           u2281 06CC  
                                         u2185 0542                                           u2361 01F9  
                                         u2290 0396                                           u2370 0204  
                                         u2291 0395                                           u2371 0203  
                            ??_CMP2_Initialize 00B0                                           u2397 01D8  
                                         i1l75 0605                        _TMR1_HasOverflowOccured 0FBE  
                                         _TMR0 0015                                           _TMR2 001A  
                                         _TMR4 0415                                           _TMR6 041C  
                                         _WPUA 020C                                           _WPUB 020D  
                            ??_TMR6_WriteTimer 0070                                           _main 0180  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E                          i1DATAEE_ReadByte@bAdd 0070  
                                         start 006A                               __end_of_CMP1_ISR 071A  
                             __end_of_CMP2_ISR 070C                          __end_ofi1_updateMotor 041C  
                   ??_TMR4_SetInterruptHandler 00B2                                 i1_updateMatrix 04B6  
                      __end_of_TMR0_Initialize 0647                 ??_TMR0_DefaultInterruptHandler 0070  
                              ?_FVR_Initialize 0070                                  ?_EUSART_Write 0070  
                     _CMP1_SetInterruptHandler 07ED                  __end_of_OSCILLATOR_Initialize 0FF8  
                                        ?_main 0070                         ??_CCP4_DefaultCallBack 0072  
                              __end_of___lldiv 0267                                          _T1CON 0018  
                                        _T2CON 001C                                          _T4CON 0417  
                                        _T6CON 041E                                __end_of___lwdiv 0328  
                                        i1l201 004C                                          i1l202 0068  
                                        i1l123 06DF                                          i1l203 005A  
                                        i1l142 078A                                          i1l208 0068  
                                        i1l305 0690                                          i1l145 0792  
                                        i1l262 06A1                                          i1l272 0FA9  
                                        i1l512 05B3                                          i1l192 0012  
                                        i1l266 06FD                                          i1l282 0FAA  
                                        i1l194 001E                                          i1l515 05BB  
                                        i1l436 0FC1                                          i1l276 06EE  
                                        i1l197 0030                                          i1l470 05EE  
                                        i1l199 003E                                          i1l632 0FAE  
                                        i1l480 0FAB                                          i1l704 0631  
                                        i1l641 0FD3                                          i1l474 074D  
                                        i1l714 0002                                          i1l650 061B  
                                        i1l299 0FA8                                          i1l635 0FB7  
                                        i1l708 0740                                          i1l660 0003  
                                        i1l590 070B                                          i1l654 0733  
                                        i1l568 077D                                          i1l736 0719  
                                        i1l833 02CF                                          i1l828 02BD  
                                        i1l941 046B                                          i1l853 04D6  
                                        i1l837 02EB                                          i1l861 017F  
                                        i1l686 0FB1                                          i1l846 041B  
                                        i1l695 0FCE                                          i1l864 06C1  
                                        i1l689 0FB4                                          i1l875 038E  
                                        i1l891 0584                                          i1l883 0568  
                                        i1l867 06B1                                          i1l887 05A0  
                                        i1l879 05D6                                          _RCREG 0199  
                                        _RCSTA 019D                                          _TMR1H 0017  
                                        _TMR1L 0016                                          _TRISA 008C  
                                        _TRISB 008D                                          _TXREG 019A  
                                        _TXSTA 019E                                _TMR4_Initialize 065A  
                    ?_TMR0_SetInterruptHandler 00B0                      ?_TMR6_SetInterruptHandler 00B0  
                             __end_of_TMR0_ISR 05EF                               __end_of_TMR4_ISR 0632  
                             __end_of_TMR6_ISR 061C                                _DATAEE_ReadByte 071A  
                      __end_of_PIN_MANAGER_IOC 06A2                                 _WDT_Initialize 0FC6  
                                  i1_setMatrix 0445                                    i1_sendMotor 02AB  
                      __end_of_PWM3_Initialize 07B7                        __end_of_TMR1_Initialize 075A  
                                        pclath 000A                                          status 0003  
                      __end_of_CCP4_Initialize 067F                                          wtemp0 007E  
                             i1setMatrix@eeAdd 0074                         __end_ofi1_updateMatrix 04D7  
               ??_TMR6_DefaultInterruptHandler 0070                               ??_DAC_Initialize 00B0  
                              __initialization 006C                                   __end_of_main 020D  
                               ??_EUSART_Write 0070                        __end_of_TMR2_Initialize 07FE  
                  ?_INTERRUPT_InterruptManager 0070                                         ??_main 00B7  
                      _IOCBF0_InterruptHandler 0049                         __end_of_WDT_Initialize 0FCA  
                              _TMR6_Initialize 0647                      ??_TMR1_HasOverflowOccured 0070  
                             ?_CCP4_CaptureISR 0070              _EUSART_DefaultFramingErrorHandler 0000  
                                       _ADCON0 009D                                         _ADCON1 009E  
                   _EUSART_OverrunErrorHandler 004B                                         _ADRESH 009C  
                                       _EEADRH 0192                                         _ADRESL 009B  
                                       _EEADRL 0191                                         _EEDATH 0194  
                                       _CCPR3H 0312                                         _CCPR4H 0319  
                                       _EEDATL 0193                                         _CCPR3L 0311  
                                       _CCPR4L 0318                                         _EECON2 0196  
                                       _ANSELA 018C                                         _ANSELB 018D  
                   __end_of_EUSART_is_rx_ready 0FD9                                         _BORCON 0116  
                                       _T1GCON 0019                                         i1l1106 04E1  
                                       i1l1108 04F5                                         i1l1142 0266  
                                       i1l3000 014C                                         i1l3002 0156  
                                       i1l3012 0164                                         i1l3004 0159  
                                       i1l3020 06B5                                         i1l3014 016D  
                                       i1l3006 0161                                         i1l3022 06B9  
                                       i1l3030 06A5                                         u120_20 02D7  
                                       i1l3040 05BE                                         i1l3016 0172  
                                       i1l3024 06BB                                         i1l3032 06A9  
                                       u200_20 000E                                         u120_21 02D6  
                                       u200_21 000D                                         i1l3050 05D0  
                                       i1l3042 05C3                                         i1l3026 06BE  
                                       i1l3018 06B2                                         i1l3034 06AB  
                                       i1l3052 05D3                                         i1l3044 05C8  
                                       i1l3060 055C                                         i1l3140 06E0  
                                       i1l3036 06AE                                         i1l3028 06A2  
                                       i1l3310 0368                                         i1l3046 05CA  
                                       i1l3038 05BC                                         i1l3134 06EF  
                                       i1l3062 055F                                         i1l3054 054D  
                                       i1l3142 06E7                                         i1l3320 038D  
                                       i1l3312 0370                                         i1l3304 035C  
                                       i1l4008 02E0                                         i1l3400 070C  
                                       i1l3048 05CD                                         i1l3136 06F6  
                                       i1l3064 0562                                         i1l3056 0554  
                                       i1l3144 06EC                                         u201_20 0016  
                                       u201_21 0015                                         i1l3314 037A  
                                       i1l3306 0361                                         i1l3410 0686  
                                       i1l3330 0597                                         i1l3322 0585  
                                       i1l3402 070E                                         i1l3138 06FB  
                                       i1l3066 0565                                         i1l3058 055A  
                                       i1l1386 0327                                         i1l3250 072E  
                                       i1l3316 037C                                         i1l3308 0366  
                                       i1l3332 059A                                         i1l3324 058C  
                                       i1l3404 0714                                         i1l3340 0576  
                                       i1l3244 0741                                         i1l3412 0606  
                                       i1l3500 0027                                         u121_25 0449  
                                       i1l3318 0387                                         i1l3406 067F  
                                       i1l3334 059D                                         i1l3326 0592  
                                       i1l3342 0578                                         i1l3246 0748  
                                       i1l3254 0734                                         i1l3414 0608  
                                       i1l3510 0048                                         i1l3502 002C  
                                       i1l3408 0681                                         u122_20 046B  
                                       i1l3328 0594                                         i1l3344 057B  
                                       i1l3336 0569                                         u130_20 04F1  
                                       i1l3256 073B                                         i1l3248 0727  
                                       i1l3416 0615                                         i1l3512 0051  
                                       u210_20 0051                                         i1l3504 0035  
                                       u202_20 001A                                         u122_21 046A  
                                       u130_21 04F0                                         u210_21 0050  
                                       u202_21 0019                                         i1l2730 0776  
                                       i1l3346 057E                                         i1l3338 0570  
                                       i1l3370 0691                                         i1l2810 05AD  
                                       i1l2802 078A                                         i1l3418 0618  
                                       i1l3514 0056                                         i1l3506 003A  
                                       i1l2732 0777                                         i1l2900 0402  
                                       i1l3348 0581                                         i1l3372 0696  
                                       i1l2812 05B1                                         i1l2804 078F  
                                       i1l3380 05D8                                         i1l2820 0FB5  
                                       i1l3516 005F                                         i1l3508 0043  
                                       i1l2734 0778                                         i1l2742 0FAF  
                                       i1l2726 05EF                                         i1l2910 0412  
                                       i1l2902 0404                                         i1l3374 0699  
                                       i1l2814 05B7                                         i1l2806 05A2  
                                       i1l2830 04D9                                         i1l3382 05E8  
                                       i1l3390 062B                                         i1l2822 0FD0  
                                       i1l3518 0064                                         i1l2736 0779  
                                       i1l2728 0773                                         i1l2920 04BD  
                                       i1l2752 02BF                                         i1l2744 02AB  
                                       i1l2912 0415                                         i1l2904 0407  
                                       i1l3376 069E                                         i1l2808 05AC  
                                       u123_20 06D7                                         u131_20 021D  
                                       i1l2832 04DD                                         i1l3384 05EB  
                                       i1l2824 0FB2                                         i1l3392 062E  
                                       u211_20 0056                                         u203_20 0022  
                                       u123_21 06D6                                         u131_21 021C  
                                       u211_21 0055                                         u203_21 0021  
                                       i1l2818 0FAC                                         i1l2738 077A  
                                       i1l2930 04D0                                         i1l2922 04C3  
                                       i1l2746 02B1                                         i1l2906 040B  
                                       i1l2914 0418                                         i1l3394 06FE  
                                       i1l2850 022F                                         i1l2842 020D  
                                       i1l2834 04E6                                         i1l3378 05D7  
                                       i1l2826 0FCB                                         i1l3386 061C  
                                       i1l3490 000A                                         i1l2780 0450  
                                       i1l2772 0446                                         i1l2924 04C6  
                                       i1l2916 04B6                                         i1l2756 02C7  
                                       i1l2748 02B6                                         i1l2908 0410  
                                       i1l3396 0700                                         i1l2860 0258  
                                       i1l2852 0236                                         i1l2844 021D  
                                       i1l2836 04EB                                         i1l2828 04D7  
                                       i1l3388 061E                                         i1l3492 000E  
                                       i1l2782 0459                                         i1l2774 044F  
                                       i1l2926 04CB                                         i1l2918 04BD  
                                       i1l2758 02D1                                         i1l2766 02D8  
                                       i1l3398 0706                                         i1l2790 06D1  
                                       i1l2854 0248                                         i1l2846 0220  
                                       i1l2862 025E                                         i1l2870 02F4  
                                       i1l2838 04F1                                         i1l3494 0016  
                                       i1l2784 045D                                         i1l2928 04CE  
                                       u124_20 06DC                                         i1l2792 06D2  
                                       i1l2856 0250                                         i1l2848 022B  
                                       i1l2880 0313                                         u140_20 0304  
                                       i1l2872 02F7                                         u212_20 005F  
                                       u204_20 0027                                         i1l3496 001A  
                                       i1l3488 0006                                         u124_21 06DB  
                                       u140_21 0303                                         u212_21 005E  
                                       u204_21 0026                                         i1l2786 0461  
                                       i1l2794 06D7                                         i1l2858 0251  
                                       i1l2882 0317                                         i1l2874 02FC  
                                       i1l2866 02EC                                         i1l3498 0022  
                                       i1l2948 0FBE                                         i1l2788 0465  
                                       i1l2892 03ED                                         i1l2796 06DC  
                                       i1l2884 0318                                         i1l2876 0300  
                                       i1l2868 02EE                                         i1l2972 008C  
                                       u116_25 05FE                                         u132_25 0221  
                                       i1l2894 03F4                                         i1l2798 06DE  
                                       i1l2886 031D                                         i1l2878 0304  
                                       i1l2990 00E1                                         i1l2974 0094  
                                       u117_20 02B1                                         i1l2896 03F6  
                                       u125_20 078F                                         u133_20 022F  
                                       i1l2888 0323                                         i1l2992 00F9  
                                       i1l2984 00BE                                         i1l2976 00A4  
                                       u213_20 0064                                         u205_20 002C  
                                       u117_21 02B0                                         u125_21 078E  
                                       u133_21 022E                                         u213_21 0063  
                                       u205_21 002B                                         i1l2898 03FC  
                                       i1l2994 0104                                         i1l2986 00D0  
                                       i1l2978 00BC                                         i1l2996 0137  
                                       i1l2988 00D4                                         u141_25 0305  
                                       i1l2998 0143                                         u150_20 04CB  
                                       u118_20 02B6                                         u126_20 05B7  
                                       u142_20 0313                                         u206_20 0035  
                                       u150_21 04CA                                         u118_21 02B5  
                                       u126_21 05B6                                         u142_21 0312  
                                       u206_21 0034                                         u134_25 0230  
                                       u142_25 030F                                         u119_20 02C6  
                                       u135_20 0248                                         u127_20 04DD  
                                       u207_20 003A                                         u119_21 02C5  
                                       u135_21 0247                                         u127_21 04DC  
                                       u207_21 0039                                         u135_25 0244  
                                       u143_25 0319                                         u160_20 05C8  
                                       u144_20 0323                                         u152_20 00E1  
                                       u208_20 0043                                         u160_21 05C7  
                                       u144_21 0322                                         u152_21 00E0  
                                       u208_21 0042                                         u136_25 0252  
                                       u128_25 04E2                                         u152_25 00DD  
                                       u145_20 03F4                                         u161_20 0554  
                                       u137_20 025E                                         u153_20 00EF  
                                       u209_20 0048                                         u145_21 03F3  
                                       u161_21 0553                                         u137_21 025D  
                                       u209_21 0047                                         u129_25 04E7  
                                       u153_25 00EB                        TMR4_WriteTimer@timerVal 0070  
                                       u241_27 05AE                                         u146_20 03FC  
                                       u162_20 055A                                         u138_20 02F4  
                                       u154_20 0111                                         u146_21 03FB  
                                       u162_21 0559                                         u138_21 02F3  
                                       u154_25 010D                                         u147_20 0402  
                                       u163_20 06F6                                         _FVRCON 0117  
                                       u147_21 0401                                         u163_21 06F5  
                                       u139_25 02F8                                         u155_25 013A  
                                       u148_20 0410                                         u180_20 0576  
                                       u164_20 06E7                                         u148_21 040F  
                                       u180_21 0575                                         u164_21 06E6  
                                       u156_25 014F                     __end_of_EUSART_is_tx_ready 06E0  
                                       u149_20 04C3                                         u157_20 0161  
                                       u165_20 0748                                         u149_21 04C2  
                                       u157_21 0160                                         u165_21 0747  
                                       u174_20 0361                                         u190_20 0714  
                                       u158_20 017F                                         u166_20 072E  
                                       u174_21 0360                                         u190_21 0713  
                                       u158_21 017E                                         u166_21 072D  
                                       u158_25 017B                                         u175_20 0370  
                                       u159_20 05C3                                         u167_20 073B  
                                       u191_20 0615                                         u175_21 036F  
                                       u159_21 05C2                                         u167_21 073A  
                                       u191_21 0614                                         u176_20 038D  
                                       u176_21 038C                                         u177_20 058C  
                                       u185_20 0696                                         u177_21 058B  
                                       u185_21 0695                                         u178_20 0592  
                                       u186_20 069E                                         u178_21 0591  
                                       u186_21 069D                                         u179_20 0570  
                                       u187_20 05E8                                         u179_21 056F  
                                       u187_21 05E7                                         u188_20 062B  
                                       u188_21 062A                                         u189_20 0706  
                                       u189_21 0705                                         u199_20 000A  
                                       u199_21 0009                                         _OSCCON 0099  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                ?_S1_Interrupt 0070                                         _WDTCON 0097  
                              _TMR4_StartTimer 0FB8                                ?i1_updateMatrix 0070  
                                 _CCPTMRS0bits 029E                                  ?_S2_Interrupt 0070  
                                       ___wmul 04D7                           TMR0_Interrupt@i_1692 005A  
                                    ??___lldiv 0078                                      ??___lwdiv 0074  
                             ?_TMR0_Initialize 0070                                         _matrix 0020  
                      __end_of_TMR4_Initialize 066D                                  _CCP4_CallBack 0045  
                                ?_S3_Interrupt 0070                        __end_of_DATAEE_ReadByte 0727  
         __end_of_TMR4_DefaultInterruptHandler 0003                   _TMR4_DefaultInterruptHandler 0002  
                              _TMR4_WriteTimer 0FCA                                ?_WDT_Initialize 0070  
                     ADC_GetConversion@channel 0073                                  ?_S4_Interrupt 0070  
                                    ?_CMP1_ISR 0070                          __end_of_TMR0_CallBack 074E  
                                    ?_CMP2_ISR 0070       CMP1_SetInterruptHandler@InterruptHandler 00B0  
     TMR4_SetInterruptHandler@InterruptHandler 00B0       TMR6_SetInterruptHandler@InterruptHandler 00B0  
     CMP2_SetInterruptHandler@InterruptHandler 00B0       TMR0_SetInterruptHandler@InterruptHandler 00B0  
   IOCBF3_SetInterruptHandler@InterruptHandler 00B0     IOCBF0_SetInterruptHandler@InterruptHandler 00B0  
                             ?_PIN_MANAGER_IOC 0070                                   ??_IOCBF0_ISR 0077  
                                 ??_IOCBF3_ISR 0077                               ?_PWM3_Initialize 0070  
                             ?_TMR1_Initialize 0070                                 ??_S1_Interrupt 0077  
                            _SYSTEM_Initialize 0328                        __end_of__initialization 0088  
                             ?_CCP4_Initialize 0070                                _CMP1_Initialize 0766  
                           ?_SYSTEM_Initialize 0070                                _TMR6_StartTimer 0FAC  
                                 ?_updateMotor 0070                                 ??_S2_Interrupt 0077  
                     __end_of_CCP4_SetCallBack 07E4               __end_of_CMP2_SetInterruptHandler 07ED  
                               __pcstackCOMMON 0070                          __end_of_TMR4_CallBack 0741  
                                 __pidataBANK0 0FBB                            ??_SYSTEM_Initialize 00B2  
                                    ?_TMR0_ISR 0070                                      ?_TMR4_ISR 0070  
                                    ?_TMR6_ISR 0070                              ??_SPI1_Initialize 00B0  
       __end_of_IOCBF0_DefaultInterruptHandler 0FAA                 _IOCBF0_DefaultInterruptHandler 0FA9  
                             ?_TMR2_Initialize 0070                        __end_of_TMR6_Initialize 065A  
                               ??_S3_Interrupt 0077                             __end_of_IOCBF0_ISR 06FE  
                           __end_of_IOCBF3_ISR 06EF                          __end_of_TMR6_CallBack 0734  
                              _CMP2_Initialize 075A                             _spi1_configuration 07FE  
                               _OPTION_REGbits 0095                                _TMR6_WriteTimer 0FCF  
                        TMR0_ISR@CountCallBack 0032                          TMR6_ISR@CountCallBack 002E  
                ?_TMR4_DefaultInterruptHandler 0070                                 ??_S4_Interrupt 0077  
              ??_EUSART_SetOverrunErrorHandler 00B2         __end_of_IOCBF3_DefaultInterruptHandler 0FAB  
               _IOCBF3_DefaultInterruptHandler 0FAA                                     ??_CMP1_ISR 0077  
                                   ??_CMP2_ISR 0077                        __end_of_TMR4_StartTimer 0FBB  
                    __end_of_SYSTEM_Initialize 035C                                     __pbssBANK0 0020  
                                   __pbssBANK1 00A0                           __end_of_EUSART_Write 0793  
                               _SPI1_WriteByte 0FE5                          _TMR4_InterruptHandler 003B  
                   ??_CMP1_SetInterruptHandler 00B2                               ??_FVR_Initialize 00B0  
                                   __pmaintext 0180                  i1PWM3_LoadDutyValue@dutyValue 0070  
                  CCP4_Interrupt@capturedValue 0070               __end_of_TMR0_SetInterruptHandler 07AE  
                                      ?___wmul 0070                                     ??_TMR0_ISR 007E  
             __end_of_TMR6_SetInterruptHandler 079C                                     ??_TMR4_ISR 0077  
                                   ??_TMR6_ISR 0077                                     __pintentry 0004  
                      __end_of_TMR4_WriteTimer 0FCF                                        _DACCON0 0118  
                                      _DACCON1 0119                                        _CM1CON0 0111  
                                      _CM1CON1 0112                                        _CM2CON0 0113  
                                      _CM2CON1 0114                                        _CCP3CON 0313  
                                      _CCP4CON 031A                                        _BAUDCON 019F  
                             ?_TMR4_Initialize 0070                                        _APFCON0 011D  
                                      _APFCON1 011E                               ?_DATAEE_ReadByte 0070  
                                      _OSCTUNE 0098                                        _SSP1ADD 0212  
                                      _SSP1BUF 0211                        __end_of_CMP1_Initialize 0772  
                     ??_EUSART_SetErrorHandler 00B2                                   ?i1_setMatrix 0071  
                                 ?i1_sendMotor 0070                        __end_of_TMR6_StartTimer 0FAF  
                       __end_of_SPI1_WriteByte 0FEB                   __end_ofi1_PWM3_LoadDutyValue 0606  
                         _ADC_InterruptHandler 0030                        __end_of_CMP2_Initialize 0766  
                                      ___lldiv 020D                                        ___lwdiv 02EC  
                      __end_of_TMR6_WriteTimer 0FD4                       _CMP2_SetInterruptHandler 07E4  
                                      _data_tx 0028                               ?_TMR6_Initialize 0070  
                         __end_of_S1_Interrupt 05D7                                        __ptext1 038F  
                                      __ptext2 0267                                        __ptext3 0531  
                                      __ptext4 0FB8                                        __ptext5 046C  
                                      __ptext6 041C                                        __ptext7 071A  
                                      __ptext8 04F6                                        __ptext9 0514  
                            __end_of_txMAX7219 0531                                      _T1CONbits 0018  
                        _OSCILLATOR_Initialize 0FF1                                      _T2CONbits 001C  
                                    _CMOUTbits 0115                                      _T4CONbits 0417  
                     ??_PIN_MANAGER_Initialize 00B2                                      _IOCBFbits 0396  
                    ?_TMR4_SetInterruptHandler 00B0                                      _IOCBNbits 0395  
                                    _T6CONbits 041E                                      _IOCBPbits 0394  
                         __end_of_S2_Interrupt 0569                                        clrloop0 0FEC  
                             ?_TMR4_StartTimer 0070                           end_of_initialization 0088  
                            __end_of_setMatrix 0445                              __end_of_sendMotor 02AB  
                                 i1setMatrix@i 0075                 ??_TMR4_DefaultInterruptHandler 0070  
                             ??i1_updateMatrix 0076          __end_of_EUSART_SetOverrunErrorHandler 07D2  
                _EUSART_SetOverrunErrorHandler 07C9                                ?_SPI1_WriteByte 0070  
                         __end_of_S3_Interrupt 05A1                              _EUSART_Initialize 0491  
                              ___lldiv@divisor 0070                                ___lldiv@counter 007D  
                           ?_EUSART_Initialize 0070                           __end_of_S4_Interrupt 0585  
                                    _RCSTAbits 019D                             _EUSART_is_rx_ready 0FD4  
                           _EUSART_is_tx_ready 06D1                                     _motorState 0038  
                             ?_TMR4_WriteTimer 0070                          _CMP1_InterruptHandler 0039  
                          ??_EUSART_Initialize 00B2                               ??_WDT_Initialize 00B0  
                     _TMR0_SetInterruptHandler 07A5                                      _PORTAbits 000C  
                          ?_EUSART_is_rx_ready 0070                       _TMR6_SetInterruptHandler 0793  
                               _TMR0_Interrupt 008C                            ?_EUSART_is_tx_ready 0070  
                               txMAX7219@addr0 00B2                                      _TRISBbits 008D  
                 ??_IOCBF0_SetInterruptHandler 00B2                   ??_IOCBF3_SetInterruptHandler 00B2  
                             ?_CMP1_Initialize 0070                               ?_TMR6_StartTimer 0070  
                               _CCP4_Interrupt 035C                      __end_of_EUSART_Initialize 04B6  
                         ??_EUSART_is_rx_ready 00B0                                _SPI1_Initialize 077E  
                         ??_EUSART_is_tx_ready 0070                                      _TXSTAbits 019E  
            CCP4_DefaultCallBack@capturedValue 0070                                  ?_updateMatrix 0070  
                   __end_of_PWM3_LoadDutyValue 054D                                  i1_updateMotor 03ED  
                            ?_CCP4_SetCallBack 00B0                               ?_CMP2_Initialize 0070  
                           ??_CCP4_SetCallBack 00B2                     _EUSART_DefaultErrorHandler 0000  
                             ?_TMR6_WriteTimer 0070                                 __end_of___wmul 04F6  
                       __end_of_TMR0_Interrupt 0180                                   _EUSART_Write 0789  
                               _ADC_Initialize 0FF8                         ?_OSCILLATOR_Initialize 0070  
                         i1_PWM3_LoadDutyValue 05EF                       ?_TMR1_HasOverflowOccured 0070  
                               _TMR4_Interrupt 06B2                            start_initialization 006C  
                                ??_initMAX7219 00B3                         __end_of_CCP4_Interrupt 038F  
                                ??_EUSART_Read 00B0                         _EUSART_is_tx_ready$323 0070  
                      i1updateMatrix@direction 0076                               main@receivedData 00B9  
                               ??_updateMatrix 00B6                            DATAEE_ReadByte@bAdd 00B0  
                               _TMR6_Interrupt 06A2                 ?_EUSART_SetOverrunErrorHandler 00B0  
                               ?i1_updateMotor 0070                                 _TMR4_StopTimer 0FB2  
                   _EUSART_FramingErrorHandler 004D                                       ??___wmul 0074  
                       _EUSART_SetErrorHandler 0FDF                         __end_of_ADC_Initialize 1000  
                                  __pdataBANK0 0062                                ?_TMR0_Interrupt 0070  
                       __end_of_TMR4_Interrupt 06C2                          ?i1_PWM3_LoadDutyValue 0070  
                        CCP4_CaptureISR@module 0073                          TMR4_ISR@CountCallBack 002C  
                                    ___latbits 0001                                  __pcstackBANK0 0050  
                                __pcstackBANK1 00B0                                ?_CCP4_Interrupt 0070  
                               _TMR6_StopTimer 0FB5                        __end_of_SPI1_Initialize 0789  
                        _CMP2_InterruptHandler 003F                         __end_of_TMR6_Interrupt 06B2  
                          __end_of_initMAX7219 0514                                   _currentFloor 0064  
                                 _S1_Interrupt 05BC                            __end_of_EUSART_Read 06D1  
                        _TMR0_InterruptHandler 0041                          _TMR6_InterruptHandler 003D  
                                    __pnvBANK0 0039                                      __pnvBANK1 00BA  
                       __end_of_TMR4_StopTimer 0FB5                        _IOCBF3_InterruptHandler 0047  
                   ??_CMP2_SetInterruptHandler 00B2                               ___lwdiv@dividend 0072  
                       _PIN_MANAGER_Initialize 03BE                                   _S2_Interrupt 054D  
             __end_of_TMR4_SetInterruptHandler 07A5                              ??_CCP4_CaptureISR 0073  
                                     ?___lldiv 0070                                       ?___lwdiv 0070  
                                   setMatrix@i 00B5                __end_of_TMR1_HasOverflowOccured 0FC2  
                              ?_ADC_Initialize 0070                                ?_TMR4_Interrupt 0070  
                 ??_INTERRUPT_InterruptManager 007E                                   _S3_Interrupt 0585  
                                    _floorFlag 0036                      ?_CMP1_SetInterruptHandler 00B0  
                            i1_DATAEE_ReadByte 0772                         __end_of_TMR6_StopTimer 0FB8  
           __end_of_IOCBF0_SetInterruptHandler 07C9                     _IOCBF0_SetInterruptHandler 07C0  
           __end_of_IOCBF3_SetInterruptHandler 07C0                     _IOCBF3_SetInterruptHandler 07B7  
                             ??_SPI1_WriteByte 00B0                                      _txMAX7219 0514  
                           ?i1_DATAEE_ReadByte 0070                                       _CMP1_ISR 070C  
                                     _CMP2_ISR 06FE                                   _S4_Interrupt 0569  
                             ___lwdiv@quotient 0075                                  _TMR0_CallBack 0741  
                                 setMatrix@val 00B1                                   setMatrix@pos 00B3  
                              ?_TMR6_Interrupt 0070                              ??_TMR0_Initialize 00B2  
                        updateMatrix@direction 00B6                            ??i1_DATAEE_ReadByte 0070  
                               ___wmul@product 0074                                       _LATAbits 010C  
       EUSART_SetErrorHandler@interruptHandler 00B0                                       _LATBbits 010D  
                                    _setMatrix 041C                                      _sendMotor 0267  
                                    clear_ram0 0FEB                   __end_of_CCP4_DefaultCallBack 0FA9  
                              ??i1_updateMotor 0076                                       _PIE2bits 0092  
                                     _PIE3bits 0093                              _eusartRxLastError 0037  
                              ?_TMR4_StopTimer 0070                     ??_TMR0_SetInterruptHandler 00B2  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 00B2  
                                     _PIR2bits 0012                                       _PIR3bits 0013  
                   ??_TMR6_SetInterruptHandler 00B2                                       _SSP1CON1 0215  
                                     _SSP1CON2 0216                                       _TMR0_ISR 05D7  
            _EUSART_DefaultOverrunErrorHandler 0000                                       _TMR4_ISR 061C  
                                _TMR4_CallBack 0734                                       _TMR6_ISR 0606  
                                     _SSP1STAT 0214                              ??_PIN_MANAGER_IOC 0077  
                       ??i1_PWM3_LoadDutyValue 0072                                  txMAX7219@dat0 00B1  
                            ??_PWM3_Initialize 00B0                              ??_TMR1_Initialize 00B0  
                                   _ADCON0bits 009D                      __end_ofi1_DATAEE_ReadByte 077E  
                            ___wmul@multiplier 0070                                 _DAC_Initialize 0FD9  
                                _TMR6_CallBack 0727                              ??_CCP4_Initialize 00B2  
                         __end_of_updateMatrix 0491                                ?_TMR6_StopTimer 0070  
                                  _initMAX7219 04F6                                     ?_txMAX7219 00B1  
                               ?_TMR0_CallBack 0070                                    _EUSART_Read 06C2  
                             ?_SPI1_Initialize 0070                              i1_TMR4_StartTimer 0FAF  
                               i1setMatrix@val 0071                                 i1setMatrix@pos 0073  
                            ??_TMR2_Initialize 00B0                             ?i1_TMR4_StartTimer 0070  
                                   ?_setMatrix 00B1                                     ?_sendMotor 0070  
                                   _EECON1bits 0195                                  ??_updateMotor 00B6  
                            _ADC_GetConversion 05A1                                 ?_TMR4_CallBack 0070  
                          ??i1_TMR4_StartTimer 0070                        ??_OSCILLATOR_Initialize 00B0  
                          _EUSART_ErrorHandler 00BA                             ?_ADC_GetConversion 0070  
                       __end_of_DAC_Initialize 0FDF                       _TMR4_SetInterruptHandler 079C  
                           _PWM3_LoadDutyValue 0531                                 ?_TMR6_CallBack 0070  
                          ??_ADC_GetConversion 0072                                 setMatrix@eeAdd 00B4  
                              ___lwdiv@divisor 0070                                ___lwdiv@counter 0077  
                                     __ptext10 0FE5                                       __ptext11 0328  
                                     __ptext20 07A5                                       __ptext12 0FC6  
                                     __ptext21 077E                                       __ptext13 0647  
                                   _T1GCONbits 0019                                       __ptext30 07D2  
                                     __ptext22 07AE                                       __ptext14 0793  
                                     __ptext31 0FDF                                       __ptext23 03BE  
                                     __ptext15 065A                                       __ptext40 07E4  
                                     __ptext32 0FD9                                       __ptext24 07B7  
                                     __ptext16 079C                                       __ptext41 07ED  
                                     __ptext33 075A                                       __ptext25 07C0  
                                     __ptext17 07F6                                       __ptext50 0734  
                                     __ptext34 0766                                       __ptext26 0FF1  
                                     __ptext18 074E                                       __ptext51 0002  
                                     __ptext43 0606                                       __ptext35 066D  
                                     __ptext27 0FC2                                       __ptext19 0632  
                                     __ptext60 02EC                                       __ptext52 06B2  
                                     __ptext44 0727                                       __ptext36 07DB  
                                     __ptext28 0491                                       __ptext61 020D  
                                     __ptext53 0FCA                                       __ptext45 0003  
                                     __ptext37 0FF8                                       __ptext29 07C9  
                                     __ptext70 0FA9                                       __ptext62 06D1  
                                     __ptext54 0FB2                                       __ptext46 06A2  
                                     __ptext38 0FD4                                       __ptext71 05BC  
                                     __ptext63 0789                                       __ptext55 05D7  
                                     __ptext47 0FCF                                       __ptext39 06C2  
                                     __ptext80 04B6                                       __ptext72 06FE  
                                     __ptext64 05A1                                       __ptext56 0741  
                                     __ptext48 0FB5                                       __ptext81 0445  
                                     __ptext73 0569                                       __ptext65 0691  
                                     __ptext57 0FAB                                       __ptext49 061C  
                                     __ptext82 0772                                       __ptext74 070C  
                                     __ptext66 06E0                                       __ptext58 008C  
                          ?_PWM3_LoadDutyValue 00B0                                       __ptext83 0FAC  
                                     __ptext75 0585                                       __ptext67 0FAA  
                                     __ptext59 04D7                                       __ptext84 067F  
                                     __ptext76 03ED                                       __ptext68 054D  
                                     __ptext85 0FA8                                       __ptext77 02AB  
                                     __ptext69 06EF                                       __ptext86 035C  
                                     __ptext78 05EF                                       __ptext87 0FBE  
                                     __ptext79 0FAF                                   _SSP1CON1bits 0215  
                    __end_ofi1_TMR4_StartTimer 0FB2                                     _IOCBF0_ISR 06EF  
                                   _IOCBF3_ISR 06E0                        TMR6_WriteTimer@timerVal 0070  
                            ??_TMR4_Initialize 00B2           __end_of_TMR0_DefaultInterruptHandler 0FAC  
                 _TMR0_DefaultInterruptHandler 0FAB                              ??_DATAEE_ReadByte 00B0  
                    __end_of_ADC_GetConversion 05BC                                  _directionFlag 0035  
                      ?_EUSART_SetErrorHandler 00B0                               ??_TMR0_Interrupt 0050  
EUSART_SetOverrunErrorHandler@interruptHandler 00B0                           ??_PWM3_LoadDutyValue 00B2  
                                     _velocity 00A0                                       int$flags 007E  
                                     _position 0062             __end_of_INTERRUPT_InterruptManager 006A  
                   _INTERRUPT_InterruptManager 0004          __end_of_EUSART_SetFramingErrorHandler 07DB  
                _EUSART_SetFramingErrorHandler 07D2                                ?_DAC_Initialize 0070  
                          __end_of_updateMotor 03BE                               ??_CCP4_Interrupt 0072  
                                   _INTCONbits 000B                           _CCP4_DefaultCallBack 0FA8  
                              ??_TMR0_CallBack 007E                                     _FVRCONbits 0117  
                                  ??_txMAX7219 00B2                                  ??i1_setMatrix 0072  
                                ??i1_sendMotor 0074           __end_of_TMR6_DefaultInterruptHandler 0004  
                 _TMR6_DefaultInterruptHandler 0003                                       intlevel1 0000  
                                  _targetFloor 0063                                _CCP4_CaptureISR 067F  
                             ___lldiv@dividend 0074                        ?_PIN_MANAGER_Initialize 0070  
                            ??_TMR6_Initialize 00B2                 __end_of_EUSART_SetErrorHandler 0FE5  
                                  ??_setMatrix 00B2                                    ??_sendMotor 00B4  
                             ??_ADC_Initialize 00B0                                ??_TMR4_CallBack 0077  
                ?_TMR0_DefaultInterruptHandler 0070               __end_of_CMP1_SetInterruptHandler 07F6  
                             ??_TMR4_Interrupt 0077  EUSART_SetFramingErrorHandler@interruptHandler 00B0  
                  PWM3_LoadDutyValue@dutyValue 00B0                              ??_TMR4_StartTimer 00B0  
                              ??_TMR6_CallBack 0077                                  __pstringtext1 07FE  
                               _FVR_Initialize 0FC2                                     _OPTION_REG 0095  
                        ?_CCP4_DefaultCallBack 0070                               ___lldiv@quotient 0079  
                                 _velocity_idx 0034                                _TMR0_Initialize 0632  
                  ?_IOCBF0_SetInterruptHandler 00B0                    ?_IOCBF3_SetInterruptHandler 00B0  
                             ??_TMR6_Interrupt 0077                                    ?_IOCBF0_ISR 0070  
                           EUSART_Write@txData 0070                                    ?_IOCBF3_ISR 0070  
               __end_of_PIN_MANAGER_Initialize 03ED                               ??_TMR4_StopTimer 0070  
                ?_TMR6_DefaultInterruptHandler 0070                              ??_TMR4_WriteTimer 0070  
             ??_IOCBF0_DefaultInterruptHandler 0070                ?_IOCBF0_DefaultInterruptHandler 0070  
                              _PIN_MANAGER_IOC 0691                            __end_ofi1_setMatrix 046C  
                          __end_ofi1_sendMotor 02EC                                   _updateMatrix 046C  
                              _TMR1_Initialize 074E                                _PWM3_Initialize 07AE  
                   __end_of_spi1_configuration 0802                                    _updateMotor 038F  
