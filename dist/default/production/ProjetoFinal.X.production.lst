

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Oct 02 20:44:56 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	eeprom_data,global,class=EEDATA,space=3,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2
    52                           	psect	text36,local,class=CODE,merge=1,delta=2
    53                           	psect	text37,local,class=CODE,merge=1,delta=2
    54                           	psect	text38,local,class=CODE,merge=1,delta=2
    55                           	psect	text39,local,class=CODE,merge=1,delta=2
    56                           	psect	text40,local,class=CODE,merge=1,delta=2
    57                           	psect	intentry,global,class=CODE,delta=2
    58                           	psect	text42,local,class=CODE,merge=1,delta=2
    59                           	psect	text43,local,class=CODE,merge=1,delta=2
    60                           	psect	text44,local,class=CODE,merge=1,delta=2
    61                           	psect	text45,local,class=CODE,merge=1,delta=2
    62                           	psect	text46,local,class=CODE,merge=1,delta=2
    63                           	psect	text47,local,class=CODE,merge=1,delta=2
    64                           	psect	text48,local,class=CODE,merge=1,delta=2
    65                           	psect	text49,local,class=CODE,merge=1,delta=2
    66                           	psect	text50,local,class=CODE,merge=1,delta=2
    67                           	psect	text51,local,class=CODE,merge=1,delta=2
    68                           	psect	text52,local,class=CODE,merge=1,delta=2
    69                           	psect	text53,local,class=CODE,merge=1,delta=2
    70                           	psect	text54,local,class=CODE,merge=1,delta=2
    71                           	psect	text55,local,class=CODE,merge=1,delta=2
    72                           	psect	text56,local,class=CODE,merge=1,delta=2
    73                           	psect	text57,local,class=CODE,merge=1,delta=2,group=1
    74                           	psect	text58,local,class=CODE,merge=1,delta=2,group=1
    75                           	psect	text59,local,class=CODE,merge=1,delta=2,group=1
    76                           	psect	text60,local,class=CODE,merge=1,delta=2
    77                           	psect	text61,local,class=CODE,merge=1,delta=2
    78                           	psect	text62,local,class=CODE,merge=1,delta=2
    79                           	psect	text63,local,class=CODE,merge=1,delta=2
    80                           	psect	text64,local,class=CODE,merge=1,delta=2
    81                           	psect	text65,local,class=CODE,merge=1,delta=2
    82                           	psect	text66,local,class=CODE,merge=1,delta=2
    83                           	psect	text67,local,class=CODE,merge=1,delta=2
    84                           	psect	text68,local,class=CODE,merge=1,delta=2
    85                           	psect	text69,local,class=CODE,merge=1,delta=2
    86                           	psect	text70,local,class=CODE,merge=1,delta=2
    87                           	psect	text71,local,class=CODE,merge=1,delta=2
    88                           	psect	text72,local,class=CODE,merge=1,delta=2
    89                           	psect	text73,local,class=CODE,merge=1,delta=2
    90                           	psect	text74,local,class=CODE,merge=1,delta=2
    91                           	psect	text75,local,class=CODE,merge=1,delta=2
    92                           	psect	text76,local,class=CODE,merge=1,delta=2
    93                           	psect	text77,local,class=CODE,merge=1,delta=2
    94                           	psect	text78,local,class=CODE,merge=1,delta=2
    95                           	psect	text79,local,class=CODE,merge=1,delta=2
    96                           	psect	text80,local,class=CODE,merge=1,delta=2
    97                           	psect	text81,local,class=CODE,merge=1,delta=2
    98                           	psect	text82,local,class=CODE,merge=1,delta=2
    99                           	psect	text83,local,class=CODE,merge=1,delta=2
   100                           	psect	text84,local,class=CODE,merge=1,delta=2
   101                           	psect	text85,local,class=CODE,merge=1,delta=2
   102                           	psect	text86,local,class=CODE,merge=1,delta=2
   103                           	psect	text87,local,class=CODE,merge=1,delta=2
   104                           	psect	text88,local,class=CODE,merge=1,delta=2
   105                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
   106                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   107                           	dabs	1,0x7E,2
   108     0000                     
   109                           ; Version 2.40
   110                           ; Generated 17/11/2021 GMT
   111                           ; 
   112                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   113                           ; All rights reserved.
   114                           ; 
   115                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   116                           ; 
   117                           ; Redistribution and use in source and binary forms, with or without modification, are
   118                           ; permitted provided that the following conditions are met:
   119                           ; 
   120                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   121                           ;        conditions and the following disclaimer.
   122                           ; 
   123                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   124                           ;        of conditions and the following disclaimer in the documentation and/or other
   125                           ;        materials provided with the distribution. Publication is not required when
   126                           ;        this file is used in an embedded application.
   127                           ; 
   128                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   129                           ;        software without specific prior written permission.
   130                           ; 
   131                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   132                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   133                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   134                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   135                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   136                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   137                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   138                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   139                           ; 
   140                           ; 
   141                           ; Code-generator required, PIC16F1827 Definitions
   142                           ; 
   143                           ; SFR Addresses
   144     0000                     	;# 
   145     0001                     	;# 
   146     0002                     	;# 
   147     0003                     	;# 
   148     0004                     	;# 
   149     0005                     	;# 
   150     0006                     	;# 
   151     0007                     	;# 
   152     0008                     	;# 
   153     0009                     	;# 
   154     000A                     	;# 
   155     000B                     	;# 
   156     000C                     	;# 
   157     000D                     	;# 
   158     0011                     	;# 
   159     0012                     	;# 
   160     0013                     	;# 
   161     0014                     	;# 
   162     0015                     	;# 
   163     0016                     	;# 
   164     0016                     	;# 
   165     0017                     	;# 
   166     0018                     	;# 
   167     0019                     	;# 
   168     001A                     	;# 
   169     001B                     	;# 
   170     001C                     	;# 
   171     001E                     	;# 
   172     001F                     	;# 
   173     008C                     	;# 
   174     008D                     	;# 
   175     0091                     	;# 
   176     0092                     	;# 
   177     0093                     	;# 
   178     0094                     	;# 
   179     0095                     	;# 
   180     0096                     	;# 
   181     0097                     	;# 
   182     0098                     	;# 
   183     0099                     	;# 
   184     009A                     	;# 
   185     009B                     	;# 
   186     009B                     	;# 
   187     009C                     	;# 
   188     009D                     	;# 
   189     009E                     	;# 
   190     010C                     	;# 
   191     010D                     	;# 
   192     0111                     	;# 
   193     0112                     	;# 
   194     0113                     	;# 
   195     0114                     	;# 
   196     0115                     	;# 
   197     0116                     	;# 
   198     0117                     	;# 
   199     0118                     	;# 
   200     0119                     	;# 
   201     011A                     	;# 
   202     011B                     	;# 
   203     011D                     	;# 
   204     011E                     	;# 
   205     018C                     	;# 
   206     018D                     	;# 
   207     0191                     	;# 
   208     0191                     	;# 
   209     0192                     	;# 
   210     0193                     	;# 
   211     0193                     	;# 
   212     0193                     	;# 
   213     0194                     	;# 
   214     0195                     	;# 
   215     0196                     	;# 
   216     0199                     	;# 
   217     019A                     	;# 
   218     019B                     	;# 
   219     019B                     	;# 
   220     019B                     	;# 
   221     019B                     	;# 
   222     019C                     	;# 
   223     019C                     	;# 
   224     019D                     	;# 
   225     019E                     	;# 
   226     019F                     	;# 
   227     020C                     	;# 
   228     020D                     	;# 
   229     0211                     	;# 
   230     0211                     	;# 
   231     0212                     	;# 
   232     0212                     	;# 
   233     0213                     	;# 
   234     0213                     	;# 
   235     0214                     	;# 
   236     0214                     	;# 
   237     0215                     	;# 
   238     0215                     	;# 
   239     0215                     	;# 
   240     0216                     	;# 
   241     0216                     	;# 
   242     0217                     	;# 
   243     0217                     	;# 
   244     0219                     	;# 
   245     021A                     	;# 
   246     021B                     	;# 
   247     021C                     	;# 
   248     021D                     	;# 
   249     021E                     	;# 
   250     021F                     	;# 
   251     0291                     	;# 
   252     0291                     	;# 
   253     0292                     	;# 
   254     0293                     	;# 
   255     0294                     	;# 
   256     0295                     	;# 
   257     0295                     	;# 
   258     0296                     	;# 
   259     0298                     	;# 
   260     0298                     	;# 
   261     0299                     	;# 
   262     029A                     	;# 
   263     029B                     	;# 
   264     029C                     	;# 
   265     029C                     	;# 
   266     029D                     	;# 
   267     029E                     	;# 
   268     029E                     	;# 
   269     0311                     	;# 
   270     0311                     	;# 
   271     0312                     	;# 
   272     0313                     	;# 
   273     0318                     	;# 
   274     0318                     	;# 
   275     0319                     	;# 
   276     031A                     	;# 
   277     0394                     	;# 
   278     0395                     	;# 
   279     0396                     	;# 
   280     039A                     	;# 
   281     039C                     	;# 
   282     039D                     	;# 
   283     039E                     	;# 
   284     039F                     	;# 
   285     0415                     	;# 
   286     0416                     	;# 
   287     0417                     	;# 
   288     041C                     	;# 
   289     041D                     	;# 
   290     041E                     	;# 
   291     0FE4                     	;# 
   292     0FE5                     	;# 
   293     0FE6                     	;# 
   294     0FE7                     	;# 
   295     0FE8                     	;# 
   296     0FE9                     	;# 
   297     0FEA                     	;# 
   298     0FEB                     	;# 
   299     0FED                     	;# 
   300     0FEE                     	;# 
   301     0FEF                     	;# 
   302     0000                     	;# 
   303     0001                     	;# 
   304     0002                     	;# 
   305     0003                     	;# 
   306     0004                     	;# 
   307     0005                     	;# 
   308     0006                     	;# 
   309     0007                     	;# 
   310     0008                     	;# 
   311     0009                     	;# 
   312     000A                     	;# 
   313     000B                     	;# 
   314     000C                     	;# 
   315     000D                     	;# 
   316     0011                     	;# 
   317     0012                     	;# 
   318     0013                     	;# 
   319     0014                     	;# 
   320     0015                     	;# 
   321     0016                     	;# 
   322     0016                     	;# 
   323     0017                     	;# 
   324     0018                     	;# 
   325     0019                     	;# 
   326     001A                     	;# 
   327     001B                     	;# 
   328     001C                     	;# 
   329     001E                     	;# 
   330     001F                     	;# 
   331     008C                     	;# 
   332     008D                     	;# 
   333     0091                     	;# 
   334     0092                     	;# 
   335     0093                     	;# 
   336     0094                     	;# 
   337     0095                     	;# 
   338     0096                     	;# 
   339     0097                     	;# 
   340     0098                     	;# 
   341     0099                     	;# 
   342     009A                     	;# 
   343     009B                     	;# 
   344     009B                     	;# 
   345     009C                     	;# 
   346     009D                     	;# 
   347     009E                     	;# 
   348     010C                     	;# 
   349     010D                     	;# 
   350     0111                     	;# 
   351     0112                     	;# 
   352     0113                     	;# 
   353     0114                     	;# 
   354     0115                     	;# 
   355     0116                     	;# 
   356     0117                     	;# 
   357     0118                     	;# 
   358     0119                     	;# 
   359     011A                     	;# 
   360     011B                     	;# 
   361     011D                     	;# 
   362     011E                     	;# 
   363     018C                     	;# 
   364     018D                     	;# 
   365     0191                     	;# 
   366     0191                     	;# 
   367     0192                     	;# 
   368     0193                     	;# 
   369     0193                     	;# 
   370     0193                     	;# 
   371     0194                     	;# 
   372     0195                     	;# 
   373     0196                     	;# 
   374     0199                     	;# 
   375     019A                     	;# 
   376     019B                     	;# 
   377     019B                     	;# 
   378     019B                     	;# 
   379     019B                     	;# 
   380     019C                     	;# 
   381     019C                     	;# 
   382     019D                     	;# 
   383     019E                     	;# 
   384     019F                     	;# 
   385     020C                     	;# 
   386     020D                     	;# 
   387     0211                     	;# 
   388     0211                     	;# 
   389     0212                     	;# 
   390     0212                     	;# 
   391     0213                     	;# 
   392     0213                     	;# 
   393     0214                     	;# 
   394     0214                     	;# 
   395     0215                     	;# 
   396     0215                     	;# 
   397     0215                     	;# 
   398     0216                     	;# 
   399     0216                     	;# 
   400     0217                     	;# 
   401     0217                     	;# 
   402     0219                     	;# 
   403     021A                     	;# 
   404     021B                     	;# 
   405     021C                     	;# 
   406     021D                     	;# 
   407     021E                     	;# 
   408     021F                     	;# 
   409     0291                     	;# 
   410     0291                     	;# 
   411     0292                     	;# 
   412     0293                     	;# 
   413     0294                     	;# 
   414     0295                     	;# 
   415     0295                     	;# 
   416     0296                     	;# 
   417     0298                     	;# 
   418     0298                     	;# 
   419     0299                     	;# 
   420     029A                     	;# 
   421     029B                     	;# 
   422     029C                     	;# 
   423     029C                     	;# 
   424     029D                     	;# 
   425     029E                     	;# 
   426     029E                     	;# 
   427     0311                     	;# 
   428     0311                     	;# 
   429     0312                     	;# 
   430     0313                     	;# 
   431     0318                     	;# 
   432     0318                     	;# 
   433     0319                     	;# 
   434     031A                     	;# 
   435     0394                     	;# 
   436     0395                     	;# 
   437     0396                     	;# 
   438     039A                     	;# 
   439     039C                     	;# 
   440     039D                     	;# 
   441     039E                     	;# 
   442     039F                     	;# 
   443     0415                     	;# 
   444     0416                     	;# 
   445     0417                     	;# 
   446     041C                     	;# 
   447     041D                     	;# 
   448     041E                     	;# 
   449     0FE4                     	;# 
   450     0FE5                     	;# 
   451     0FE6                     	;# 
   452     0FE7                     	;# 
   453     0FE8                     	;# 
   454     0FE9                     	;# 
   455     0FEA                     	;# 
   456     0FEB                     	;# 
   457     0FED                     	;# 
   458     0FEE                     	;# 
   459     0FEF                     	;# 
   460     0000                     	;# 
   461     0001                     	;# 
   462     0002                     	;# 
   463     0003                     	;# 
   464     0004                     	;# 
   465     0005                     	;# 
   466     0006                     	;# 
   467     0007                     	;# 
   468     0008                     	;# 
   469     0009                     	;# 
   470     000A                     	;# 
   471     000B                     	;# 
   472     000C                     	;# 
   473     000D                     	;# 
   474     0011                     	;# 
   475     0012                     	;# 
   476     0013                     	;# 
   477     0014                     	;# 
   478     0015                     	;# 
   479     0016                     	;# 
   480     0016                     	;# 
   481     0017                     	;# 
   482     0018                     	;# 
   483     0019                     	;# 
   484     001A                     	;# 
   485     001B                     	;# 
   486     001C                     	;# 
   487     001E                     	;# 
   488     001F                     	;# 
   489     008C                     	;# 
   490     008D                     	;# 
   491     0091                     	;# 
   492     0092                     	;# 
   493     0093                     	;# 
   494     0094                     	;# 
   495     0095                     	;# 
   496     0096                     	;# 
   497     0097                     	;# 
   498     0098                     	;# 
   499     0099                     	;# 
   500     009A                     	;# 
   501     009B                     	;# 
   502     009B                     	;# 
   503     009C                     	;# 
   504     009D                     	;# 
   505     009E                     	;# 
   506     010C                     	;# 
   507     010D                     	;# 
   508     0111                     	;# 
   509     0112                     	;# 
   510     0113                     	;# 
   511     0114                     	;# 
   512     0115                     	;# 
   513     0116                     	;# 
   514     0117                     	;# 
   515     0118                     	;# 
   516     0119                     	;# 
   517     011A                     	;# 
   518     011B                     	;# 
   519     011D                     	;# 
   520     011E                     	;# 
   521     018C                     	;# 
   522     018D                     	;# 
   523     0191                     	;# 
   524     0191                     	;# 
   525     0192                     	;# 
   526     0193                     	;# 
   527     0193                     	;# 
   528     0193                     	;# 
   529     0194                     	;# 
   530     0195                     	;# 
   531     0196                     	;# 
   532     0199                     	;# 
   533     019A                     	;# 
   534     019B                     	;# 
   535     019B                     	;# 
   536     019B                     	;# 
   537     019B                     	;# 
   538     019C                     	;# 
   539     019C                     	;# 
   540     019D                     	;# 
   541     019E                     	;# 
   542     019F                     	;# 
   543     020C                     	;# 
   544     020D                     	;# 
   545     0211                     	;# 
   546     0211                     	;# 
   547     0212                     	;# 
   548     0212                     	;# 
   549     0213                     	;# 
   550     0213                     	;# 
   551     0214                     	;# 
   552     0214                     	;# 
   553     0215                     	;# 
   554     0215                     	;# 
   555     0215                     	;# 
   556     0216                     	;# 
   557     0216                     	;# 
   558     0217                     	;# 
   559     0217                     	;# 
   560     0219                     	;# 
   561     021A                     	;# 
   562     021B                     	;# 
   563     021C                     	;# 
   564     021D                     	;# 
   565     021E                     	;# 
   566     021F                     	;# 
   567     0291                     	;# 
   568     0291                     	;# 
   569     0292                     	;# 
   570     0293                     	;# 
   571     0294                     	;# 
   572     0295                     	;# 
   573     0295                     	;# 
   574     0296                     	;# 
   575     0298                     	;# 
   576     0298                     	;# 
   577     0299                     	;# 
   578     029A                     	;# 
   579     029B                     	;# 
   580     029C                     	;# 
   581     029C                     	;# 
   582     029D                     	;# 
   583     029E                     	;# 
   584     029E                     	;# 
   585     0311                     	;# 
   586     0311                     	;# 
   587     0312                     	;# 
   588     0313                     	;# 
   589     0318                     	;# 
   590     0318                     	;# 
   591     0319                     	;# 
   592     031A                     	;# 
   593     0394                     	;# 
   594     0395                     	;# 
   595     0396                     	;# 
   596     039A                     	;# 
   597     039C                     	;# 
   598     039D                     	;# 
   599     039E                     	;# 
   600     039F                     	;# 
   601     0415                     	;# 
   602     0416                     	;# 
   603     0417                     	;# 
   604     041C                     	;# 
   605     041D                     	;# 
   606     041E                     	;# 
   607     0FE4                     	;# 
   608     0FE5                     	;# 
   609     0FE6                     	;# 
   610     0FE7                     	;# 
   611     0FE8                     	;# 
   612     0FE9                     	;# 
   613     0FEA                     	;# 
   614     0FEB                     	;# 
   615     0FED                     	;# 
   616     0FEE                     	;# 
   617     0FEF                     	;# 
   618     0000                     	;# 
   619     0001                     	;# 
   620     0002                     	;# 
   621     0003                     	;# 
   622     0004                     	;# 
   623     0005                     	;# 
   624     0006                     	;# 
   625     0007                     	;# 
   626     0008                     	;# 
   627     0009                     	;# 
   628     000A                     	;# 
   629     000B                     	;# 
   630     000C                     	;# 
   631     000D                     	;# 
   632     0011                     	;# 
   633     0012                     	;# 
   634     0013                     	;# 
   635     0014                     	;# 
   636     0015                     	;# 
   637     0016                     	;# 
   638     0016                     	;# 
   639     0017                     	;# 
   640     0018                     	;# 
   641     0019                     	;# 
   642     001A                     	;# 
   643     001B                     	;# 
   644     001C                     	;# 
   645     001E                     	;# 
   646     001F                     	;# 
   647     008C                     	;# 
   648     008D                     	;# 
   649     0091                     	;# 
   650     0092                     	;# 
   651     0093                     	;# 
   652     0094                     	;# 
   653     0095                     	;# 
   654     0096                     	;# 
   655     0097                     	;# 
   656     0098                     	;# 
   657     0099                     	;# 
   658     009A                     	;# 
   659     009B                     	;# 
   660     009B                     	;# 
   661     009C                     	;# 
   662     009D                     	;# 
   663     009E                     	;# 
   664     010C                     	;# 
   665     010D                     	;# 
   666     0111                     	;# 
   667     0112                     	;# 
   668     0113                     	;# 
   669     0114                     	;# 
   670     0115                     	;# 
   671     0116                     	;# 
   672     0117                     	;# 
   673     0118                     	;# 
   674     0119                     	;# 
   675     011A                     	;# 
   676     011B                     	;# 
   677     011D                     	;# 
   678     011E                     	;# 
   679     018C                     	;# 
   680     018D                     	;# 
   681     0191                     	;# 
   682     0191                     	;# 
   683     0192                     	;# 
   684     0193                     	;# 
   685     0193                     	;# 
   686     0193                     	;# 
   687     0194                     	;# 
   688     0195                     	;# 
   689     0196                     	;# 
   690     0199                     	;# 
   691     019A                     	;# 
   692     019B                     	;# 
   693     019B                     	;# 
   694     019B                     	;# 
   695     019B                     	;# 
   696     019C                     	;# 
   697     019C                     	;# 
   698     019D                     	;# 
   699     019E                     	;# 
   700     019F                     	;# 
   701     020C                     	;# 
   702     020D                     	;# 
   703     0211                     	;# 
   704     0211                     	;# 
   705     0212                     	;# 
   706     0212                     	;# 
   707     0213                     	;# 
   708     0213                     	;# 
   709     0214                     	;# 
   710     0214                     	;# 
   711     0215                     	;# 
   712     0215                     	;# 
   713     0215                     	;# 
   714     0216                     	;# 
   715     0216                     	;# 
   716     0217                     	;# 
   717     0217                     	;# 
   718     0219                     	;# 
   719     021A                     	;# 
   720     021B                     	;# 
   721     021C                     	;# 
   722     021D                     	;# 
   723     021E                     	;# 
   724     021F                     	;# 
   725     0291                     	;# 
   726     0291                     	;# 
   727     0292                     	;# 
   728     0293                     	;# 
   729     0294                     	;# 
   730     0295                     	;# 
   731     0295                     	;# 
   732     0296                     	;# 
   733     0298                     	;# 
   734     0298                     	;# 
   735     0299                     	;# 
   736     029A                     	;# 
   737     029B                     	;# 
   738     029C                     	;# 
   739     029C                     	;# 
   740     029D                     	;# 
   741     029E                     	;# 
   742     029E                     	;# 
   743     0311                     	;# 
   744     0311                     	;# 
   745     0312                     	;# 
   746     0313                     	;# 
   747     0318                     	;# 
   748     0318                     	;# 
   749     0319                     	;# 
   750     031A                     	;# 
   751     0394                     	;# 
   752     0395                     	;# 
   753     0396                     	;# 
   754     039A                     	;# 
   755     039C                     	;# 
   756     039D                     	;# 
   757     039E                     	;# 
   758     039F                     	;# 
   759     0415                     	;# 
   760     0416                     	;# 
   761     0417                     	;# 
   762     041C                     	;# 
   763     041D                     	;# 
   764     041E                     	;# 
   765     0FE4                     	;# 
   766     0FE5                     	;# 
   767     0FE6                     	;# 
   768     0FE7                     	;# 
   769     0FE8                     	;# 
   770     0FE9                     	;# 
   771     0FEA                     	;# 
   772     0FEB                     	;# 
   773     0FED                     	;# 
   774     0FEE                     	;# 
   775     0FEF                     	;# 
   776     0000                     	;# 
   777     0001                     	;# 
   778     0002                     	;# 
   779     0003                     	;# 
   780     0004                     	;# 
   781     0005                     	;# 
   782     0006                     	;# 
   783     0007                     	;# 
   784     0008                     	;# 
   785     0009                     	;# 
   786     000A                     	;# 
   787     000B                     	;# 
   788     000C                     	;# 
   789     000D                     	;# 
   790     0011                     	;# 
   791     0012                     	;# 
   792     0013                     	;# 
   793     0014                     	;# 
   794     0015                     	;# 
   795     0016                     	;# 
   796     0016                     	;# 
   797     0017                     	;# 
   798     0018                     	;# 
   799     0019                     	;# 
   800     001A                     	;# 
   801     001B                     	;# 
   802     001C                     	;# 
   803     001E                     	;# 
   804     001F                     	;# 
   805     008C                     	;# 
   806     008D                     	;# 
   807     0091                     	;# 
   808     0092                     	;# 
   809     0093                     	;# 
   810     0094                     	;# 
   811     0095                     	;# 
   812     0096                     	;# 
   813     0097                     	;# 
   814     0098                     	;# 
   815     0099                     	;# 
   816     009A                     	;# 
   817     009B                     	;# 
   818     009B                     	;# 
   819     009C                     	;# 
   820     009D                     	;# 
   821     009E                     	;# 
   822     010C                     	;# 
   823     010D                     	;# 
   824     0111                     	;# 
   825     0112                     	;# 
   826     0113                     	;# 
   827     0114                     	;# 
   828     0115                     	;# 
   829     0116                     	;# 
   830     0117                     	;# 
   831     0118                     	;# 
   832     0119                     	;# 
   833     011A                     	;# 
   834     011B                     	;# 
   835     011D                     	;# 
   836     011E                     	;# 
   837     018C                     	;# 
   838     018D                     	;# 
   839     0191                     	;# 
   840     0191                     	;# 
   841     0192                     	;# 
   842     0193                     	;# 
   843     0193                     	;# 
   844     0193                     	;# 
   845     0194                     	;# 
   846     0195                     	;# 
   847     0196                     	;# 
   848     0199                     	;# 
   849     019A                     	;# 
   850     019B                     	;# 
   851     019B                     	;# 
   852     019B                     	;# 
   853     019B                     	;# 
   854     019C                     	;# 
   855     019C                     	;# 
   856     019D                     	;# 
   857     019E                     	;# 
   858     019F                     	;# 
   859     020C                     	;# 
   860     020D                     	;# 
   861     0211                     	;# 
   862     0211                     	;# 
   863     0212                     	;# 
   864     0212                     	;# 
   865     0213                     	;# 
   866     0213                     	;# 
   867     0214                     	;# 
   868     0214                     	;# 
   869     0215                     	;# 
   870     0215                     	;# 
   871     0215                     	;# 
   872     0216                     	;# 
   873     0216                     	;# 
   874     0217                     	;# 
   875     0217                     	;# 
   876     0219                     	;# 
   877     021A                     	;# 
   878     021B                     	;# 
   879     021C                     	;# 
   880     021D                     	;# 
   881     021E                     	;# 
   882     021F                     	;# 
   883     0291                     	;# 
   884     0291                     	;# 
   885     0292                     	;# 
   886     0293                     	;# 
   887     0294                     	;# 
   888     0295                     	;# 
   889     0295                     	;# 
   890     0296                     	;# 
   891     0298                     	;# 
   892     0298                     	;# 
   893     0299                     	;# 
   894     029A                     	;# 
   895     029B                     	;# 
   896     029C                     	;# 
   897     029C                     	;# 
   898     029D                     	;# 
   899     029E                     	;# 
   900     029E                     	;# 
   901     0311                     	;# 
   902     0311                     	;# 
   903     0312                     	;# 
   904     0313                     	;# 
   905     0318                     	;# 
   906     0318                     	;# 
   907     0319                     	;# 
   908     031A                     	;# 
   909     0394                     	;# 
   910     0395                     	;# 
   911     0396                     	;# 
   912     039A                     	;# 
   913     039C                     	;# 
   914     039D                     	;# 
   915     039E                     	;# 
   916     039F                     	;# 
   917     0415                     	;# 
   918     0416                     	;# 
   919     0417                     	;# 
   920     041C                     	;# 
   921     041D                     	;# 
   922     041E                     	;# 
   923     0FE4                     	;# 
   924     0FE5                     	;# 
   925     0FE6                     	;# 
   926     0FE7                     	;# 
   927     0FE8                     	;# 
   928     0FE9                     	;# 
   929     0FEA                     	;# 
   930     0FEB                     	;# 
   931     0FED                     	;# 
   932     0FEE                     	;# 
   933     0FEF                     	;# 
   934     0000                     	;# 
   935     0001                     	;# 
   936     0002                     	;# 
   937     0003                     	;# 
   938     0004                     	;# 
   939     0005                     	;# 
   940     0006                     	;# 
   941     0007                     	;# 
   942     0008                     	;# 
   943     0009                     	;# 
   944     000A                     	;# 
   945     000B                     	;# 
   946     000C                     	;# 
   947     000D                     	;# 
   948     0011                     	;# 
   949     0012                     	;# 
   950     0013                     	;# 
   951     0014                     	;# 
   952     0015                     	;# 
   953     0016                     	;# 
   954     0016                     	;# 
   955     0017                     	;# 
   956     0018                     	;# 
   957     0019                     	;# 
   958     001A                     	;# 
   959     001B                     	;# 
   960     001C                     	;# 
   961     001E                     	;# 
   962     001F                     	;# 
   963     008C                     	;# 
   964     008D                     	;# 
   965     0091                     	;# 
   966     0092                     	;# 
   967     0093                     	;# 
   968     0094                     	;# 
   969     0095                     	;# 
   970     0096                     	;# 
   971     0097                     	;# 
   972     0098                     	;# 
   973     0099                     	;# 
   974     009A                     	;# 
   975     009B                     	;# 
   976     009B                     	;# 
   977     009C                     	;# 
   978     009D                     	;# 
   979     009E                     	;# 
   980     010C                     	;# 
   981     010D                     	;# 
   982     0111                     	;# 
   983     0112                     	;# 
   984     0113                     	;# 
   985     0114                     	;# 
   986     0115                     	;# 
   987     0116                     	;# 
   988     0117                     	;# 
   989     0118                     	;# 
   990     0119                     	;# 
   991     011A                     	;# 
   992     011B                     	;# 
   993     011D                     	;# 
   994     011E                     	;# 
   995     018C                     	;# 
   996     018D                     	;# 
   997     0191                     	;# 
   998     0191                     	;# 
   999     0192                     	;# 
  1000     0193                     	;# 
  1001     0193                     	;# 
  1002     0193                     	;# 
  1003     0194                     	;# 
  1004     0195                     	;# 
  1005     0196                     	;# 
  1006     0199                     	;# 
  1007     019A                     	;# 
  1008     019B                     	;# 
  1009     019B                     	;# 
  1010     019B                     	;# 
  1011     019B                     	;# 
  1012     019C                     	;# 
  1013     019C                     	;# 
  1014     019D                     	;# 
  1015     019E                     	;# 
  1016     019F                     	;# 
  1017     020C                     	;# 
  1018     020D                     	;# 
  1019     0211                     	;# 
  1020     0211                     	;# 
  1021     0212                     	;# 
  1022     0212                     	;# 
  1023     0213                     	;# 
  1024     0213                     	;# 
  1025     0214                     	;# 
  1026     0214                     	;# 
  1027     0215                     	;# 
  1028     0215                     	;# 
  1029     0215                     	;# 
  1030     0216                     	;# 
  1031     0216                     	;# 
  1032     0217                     	;# 
  1033     0217                     	;# 
  1034     0219                     	;# 
  1035     021A                     	;# 
  1036     021B                     	;# 
  1037     021C                     	;# 
  1038     021D                     	;# 
  1039     021E                     	;# 
  1040     021F                     	;# 
  1041     0291                     	;# 
  1042     0291                     	;# 
  1043     0292                     	;# 
  1044     0293                     	;# 
  1045     0294                     	;# 
  1046     0295                     	;# 
  1047     0295                     	;# 
  1048     0296                     	;# 
  1049     0298                     	;# 
  1050     0298                     	;# 
  1051     0299                     	;# 
  1052     029A                     	;# 
  1053     029B                     	;# 
  1054     029C                     	;# 
  1055     029C                     	;# 
  1056     029D                     	;# 
  1057     029E                     	;# 
  1058     029E                     	;# 
  1059     0311                     	;# 
  1060     0311                     	;# 
  1061     0312                     	;# 
  1062     0313                     	;# 
  1063     0318                     	;# 
  1064     0318                     	;# 
  1065     0319                     	;# 
  1066     031A                     	;# 
  1067     0394                     	;# 
  1068     0395                     	;# 
  1069     0396                     	;# 
  1070     039A                     	;# 
  1071     039C                     	;# 
  1072     039D                     	;# 
  1073     039E                     	;# 
  1074     039F                     	;# 
  1075     0415                     	;# 
  1076     0416                     	;# 
  1077     0417                     	;# 
  1078     041C                     	;# 
  1079     041D                     	;# 
  1080     041E                     	;# 
  1081     0FE4                     	;# 
  1082     0FE5                     	;# 
  1083     0FE6                     	;# 
  1084     0FE7                     	;# 
  1085     0FE8                     	;# 
  1086     0FE9                     	;# 
  1087     0FEA                     	;# 
  1088     0FEB                     	;# 
  1089     0FED                     	;# 
  1090     0FEE                     	;# 
  1091     0FEF                     	;# 
  1092     0000                     	;# 
  1093     0001                     	;# 
  1094     0002                     	;# 
  1095     0003                     	;# 
  1096     0004                     	;# 
  1097     0005                     	;# 
  1098     0006                     	;# 
  1099     0007                     	;# 
  1100     0008                     	;# 
  1101     0009                     	;# 
  1102     000A                     	;# 
  1103     000B                     	;# 
  1104     000C                     	;# 
  1105     000D                     	;# 
  1106     0011                     	;# 
  1107     0012                     	;# 
  1108     0013                     	;# 
  1109     0014                     	;# 
  1110     0015                     	;# 
  1111     0016                     	;# 
  1112     0016                     	;# 
  1113     0017                     	;# 
  1114     0018                     	;# 
  1115     0019                     	;# 
  1116     001A                     	;# 
  1117     001B                     	;# 
  1118     001C                     	;# 
  1119     001E                     	;# 
  1120     001F                     	;# 
  1121     008C                     	;# 
  1122     008D                     	;# 
  1123     0091                     	;# 
  1124     0092                     	;# 
  1125     0093                     	;# 
  1126     0094                     	;# 
  1127     0095                     	;# 
  1128     0096                     	;# 
  1129     0097                     	;# 
  1130     0098                     	;# 
  1131     0099                     	;# 
  1132     009A                     	;# 
  1133     009B                     	;# 
  1134     009B                     	;# 
  1135     009C                     	;# 
  1136     009D                     	;# 
  1137     009E                     	;# 
  1138     010C                     	;# 
  1139     010D                     	;# 
  1140     0111                     	;# 
  1141     0112                     	;# 
  1142     0113                     	;# 
  1143     0114                     	;# 
  1144     0115                     	;# 
  1145     0116                     	;# 
  1146     0117                     	;# 
  1147     0118                     	;# 
  1148     0119                     	;# 
  1149     011A                     	;# 
  1150     011B                     	;# 
  1151     011D                     	;# 
  1152     011E                     	;# 
  1153     018C                     	;# 
  1154     018D                     	;# 
  1155     0191                     	;# 
  1156     0191                     	;# 
  1157     0192                     	;# 
  1158     0193                     	;# 
  1159     0193                     	;# 
  1160     0193                     	;# 
  1161     0194                     	;# 
  1162     0195                     	;# 
  1163     0196                     	;# 
  1164     0199                     	;# 
  1165     019A                     	;# 
  1166     019B                     	;# 
  1167     019B                     	;# 
  1168     019B                     	;# 
  1169     019B                     	;# 
  1170     019C                     	;# 
  1171     019C                     	;# 
  1172     019D                     	;# 
  1173     019E                     	;# 
  1174     019F                     	;# 
  1175     020C                     	;# 
  1176     020D                     	;# 
  1177     0211                     	;# 
  1178     0211                     	;# 
  1179     0212                     	;# 
  1180     0212                     	;# 
  1181     0213                     	;# 
  1182     0213                     	;# 
  1183     0214                     	;# 
  1184     0214                     	;# 
  1185     0215                     	;# 
  1186     0215                     	;# 
  1187     0215                     	;# 
  1188     0216                     	;# 
  1189     0216                     	;# 
  1190     0217                     	;# 
  1191     0217                     	;# 
  1192     0219                     	;# 
  1193     021A                     	;# 
  1194     021B                     	;# 
  1195     021C                     	;# 
  1196     021D                     	;# 
  1197     021E                     	;# 
  1198     021F                     	;# 
  1199     0291                     	;# 
  1200     0291                     	;# 
  1201     0292                     	;# 
  1202     0293                     	;# 
  1203     0294                     	;# 
  1204     0295                     	;# 
  1205     0295                     	;# 
  1206     0296                     	;# 
  1207     0298                     	;# 
  1208     0298                     	;# 
  1209     0299                     	;# 
  1210     029A                     	;# 
  1211     029B                     	;# 
  1212     029C                     	;# 
  1213     029C                     	;# 
  1214     029D                     	;# 
  1215     029E                     	;# 
  1216     029E                     	;# 
  1217     0311                     	;# 
  1218     0311                     	;# 
  1219     0312                     	;# 
  1220     0313                     	;# 
  1221     0318                     	;# 
  1222     0318                     	;# 
  1223     0319                     	;# 
  1224     031A                     	;# 
  1225     0394                     	;# 
  1226     0395                     	;# 
  1227     0396                     	;# 
  1228     039A                     	;# 
  1229     039C                     	;# 
  1230     039D                     	;# 
  1231     039E                     	;# 
  1232     039F                     	;# 
  1233     0415                     	;# 
  1234     0416                     	;# 
  1235     0417                     	;# 
  1236     041C                     	;# 
  1237     041D                     	;# 
  1238     041E                     	;# 
  1239     0FE4                     	;# 
  1240     0FE5                     	;# 
  1241     0FE6                     	;# 
  1242     0FE7                     	;# 
  1243     0FE8                     	;# 
  1244     0FE9                     	;# 
  1245     0FEA                     	;# 
  1246     0FEB                     	;# 
  1247     0FED                     	;# 
  1248     0FEE                     	;# 
  1249     0FEF                     	;# 
  1250     0000                     	;# 
  1251     0001                     	;# 
  1252     0002                     	;# 
  1253     0003                     	;# 
  1254     0004                     	;# 
  1255     0005                     	;# 
  1256     0006                     	;# 
  1257     0007                     	;# 
  1258     0008                     	;# 
  1259     0009                     	;# 
  1260     000A                     	;# 
  1261     000B                     	;# 
  1262     000C                     	;# 
  1263     000D                     	;# 
  1264     0011                     	;# 
  1265     0012                     	;# 
  1266     0013                     	;# 
  1267     0014                     	;# 
  1268     0015                     	;# 
  1269     0016                     	;# 
  1270     0016                     	;# 
  1271     0017                     	;# 
  1272     0018                     	;# 
  1273     0019                     	;# 
  1274     001A                     	;# 
  1275     001B                     	;# 
  1276     001C                     	;# 
  1277     001E                     	;# 
  1278     001F                     	;# 
  1279     008C                     	;# 
  1280     008D                     	;# 
  1281     0091                     	;# 
  1282     0092                     	;# 
  1283     0093                     	;# 
  1284     0094                     	;# 
  1285     0095                     	;# 
  1286     0096                     	;# 
  1287     0097                     	;# 
  1288     0098                     	;# 
  1289     0099                     	;# 
  1290     009A                     	;# 
  1291     009B                     	;# 
  1292     009B                     	;# 
  1293     009C                     	;# 
  1294     009D                     	;# 
  1295     009E                     	;# 
  1296     010C                     	;# 
  1297     010D                     	;# 
  1298     0111                     	;# 
  1299     0112                     	;# 
  1300     0113                     	;# 
  1301     0114                     	;# 
  1302     0115                     	;# 
  1303     0116                     	;# 
  1304     0117                     	;# 
  1305     0118                     	;# 
  1306     0119                     	;# 
  1307     011A                     	;# 
  1308     011B                     	;# 
  1309     011D                     	;# 
  1310     011E                     	;# 
  1311     018C                     	;# 
  1312     018D                     	;# 
  1313     0191                     	;# 
  1314     0191                     	;# 
  1315     0192                     	;# 
  1316     0193                     	;# 
  1317     0193                     	;# 
  1318     0193                     	;# 
  1319     0194                     	;# 
  1320     0195                     	;# 
  1321     0196                     	;# 
  1322     0199                     	;# 
  1323     019A                     	;# 
  1324     019B                     	;# 
  1325     019B                     	;# 
  1326     019B                     	;# 
  1327     019B                     	;# 
  1328     019C                     	;# 
  1329     019C                     	;# 
  1330     019D                     	;# 
  1331     019E                     	;# 
  1332     019F                     	;# 
  1333     020C                     	;# 
  1334     020D                     	;# 
  1335     0211                     	;# 
  1336     0211                     	;# 
  1337     0212                     	;# 
  1338     0212                     	;# 
  1339     0213                     	;# 
  1340     0213                     	;# 
  1341     0214                     	;# 
  1342     0214                     	;# 
  1343     0215                     	;# 
  1344     0215                     	;# 
  1345     0215                     	;# 
  1346     0216                     	;# 
  1347     0216                     	;# 
  1348     0217                     	;# 
  1349     0217                     	;# 
  1350     0219                     	;# 
  1351     021A                     	;# 
  1352     021B                     	;# 
  1353     021C                     	;# 
  1354     021D                     	;# 
  1355     021E                     	;# 
  1356     021F                     	;# 
  1357     0291                     	;# 
  1358     0291                     	;# 
  1359     0292                     	;# 
  1360     0293                     	;# 
  1361     0294                     	;# 
  1362     0295                     	;# 
  1363     0295                     	;# 
  1364     0296                     	;# 
  1365     0298                     	;# 
  1366     0298                     	;# 
  1367     0299                     	;# 
  1368     029A                     	;# 
  1369     029B                     	;# 
  1370     029C                     	;# 
  1371     029C                     	;# 
  1372     029D                     	;# 
  1373     029E                     	;# 
  1374     029E                     	;# 
  1375     0311                     	;# 
  1376     0311                     	;# 
  1377     0312                     	;# 
  1378     0313                     	;# 
  1379     0318                     	;# 
  1380     0318                     	;# 
  1381     0319                     	;# 
  1382     031A                     	;# 
  1383     0394                     	;# 
  1384     0395                     	;# 
  1385     0396                     	;# 
  1386     039A                     	;# 
  1387     039C                     	;# 
  1388     039D                     	;# 
  1389     039E                     	;# 
  1390     039F                     	;# 
  1391     0415                     	;# 
  1392     0416                     	;# 
  1393     0417                     	;# 
  1394     041C                     	;# 
  1395     041D                     	;# 
  1396     041E                     	;# 
  1397     0FE4                     	;# 
  1398     0FE5                     	;# 
  1399     0FE6                     	;# 
  1400     0FE7                     	;# 
  1401     0FE8                     	;# 
  1402     0FE9                     	;# 
  1403     0FEA                     	;# 
  1404     0FEB                     	;# 
  1405     0FED                     	;# 
  1406     0FEE                     	;# 
  1407     0FEF                     	;# 
  1408     0000                     	;# 
  1409     0001                     	;# 
  1410     0002                     	;# 
  1411     0003                     	;# 
  1412     0004                     	;# 
  1413     0005                     	;# 
  1414     0006                     	;# 
  1415     0007                     	;# 
  1416     0008                     	;# 
  1417     0009                     	;# 
  1418     000A                     	;# 
  1419     000B                     	;# 
  1420     000C                     	;# 
  1421     000D                     	;# 
  1422     0011                     	;# 
  1423     0012                     	;# 
  1424     0013                     	;# 
  1425     0014                     	;# 
  1426     0015                     	;# 
  1427     0016                     	;# 
  1428     0016                     	;# 
  1429     0017                     	;# 
  1430     0018                     	;# 
  1431     0019                     	;# 
  1432     001A                     	;# 
  1433     001B                     	;# 
  1434     001C                     	;# 
  1435     001E                     	;# 
  1436     001F                     	;# 
  1437     008C                     	;# 
  1438     008D                     	;# 
  1439     0091                     	;# 
  1440     0092                     	;# 
  1441     0093                     	;# 
  1442     0094                     	;# 
  1443     0095                     	;# 
  1444     0096                     	;# 
  1445     0097                     	;# 
  1446     0098                     	;# 
  1447     0099                     	;# 
  1448     009A                     	;# 
  1449     009B                     	;# 
  1450     009B                     	;# 
  1451     009C                     	;# 
  1452     009D                     	;# 
  1453     009E                     	;# 
  1454     010C                     	;# 
  1455     010D                     	;# 
  1456     0111                     	;# 
  1457     0112                     	;# 
  1458     0113                     	;# 
  1459     0114                     	;# 
  1460     0115                     	;# 
  1461     0116                     	;# 
  1462     0117                     	;# 
  1463     0118                     	;# 
  1464     0119                     	;# 
  1465     011A                     	;# 
  1466     011B                     	;# 
  1467     011D                     	;# 
  1468     011E                     	;# 
  1469     018C                     	;# 
  1470     018D                     	;# 
  1471     0191                     	;# 
  1472     0191                     	;# 
  1473     0192                     	;# 
  1474     0193                     	;# 
  1475     0193                     	;# 
  1476     0193                     	;# 
  1477     0194                     	;# 
  1478     0195                     	;# 
  1479     0196                     	;# 
  1480     0199                     	;# 
  1481     019A                     	;# 
  1482     019B                     	;# 
  1483     019B                     	;# 
  1484     019B                     	;# 
  1485     019B                     	;# 
  1486     019C                     	;# 
  1487     019C                     	;# 
  1488     019D                     	;# 
  1489     019E                     	;# 
  1490     019F                     	;# 
  1491     020C                     	;# 
  1492     020D                     	;# 
  1493     0211                     	;# 
  1494     0211                     	;# 
  1495     0212                     	;# 
  1496     0212                     	;# 
  1497     0213                     	;# 
  1498     0213                     	;# 
  1499     0214                     	;# 
  1500     0214                     	;# 
  1501     0215                     	;# 
  1502     0215                     	;# 
  1503     0215                     	;# 
  1504     0216                     	;# 
  1505     0216                     	;# 
  1506     0217                     	;# 
  1507     0217                     	;# 
  1508     0219                     	;# 
  1509     021A                     	;# 
  1510     021B                     	;# 
  1511     021C                     	;# 
  1512     021D                     	;# 
  1513     021E                     	;# 
  1514     021F                     	;# 
  1515     0291                     	;# 
  1516     0291                     	;# 
  1517     0292                     	;# 
  1518     0293                     	;# 
  1519     0294                     	;# 
  1520     0295                     	;# 
  1521     0295                     	;# 
  1522     0296                     	;# 
  1523     0298                     	;# 
  1524     0298                     	;# 
  1525     0299                     	;# 
  1526     029A                     	;# 
  1527     029B                     	;# 
  1528     029C                     	;# 
  1529     029C                     	;# 
  1530     029D                     	;# 
  1531     029E                     	;# 
  1532     029E                     	;# 
  1533     0311                     	;# 
  1534     0311                     	;# 
  1535     0312                     	;# 
  1536     0313                     	;# 
  1537     0318                     	;# 
  1538     0318                     	;# 
  1539     0319                     	;# 
  1540     031A                     	;# 
  1541     0394                     	;# 
  1542     0395                     	;# 
  1543     0396                     	;# 
  1544     039A                     	;# 
  1545     039C                     	;# 
  1546     039D                     	;# 
  1547     039E                     	;# 
  1548     039F                     	;# 
  1549     0415                     	;# 
  1550     0416                     	;# 
  1551     0417                     	;# 
  1552     041C                     	;# 
  1553     041D                     	;# 
  1554     041E                     	;# 
  1555     0FE4                     	;# 
  1556     0FE5                     	;# 
  1557     0FE6                     	;# 
  1558     0FE7                     	;# 
  1559     0FE8                     	;# 
  1560     0FE9                     	;# 
  1561     0FEA                     	;# 
  1562     0FEB                     	;# 
  1563     0FED                     	;# 
  1564     0FEE                     	;# 
  1565     0FEF                     	;# 
  1566     0000                     	;# 
  1567     0001                     	;# 
  1568     0002                     	;# 
  1569     0003                     	;# 
  1570     0004                     	;# 
  1571     0005                     	;# 
  1572     0006                     	;# 
  1573     0007                     	;# 
  1574     0008                     	;# 
  1575     0009                     	;# 
  1576     000A                     	;# 
  1577     000B                     	;# 
  1578     000C                     	;# 
  1579     000D                     	;# 
  1580     0011                     	;# 
  1581     0012                     	;# 
  1582     0013                     	;# 
  1583     0014                     	;# 
  1584     0015                     	;# 
  1585     0016                     	;# 
  1586     0016                     	;# 
  1587     0017                     	;# 
  1588     0018                     	;# 
  1589     0019                     	;# 
  1590     001A                     	;# 
  1591     001B                     	;# 
  1592     001C                     	;# 
  1593     001E                     	;# 
  1594     001F                     	;# 
  1595     008C                     	;# 
  1596     008D                     	;# 
  1597     0091                     	;# 
  1598     0092                     	;# 
  1599     0093                     	;# 
  1600     0094                     	;# 
  1601     0095                     	;# 
  1602     0096                     	;# 
  1603     0097                     	;# 
  1604     0098                     	;# 
  1605     0099                     	;# 
  1606     009A                     	;# 
  1607     009B                     	;# 
  1608     009B                     	;# 
  1609     009C                     	;# 
  1610     009D                     	;# 
  1611     009E                     	;# 
  1612     010C                     	;# 
  1613     010D                     	;# 
  1614     0111                     	;# 
  1615     0112                     	;# 
  1616     0113                     	;# 
  1617     0114                     	;# 
  1618     0115                     	;# 
  1619     0116                     	;# 
  1620     0117                     	;# 
  1621     0118                     	;# 
  1622     0119                     	;# 
  1623     011A                     	;# 
  1624     011B                     	;# 
  1625     011D                     	;# 
  1626     011E                     	;# 
  1627     018C                     	;# 
  1628     018D                     	;# 
  1629     0191                     	;# 
  1630     0191                     	;# 
  1631     0192                     	;# 
  1632     0193                     	;# 
  1633     0193                     	;# 
  1634     0193                     	;# 
  1635     0194                     	;# 
  1636     0195                     	;# 
  1637     0196                     	;# 
  1638     0199                     	;# 
  1639     019A                     	;# 
  1640     019B                     	;# 
  1641     019B                     	;# 
  1642     019B                     	;# 
  1643     019B                     	;# 
  1644     019C                     	;# 
  1645     019C                     	;# 
  1646     019D                     	;# 
  1647     019E                     	;# 
  1648     019F                     	;# 
  1649     020C                     	;# 
  1650     020D                     	;# 
  1651     0211                     	;# 
  1652     0211                     	;# 
  1653     0212                     	;# 
  1654     0212                     	;# 
  1655     0213                     	;# 
  1656     0213                     	;# 
  1657     0214                     	;# 
  1658     0214                     	;# 
  1659     0215                     	;# 
  1660     0215                     	;# 
  1661     0215                     	;# 
  1662     0216                     	;# 
  1663     0216                     	;# 
  1664     0217                     	;# 
  1665     0217                     	;# 
  1666     0219                     	;# 
  1667     021A                     	;# 
  1668     021B                     	;# 
  1669     021C                     	;# 
  1670     021D                     	;# 
  1671     021E                     	;# 
  1672     021F                     	;# 
  1673     0291                     	;# 
  1674     0291                     	;# 
  1675     0292                     	;# 
  1676     0293                     	;# 
  1677     0294                     	;# 
  1678     0295                     	;# 
  1679     0295                     	;# 
  1680     0296                     	;# 
  1681     0298                     	;# 
  1682     0298                     	;# 
  1683     0299                     	;# 
  1684     029A                     	;# 
  1685     029B                     	;# 
  1686     029C                     	;# 
  1687     029C                     	;# 
  1688     029D                     	;# 
  1689     029E                     	;# 
  1690     029E                     	;# 
  1691     0311                     	;# 
  1692     0311                     	;# 
  1693     0312                     	;# 
  1694     0313                     	;# 
  1695     0318                     	;# 
  1696     0318                     	;# 
  1697     0319                     	;# 
  1698     031A                     	;# 
  1699     0394                     	;# 
  1700     0395                     	;# 
  1701     0396                     	;# 
  1702     039A                     	;# 
  1703     039C                     	;# 
  1704     039D                     	;# 
  1705     039E                     	;# 
  1706     039F                     	;# 
  1707     0415                     	;# 
  1708     0416                     	;# 
  1709     0417                     	;# 
  1710     041C                     	;# 
  1711     041D                     	;# 
  1712     041E                     	;# 
  1713     0FE4                     	;# 
  1714     0FE5                     	;# 
  1715     0FE6                     	;# 
  1716     0FE7                     	;# 
  1717     0FE8                     	;# 
  1718     0FE9                     	;# 
  1719     0FEA                     	;# 
  1720     0FEB                     	;# 
  1721     0FED                     	;# 
  1722     0FEE                     	;# 
  1723     0FEF                     	;# 
  1724     0000                     	;# 
  1725     0001                     	;# 
  1726     0002                     	;# 
  1727     0003                     	;# 
  1728     0004                     	;# 
  1729     0005                     	;# 
  1730     0006                     	;# 
  1731     0007                     	;# 
  1732     0008                     	;# 
  1733     0009                     	;# 
  1734     000A                     	;# 
  1735     000B                     	;# 
  1736     000C                     	;# 
  1737     000D                     	;# 
  1738     0011                     	;# 
  1739     0012                     	;# 
  1740     0013                     	;# 
  1741     0014                     	;# 
  1742     0015                     	;# 
  1743     0016                     	;# 
  1744     0016                     	;# 
  1745     0017                     	;# 
  1746     0018                     	;# 
  1747     0019                     	;# 
  1748     001A                     	;# 
  1749     001B                     	;# 
  1750     001C                     	;# 
  1751     001E                     	;# 
  1752     001F                     	;# 
  1753     008C                     	;# 
  1754     008D                     	;# 
  1755     0091                     	;# 
  1756     0092                     	;# 
  1757     0093                     	;# 
  1758     0094                     	;# 
  1759     0095                     	;# 
  1760     0096                     	;# 
  1761     0097                     	;# 
  1762     0098                     	;# 
  1763     0099                     	;# 
  1764     009A                     	;# 
  1765     009B                     	;# 
  1766     009B                     	;# 
  1767     009C                     	;# 
  1768     009D                     	;# 
  1769     009E                     	;# 
  1770     010C                     	;# 
  1771     010D                     	;# 
  1772     0111                     	;# 
  1773     0112                     	;# 
  1774     0113                     	;# 
  1775     0114                     	;# 
  1776     0115                     	;# 
  1777     0116                     	;# 
  1778     0117                     	;# 
  1779     0118                     	;# 
  1780     0119                     	;# 
  1781     011A                     	;# 
  1782     011B                     	;# 
  1783     011D                     	;# 
  1784     011E                     	;# 
  1785     018C                     	;# 
  1786     018D                     	;# 
  1787     0191                     	;# 
  1788     0191                     	;# 
  1789     0192                     	;# 
  1790     0193                     	;# 
  1791     0193                     	;# 
  1792     0193                     	;# 
  1793     0194                     	;# 
  1794     0195                     	;# 
  1795     0196                     	;# 
  1796     0199                     	;# 
  1797     019A                     	;# 
  1798     019B                     	;# 
  1799     019B                     	;# 
  1800     019B                     	;# 
  1801     019B                     	;# 
  1802     019C                     	;# 
  1803     019C                     	;# 
  1804     019D                     	;# 
  1805     019E                     	;# 
  1806     019F                     	;# 
  1807     020C                     	;# 
  1808     020D                     	;# 
  1809     0211                     	;# 
  1810     0211                     	;# 
  1811     0212                     	;# 
  1812     0212                     	;# 
  1813     0213                     	;# 
  1814     0213                     	;# 
  1815     0214                     	;# 
  1816     0214                     	;# 
  1817     0215                     	;# 
  1818     0215                     	;# 
  1819     0215                     	;# 
  1820     0216                     	;# 
  1821     0216                     	;# 
  1822     0217                     	;# 
  1823     0217                     	;# 
  1824     0219                     	;# 
  1825     021A                     	;# 
  1826     021B                     	;# 
  1827     021C                     	;# 
  1828     021D                     	;# 
  1829     021E                     	;# 
  1830     021F                     	;# 
  1831     0291                     	;# 
  1832     0291                     	;# 
  1833     0292                     	;# 
  1834     0293                     	;# 
  1835     0294                     	;# 
  1836     0295                     	;# 
  1837     0295                     	;# 
  1838     0296                     	;# 
  1839     0298                     	;# 
  1840     0298                     	;# 
  1841     0299                     	;# 
  1842     029A                     	;# 
  1843     029B                     	;# 
  1844     029C                     	;# 
  1845     029C                     	;# 
  1846     029D                     	;# 
  1847     029E                     	;# 
  1848     029E                     	;# 
  1849     0311                     	;# 
  1850     0311                     	;# 
  1851     0312                     	;# 
  1852     0313                     	;# 
  1853     0318                     	;# 
  1854     0318                     	;# 
  1855     0319                     	;# 
  1856     031A                     	;# 
  1857     0394                     	;# 
  1858     0395                     	;# 
  1859     0396                     	;# 
  1860     039A                     	;# 
  1861     039C                     	;# 
  1862     039D                     	;# 
  1863     039E                     	;# 
  1864     039F                     	;# 
  1865     0415                     	;# 
  1866     0416                     	;# 
  1867     0417                     	;# 
  1868     041C                     	;# 
  1869     041D                     	;# 
  1870     041E                     	;# 
  1871     0FE4                     	;# 
  1872     0FE5                     	;# 
  1873     0FE6                     	;# 
  1874     0FE7                     	;# 
  1875     0FE8                     	;# 
  1876     0FE9                     	;# 
  1877     0FEA                     	;# 
  1878     0FEB                     	;# 
  1879     0FED                     	;# 
  1880     0FEE                     	;# 
  1881     0FEF                     	;# 
  1882     0000                     	;# 
  1883     0001                     	;# 
  1884     0002                     	;# 
  1885     0003                     	;# 
  1886     0004                     	;# 
  1887     0005                     	;# 
  1888     0006                     	;# 
  1889     0007                     	;# 
  1890     0008                     	;# 
  1891     0009                     	;# 
  1892     000A                     	;# 
  1893     000B                     	;# 
  1894     000C                     	;# 
  1895     000D                     	;# 
  1896     0011                     	;# 
  1897     0012                     	;# 
  1898     0013                     	;# 
  1899     0014                     	;# 
  1900     0015                     	;# 
  1901     0016                     	;# 
  1902     0016                     	;# 
  1903     0017                     	;# 
  1904     0018                     	;# 
  1905     0019                     	;# 
  1906     001A                     	;# 
  1907     001B                     	;# 
  1908     001C                     	;# 
  1909     001E                     	;# 
  1910     001F                     	;# 
  1911     008C                     	;# 
  1912     008D                     	;# 
  1913     0091                     	;# 
  1914     0092                     	;# 
  1915     0093                     	;# 
  1916     0094                     	;# 
  1917     0095                     	;# 
  1918     0096                     	;# 
  1919     0097                     	;# 
  1920     0098                     	;# 
  1921     0099                     	;# 
  1922     009A                     	;# 
  1923     009B                     	;# 
  1924     009B                     	;# 
  1925     009C                     	;# 
  1926     009D                     	;# 
  1927     009E                     	;# 
  1928     010C                     	;# 
  1929     010D                     	;# 
  1930     0111                     	;# 
  1931     0112                     	;# 
  1932     0113                     	;# 
  1933     0114                     	;# 
  1934     0115                     	;# 
  1935     0116                     	;# 
  1936     0117                     	;# 
  1937     0118                     	;# 
  1938     0119                     	;# 
  1939     011A                     	;# 
  1940     011B                     	;# 
  1941     011D                     	;# 
  1942     011E                     	;# 
  1943     018C                     	;# 
  1944     018D                     	;# 
  1945     0191                     	;# 
  1946     0191                     	;# 
  1947     0192                     	;# 
  1948     0193                     	;# 
  1949     0193                     	;# 
  1950     0193                     	;# 
  1951     0194                     	;# 
  1952     0195                     	;# 
  1953     0196                     	;# 
  1954     0199                     	;# 
  1955     019A                     	;# 
  1956     019B                     	;# 
  1957     019B                     	;# 
  1958     019B                     	;# 
  1959     019B                     	;# 
  1960     019C                     	;# 
  1961     019C                     	;# 
  1962     019D                     	;# 
  1963     019E                     	;# 
  1964     019F                     	;# 
  1965     020C                     	;# 
  1966     020D                     	;# 
  1967     0211                     	;# 
  1968     0211                     	;# 
  1969     0212                     	;# 
  1970     0212                     	;# 
  1971     0213                     	;# 
  1972     0213                     	;# 
  1973     0214                     	;# 
  1974     0214                     	;# 
  1975     0215                     	;# 
  1976     0215                     	;# 
  1977     0215                     	;# 
  1978     0216                     	;# 
  1979     0216                     	;# 
  1980     0217                     	;# 
  1981     0217                     	;# 
  1982     0219                     	;# 
  1983     021A                     	;# 
  1984     021B                     	;# 
  1985     021C                     	;# 
  1986     021D                     	;# 
  1987     021E                     	;# 
  1988     021F                     	;# 
  1989     0291                     	;# 
  1990     0291                     	;# 
  1991     0292                     	;# 
  1992     0293                     	;# 
  1993     0294                     	;# 
  1994     0295                     	;# 
  1995     0295                     	;# 
  1996     0296                     	;# 
  1997     0298                     	;# 
  1998     0298                     	;# 
  1999     0299                     	;# 
  2000     029A                     	;# 
  2001     029B                     	;# 
  2002     029C                     	;# 
  2003     029C                     	;# 
  2004     029D                     	;# 
  2005     029E                     	;# 
  2006     029E                     	;# 
  2007     0311                     	;# 
  2008     0311                     	;# 
  2009     0312                     	;# 
  2010     0313                     	;# 
  2011     0318                     	;# 
  2012     0318                     	;# 
  2013     0319                     	;# 
  2014     031A                     	;# 
  2015     0394                     	;# 
  2016     0395                     	;# 
  2017     0396                     	;# 
  2018     039A                     	;# 
  2019     039C                     	;# 
  2020     039D                     	;# 
  2021     039E                     	;# 
  2022     039F                     	;# 
  2023     0415                     	;# 
  2024     0416                     	;# 
  2025     0417                     	;# 
  2026     041C                     	;# 
  2027     041D                     	;# 
  2028     041E                     	;# 
  2029     0FE4                     	;# 
  2030     0FE5                     	;# 
  2031     0FE6                     	;# 
  2032     0FE7                     	;# 
  2033     0FE8                     	;# 
  2034     0FE9                     	;# 
  2035     0FEA                     	;# 
  2036     0FEB                     	;# 
  2037     0FED                     	;# 
  2038     0FEE                     	;# 
  2039     0FEF                     	;# 
  2040     0000                     	;# 
  2041     0001                     	;# 
  2042     0002                     	;# 
  2043     0003                     	;# 
  2044     0004                     	;# 
  2045     0005                     	;# 
  2046     0006                     	;# 
  2047     0007                     	;# 
  2048     0008                     	;# 
  2049     0009                     	;# 
  2050     000A                     	;# 
  2051     000B                     	;# 
  2052     000C                     	;# 
  2053     000D                     	;# 
  2054     0011                     	;# 
  2055     0012                     	;# 
  2056     0013                     	;# 
  2057     0014                     	;# 
  2058     0015                     	;# 
  2059     0016                     	;# 
  2060     0016                     	;# 
  2061     0017                     	;# 
  2062     0018                     	;# 
  2063     0019                     	;# 
  2064     001A                     	;# 
  2065     001B                     	;# 
  2066     001C                     	;# 
  2067     001E                     	;# 
  2068     001F                     	;# 
  2069     008C                     	;# 
  2070     008D                     	;# 
  2071     0091                     	;# 
  2072     0092                     	;# 
  2073     0093                     	;# 
  2074     0094                     	;# 
  2075     0095                     	;# 
  2076     0096                     	;# 
  2077     0097                     	;# 
  2078     0098                     	;# 
  2079     0099                     	;# 
  2080     009A                     	;# 
  2081     009B                     	;# 
  2082     009B                     	;# 
  2083     009C                     	;# 
  2084     009D                     	;# 
  2085     009E                     	;# 
  2086     010C                     	;# 
  2087     010D                     	;# 
  2088     0111                     	;# 
  2089     0112                     	;# 
  2090     0113                     	;# 
  2091     0114                     	;# 
  2092     0115                     	;# 
  2093     0116                     	;# 
  2094     0117                     	;# 
  2095     0118                     	;# 
  2096     0119                     	;# 
  2097     011A                     	;# 
  2098     011B                     	;# 
  2099     011D                     	;# 
  2100     011E                     	;# 
  2101     018C                     	;# 
  2102     018D                     	;# 
  2103     0191                     	;# 
  2104     0191                     	;# 
  2105     0192                     	;# 
  2106     0193                     	;# 
  2107     0193                     	;# 
  2108     0193                     	;# 
  2109     0194                     	;# 
  2110     0195                     	;# 
  2111     0196                     	;# 
  2112     0199                     	;# 
  2113     019A                     	;# 
  2114     019B                     	;# 
  2115     019B                     	;# 
  2116     019B                     	;# 
  2117     019B                     	;# 
  2118     019C                     	;# 
  2119     019C                     	;# 
  2120     019D                     	;# 
  2121     019E                     	;# 
  2122     019F                     	;# 
  2123     020C                     	;# 
  2124     020D                     	;# 
  2125     0211                     	;# 
  2126     0211                     	;# 
  2127     0212                     	;# 
  2128     0212                     	;# 
  2129     0213                     	;# 
  2130     0213                     	;# 
  2131     0214                     	;# 
  2132     0214                     	;# 
  2133     0215                     	;# 
  2134     0215                     	;# 
  2135     0215                     	;# 
  2136     0216                     	;# 
  2137     0216                     	;# 
  2138     0217                     	;# 
  2139     0217                     	;# 
  2140     0219                     	;# 
  2141     021A                     	;# 
  2142     021B                     	;# 
  2143     021C                     	;# 
  2144     021D                     	;# 
  2145     021E                     	;# 
  2146     021F                     	;# 
  2147     0291                     	;# 
  2148     0291                     	;# 
  2149     0292                     	;# 
  2150     0293                     	;# 
  2151     0294                     	;# 
  2152     0295                     	;# 
  2153     0295                     	;# 
  2154     0296                     	;# 
  2155     0298                     	;# 
  2156     0298                     	;# 
  2157     0299                     	;# 
  2158     029A                     	;# 
  2159     029B                     	;# 
  2160     029C                     	;# 
  2161     029C                     	;# 
  2162     029D                     	;# 
  2163     029E                     	;# 
  2164     029E                     	;# 
  2165     0311                     	;# 
  2166     0311                     	;# 
  2167     0312                     	;# 
  2168     0313                     	;# 
  2169     0318                     	;# 
  2170     0318                     	;# 
  2171     0319                     	;# 
  2172     031A                     	;# 
  2173     0394                     	;# 
  2174     0395                     	;# 
  2175     0396                     	;# 
  2176     039A                     	;# 
  2177     039C                     	;# 
  2178     039D                     	;# 
  2179     039E                     	;# 
  2180     039F                     	;# 
  2181     0415                     	;# 
  2182     0416                     	;# 
  2183     0417                     	;# 
  2184     041C                     	;# 
  2185     041D                     	;# 
  2186     041E                     	;# 
  2187     0FE4                     	;# 
  2188     0FE5                     	;# 
  2189     0FE6                     	;# 
  2190     0FE7                     	;# 
  2191     0FE8                     	;# 
  2192     0FE9                     	;# 
  2193     0FEA                     	;# 
  2194     0FEB                     	;# 
  2195     0FED                     	;# 
  2196     0FEE                     	;# 
  2197     0FEF                     	;# 
  2198     0000                     	;# 
  2199     0001                     	;# 
  2200     0002                     	;# 
  2201     0003                     	;# 
  2202     0004                     	;# 
  2203     0005                     	;# 
  2204     0006                     	;# 
  2205     0007                     	;# 
  2206     0008                     	;# 
  2207     0009                     	;# 
  2208     000A                     	;# 
  2209     000B                     	;# 
  2210     000C                     	;# 
  2211     000D                     	;# 
  2212     0011                     	;# 
  2213     0012                     	;# 
  2214     0013                     	;# 
  2215     0014                     	;# 
  2216     0015                     	;# 
  2217     0016                     	;# 
  2218     0016                     	;# 
  2219     0017                     	;# 
  2220     0018                     	;# 
  2221     0019                     	;# 
  2222     001A                     	;# 
  2223     001B                     	;# 
  2224     001C                     	;# 
  2225     001E                     	;# 
  2226     001F                     	;# 
  2227     008C                     	;# 
  2228     008D                     	;# 
  2229     0091                     	;# 
  2230     0092                     	;# 
  2231     0093                     	;# 
  2232     0094                     	;# 
  2233     0095                     	;# 
  2234     0096                     	;# 
  2235     0097                     	;# 
  2236     0098                     	;# 
  2237     0099                     	;# 
  2238     009A                     	;# 
  2239     009B                     	;# 
  2240     009B                     	;# 
  2241     009C                     	;# 
  2242     009D                     	;# 
  2243     009E                     	;# 
  2244     010C                     	;# 
  2245     010D                     	;# 
  2246     0111                     	;# 
  2247     0112                     	;# 
  2248     0113                     	;# 
  2249     0114                     	;# 
  2250     0115                     	;# 
  2251     0116                     	;# 
  2252     0117                     	;# 
  2253     0118                     	;# 
  2254     0119                     	;# 
  2255     011A                     	;# 
  2256     011B                     	;# 
  2257     011D                     	;# 
  2258     011E                     	;# 
  2259     018C                     	;# 
  2260     018D                     	;# 
  2261     0191                     	;# 
  2262     0191                     	;# 
  2263     0192                     	;# 
  2264     0193                     	;# 
  2265     0193                     	;# 
  2266     0193                     	;# 
  2267     0194                     	;# 
  2268     0195                     	;# 
  2269     0196                     	;# 
  2270     0199                     	;# 
  2271     019A                     	;# 
  2272     019B                     	;# 
  2273     019B                     	;# 
  2274     019B                     	;# 
  2275     019B                     	;# 
  2276     019C                     	;# 
  2277     019C                     	;# 
  2278     019D                     	;# 
  2279     019E                     	;# 
  2280     019F                     	;# 
  2281     020C                     	;# 
  2282     020D                     	;# 
  2283     0211                     	;# 
  2284     0211                     	;# 
  2285     0212                     	;# 
  2286     0212                     	;# 
  2287     0213                     	;# 
  2288     0213                     	;# 
  2289     0214                     	;# 
  2290     0214                     	;# 
  2291     0215                     	;# 
  2292     0215                     	;# 
  2293     0215                     	;# 
  2294     0216                     	;# 
  2295     0216                     	;# 
  2296     0217                     	;# 
  2297     0217                     	;# 
  2298     0219                     	;# 
  2299     021A                     	;# 
  2300     021B                     	;# 
  2301     021C                     	;# 
  2302     021D                     	;# 
  2303     021E                     	;# 
  2304     021F                     	;# 
  2305     0291                     	;# 
  2306     0291                     	;# 
  2307     0292                     	;# 
  2308     0293                     	;# 
  2309     0294                     	;# 
  2310     0295                     	;# 
  2311     0295                     	;# 
  2312     0296                     	;# 
  2313     0298                     	;# 
  2314     0298                     	;# 
  2315     0299                     	;# 
  2316     029A                     	;# 
  2317     029B                     	;# 
  2318     029C                     	;# 
  2319     029C                     	;# 
  2320     029D                     	;# 
  2321     029E                     	;# 
  2322     029E                     	;# 
  2323     0311                     	;# 
  2324     0311                     	;# 
  2325     0312                     	;# 
  2326     0313                     	;# 
  2327     0318                     	;# 
  2328     0318                     	;# 
  2329     0319                     	;# 
  2330     031A                     	;# 
  2331     0394                     	;# 
  2332     0395                     	;# 
  2333     0396                     	;# 
  2334     039A                     	;# 
  2335     039C                     	;# 
  2336     039D                     	;# 
  2337     039E                     	;# 
  2338     039F                     	;# 
  2339     0415                     	;# 
  2340     0416                     	;# 
  2341     0417                     	;# 
  2342     041C                     	;# 
  2343     041D                     	;# 
  2344     041E                     	;# 
  2345     0FE4                     	;# 
  2346     0FE5                     	;# 
  2347     0FE6                     	;# 
  2348     0FE7                     	;# 
  2349     0FE8                     	;# 
  2350     0FE9                     	;# 
  2351     0FEA                     	;# 
  2352     0FEB                     	;# 
  2353     0FED                     	;# 
  2354     0FEE                     	;# 
  2355     0FEF                     	;# 
  2356     0000                     	;# 
  2357     0001                     	;# 
  2358     0002                     	;# 
  2359     0003                     	;# 
  2360     0004                     	;# 
  2361     0005                     	;# 
  2362     0006                     	;# 
  2363     0007                     	;# 
  2364     0008                     	;# 
  2365     0009                     	;# 
  2366     000A                     	;# 
  2367     000B                     	;# 
  2368     000C                     	;# 
  2369     000D                     	;# 
  2370     0011                     	;# 
  2371     0012                     	;# 
  2372     0013                     	;# 
  2373     0014                     	;# 
  2374     0015                     	;# 
  2375     0016                     	;# 
  2376     0016                     	;# 
  2377     0017                     	;# 
  2378     0018                     	;# 
  2379     0019                     	;# 
  2380     001A                     	;# 
  2381     001B                     	;# 
  2382     001C                     	;# 
  2383     001E                     	;# 
  2384     001F                     	;# 
  2385     008C                     	;# 
  2386     008D                     	;# 
  2387     0091                     	;# 
  2388     0092                     	;# 
  2389     0093                     	;# 
  2390     0094                     	;# 
  2391     0095                     	;# 
  2392     0096                     	;# 
  2393     0097                     	;# 
  2394     0098                     	;# 
  2395     0099                     	;# 
  2396     009A                     	;# 
  2397     009B                     	;# 
  2398     009B                     	;# 
  2399     009C                     	;# 
  2400     009D                     	;# 
  2401     009E                     	;# 
  2402     010C                     	;# 
  2403     010D                     	;# 
  2404     0111                     	;# 
  2405     0112                     	;# 
  2406     0113                     	;# 
  2407     0114                     	;# 
  2408     0115                     	;# 
  2409     0116                     	;# 
  2410     0117                     	;# 
  2411     0118                     	;# 
  2412     0119                     	;# 
  2413     011A                     	;# 
  2414     011B                     	;# 
  2415     011D                     	;# 
  2416     011E                     	;# 
  2417     018C                     	;# 
  2418     018D                     	;# 
  2419     0191                     	;# 
  2420     0191                     	;# 
  2421     0192                     	;# 
  2422     0193                     	;# 
  2423     0193                     	;# 
  2424     0193                     	;# 
  2425     0194                     	;# 
  2426     0195                     	;# 
  2427     0196                     	;# 
  2428     0199                     	;# 
  2429     019A                     	;# 
  2430     019B                     	;# 
  2431     019B                     	;# 
  2432     019B                     	;# 
  2433     019B                     	;# 
  2434     019C                     	;# 
  2435     019C                     	;# 
  2436     019D                     	;# 
  2437     019E                     	;# 
  2438     019F                     	;# 
  2439     020C                     	;# 
  2440     020D                     	;# 
  2441     0211                     	;# 
  2442     0211                     	;# 
  2443     0212                     	;# 
  2444     0212                     	;# 
  2445     0213                     	;# 
  2446     0213                     	;# 
  2447     0214                     	;# 
  2448     0214                     	;# 
  2449     0215                     	;# 
  2450     0215                     	;# 
  2451     0215                     	;# 
  2452     0216                     	;# 
  2453     0216                     	;# 
  2454     0217                     	;# 
  2455     0217                     	;# 
  2456     0219                     	;# 
  2457     021A                     	;# 
  2458     021B                     	;# 
  2459     021C                     	;# 
  2460     021D                     	;# 
  2461     021E                     	;# 
  2462     021F                     	;# 
  2463     0291                     	;# 
  2464     0291                     	;# 
  2465     0292                     	;# 
  2466     0293                     	;# 
  2467     0294                     	;# 
  2468     0295                     	;# 
  2469     0295                     	;# 
  2470     0296                     	;# 
  2471     0298                     	;# 
  2472     0298                     	;# 
  2473     0299                     	;# 
  2474     029A                     	;# 
  2475     029B                     	;# 
  2476     029C                     	;# 
  2477     029C                     	;# 
  2478     029D                     	;# 
  2479     029E                     	;# 
  2480     029E                     	;# 
  2481     0311                     	;# 
  2482     0311                     	;# 
  2483     0312                     	;# 
  2484     0313                     	;# 
  2485     0318                     	;# 
  2486     0318                     	;# 
  2487     0319                     	;# 
  2488     031A                     	;# 
  2489     0394                     	;# 
  2490     0395                     	;# 
  2491     0396                     	;# 
  2492     039A                     	;# 
  2493     039C                     	;# 
  2494     039D                     	;# 
  2495     039E                     	;# 
  2496     039F                     	;# 
  2497     0415                     	;# 
  2498     0416                     	;# 
  2499     0417                     	;# 
  2500     041C                     	;# 
  2501     041D                     	;# 
  2502     041E                     	;# 
  2503     0FE4                     	;# 
  2504     0FE5                     	;# 
  2505     0FE6                     	;# 
  2506     0FE7                     	;# 
  2507     0FE8                     	;# 
  2508     0FE9                     	;# 
  2509     0FEA                     	;# 
  2510     0FEB                     	;# 
  2511     0FED                     	;# 
  2512     0FEE                     	;# 
  2513     0FEF                     	;# 
  2514     0000                     	;# 
  2515     0001                     	;# 
  2516     0002                     	;# 
  2517     0003                     	;# 
  2518     0004                     	;# 
  2519     0005                     	;# 
  2520     0006                     	;# 
  2521     0007                     	;# 
  2522     0008                     	;# 
  2523     0009                     	;# 
  2524     000A                     	;# 
  2525     000B                     	;# 
  2526     000C                     	;# 
  2527     000D                     	;# 
  2528     0011                     	;# 
  2529     0012                     	;# 
  2530     0013                     	;# 
  2531     0014                     	;# 
  2532     0015                     	;# 
  2533     0016                     	;# 
  2534     0016                     	;# 
  2535     0017                     	;# 
  2536     0018                     	;# 
  2537     0019                     	;# 
  2538     001A                     	;# 
  2539     001B                     	;# 
  2540     001C                     	;# 
  2541     001E                     	;# 
  2542     001F                     	;# 
  2543     008C                     	;# 
  2544     008D                     	;# 
  2545     0091                     	;# 
  2546     0092                     	;# 
  2547     0093                     	;# 
  2548     0094                     	;# 
  2549     0095                     	;# 
  2550     0096                     	;# 
  2551     0097                     	;# 
  2552     0098                     	;# 
  2553     0099                     	;# 
  2554     009A                     	;# 
  2555     009B                     	;# 
  2556     009B                     	;# 
  2557     009C                     	;# 
  2558     009D                     	;# 
  2559     009E                     	;# 
  2560     010C                     	;# 
  2561     010D                     	;# 
  2562     0111                     	;# 
  2563     0112                     	;# 
  2564     0113                     	;# 
  2565     0114                     	;# 
  2566     0115                     	;# 
  2567     0116                     	;# 
  2568     0117                     	;# 
  2569     0118                     	;# 
  2570     0119                     	;# 
  2571     011A                     	;# 
  2572     011B                     	;# 
  2573     011D                     	;# 
  2574     011E                     	;# 
  2575     018C                     	;# 
  2576     018D                     	;# 
  2577     0191                     	;# 
  2578     0191                     	;# 
  2579     0192                     	;# 
  2580     0193                     	;# 
  2581     0193                     	;# 
  2582     0193                     	;# 
  2583     0194                     	;# 
  2584     0195                     	;# 
  2585     0196                     	;# 
  2586     0199                     	;# 
  2587     019A                     	;# 
  2588     019B                     	;# 
  2589     019B                     	;# 
  2590     019B                     	;# 
  2591     019B                     	;# 
  2592     019C                     	;# 
  2593     019C                     	;# 
  2594     019D                     	;# 
  2595     019E                     	;# 
  2596     019F                     	;# 
  2597     020C                     	;# 
  2598     020D                     	;# 
  2599     0211                     	;# 
  2600     0211                     	;# 
  2601     0212                     	;# 
  2602     0212                     	;# 
  2603     0213                     	;# 
  2604     0213                     	;# 
  2605     0214                     	;# 
  2606     0214                     	;# 
  2607     0215                     	;# 
  2608     0215                     	;# 
  2609     0215                     	;# 
  2610     0216                     	;# 
  2611     0216                     	;# 
  2612     0217                     	;# 
  2613     0217                     	;# 
  2614     0219                     	;# 
  2615     021A                     	;# 
  2616     021B                     	;# 
  2617     021C                     	;# 
  2618     021D                     	;# 
  2619     021E                     	;# 
  2620     021F                     	;# 
  2621     0291                     	;# 
  2622     0291                     	;# 
  2623     0292                     	;# 
  2624     0293                     	;# 
  2625     0294                     	;# 
  2626     0295                     	;# 
  2627     0295                     	;# 
  2628     0296                     	;# 
  2629     0298                     	;# 
  2630     0298                     	;# 
  2631     0299                     	;# 
  2632     029A                     	;# 
  2633     029B                     	;# 
  2634     029C                     	;# 
  2635     029C                     	;# 
  2636     029D                     	;# 
  2637     029E                     	;# 
  2638     029E                     	;# 
  2639     0311                     	;# 
  2640     0311                     	;# 
  2641     0312                     	;# 
  2642     0313                     	;# 
  2643     0318                     	;# 
  2644     0318                     	;# 
  2645     0319                     	;# 
  2646     031A                     	;# 
  2647     0394                     	;# 
  2648     0395                     	;# 
  2649     0396                     	;# 
  2650     039A                     	;# 
  2651     039C                     	;# 
  2652     039D                     	;# 
  2653     039E                     	;# 
  2654     039F                     	;# 
  2655     0415                     	;# 
  2656     0416                     	;# 
  2657     0417                     	;# 
  2658     041C                     	;# 
  2659     041D                     	;# 
  2660     041E                     	;# 
  2661     0FE4                     	;# 
  2662     0FE5                     	;# 
  2663     0FE6                     	;# 
  2664     0FE7                     	;# 
  2665     0FE8                     	;# 
  2666     0FE9                     	;# 
  2667     0FEA                     	;# 
  2668     0FEB                     	;# 
  2669     0FED                     	;# 
  2670     0FEE                     	;# 
  2671     0FEF                     	;# 
  2672     0000                     	;# 
  2673     0001                     	;# 
  2674     0002                     	;# 
  2675     0003                     	;# 
  2676     0004                     	;# 
  2677     0005                     	;# 
  2678     0006                     	;# 
  2679     0007                     	;# 
  2680     0008                     	;# 
  2681     0009                     	;# 
  2682     000A                     	;# 
  2683     000B                     	;# 
  2684     000C                     	;# 
  2685     000D                     	;# 
  2686     0011                     	;# 
  2687     0012                     	;# 
  2688     0013                     	;# 
  2689     0014                     	;# 
  2690     0015                     	;# 
  2691     0016                     	;# 
  2692     0016                     	;# 
  2693     0017                     	;# 
  2694     0018                     	;# 
  2695     0019                     	;# 
  2696     001A                     	;# 
  2697     001B                     	;# 
  2698     001C                     	;# 
  2699     001E                     	;# 
  2700     001F                     	;# 
  2701     008C                     	;# 
  2702     008D                     	;# 
  2703     0091                     	;# 
  2704     0092                     	;# 
  2705     0093                     	;# 
  2706     0094                     	;# 
  2707     0095                     	;# 
  2708     0096                     	;# 
  2709     0097                     	;# 
  2710     0098                     	;# 
  2711     0099                     	;# 
  2712     009A                     	;# 
  2713     009B                     	;# 
  2714     009B                     	;# 
  2715     009C                     	;# 
  2716     009D                     	;# 
  2717     009E                     	;# 
  2718     010C                     	;# 
  2719     010D                     	;# 
  2720     0111                     	;# 
  2721     0112                     	;# 
  2722     0113                     	;# 
  2723     0114                     	;# 
  2724     0115                     	;# 
  2725     0116                     	;# 
  2726     0117                     	;# 
  2727     0118                     	;# 
  2728     0119                     	;# 
  2729     011A                     	;# 
  2730     011B                     	;# 
  2731     011D                     	;# 
  2732     011E                     	;# 
  2733     018C                     	;# 
  2734     018D                     	;# 
  2735     0191                     	;# 
  2736     0191                     	;# 
  2737     0192                     	;# 
  2738     0193                     	;# 
  2739     0193                     	;# 
  2740     0193                     	;# 
  2741     0194                     	;# 
  2742     0195                     	;# 
  2743     0196                     	;# 
  2744     0199                     	;# 
  2745     019A                     	;# 
  2746     019B                     	;# 
  2747     019B                     	;# 
  2748     019B                     	;# 
  2749     019B                     	;# 
  2750     019C                     	;# 
  2751     019C                     	;# 
  2752     019D                     	;# 
  2753     019E                     	;# 
  2754     019F                     	;# 
  2755     020C                     	;# 
  2756     020D                     	;# 
  2757     0211                     	;# 
  2758     0211                     	;# 
  2759     0212                     	;# 
  2760     0212                     	;# 
  2761     0213                     	;# 
  2762     0213                     	;# 
  2763     0214                     	;# 
  2764     0214                     	;# 
  2765     0215                     	;# 
  2766     0215                     	;# 
  2767     0215                     	;# 
  2768     0216                     	;# 
  2769     0216                     	;# 
  2770     0217                     	;# 
  2771     0217                     	;# 
  2772     0219                     	;# 
  2773     021A                     	;# 
  2774     021B                     	;# 
  2775     021C                     	;# 
  2776     021D                     	;# 
  2777     021E                     	;# 
  2778     021F                     	;# 
  2779     0291                     	;# 
  2780     0291                     	;# 
  2781     0292                     	;# 
  2782     0293                     	;# 
  2783     0294                     	;# 
  2784     0295                     	;# 
  2785     0295                     	;# 
  2786     0296                     	;# 
  2787     0298                     	;# 
  2788     0298                     	;# 
  2789     0299                     	;# 
  2790     029A                     	;# 
  2791     029B                     	;# 
  2792     029C                     	;# 
  2793     029C                     	;# 
  2794     029D                     	;# 
  2795     029E                     	;# 
  2796     029E                     	;# 
  2797     0311                     	;# 
  2798     0311                     	;# 
  2799     0312                     	;# 
  2800     0313                     	;# 
  2801     0318                     	;# 
  2802     0318                     	;# 
  2803     0319                     	;# 
  2804     031A                     	;# 
  2805     0394                     	;# 
  2806     0395                     	;# 
  2807     0396                     	;# 
  2808     039A                     	;# 
  2809     039C                     	;# 
  2810     039D                     	;# 
  2811     039E                     	;# 
  2812     039F                     	;# 
  2813     0415                     	;# 
  2814     0416                     	;# 
  2815     0417                     	;# 
  2816     041C                     	;# 
  2817     041D                     	;# 
  2818     041E                     	;# 
  2819     0FE4                     	;# 
  2820     0FE5                     	;# 
  2821     0FE6                     	;# 
  2822     0FE7                     	;# 
  2823     0FE8                     	;# 
  2824     0FE9                     	;# 
  2825     0FEA                     	;# 
  2826     0FEB                     	;# 
  2827     0FED                     	;# 
  2828     0FEE                     	;# 
  2829     0FEF                     	;# 
  2830     0000                     	;# 
  2831     0001                     	;# 
  2832     0002                     	;# 
  2833     0003                     	;# 
  2834     0004                     	;# 
  2835     0005                     	;# 
  2836     0006                     	;# 
  2837     0007                     	;# 
  2838     0008                     	;# 
  2839     0009                     	;# 
  2840     000A                     	;# 
  2841     000B                     	;# 
  2842     000C                     	;# 
  2843     000D                     	;# 
  2844     0011                     	;# 
  2845     0012                     	;# 
  2846     0013                     	;# 
  2847     0014                     	;# 
  2848     0015                     	;# 
  2849     0016                     	;# 
  2850     0016                     	;# 
  2851     0017                     	;# 
  2852     0018                     	;# 
  2853     0019                     	;# 
  2854     001A                     	;# 
  2855     001B                     	;# 
  2856     001C                     	;# 
  2857     001E                     	;# 
  2858     001F                     	;# 
  2859     008C                     	;# 
  2860     008D                     	;# 
  2861     0091                     	;# 
  2862     0092                     	;# 
  2863     0093                     	;# 
  2864     0094                     	;# 
  2865     0095                     	;# 
  2866     0096                     	;# 
  2867     0097                     	;# 
  2868     0098                     	;# 
  2869     0099                     	;# 
  2870     009A                     	;# 
  2871     009B                     	;# 
  2872     009B                     	;# 
  2873     009C                     	;# 
  2874     009D                     	;# 
  2875     009E                     	;# 
  2876     010C                     	;# 
  2877     010D                     	;# 
  2878     0111                     	;# 
  2879     0112                     	;# 
  2880     0113                     	;# 
  2881     0114                     	;# 
  2882     0115                     	;# 
  2883     0116                     	;# 
  2884     0117                     	;# 
  2885     0118                     	;# 
  2886     0119                     	;# 
  2887     011A                     	;# 
  2888     011B                     	;# 
  2889     011D                     	;# 
  2890     011E                     	;# 
  2891     018C                     	;# 
  2892     018D                     	;# 
  2893     0191                     	;# 
  2894     0191                     	;# 
  2895     0192                     	;# 
  2896     0193                     	;# 
  2897     0193                     	;# 
  2898     0193                     	;# 
  2899     0194                     	;# 
  2900     0195                     	;# 
  2901     0196                     	;# 
  2902     0199                     	;# 
  2903     019A                     	;# 
  2904     019B                     	;# 
  2905     019B                     	;# 
  2906     019B                     	;# 
  2907     019B                     	;# 
  2908     019C                     	;# 
  2909     019C                     	;# 
  2910     019D                     	;# 
  2911     019E                     	;# 
  2912     019F                     	;# 
  2913     020C                     	;# 
  2914     020D                     	;# 
  2915     0211                     	;# 
  2916     0211                     	;# 
  2917     0212                     	;# 
  2918     0212                     	;# 
  2919     0213                     	;# 
  2920     0213                     	;# 
  2921     0214                     	;# 
  2922     0214                     	;# 
  2923     0215                     	;# 
  2924     0215                     	;# 
  2925     0215                     	;# 
  2926     0216                     	;# 
  2927     0216                     	;# 
  2928     0217                     	;# 
  2929     0217                     	;# 
  2930     0219                     	;# 
  2931     021A                     	;# 
  2932     021B                     	;# 
  2933     021C                     	;# 
  2934     021D                     	;# 
  2935     021E                     	;# 
  2936     021F                     	;# 
  2937     0291                     	;# 
  2938     0291                     	;# 
  2939     0292                     	;# 
  2940     0293                     	;# 
  2941     0294                     	;# 
  2942     0295                     	;# 
  2943     0295                     	;# 
  2944     0296                     	;# 
  2945     0298                     	;# 
  2946     0298                     	;# 
  2947     0299                     	;# 
  2948     029A                     	;# 
  2949     029B                     	;# 
  2950     029C                     	;# 
  2951     029C                     	;# 
  2952     029D                     	;# 
  2953     029E                     	;# 
  2954     029E                     	;# 
  2955     0311                     	;# 
  2956     0311                     	;# 
  2957     0312                     	;# 
  2958     0313                     	;# 
  2959     0318                     	;# 
  2960     0318                     	;# 
  2961     0319                     	;# 
  2962     031A                     	;# 
  2963     0394                     	;# 
  2964     0395                     	;# 
  2965     0396                     	;# 
  2966     039A                     	;# 
  2967     039C                     	;# 
  2968     039D                     	;# 
  2969     039E                     	;# 
  2970     039F                     	;# 
  2971     0415                     	;# 
  2972     0416                     	;# 
  2973     0417                     	;# 
  2974     041C                     	;# 
  2975     041D                     	;# 
  2976     041E                     	;# 
  2977     0FE4                     	;# 
  2978     0FE5                     	;# 
  2979     0FE6                     	;# 
  2980     0FE7                     	;# 
  2981     0FE8                     	;# 
  2982     0FE9                     	;# 
  2983     0FEA                     	;# 
  2984     0FEB                     	;# 
  2985     0FED                     	;# 
  2986     0FEE                     	;# 
  2987     0FEF                     	;# 
  2988     0000                     	;# 
  2989     0001                     	;# 
  2990     0002                     	;# 
  2991     0003                     	;# 
  2992     0004                     	;# 
  2993     0005                     	;# 
  2994     0006                     	;# 
  2995     0007                     	;# 
  2996     0008                     	;# 
  2997     0009                     	;# 
  2998     000A                     	;# 
  2999     000B                     	;# 
  3000     000C                     	;# 
  3001     000D                     	;# 
  3002     0011                     	;# 
  3003     0012                     	;# 
  3004     0013                     	;# 
  3005     0014                     	;# 
  3006     0015                     	;# 
  3007     0016                     	;# 
  3008     0016                     	;# 
  3009     0017                     	;# 
  3010     0018                     	;# 
  3011     0019                     	;# 
  3012     001A                     	;# 
  3013     001B                     	;# 
  3014     001C                     	;# 
  3015     001E                     	;# 
  3016     001F                     	;# 
  3017     008C                     	;# 
  3018     008D                     	;# 
  3019     0091                     	;# 
  3020     0092                     	;# 
  3021     0093                     	;# 
  3022     0094                     	;# 
  3023     0095                     	;# 
  3024     0096                     	;# 
  3025     0097                     	;# 
  3026     0098                     	;# 
  3027     0099                     	;# 
  3028     009A                     	;# 
  3029     009B                     	;# 
  3030     009B                     	;# 
  3031     009C                     	;# 
  3032     009D                     	;# 
  3033     009E                     	;# 
  3034     010C                     	;# 
  3035     010D                     	;# 
  3036     0111                     	;# 
  3037     0112                     	;# 
  3038     0113                     	;# 
  3039     0114                     	;# 
  3040     0115                     	;# 
  3041     0116                     	;# 
  3042     0117                     	;# 
  3043     0118                     	;# 
  3044     0119                     	;# 
  3045     011A                     	;# 
  3046     011B                     	;# 
  3047     011D                     	;# 
  3048     011E                     	;# 
  3049     018C                     	;# 
  3050     018D                     	;# 
  3051     0191                     	;# 
  3052     0191                     	;# 
  3053     0192                     	;# 
  3054     0193                     	;# 
  3055     0193                     	;# 
  3056     0193                     	;# 
  3057     0194                     	;# 
  3058     0195                     	;# 
  3059     0196                     	;# 
  3060     0199                     	;# 
  3061     019A                     	;# 
  3062     019B                     	;# 
  3063     019B                     	;# 
  3064     019B                     	;# 
  3065     019B                     	;# 
  3066     019C                     	;# 
  3067     019C                     	;# 
  3068     019D                     	;# 
  3069     019E                     	;# 
  3070     019F                     	;# 
  3071     020C                     	;# 
  3072     020D                     	;# 
  3073     0211                     	;# 
  3074     0211                     	;# 
  3075     0212                     	;# 
  3076     0212                     	;# 
  3077     0213                     	;# 
  3078     0213                     	;# 
  3079     0214                     	;# 
  3080     0214                     	;# 
  3081     0215                     	;# 
  3082     0215                     	;# 
  3083     0215                     	;# 
  3084     0216                     	;# 
  3085     0216                     	;# 
  3086     0217                     	;# 
  3087     0217                     	;# 
  3088     0219                     	;# 
  3089     021A                     	;# 
  3090     021B                     	;# 
  3091     021C                     	;# 
  3092     021D                     	;# 
  3093     021E                     	;# 
  3094     021F                     	;# 
  3095     0291                     	;# 
  3096     0291                     	;# 
  3097     0292                     	;# 
  3098     0293                     	;# 
  3099     0294                     	;# 
  3100     0295                     	;# 
  3101     0295                     	;# 
  3102     0296                     	;# 
  3103     0298                     	;# 
  3104     0298                     	;# 
  3105     0299                     	;# 
  3106     029A                     	;# 
  3107     029B                     	;# 
  3108     029C                     	;# 
  3109     029C                     	;# 
  3110     029D                     	;# 
  3111     029E                     	;# 
  3112     029E                     	;# 
  3113     0311                     	;# 
  3114     0311                     	;# 
  3115     0312                     	;# 
  3116     0313                     	;# 
  3117     0318                     	;# 
  3118     0318                     	;# 
  3119     0319                     	;# 
  3120     031A                     	;# 
  3121     0394                     	;# 
  3122     0395                     	;# 
  3123     0396                     	;# 
  3124     039A                     	;# 
  3125     039C                     	;# 
  3126     039D                     	;# 
  3127     039E                     	;# 
  3128     039F                     	;# 
  3129     0415                     	;# 
  3130     0416                     	;# 
  3131     0417                     	;# 
  3132     041C                     	;# 
  3133     041D                     	;# 
  3134     041E                     	;# 
  3135     0FE4                     	;# 
  3136     0FE5                     	;# 
  3137     0FE6                     	;# 
  3138     0FE7                     	;# 
  3139     0FE8                     	;# 
  3140     0FE9                     	;# 
  3141     0FEA                     	;# 
  3142     0FEB                     	;# 
  3143     0FED                     	;# 
  3144     0FEE                     	;# 
  3145     0FEF                     	;# 
  3146                           
  3147                           	psect	eeprom_data
  3148     0000  00FF 0081 0081 00FF 0000 0000 0000 00FF 	db	255,129,129,255,0,0,0,255	;# 
  3149     0008  00C2 00A1 0091 008E 0042 0089 0089 0076 	db	194,161,145,142,66,137,137,118	;# 
  3150     0010  001F 0010 0010 00FF 008F 0089 0089 0071 	db	31,16,16,255,143,137,137,113	;# 
  3151     0018  007E 0089 0089 0072 0009 0009 0009 00FF 	db	126,137,137,114,9,9,9,255	;# 
  3152     0020  0076 0089 0089 0076 004E 0091 0091 007E 	db	118,137,137,118,78,145,145,126	;# 
  3153     0028  0000 0018 0006 0018 0000 0018 0060 0018 	db	0,24,6,24,0,24,96,24	;# 
  3154     0030  0000 0000 0000 0000 0000 0018 0066 0018 	db	0,0,0,0,0,24,102,24	;# 
  3155     0000                     	;# 
  3156     0001                     	;# 
  3157     0002                     	;# 
  3158     0003                     	;# 
  3159     0004                     	;# 
  3160     0005                     	;# 
  3161     0006                     	;# 
  3162     0007                     	;# 
  3163     0008                     	;# 
  3164     0009                     	;# 
  3165     000A                     	;# 
  3166     000B                     	;# 
  3167     000C                     	;# 
  3168     000D                     	;# 
  3169     0011                     	;# 
  3170     0012                     	;# 
  3171     0013                     	;# 
  3172     0014                     	;# 
  3173     0015                     	;# 
  3174     0016                     	;# 
  3175     0016                     	;# 
  3176     0017                     	;# 
  3177     0018                     	;# 
  3178     0019                     	;# 
  3179     001A                     	;# 
  3180     001B                     	;# 
  3181     001C                     	;# 
  3182     001E                     	;# 
  3183     001F                     	;# 
  3184     008C                     	;# 
  3185     008D                     	;# 
  3186     0091                     	;# 
  3187     0092                     	;# 
  3188     0093                     	;# 
  3189     0094                     	;# 
  3190     0095                     	;# 
  3191     0096                     	;# 
  3192     0097                     	;# 
  3193     0098                     	;# 
  3194     0099                     	;# 
  3195     009A                     	;# 
  3196     009B                     	;# 
  3197     009B                     	;# 
  3198     009C                     	;# 
  3199     009D                     	;# 
  3200     009E                     	;# 
  3201     010C                     	;# 
  3202     010D                     	;# 
  3203     0111                     	;# 
  3204     0112                     	;# 
  3205     0113                     	;# 
  3206     0114                     	;# 
  3207     0115                     	;# 
  3208     0116                     	;# 
  3209     0117                     	;# 
  3210     0118                     	;# 
  3211     0119                     	;# 
  3212     011A                     	;# 
  3213     011B                     	;# 
  3214     011D                     	;# 
  3215     011E                     	;# 
  3216     018C                     	;# 
  3217     018D                     	;# 
  3218     0191                     	;# 
  3219     0191                     	;# 
  3220     0192                     	;# 
  3221     0193                     	;# 
  3222     0193                     	;# 
  3223     0193                     	;# 
  3224     0194                     	;# 
  3225     0195                     	;# 
  3226     0196                     	;# 
  3227     0199                     	;# 
  3228     019A                     	;# 
  3229     019B                     	;# 
  3230     019B                     	;# 
  3231     019B                     	;# 
  3232     019B                     	;# 
  3233     019C                     	;# 
  3234     019C                     	;# 
  3235     019D                     	;# 
  3236     019E                     	;# 
  3237     019F                     	;# 
  3238     020C                     	;# 
  3239     020D                     	;# 
  3240     0211                     	;# 
  3241     0211                     	;# 
  3242     0212                     	;# 
  3243     0212                     	;# 
  3244     0213                     	;# 
  3245     0213                     	;# 
  3246     0214                     	;# 
  3247     0214                     	;# 
  3248     0215                     	;# 
  3249     0215                     	;# 
  3250     0215                     	;# 
  3251     0216                     	;# 
  3252     0216                     	;# 
  3253     0217                     	;# 
  3254     0217                     	;# 
  3255     0219                     	;# 
  3256     021A                     	;# 
  3257     021B                     	;# 
  3258     021C                     	;# 
  3259     021D                     	;# 
  3260     021E                     	;# 
  3261     021F                     	;# 
  3262     0291                     	;# 
  3263     0291                     	;# 
  3264     0292                     	;# 
  3265     0293                     	;# 
  3266     0294                     	;# 
  3267     0295                     	;# 
  3268     0295                     	;# 
  3269     0296                     	;# 
  3270     0298                     	;# 
  3271     0298                     	;# 
  3272     0299                     	;# 
  3273     029A                     	;# 
  3274     029B                     	;# 
  3275     029C                     	;# 
  3276     029C                     	;# 
  3277     029D                     	;# 
  3278     029E                     	;# 
  3279     029E                     	;# 
  3280     0311                     	;# 
  3281     0311                     	;# 
  3282     0312                     	;# 
  3283     0313                     	;# 
  3284     0318                     	;# 
  3285     0318                     	;# 
  3286     0319                     	;# 
  3287     031A                     	;# 
  3288     0394                     	;# 
  3289     0395                     	;# 
  3290     0396                     	;# 
  3291     039A                     	;# 
  3292     039C                     	;# 
  3293     039D                     	;# 
  3294     039E                     	;# 
  3295     039F                     	;# 
  3296     0415                     	;# 
  3297     0416                     	;# 
  3298     0417                     	;# 
  3299     041C                     	;# 
  3300     041D                     	;# 
  3301     041E                     	;# 
  3302     0FE4                     	;# 
  3303     0FE5                     	;# 
  3304     0FE6                     	;# 
  3305     0FE7                     	;# 
  3306     0FE8                     	;# 
  3307     0FE9                     	;# 
  3308     0FEA                     	;# 
  3309     0FEB                     	;# 
  3310     0FED                     	;# 
  3311     0FEE                     	;# 
  3312     0FEF                     	;# 
  3313                           
  3314 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  3315     0000                     
  3316 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  3317     0000                     
  3318 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  3319     0000                     
  3320                           	psect	idataBANK0
  3321     0FAD                     __pidataBANK0:
  3322                           
  3323                           ;initializer for _position
  3324     0FAD  3480               	retlw	128
  3325                           
  3326                           ;initializer for _targetFloor
  3327     0FAE  3401               	retlw	1
  3328                           
  3329                           ;initializer for _currentFloor
  3330     0FAF  3404               	retlw	4
  3331                           
  3332                           	psect	stringtext1
  3333     0800                     __pstringtext1:
  3334     0800                     _spi1_configuration:
  3335     0800  3400               	retlw	0
  3336     0801  3400               	retlw	0
  3337     0802  3401               	retlw	1
  3338     0803  3400               	retlw	0
  3339     0804                     __end_of_spi1_configuration:
  3340                           
  3341                           	psect	nvBANK0
  3342     0020                     __pnvBANK0:
  3343     0020                     _CMP1_InterruptHandler:
  3344     0020                     	ds	2
  3345     0022                     _TMR4_InterruptHandler:
  3346     0022                     	ds	2
  3347     0024                     _TMR6_InterruptHandler:
  3348     0024                     	ds	2
  3349     0026                     _CMP2_InterruptHandler:
  3350     0026                     	ds	2
  3351     0028                     _TMR0_InterruptHandler:
  3352     0028                     	ds	2
  3353     002A                     _timer1ReloadVal:
  3354     002A                     	ds	2
  3355     002C                     _CCP4_CallBack:
  3356     002C                     	ds	2
  3357     002E                     _IOCBF3_InterruptHandler:
  3358     002E                     	ds	2
  3359     0030                     _IOCBF0_InterruptHandler:
  3360     0030                     	ds	2
  3361     0032                     _EUSART_ErrorHandler:
  3362     0032                     	ds	2
  3363     0034                     _EUSART_OverrunErrorHandler:
  3364     0034                     	ds	2
  3365     0036                     _EUSART_FramingErrorHandler:
  3366     0036                     	ds	2
  3367     0038                     _timer0ReloadVal:
  3368     0038                     	ds	1
  3369     000C                     _PORTAbits	set	12
  3370     0015                     _TMR0	set	21
  3371     0019                     _T1GCONbits	set	25
  3372     0018                     _T1CONbits	set	24
  3373     0018                     _T1CON	set	24
  3374     0016                     _TMR1L	set	22
  3375     0017                     _TMR1H	set	23
  3376     0019                     _T1GCON	set	25
  3377     001C                     _T2CONbits	set	28
  3378     001C                     _T2CON	set	28
  3379     001A                     _TMR2	set	26
  3380     001B                     _PR2	set	27
  3381     0012                     _PIR2bits	set	18
  3382     0013                     _PIR3bits	set	19
  3383     000B                     _INTCONbits	set	11
  3384     0011                     _PIR1bits	set	17
  3385     009D                     _ADCON0bits	set	157
  3386     009D                     _ADCON0	set	157
  3387     009C                     _ADRESH	set	156
  3388     009B                     _ADRESL	set	155
  3389     009E                     _ADCON1	set	158
  3390     0095                     _OPTION_REG	set	149
  3391     0097                     _WDTCON	set	151
  3392     0098                     _OSCTUNE	set	152
  3393     0099                     _OSCCON	set	153
  3394     0095                     _OPTION_REGbits	set	149
  3395     008D                     _TRISB	set	141
  3396     008C                     _TRISA	set	140
  3397     0092                     _PIE2bits	set	146
  3398     0093                     _PIE3bits	set	147
  3399     008D                     _TRISBbits	set	141
  3400     010D                     _LATBbits	set	269
  3401     010C                     _LATAbits	set	268
  3402     0112                     _CM1CON1	set	274
  3403     0111                     _CM1CON0	set	273
  3404     0119                     _DACCON1	set	281
  3405     0118                     _DACCON0	set	280
  3406     0115                     _CMOUTbits	set	277
  3407     0114                     _CM2CON1	set	276
  3408     0113                     _CM2CON0	set	275
  3409     0116                     _BORCON	set	278
  3410     011E                     _APFCON1	set	286
  3411     011D                     _APFCON0	set	285
  3412     010D                     _LATB	set	269
  3413     010C                     _LATA	set	268
  3414     0196                     _EECON2	set	406
  3415     0193                     _EEDATL	set	403
  3416     0194                     _EEDATH	set	404
  3417     0195                     _EECON1bits	set	405
  3418     0192                     _EEADRH	set	402
  3419     0191                     _EEADRL	set	401
  3420     018C                     _ANSELA	set	396
  3421     018D                     _ANSELB	set	397
  3422     019A                     _TXREG	set	410
  3423     0199                     _RCREG	set	409
  3424     019D                     _RCSTAbits	set	413
  3425     019E                     _TXSTAbits	set	414
  3426     019C                     _SPBRGH	set	412
  3427     019B                     _SPBRGL	set	411
  3428     019E                     _TXSTA	set	414
  3429     019D                     _RCSTA	set	413
  3430     019F                     _BAUDCON	set	415
  3431     020C                     _WPUA	set	524
  3432     020D                     _WPUB	set	525
  3433     0211                     _SSP1BUF	set	529
  3434     0216                     _SSP1CON2	set	534
  3435     0215                     _SSP1CON1bits	set	533
  3436     0212                     _SSP1ADD	set	530
  3437     0215                     _SSP1CON1	set	533
  3438     0214                     _SSP1STAT	set	532
  3439     029E                     _CCPTMRS0bits	set	670
  3440     0319                     _CCPR4H	set	793
  3441     0318                     _CCPR4L	set	792
  3442     031A                     _CCP4CON	set	794
  3443     0312                     _CCPR3H	set	786
  3444     0311                     _CCPR3L	set	785
  3445     0313                     _CCP3CON	set	787
  3446     0394                     _IOCBPbits	set	916
  3447     0395                     _IOCBNbits	set	917
  3448     0396                     _IOCBFbits	set	918
  3449     0417                     _T4CONbits	set	1047
  3450     0417                     _T4CON	set	1047
  3451     0415                     _TMR4	set	1045
  3452     0416                     _PR4	set	1046
  3453     041E                     _T6CONbits	set	1054
  3454     041E                     _T6CON	set	1054
  3455     041C                     _TMR6	set	1052
  3456     041D                     _PR6	set	1053
  3457                           
  3458                           	psect	cinit
  3459     006C                     start_initialization:	
  3460                           ; #config settings
  3461                           
  3462     006C                     __initialization:
  3463                           
  3464                           ; Initialize objects allocated to BANK0
  3465     006C  318F  27AD  3180   	fcall	__pidataBANK0	;fetch initializer
  3466     006F  00E2               	movwf	__pdataBANK0& (0+127)
  3467     0070  318F  27AE  3180   	fcall	__pidataBANK0+1	;fetch initializer
  3468     0073  00E3               	movwf	(__pdataBANK0+1)& (0+127)
  3469     0074  318F  27AF  3180   	fcall	__pidataBANK0+2	;fetch initializer
  3470     0077  00E4               	movwf	(__pdataBANK0+2)& (0+127)
  3471                           
  3472                           ; Clear objects allocated to BANK0
  3473     0078  3039               	movlw	low __pbssBANK0
  3474     0079  0084               	movwf	4
  3475     007A  3000               	movlw	high __pbssBANK0
  3476     007B  0085               	movwf	5
  3477     007C  3017               	movlw	23
  3478     007D  318F  27D8  3180   	fcall	clear_ram0
  3479                           
  3480                           ; Clear objects allocated to BANK1
  3481     0080  30A0               	movlw	low __pbssBANK1
  3482     0081  0084               	movwf	4
  3483     0082  3000               	movlw	high __pbssBANK1
  3484     0083  0085               	movwf	5
  3485     0084  3010               	movlw	16
  3486     0085  318F  27D8  3180   	fcall	clear_ram0
  3487     0088                     end_of_initialization:	
  3488                           ;End of C runtime variable initialization code
  3489                           
  3490     0088                     __end_of__initialization:
  3491     0088  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3492     0089  0020               	movlb	0
  3493     008A  3181  2980         	ljmp	_main	;jump to C main() function
  3494                           
  3495                           	psect	bssBANK0
  3496     0039                     __pbssBANK0:
  3497     0039                     _matrix:
  3498     0039                     	ds	8
  3499     0041                     _data_tx:
  3500     0041                     	ds	4
  3501     0045                     TMR4_ISR@CountCallBack:
  3502     0045                     	ds	2
  3503     0047                     TMR6_ISR@CountCallBack:
  3504     0047                     	ds	2
  3505     0049                     _ADC_InterruptHandler:
  3506     0049                     	ds	2
  3507     004B                     _velocity_idx:
  3508     004B                     	ds	1
  3509     004C                     _directionFlag:
  3510     004C                     	ds	1
  3511     004D                     _floorFlag:
  3512     004D                     	ds	1
  3513     004E                     _eusartRxLastError:
  3514     004E                     	ds	1
  3515     004F                     _motorState:
  3516     004F                     	ds	1
  3517                           
  3518                           	psect	dataBANK0
  3519     0062                     __pdataBANK0:
  3520     0062                     _position:
  3521     0062                     	ds	1
  3522     0063                     _targetFloor:
  3523     0063                     	ds	1
  3524     0064                     _currentFloor:
  3525     0064                     	ds	1
  3526                           
  3527                           	psect	bssBANK1
  3528     00A0                     __pbssBANK1:
  3529     00A0                     _velocity:
  3530     00A0                     	ds	16
  3531                           
  3532                           	psect	clrtext
  3533     0FD8                     clear_ram0:	
  3534                           ;	Called with FSR0 containing the base address, and
  3535                           ;	WREG with the size to clear
  3536                           
  3537     0FD8  0064               	clrwdt	;clear the watchdog before getting into this loop
  3538     0FD9                     clrloop0:
  3539     0FD9  0180               	clrf	0	;clear RAM location pointed to by FSR
  3540     0FDA  3101               	addfsr 0,1
  3541     0FDB  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3542     0FDC  2FD9               	goto	clrloop0	;have we reached the end yet?
  3543     0FDD  3400               	retlw	0	;all done for this memory range, return
  3544                           
  3545                           	psect	cstackBANK1
  3546     00B0                     __pcstackBANK1:
  3547     00B0                     ?_EUSART_SetFramingErrorHandler:
  3548     00B0                     ?_EUSART_SetOverrunErrorHandler:	
  3549                           ; 1 bytes @ 0x0
  3550                           
  3551     00B0                     ?_EUSART_SetErrorHandler:	
  3552                           ; 1 bytes @ 0x0
  3553                           
  3554     00B0                     ?_IOCBF0_SetInterruptHandler:	
  3555                           ; 1 bytes @ 0x0
  3556                           
  3557     00B0                     ?_IOCBF3_SetInterruptHandler:	
  3558                           ; 1 bytes @ 0x0
  3559                           
  3560     00B0                     ?_CCP4_SetCallBack:	
  3561                           ; 1 bytes @ 0x0
  3562                           
  3563     00B0                     ??_OSCILLATOR_Initialize:	
  3564                           ; 1 bytes @ 0x0
  3565                           
  3566     00B0                     ??_WDT_Initialize:	
  3567                           ; 1 bytes @ 0x0
  3568                           
  3569     00B0                     ??_CMP2_Initialize:	
  3570                           ; 1 bytes @ 0x0
  3571                           
  3572     00B0                     ??_DAC_Initialize:	
  3573                           ; 1 bytes @ 0x0
  3574                           
  3575     00B0                     ??_TMR2_Initialize:	
  3576                           ; 1 bytes @ 0x0
  3577                           
  3578     00B0                     ??_CMP1_Initialize:	
  3579                           ; 1 bytes @ 0x0
  3580                           
  3581     00B0                     ??_ADC_Initialize:	
  3582                           ; 1 bytes @ 0x0
  3583                           
  3584     00B0                     ??_TMR1_Initialize:	
  3585                           ; 1 bytes @ 0x0
  3586                           
  3587     00B0                     ?_TMR0_SetInterruptHandler:	
  3588                           ; 1 bytes @ 0x0
  3589                           
  3590     00B0                     ?_TMR6_SetInterruptHandler:	
  3591                           ; 1 bytes @ 0x0
  3592                           
  3593     00B0                     ?_TMR4_SetInterruptHandler:	
  3594                           ; 1 bytes @ 0x0
  3595                           
  3596     00B0                     ??_SPI1_Initialize:	
  3597                           ; 1 bytes @ 0x0
  3598                           
  3599     00B0                     ??_SPI1_WriteByte:	
  3600                           ; 1 bytes @ 0x0
  3601                           
  3602     00B0                     ??_PWM3_Initialize:	
  3603                           ; 1 bytes @ 0x0
  3604                           
  3605     00B0                     ?_PWM3_LoadDutyValue:	
  3606                           ; 1 bytes @ 0x0
  3607                           
  3608     00B0                     ??_EUSART_is_rx_ready:	
  3609                           ; 1 bytes @ 0x0
  3610                           
  3611     00B0                     ??_EUSART_Read:	
  3612                           ; 1 bytes @ 0x0
  3613                           
  3614     00B0                     ??_DATAEE_ReadByte:	
  3615                           ; 1 bytes @ 0x0
  3616                           
  3617     00B0                     ?_CMP2_SetInterruptHandler:	
  3618                           ; 1 bytes @ 0x0
  3619                           
  3620     00B0                     ??_TMR4_StartTimer:	
  3621                           ; 1 bytes @ 0x0
  3622                           
  3623     00B0                     ?_CMP1_SetInterruptHandler:	
  3624                           ; 1 bytes @ 0x0
  3625                           
  3626     00B0                     SPI1_WriteByte@byte:	
  3627                           ; 1 bytes @ 0x0
  3628                           
  3629     00B0                     DATAEE_ReadByte@bAdd:	
  3630                           ; 1 bytes @ 0x0
  3631                           
  3632     00B0                     PWM3_LoadDutyValue@dutyValue:	
  3633                           ; 1 bytes @ 0x0
  3634                           
  3635     00B0                     EUSART_SetFramingErrorHandler@interruptHandler:	
  3636                           ; 2 bytes @ 0x0
  3637                           
  3638     00B0                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  3639                           ; 2 bytes @ 0x0
  3640                           
  3641     00B0                     EUSART_SetErrorHandler@interruptHandler:	
  3642                           ; 2 bytes @ 0x0
  3643                           
  3644     00B0                     IOCBF0_SetInterruptHandler@InterruptHandler:	
  3645                           ; 2 bytes @ 0x0
  3646                           
  3647     00B0                     IOCBF3_SetInterruptHandler@InterruptHandler:	
  3648                           ; 2 bytes @ 0x0
  3649                           
  3650     00B0                     CCP4_SetCallBack@customCallBack:	
  3651                           ; 2 bytes @ 0x0
  3652                           
  3653     00B0                     TMR0_SetInterruptHandler@InterruptHandler:	
  3654                           ; 2 bytes @ 0x0
  3655                           
  3656     00B0                     CMP2_SetInterruptHandler@InterruptHandler:	
  3657                           ; 2 bytes @ 0x0
  3658                           
  3659     00B0                     TMR6_SetInterruptHandler@InterruptHandler:	
  3660                           ; 2 bytes @ 0x0
  3661                           
  3662     00B0                     TMR4_SetInterruptHandler@InterruptHandler:	
  3663                           ; 2 bytes @ 0x0
  3664                           
  3665     00B0                     CMP1_SetInterruptHandler@InterruptHandler:	
  3666                           ; 2 bytes @ 0x0
  3667                           
  3668                           
  3669                           ; 2 bytes @ 0x0
  3670     00B0                     	ds	1
  3671     00B1                     ?_setMatrix:
  3672     00B1                     ?_txMAX7219:	
  3673                           ; 1 bytes @ 0x1
  3674                           
  3675     00B1                     txMAX7219@dat0:	
  3676                           ; 1 bytes @ 0x1
  3677                           
  3678     00B1                     setMatrix@val:	
  3679                           ; 1 bytes @ 0x1
  3680                           
  3681                           
  3682                           ; 1 bytes @ 0x1
  3683     00B1                     	ds	1
  3684     00B2                     ??_EUSART_SetFramingErrorHandler:
  3685     00B2                     ??_EUSART_SetOverrunErrorHandler:	
  3686                           ; 1 bytes @ 0x2
  3687                           
  3688     00B2                     ??_EUSART_SetErrorHandler:	
  3689                           ; 1 bytes @ 0x2
  3690                           
  3691     00B2                     ??_IOCBF0_SetInterruptHandler:	
  3692                           ; 1 bytes @ 0x2
  3693                           
  3694     00B2                     ??_IOCBF3_SetInterruptHandler:	
  3695                           ; 1 bytes @ 0x2
  3696                           
  3697     00B2                     ??_CCP4_SetCallBack:	
  3698                           ; 1 bytes @ 0x2
  3699                           
  3700     00B2                     ??_TMR4_Initialize:	
  3701                           ; 1 bytes @ 0x2
  3702                           
  3703     00B2                     ??_TMR0_Initialize:	
  3704                           ; 1 bytes @ 0x2
  3705                           
  3706     00B2                     ??_TMR6_Initialize:	
  3707                           ; 1 bytes @ 0x2
  3708                           
  3709     00B2                     ??_TMR0_SetInterruptHandler:	
  3710                           ; 1 bytes @ 0x2
  3711                           
  3712     00B2                     ??_TMR6_SetInterruptHandler:	
  3713                           ; 1 bytes @ 0x2
  3714                           
  3715     00B2                     ??_TMR4_SetInterruptHandler:	
  3716                           ; 1 bytes @ 0x2
  3717                           
  3718     00B2                     ??_setMatrix:	
  3719                           ; 1 bytes @ 0x2
  3720                           
  3721     00B2                     ??_PWM3_LoadDutyValue:	
  3722                           ; 1 bytes @ 0x2
  3723                           
  3724     00B2                     ??_EUSART_Initialize:	
  3725                           ; 1 bytes @ 0x2
  3726                           
  3727     00B2                     ??_PIN_MANAGER_Initialize:	
  3728                           ; 1 bytes @ 0x2
  3729                           
  3730     00B2                     ??_CCP4_Initialize:	
  3731                           ; 1 bytes @ 0x2
  3732                           
  3733     00B2                     ??_SYSTEM_Initialize:	
  3734                           ; 1 bytes @ 0x2
  3735                           
  3736     00B2                     ??_CMP2_SetInterruptHandler:	
  3737                           ; 1 bytes @ 0x2
  3738                           
  3739     00B2                     ??_CMP1_SetInterruptHandler:	
  3740                           ; 1 bytes @ 0x2
  3741                           
  3742     00B2                     ??_txMAX7219:	
  3743                           ; 1 bytes @ 0x2
  3744                           
  3745     00B2                     txMAX7219@addr0:	
  3746                           ; 1 bytes @ 0x2
  3747                           
  3748                           
  3749                           ; 1 bytes @ 0x2
  3750     00B2                     	ds	1
  3751     00B3                     ??_sendMatrix:
  3752     00B3                     setMatrix@pos:	
  3753                           ; 1 bytes @ 0x3
  3754                           
  3755                           
  3756                           ; 1 bytes @ 0x3
  3757     00B3                     	ds	1
  3758     00B4                     ??_sendMotor:
  3759     00B4                     setMatrix@eeAdd:	
  3760                           ; 1 bytes @ 0x4
  3761                           
  3762     00B4                     sendMatrix@i:	
  3763                           ; 1 bytes @ 0x4
  3764                           
  3765                           
  3766                           ; 1 bytes @ 0x4
  3767     00B4                     	ds	1
  3768     00B5                     setMatrix@i:
  3769                           
  3770                           ; 1 bytes @ 0x5
  3771     00B5                     	ds	1
  3772     00B6                     ??_updateMotor:
  3773     00B6                     ??_updateMatrix:	
  3774                           ; 1 bytes @ 0x6
  3775                           
  3776     00B6                     updateMatrix@direction:	
  3777                           ; 1 bytes @ 0x6
  3778                           
  3779                           
  3780                           ; 1 bytes @ 0x6
  3781     00B6                     	ds	1
  3782     00B7                     ??_main:
  3783     00B7                     main@receivedData:	
  3784                           ; 1 bytes @ 0x7
  3785                           
  3786                           
  3787                           ; 1 bytes @ 0x7
  3788     00B7                     	ds	1
  3789                           
  3790                           	psect	cstackCOMMON
  3791     0070                     __pcstackCOMMON:
  3792     0070                     ?_PIN_MANAGER_IOC:
  3793     0070                     ?_TMR0_ISR:	
  3794                           ; 1 bytes @ 0x0
  3795                           
  3796     0070                     ?_TMR4_ISR:	
  3797                           ; 1 bytes @ 0x0
  3798                           
  3799     0070                     ?_CMP2_ISR:	
  3800                           ; 1 bytes @ 0x0
  3801                           
  3802     0070                     ?_CMP1_ISR:	
  3803                           ; 1 bytes @ 0x0
  3804                           
  3805     0070                     ?_CCP4_CaptureISR:	
  3806                           ; 1 bytes @ 0x0
  3807                           
  3808     0070                     ?_TMR6_ISR:	
  3809                           ; 1 bytes @ 0x0
  3810                           
  3811     0070                     ?_IOCBF0_DefaultInterruptHandler:	
  3812                           ; 1 bytes @ 0x0
  3813                           
  3814     0070                     ??_IOCBF0_DefaultInterruptHandler:	
  3815                           ; 1 bytes @ 0x0
  3816                           
  3817     0070                     ?_IOCBF3_DefaultInterruptHandler:	
  3818                           ; 1 bytes @ 0x0
  3819                           
  3820     0070                     ??_IOCBF3_DefaultInterruptHandler:	
  3821                           ; 1 bytes @ 0x0
  3822                           
  3823     0070                     ?_IOCBF0_ISR:	
  3824                           ; 1 bytes @ 0x0
  3825                           
  3826     0070                     ?_IOCBF3_ISR:	
  3827                           ; 1 bytes @ 0x0
  3828                           
  3829     0070                     ?_OSCILLATOR_Initialize:	
  3830                           ; 1 bytes @ 0x0
  3831                           
  3832     0070                     ?_WDT_Initialize:	
  3833                           ; 1 bytes @ 0x0
  3834                           
  3835     0070                     ?_CMP2_Initialize:	
  3836                           ; 1 bytes @ 0x0
  3837                           
  3838     0070                     ?_DAC_Initialize:	
  3839                           ; 1 bytes @ 0x0
  3840                           
  3841     0070                     ?_TMR4_Initialize:	
  3842                           ; 1 bytes @ 0x0
  3843                           
  3844     0070                     ?_TMR2_Initialize:	
  3845                           ; 1 bytes @ 0x0
  3846                           
  3847     0070                     ?_TMR0_Initialize:	
  3848                           ; 1 bytes @ 0x0
  3849                           
  3850     0070                     ?_TMR6_Initialize:	
  3851                           ; 1 bytes @ 0x0
  3852                           
  3853     0070                     ?_CMP1_Initialize:	
  3854                           ; 1 bytes @ 0x0
  3855                           
  3856     0070                     ?_ADC_Initialize:	
  3857                           ; 1 bytes @ 0x0
  3858                           
  3859     0070                     ?_TMR1_Initialize:	
  3860                           ; 1 bytes @ 0x0
  3861                           
  3862     0070                     ?_TMR0_DefaultInterruptHandler:	
  3863                           ; 1 bytes @ 0x0
  3864                           
  3865     0070                     ??_TMR0_DefaultInterruptHandler:	
  3866                           ; 1 bytes @ 0x0
  3867                           
  3868     0070                     ?_TMR6_DefaultInterruptHandler:	
  3869                           ; 1 bytes @ 0x0
  3870                           
  3871     0070                     ??_TMR6_DefaultInterruptHandler:	
  3872                           ; 1 bytes @ 0x0
  3873                           
  3874     0070                     ?_TMR6_CallBack:	
  3875                           ; 1 bytes @ 0x0
  3876                           
  3877     0070                     ?_TMR4_DefaultInterruptHandler:	
  3878                           ; 1 bytes @ 0x0
  3879                           
  3880     0070                     ??_TMR4_DefaultInterruptHandler:	
  3881                           ; 1 bytes @ 0x0
  3882                           
  3883     0070                     ?_TMR4_CallBack:	
  3884                           ; 1 bytes @ 0x0
  3885                           
  3886     0070                     ?_sendMatrix:	
  3887                           ; 1 bytes @ 0x0
  3888                           
  3889     0070                     ?_SPI1_Initialize:	
  3890                           ; 1 bytes @ 0x0
  3891                           
  3892     0070                     ?_SPI1_WriteByte:	
  3893                           ; 1 bytes @ 0x0
  3894                           
  3895     0070                     ?_PWM3_Initialize:	
  3896                           ; 1 bytes @ 0x0
  3897                           
  3898     0070                     ?_EUSART_Initialize:	
  3899                           ; 1 bytes @ 0x0
  3900                           
  3901     0070                     ?_EUSART_is_tx_ready:	
  3902                           ; 1 bytes @ 0x0
  3903                           
  3904     0070                     ??_EUSART_is_tx_ready:	
  3905                           ; 1 bytes @ 0x0
  3906                           
  3907     0070                     ?_EUSART_is_rx_ready:	
  3908                           ; 1 bytes @ 0x0
  3909                           
  3910     0070                     ?_EUSART_Read:	
  3911                           ; 1 bytes @ 0x0
  3912                           
  3913     0070                     ?_EUSART_Write:	
  3914                           ; 1 bytes @ 0x0
  3915                           
  3916     0070                     ??_EUSART_Write:	
  3917                           ; 1 bytes @ 0x0
  3918                           
  3919     0070                     ?_INTERRUPT_InterruptManager:	
  3920                           ; 1 bytes @ 0x0
  3921                           
  3922     0070                     ?_PIN_MANAGER_Initialize:	
  3923                           ; 1 bytes @ 0x0
  3924                           
  3925     0070                     ?_CCP4_DefaultCallBack:	
  3926                           ; 1 bytes @ 0x0
  3927                           
  3928     0070                     ?_CCP4_Initialize:	
  3929                           ; 1 bytes @ 0x0
  3930                           
  3931     0070                     ?_SYSTEM_Initialize:	
  3932                           ; 1 bytes @ 0x0
  3933                           
  3934     0070                     ?_TMR1_HasOverflowOccured:	
  3935                           ; 1 bytes @ 0x0
  3936                           
  3937     0070                     ??_TMR1_HasOverflowOccured:	
  3938                           ; 1 bytes @ 0x0
  3939                           
  3940     0070                     ?_DATAEE_ReadByte:	
  3941                           ; 1 bytes @ 0x0
  3942                           
  3943     0070                     ?_TMR6_StartTimer:	
  3944                           ; 1 bytes @ 0x0
  3945                           
  3946     0070                     ??_TMR6_StartTimer:	
  3947                           ; 1 bytes @ 0x0
  3948                           
  3949     0070                     ?_TMR6_StopTimer:	
  3950                           ; 1 bytes @ 0x0
  3951                           
  3952     0070                     ??_TMR6_StopTimer:	
  3953                           ; 1 bytes @ 0x0
  3954                           
  3955     0070                     ?_TMR6_WriteTimer:	
  3956                           ; 1 bytes @ 0x0
  3957                           
  3958     0070                     ??_TMR6_WriteTimer:	
  3959                           ; 1 bytes @ 0x0
  3960                           
  3961     0070                     ?_TMR4_StartTimer:	
  3962                           ; 1 bytes @ 0x0
  3963                           
  3964     0070                     ?_TMR4_StopTimer:	
  3965                           ; 1 bytes @ 0x0
  3966                           
  3967     0070                     ??_TMR4_StopTimer:	
  3968                           ; 1 bytes @ 0x0
  3969                           
  3970     0070                     ?_TMR4_WriteTimer:	
  3971                           ; 1 bytes @ 0x0
  3972                           
  3973     0070                     ??_TMR4_WriteTimer:	
  3974                           ; 1 bytes @ 0x0
  3975                           
  3976     0070                     ?_sendMotor:	
  3977                           ; 1 bytes @ 0x0
  3978                           
  3979     0070                     ?_updateMotor:	
  3980                           ; 1 bytes @ 0x0
  3981                           
  3982     0070                     ?_updateMatrix:	
  3983                           ; 1 bytes @ 0x0
  3984                           
  3985     0070                     ?_TMR0_Interrupt:	
  3986                           ; 1 bytes @ 0x0
  3987                           
  3988     0070                     ?_TMR4_Interrupt:	
  3989                           ; 1 bytes @ 0x0
  3990                           
  3991     0070                     ?_TMR6_Interrupt:	
  3992                           ; 1 bytes @ 0x0
  3993                           
  3994     0070                     ?_CCP4_Interrupt:	
  3995                           ; 1 bytes @ 0x0
  3996                           
  3997     0070                     ?_S1_Interrupt:	
  3998                           ; 1 bytes @ 0x0
  3999                           
  4000     0070                     ?_S2_Interrupt:	
  4001                           ; 1 bytes @ 0x0
  4002                           
  4003     0070                     ?_S3_Interrupt:	
  4004                           ; 1 bytes @ 0x0
  4005                           
  4006     0070                     ?_S4_Interrupt:	
  4007                           ; 1 bytes @ 0x0
  4008                           
  4009     0070                     ?_main:	
  4010                           ; 1 bytes @ 0x0
  4011                           
  4012     0070                     ?i1_SPI1_WriteByte:	
  4013                           ; 1 bytes @ 0x0
  4014                           
  4015     0070                     ??i1_SPI1_WriteByte:	
  4016                           ; 1 bytes @ 0x0
  4017                           
  4018     0070                     ?i1_PWM3_LoadDutyValue:	
  4019                           ; 1 bytes @ 0x0
  4020                           
  4021     0070                     ?i1_DATAEE_ReadByte:	
  4022                           ; 1 bytes @ 0x0
  4023                           
  4024     0070                     ??i1_DATAEE_ReadByte:	
  4025                           ; 1 bytes @ 0x0
  4026                           
  4027     0070                     ?i1_TMR4_StartTimer:	
  4028                           ; 1 bytes @ 0x0
  4029                           
  4030     0070                     ??i1_TMR4_StartTimer:	
  4031                           ; 1 bytes @ 0x0
  4032                           
  4033     0070                     ?i1_sendMotor:	
  4034                           ; 1 bytes @ 0x0
  4035                           
  4036     0070                     ?i1_updateMotor:	
  4037                           ; 1 bytes @ 0x0
  4038                           
  4039     0070                     ?i1_updateMatrix:	
  4040                           ; 1 bytes @ 0x0
  4041                           
  4042     0070                     ?i1_sendMatrix:	
  4043                           ; 1 bytes @ 0x0
  4044                           
  4045     0070                     ?_ADC_GetConversion:	
  4046                           ; 1 bytes @ 0x0
  4047                           
  4048     0070                     ?___wmul:	
  4049                           ; 2 bytes @ 0x0
  4050                           
  4051     0070                     ?___lwdiv:	
  4052                           ; 2 bytes @ 0x0
  4053                           
  4054     0070                     ?___lldiv:	
  4055                           ; 2 bytes @ 0x0
  4056                           
  4057     0070                     _EUSART_is_tx_ready$323:	
  4058                           ; 4 bytes @ 0x0
  4059                           
  4060     0070                     EUSART_Write@txData:	
  4061                           ; 1 bytes @ 0x0
  4062                           
  4063     0070                     TMR6_WriteTimer@timerVal:	
  4064                           ; 1 bytes @ 0x0
  4065                           
  4066     0070                     TMR4_WriteTimer@timerVal:	
  4067                           ; 1 bytes @ 0x0
  4068                           
  4069     0070                     i1SPI1_WriteByte@byte:	
  4070                           ; 1 bytes @ 0x0
  4071                           
  4072     0070                     i1DATAEE_ReadByte@bAdd:	
  4073                           ; 1 bytes @ 0x0
  4074                           
  4075     0070                     CCP4_DefaultCallBack@capturedValue:	
  4076                           ; 1 bytes @ 0x0
  4077                           
  4078     0070                     CCP4_Interrupt@capturedValue:	
  4079                           ; 2 bytes @ 0x0
  4080                           
  4081     0070                     ___wmul@multiplier:	
  4082                           ; 2 bytes @ 0x0
  4083                           
  4084     0070                     ___lwdiv@divisor:	
  4085                           ; 2 bytes @ 0x0
  4086                           
  4087     0070                     i1PWM3_LoadDutyValue@dutyValue:	
  4088                           ; 2 bytes @ 0x0
  4089                           
  4090     0070                     ___lldiv@divisor:	
  4091                           ; 2 bytes @ 0x0
  4092                           
  4093                           
  4094                           ; 4 bytes @ 0x0
  4095     0070                     	ds	1
  4096     0071                     ?i1_txMAX7219:
  4097     0071                     ?i1_setMatrix:	
  4098                           ; 1 bytes @ 0x1
  4099                           
  4100     0071                     i1txMAX7219@dat0:	
  4101                           ; 1 bytes @ 0x1
  4102                           
  4103     0071                     i1setMatrix@val:	
  4104                           ; 1 bytes @ 0x1
  4105                           
  4106                           
  4107                           ; 1 bytes @ 0x1
  4108     0071                     	ds	1
  4109     0072                     ??_CCP4_DefaultCallBack:
  4110     0072                     ??_ADC_GetConversion:	
  4111                           ; 1 bytes @ 0x2
  4112                           
  4113     0072                     ??_CCP4_Interrupt:	
  4114                           ; 1 bytes @ 0x2
  4115                           
  4116     0072                     ??i1_PWM3_LoadDutyValue:	
  4117                           ; 1 bytes @ 0x2
  4118                           
  4119     0072                     ??i1_txMAX7219:	
  4120                           ; 1 bytes @ 0x2
  4121                           
  4122     0072                     ??i1_setMatrix:	
  4123                           ; 1 bytes @ 0x2
  4124                           
  4125     0072                     i1txMAX7219@addr0:	
  4126                           ; 1 bytes @ 0x2
  4127                           
  4128     0072                     ___wmul@multiplicand:	
  4129                           ; 1 bytes @ 0x2
  4130                           
  4131     0072                     ___lwdiv@dividend:	
  4132                           ; 2 bytes @ 0x2
  4133                           
  4134                           
  4135                           ; 2 bytes @ 0x2
  4136     0072                     	ds	1
  4137     0073                     ??_CCP4_CaptureISR:
  4138     0073                     ??i1_sendMatrix:	
  4139                           ; 1 bytes @ 0x3
  4140                           
  4141     0073                     ADC_GetConversion@channel:	
  4142                           ; 1 bytes @ 0x3
  4143                           
  4144     0073                     i1setMatrix@pos:	
  4145                           ; 1 bytes @ 0x3
  4146                           
  4147     0073                     CCP4_CaptureISR@module:	
  4148                           ; 1 bytes @ 0x3
  4149                           
  4150                           
  4151                           ; 2 bytes @ 0x3
  4152     0073                     	ds	1
  4153     0074                     ??___wmul:
  4154     0074                     ??___lwdiv:	
  4155                           ; 1 bytes @ 0x4
  4156                           
  4157     0074                     ??i1_sendMotor:	
  4158                           ; 1 bytes @ 0x4
  4159                           
  4160     0074                     i1setMatrix@eeAdd:	
  4161                           ; 1 bytes @ 0x4
  4162                           
  4163     0074                     i1sendMatrix@i:	
  4164                           ; 1 bytes @ 0x4
  4165                           
  4166     0074                     ___wmul@product:	
  4167                           ; 1 bytes @ 0x4
  4168                           
  4169     0074                     ___lldiv@dividend:	
  4170                           ; 2 bytes @ 0x4
  4171                           
  4172                           
  4173                           ; 4 bytes @ 0x4
  4174     0074                     	ds	1
  4175     0075                     i1setMatrix@i:
  4176     0075                     ___lwdiv@quotient:	
  4177                           ; 1 bytes @ 0x5
  4178                           
  4179                           
  4180                           ; 2 bytes @ 0x5
  4181     0075                     	ds	1
  4182     0076                     ??i1_updateMotor:
  4183     0076                     ??i1_updateMatrix:	
  4184                           ; 1 bytes @ 0x6
  4185                           
  4186     0076                     i1updateMatrix@direction:	
  4187                           ; 1 bytes @ 0x6
  4188                           
  4189                           
  4190                           ; 1 bytes @ 0x6
  4191     0076                     	ds	1
  4192     0077                     ??_PIN_MANAGER_IOC:
  4193     0077                     ??_TMR4_ISR:	
  4194                           ; 1 bytes @ 0x7
  4195                           
  4196     0077                     ??_CMP2_ISR:	
  4197                           ; 1 bytes @ 0x7
  4198                           
  4199     0077                     ??_CMP1_ISR:	
  4200                           ; 1 bytes @ 0x7
  4201                           
  4202     0077                     ??_TMR6_ISR:	
  4203                           ; 1 bytes @ 0x7
  4204                           
  4205     0077                     ??_IOCBF0_ISR:	
  4206                           ; 1 bytes @ 0x7
  4207                           
  4208     0077                     ??_IOCBF3_ISR:	
  4209                           ; 1 bytes @ 0x7
  4210                           
  4211     0077                     ??_TMR6_CallBack:	
  4212                           ; 1 bytes @ 0x7
  4213                           
  4214     0077                     ??_TMR4_CallBack:	
  4215                           ; 1 bytes @ 0x7
  4216                           
  4217     0077                     ??_TMR4_Interrupt:	
  4218                           ; 1 bytes @ 0x7
  4219                           
  4220     0077                     ??_TMR6_Interrupt:	
  4221                           ; 1 bytes @ 0x7
  4222                           
  4223     0077                     ??_S1_Interrupt:	
  4224                           ; 1 bytes @ 0x7
  4225                           
  4226     0077                     ??_S2_Interrupt:	
  4227                           ; 1 bytes @ 0x7
  4228                           
  4229     0077                     ??_S3_Interrupt:	
  4230                           ; 1 bytes @ 0x7
  4231                           
  4232     0077                     ??_S4_Interrupt:	
  4233                           ; 1 bytes @ 0x7
  4234                           
  4235     0077                     ___lwdiv@counter:	
  4236                           ; 1 bytes @ 0x7
  4237                           
  4238                           
  4239                           ; 1 bytes @ 0x7
  4240     0077                     	ds	1
  4241     0078                     ??___lldiv:
  4242                           
  4243                           ; 1 bytes @ 0x8
  4244     0078                     	ds	1
  4245     0079                     ___lldiv@quotient:
  4246                           
  4247                           ; 4 bytes @ 0x9
  4248     0079                     	ds	4
  4249     007D                     ___lldiv@counter:
  4250                           
  4251                           ; 1 bytes @ 0xD
  4252     007D                     	ds	1
  4253     007E                     ??_TMR0_ISR:
  4254     007E                     ??_INTERRUPT_InterruptManager:	
  4255                           ; 1 bytes @ 0xE
  4256                           
  4257                           
  4258                           	psect	cstackBANK0
  4259     0050                     __pcstackBANK0:	
  4260                           ; 1 bytes @ 0xE
  4261                           
  4262     0050                     ??_TMR0_Interrupt:
  4263                           
  4264                           ; 1 bytes @ 0x0
  4265     0050                     	ds	4
  4266     0054                     TMR0_Interrupt@v:
  4267                           
  4268                           ; 4 bytes @ 0x4
  4269     0054                     	ds	4
  4270     0058                     TMR0_Interrupt@i:
  4271                           
  4272                           ; 2 bytes @ 0x8
  4273     0058                     	ds	2
  4274     005A                     TMR0_Interrupt@i_1680:
  4275                           
  4276                           ; 2 bytes @ 0xA
  4277     005A                     	ds	2
  4278     005C                     TMR0_Interrupt@t:
  4279                           
  4280                           ; 4 bytes @ 0xC
  4281     005C                     	ds	4
  4282     0060                     TMR0_Interrupt@p:
  4283                           
  4284                           ; 2 bytes @ 0x10
  4285     0060                     	ds	2
  4286                           
  4287                           	psect	maintext
  4288     0180                     __pmaintext:	
  4289 ;;
  4290 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  4291 ;;
  4292 ;; *************** function _main *****************
  4293 ;; Defined at:
  4294 ;;		line 233 in file "main.c"
  4295 ;; Parameters:    Size  Location     Type
  4296 ;;		None
  4297 ;; Auto vars:     Size  Location     Type
  4298 ;;  receivedData    1    7[BANK1 ] unsigned char 
  4299 ;; Return value:  Size  Location     Type
  4300 ;;                  1    wreg      void 
  4301 ;; Registers used:
  4302 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4303 ;; Tracked objects:
  4304 ;;		On entry : B1F/0
  4305 ;;		On exit  : 0/0
  4306 ;;		Unchanged: 0/0
  4307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4308 ;;      Params:         0       0       0       0       0       0
  4309 ;;      Locals:         0       0       1       0       0       0
  4310 ;;      Temps:          0       0       0       0       0       0
  4311 ;;      Totals:         0       0       1       0       0       0
  4312 ;;Total ram usage:        1 bytes
  4313 ;; Hardware stack levels required when called: 12
  4314 ;; This function calls:
  4315 ;;		_CCP4_SetCallBack
  4316 ;;		_CMP1_SetInterruptHandler
  4317 ;;		_CMP2_SetInterruptHandler
  4318 ;;		_EUSART_Read
  4319 ;;		_EUSART_is_rx_ready
  4320 ;;		_IOCBF0_SetInterruptHandler
  4321 ;;		_IOCBF3_SetInterruptHandler
  4322 ;;		_PWM3_LoadDutyValue
  4323 ;;		_SYSTEM_Initialize
  4324 ;;		_TMR0_SetInterruptHandler
  4325 ;;		_TMR4_SetInterruptHandler
  4326 ;;		_TMR6_SetInterruptHandler
  4327 ;;		_updateMatrix
  4328 ;;		_updateMotor
  4329 ;; This function is called by:
  4330 ;;		Startup code after reset
  4331 ;; This function uses a non-reentrant model
  4332 ;;
  4333                           
  4334     0180                     _main:	
  4335                           ;psect for function _main
  4336                           
  4337     0180                     l3906:	
  4338                           ;incstack = 0
  4339                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4340                           
  4341                           
  4342                           ;main.c: 236:     SYSTEM_Initialize();
  4343     0180  3183  2348  3181   	fcall	_SYSTEM_Initialize
  4344                           
  4345                           ;main.c: 238:     TMR0_SetInterruptHandler(TMR0_Interrupt);
  4346     0183  308C               	movlw	low _TMR0_Interrupt
  4347     0184  0021               	movlb	1	; select bank1
  4348     0185  00B0               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  4349     0186  3000               	movlw	high _TMR0_Interrupt
  4350     0187  00B1               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4351     0188  3187  27B1  3181   	fcall	_TMR0_SetInterruptHandler
  4352                           
  4353                           ;main.c: 239:     TMR4_SetInterruptHandler(TMR4_Interrupt);
  4354     018B  30BC               	movlw	low _TMR4_Interrupt
  4355     018C  0021               	movlb	1	; select bank1
  4356     018D  00B0               	movwf	TMR4_SetInterruptHandler@InterruptHandler^(0+128)
  4357     018E  3006               	movlw	high _TMR4_Interrupt
  4358     018F  00B1               	movwf	(TMR4_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4359     0190  3187  27A8  3181   	fcall	_TMR4_SetInterruptHandler
  4360                           
  4361                           ;main.c: 240:     TMR6_SetInterruptHandler(TMR6_Interrupt);
  4362     0193  30AC               	movlw	low _TMR6_Interrupt
  4363     0194  0021               	movlb	1	; select bank1
  4364     0195  00B0               	movwf	TMR6_SetInterruptHandler@InterruptHandler^(0+128)
  4365     0196  3006               	movlw	high _TMR6_Interrupt
  4366     0197  00B1               	movwf	(TMR6_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4367     0198  3187  279F  3181   	fcall	_TMR6_SetInterruptHandler
  4368                           
  4369                           ;main.c: 241:     CCP4_SetCallBack(CCP4_Interrupt);
  4370     019B  3015               	movlw	low _CCP4_Interrupt
  4371     019C  0021               	movlb	1	; select bank1
  4372     019D  00B0               	movwf	CCP4_SetCallBack@customCallBack^(0+128)
  4373     019E  3003               	movlw	high _CCP4_Interrupt
  4374     019F  00B1               	movwf	(CCP4_SetCallBack@customCallBack^(0+128)+1)
  4375     01A0  3187  27F0  3181   	fcall	_CCP4_SetCallBack
  4376                           
  4377                           ;main.c: 242:     IOCBF0_SetInterruptHandler(S1_Interrupt);
  4378     01A3  30AA               	movlw	low _S1_Interrupt
  4379     01A4  0021               	movlb	1	; select bank1
  4380     01A5  00B0               	movwf	IOCBF0_SetInterruptHandler@InterruptHandler^(0+128)
  4381     01A6  3005               	movlw	high _S1_Interrupt
  4382     01A7  00B1               	movwf	(IOCBF0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4383     01A8  3187  27CC  3181   	fcall	_IOCBF0_SetInterruptHandler
  4384                           
  4385                           ;main.c: 243:     IOCBF3_SetInterruptHandler(S2_Interrupt);
  4386     01AB  303B               	movlw	low _S2_Interrupt
  4387     01AC  0021               	movlb	1	; select bank1
  4388     01AD  00B0               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler^(0+128)
  4389     01AE  3005               	movlw	high _S2_Interrupt
  4390     01AF  00B1               	movwf	(IOCBF3_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4391     01B0  3187  27C3  3181   	fcall	_IOCBF3_SetInterruptHandler
  4392                           
  4393                           ;main.c: 244:     CMP1_SetInterruptHandler(S3_Interrupt);
  4394     01B3  3073               	movlw	low _S3_Interrupt
  4395     01B4  0021               	movlb	1	; select bank1
  4396     01B5  00B0               	movwf	CMP1_SetInterruptHandler@InterruptHandler^(0+128)
  4397     01B6  3005               	movlw	high _S3_Interrupt
  4398     01B7  00B1               	movwf	(CMP1_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4399     01B8  318F  27EE  3181   	fcall	_CMP1_SetInterruptHandler
  4400                           
  4401                           ;main.c: 245:     CMP2_SetInterruptHandler(S4_Interrupt);
  4402     01BB  3057               	movlw	low _S4_Interrupt
  4403     01BC  0021               	movlb	1	; select bank1
  4404     01BD  00B0               	movwf	CMP2_SetInterruptHandler@InterruptHandler^(0+128)
  4405     01BE  3005               	movlw	high _S4_Interrupt
  4406     01BF  00B1               	movwf	(CMP2_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4407     01C0  318F  27F7  3181   	fcall	_CMP2_SetInterruptHandler
  4408     01C3                     l3908:
  4409                           
  4410                           ;main.c: 251:     (INTCONbits.GIE = 1);
  4411     01C3  178B               	bsf	11,7	;volatile
  4412     01C4                     l3910:
  4413                           
  4414                           ;main.c: 254:     (INTCONbits.PEIE = 1);
  4415     01C4  170B               	bsf	11,6	;volatile
  4416                           
  4417                           ;main.c: 262:     PWM3_LoadDutyValue(409);
  4418     01C5  3099               	movlw	153
  4419     01C6  0021               	movlb	1	; select bank1
  4420     01C7  00B0               	movwf	PWM3_LoadDutyValue@dutyValue^(0+128)
  4421     01C8  3001               	movlw	1
  4422     01C9  00B1               	movwf	(PWM3_LoadDutyValue@dutyValue^(0+128)+1)
  4423     01CA  3185  2503  3181   	fcall	_PWM3_LoadDutyValue
  4424     01CD                     l3912:
  4425     01CD  0022               	movlb	2	; select bank2
  4426     01CE  178C               	bsf	12,7	;volatile
  4427     01CF                     l3914:
  4428                           
  4429                           ;main.c: 265:     uint8_t receivedData = 0;
  4430     01CF  0021               	movlb	1	; select bank1
  4431     01D0  01B7               	clrf	main@receivedData^(0+128)
  4432     01D1                     l3916:
  4433                           
  4434                           ;main.c: 268:     {;main.c: 269:         if(EUSART_is_rx_ready()){
  4435     01D1  318F  27C7  3181   	fcall	_EUSART_is_rx_ready
  4436     01D4  3A00               	xorlw	0
  4437     01D5  1903               	skipnz
  4438     01D6  29D8               	goto	u2401
  4439     01D7  29D9               	goto	u2400
  4440     01D8                     u2401:
  4441     01D8  29D1               	goto	l3916
  4442     01D9                     u2400:
  4443     01D9  29DF               	goto	l3922
  4444     01DA                     l3920:
  4445                           
  4446                           ;main.c: 271:                 receivedData = EUSART_Read();
  4447     01DA  3186  26DC  3181   	fcall	_EUSART_Read
  4448     01DD  0021               	movlb	1	; select bank1
  4449     01DE  00B7               	movwf	main@receivedData^(0+128)
  4450     01DF                     l3922:
  4451                           
  4452                           ;main.c: 270:             while(EUSART_is_rx_ready()){
  4453     01DF  318F  27C7  3181   	fcall	_EUSART_is_rx_ready
  4454     01E2  3A00               	xorlw	0
  4455     01E3  1D03               	skipz
  4456     01E4  29E6               	goto	u2411
  4457     01E5  29E7               	goto	u2410
  4458     01E6                     u2411:
  4459     01E6  29DA               	goto	l3920
  4460     01E7                     u2410:
  4461     01E7                     l3924:
  4462                           
  4463                           ;main.c: 273:             targetFloor = receivedData+1;
  4464     01E7  0021               	movlb	1	; select bank1
  4465     01E8  0837               	movf	main@receivedData^(0+128),w
  4466     01E9  3E01               	addlw	1
  4467     01EA  0020               	movlb	0	; select bank0
  4468     01EB  00E3               	movwf	_targetFloor
  4469                           
  4470                           ;main.c: 274:             if(motorState==0){
  4471     01EC  084F               	movf	_motorState,w
  4472     01ED  1D03               	btfss	3,2
  4473     01EE  29F0               	goto	u2421
  4474     01EF  29F1               	goto	u2420
  4475     01F0                     u2421:
  4476     01F0  29D1               	goto	l3916
  4477     01F1                     u2420:
  4478     01F1                     l3926:
  4479                           
  4480                           ;main.c: 275:                 updateMotor();
  4481     01F1  3183  2379  3181   	fcall	_updateMotor
  4482     01F4                     l3928:
  4483                           
  4484                           ;main.c: 276:                 updateMatrix();
  4485     01F4  3184  242F  3181   	fcall	_updateMatrix
  4486     01F7  29D1               	goto	l3916
  4487     01F8  3180  286A         	ljmp	start
  4488     01FA                     __end_of_main:
  4489                           
  4490                           	psect	text1
  4491     0379                     __ptext1:	
  4492 ;; *************** function _updateMotor *****************
  4493 ;; Defined at:
  4494 ;;		line 85 in file "main.c"
  4495 ;; Parameters:    Size  Location     Type
  4496 ;;		None
  4497 ;; Auto vars:     Size  Location     Type
  4498 ;;		None
  4499 ;; Return value:  Size  Location     Type
  4500 ;;                  1    wreg      void 
  4501 ;; Registers used:
  4502 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4503 ;; Tracked objects:
  4504 ;;		On entry : 0/0
  4505 ;;		On exit  : 0/0
  4506 ;;		Unchanged: 0/0
  4507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4508 ;;      Params:         0       0       0       0       0       0
  4509 ;;      Locals:         0       0       0       0       0       0
  4510 ;;      Temps:          0       0       0       0       0       0
  4511 ;;      Totals:         0       0       0       0       0       0
  4512 ;;Total ram usage:        0 bytes
  4513 ;; Hardware stack levels used: 1
  4514 ;; Hardware stack levels required when called: 10
  4515 ;; This function calls:
  4516 ;;		_TMR4_StartTimer
  4517 ;;		_sendMotor
  4518 ;; This function is called by:
  4519 ;;		_main
  4520 ;; This function uses a non-reentrant model
  4521 ;;
  4522                           
  4523     0379                     _updateMotor:	
  4524                           ;psect for function _updateMotor
  4525                           
  4526     0379                     l3864:	
  4527                           ;incstack = 0
  4528                           ; Regs used in _updateMotor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4529                           
  4530                           
  4531                           ;main.c: 86:     if(currentFloor==targetFloor){
  4532     0379  0020               	movlb	0	; select bank0
  4533     037A  0864               	movf	_currentFloor,w
  4534     037B  0663               	xorwf	_targetFloor,w
  4535     037C  1D03               	skipz
  4536     037D  2B7F               	goto	u2341
  4537     037E  2B80               	goto	u2340
  4538     037F                     u2341:
  4539     037F  2B82               	goto	l3868
  4540     0380                     u2340:
  4541     0380                     l3866:
  4542                           
  4543                           ;main.c: 87:         motorState = 0;
  4544     0380  01CF               	clrf	_motorState
  4545                           
  4546                           ;main.c: 88:     } else if(currentFloor < targetFloor){
  4547     0381  2BA4               	goto	l3886
  4548     0382                     l3868:
  4549     0382  0863               	movf	_targetFloor,w
  4550     0383  0264               	subwf	_currentFloor,w
  4551     0384  1803               	skipnc
  4552     0385  2B87               	goto	u2351
  4553     0386  2B88               	goto	u2350
  4554     0387                     u2351:
  4555     0387  2B97               	goto	l3878
  4556     0388                     u2350:
  4557     0388                     l3870:
  4558                           
  4559                           ;main.c: 89:         if(motorState == 2){
  4560     0388  3002               	movlw	2
  4561     0389  064F               	xorwf	_motorState,w
  4562     038A  1D03               	btfss	3,2
  4563     038B  2B8D               	goto	u2361
  4564     038C  2B8E               	goto	u2360
  4565     038D                     u2361:
  4566     038D  2B93               	goto	l3876
  4567     038E                     u2360:
  4568     038E                     l3872:
  4569                           
  4570                           ;main.c: 90:             directionFlag = 1;
  4571     038E  01CC               	clrf	_directionFlag
  4572     038F  0ACC               	incf	_directionFlag,f
  4573     0390                     l3874:
  4574                           
  4575                           ;main.c: 91:             TMR4_StartTimer();
  4576     0390  318F  27AA  3183   	fcall	_TMR4_StartTimer
  4577     0393                     l3876:
  4578                           
  4579                           ;main.c: 93:         motorState = 1;
  4580     0393  0020               	movlb	0	; select bank0
  4581     0394  01CF               	clrf	_motorState
  4582     0395  0ACF               	incf	_motorState,f
  4583                           
  4584                           ;main.c: 94:     } else{
  4585     0396  2BA4               	goto	l3886
  4586     0397                     l3878:
  4587                           
  4588                           ;main.c: 95:         if(motorState == 1){
  4589     0397  034F               	decf	_motorState,w
  4590     0398  1D03               	btfss	3,2
  4591     0399  2B9B               	goto	u2371
  4592     039A  2B9C               	goto	u2370
  4593     039B                     u2371:
  4594     039B  2BA1               	goto	l3884
  4595     039C                     u2370:
  4596     039C                     l3880:
  4597                           
  4598                           ;main.c: 96:             directionFlag = 1;
  4599     039C  01CC               	clrf	_directionFlag
  4600     039D  0ACC               	incf	_directionFlag,f
  4601     039E                     l3882:
  4602                           
  4603                           ;main.c: 97:             TMR4_StartTimer();
  4604     039E  318F  27AA  3183   	fcall	_TMR4_StartTimer
  4605     03A1                     l3884:
  4606                           
  4607                           ;main.c: 99:         motorState = 2;
  4608     03A1  3002               	movlw	2
  4609     03A2  0020               	movlb	0	; select bank0
  4610     03A3  00CF               	movwf	_motorState
  4611     03A4                     l3886:
  4612                           
  4613                           ;main.c: 101:     sendMotor();
  4614     03A4  3182  2254  3183   	fcall	_sendMotor
  4615     03A7                     l834:
  4616     03A7  0008               	return
  4617     03A8                     __end_of_updateMotor:
  4618                           
  4619                           	psect	text2
  4620     0254                     __ptext2:	
  4621 ;; *************** function _sendMotor *****************
  4622 ;; Defined at:
  4623 ;;		line 57 in file "main.c"
  4624 ;; Parameters:    Size  Location     Type
  4625 ;;		None
  4626 ;; Auto vars:     Size  Location     Type
  4627 ;;		None
  4628 ;; Return value:  Size  Location     Type
  4629 ;;                  1    wreg      void 
  4630 ;; Registers used:
  4631 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4632 ;; Tracked objects:
  4633 ;;		On entry : 0/0
  4634 ;;		On exit  : 0/0
  4635 ;;		Unchanged: 0/0
  4636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4637 ;;      Params:         0       0       0       0       0       0
  4638 ;;      Locals:         0       0       0       0       0       0
  4639 ;;      Temps:          0       0       2       0       0       0
  4640 ;;      Totals:         0       0       2       0       0       0
  4641 ;;Total ram usage:        2 bytes
  4642 ;; Hardware stack levels used: 1
  4643 ;; Hardware stack levels required when called: 9
  4644 ;; This function calls:
  4645 ;;		_PWM3_LoadDutyValue
  4646 ;; This function is called by:
  4647 ;;		_updateMotor
  4648 ;; This function uses a non-reentrant model
  4649 ;;
  4650                           
  4651     0254                     _sendMotor:	
  4652                           ;psect for function _sendMotor
  4653                           
  4654     0254                     l3784:	
  4655                           ;incstack = 0
  4656                           ; Regs used in _sendMotor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4657                           
  4658                           
  4659                           ;main.c: 58:     if(floorFlag || directionFlag){
  4660     0254  0020               	movlb	0	; select bank0
  4661     0255  084D               	movf	_floorFlag,w
  4662     0256  1D03               	btfss	3,2
  4663     0257  2A59               	goto	u2251
  4664     0258  2A5A               	goto	u2250
  4665     0259                     u2251:
  4666     0259  2A5F               	goto	l3788
  4667     025A                     u2250:
  4668     025A                     l3786:
  4669     025A  084C               	movf	_directionFlag,w
  4670     025B  1903               	btfsc	3,2
  4671     025C  2A5E               	goto	u2261
  4672     025D  2A5F               	goto	u2260
  4673     025E                     u2261:
  4674     025E  2A83               	goto	l3806
  4675     025F                     u2260:
  4676     025F                     l3788:
  4677                           
  4678                           ;main.c: 59:         PWM3_LoadDutyValue(0);
  4679     025F  3000               	movlw	0
  4680     0260  0021               	movlb	1	; select bank1
  4681     0261  00B0               	movwf	PWM3_LoadDutyValue@dutyValue^(0+128)
  4682     0262  00B1               	movwf	(PWM3_LoadDutyValue@dutyValue+1)^(0+128)
  4683     0263  3185  2503  3182   	fcall	_PWM3_LoadDutyValue
  4684                           
  4685                           ;main.c: 60:     } else{
  4686     0266  2A97               	goto	l825
  4687     0267                     l816:	
  4688                           ;main.c: 66:                 do { LATAbits.LATA7 = 1; } while(0);
  4689                           
  4690     0267  0022               	movlb	2	; select bank2
  4691     0268  178C               	bsf	12,7	;volatile
  4692     0269                     l3792:
  4693                           
  4694                           ;main.c: 67:                 if(currentFloor == 4){
  4695     0269  3004               	movlw	4
  4696     026A  0020               	movlb	0	; select bank0
  4697     026B  0664               	xorwf	_currentFloor,w
  4698     026C  1D03               	btfss	3,2
  4699     026D  2A6F               	goto	u2271
  4700     026E  2A70               	goto	u2270
  4701     026F                     u2271:
  4702     026F  2A71               	goto	l3796
  4703     0270                     u2270:
  4704     0270  2A5F               	goto	l3788
  4705     0271                     l3796:
  4706                           
  4707                           ;main.c: 70:                     PWM3_LoadDutyValue(409);
  4708     0271  3099               	movlw	153
  4709     0272  0021               	movlb	1	; select bank1
  4710     0273  00B0               	movwf	PWM3_LoadDutyValue@dutyValue^(0+128)
  4711     0274  3001               	movlw	1
  4712     0275  00B1               	movwf	(PWM3_LoadDutyValue@dutyValue^(0+128)+1)
  4713     0276  3185  2503  3182   	fcall	_PWM3_LoadDutyValue
  4714     0279  2A97               	goto	l825
  4715     027A                     l821:	
  4716                           ;main.c: 74:                 do { LATAbits.LATA7 = 0; } while(0);
  4717                           
  4718     027A  0022               	movlb	2	; select bank2
  4719     027B  138C               	bcf	12,7	;volatile
  4720     027C                     l3798:
  4721                           
  4722                           ;main.c: 75:                 if(currentFloor == 1){
  4723     027C  0020               	movlb	0	; select bank0
  4724     027D  0364               	decf	_currentFloor,w
  4725     027E  1D03               	btfss	3,2
  4726     027F  2A81               	goto	u2281
  4727     0280  2A82               	goto	u2280
  4728     0281                     u2281:
  4729     0281  2A71               	goto	l3796
  4730     0282                     u2280:
  4731     0282  2A5F               	goto	l3788
  4732     0283                     l3806:
  4733     0283  084F               	movf	_motorState,w
  4734     0284  0021               	movlb	1	; select bank1
  4735     0285  00B4               	movwf	??_sendMotor^(0+128)
  4736     0286  01B5               	clrf	(??_sendMotor^(0+128)+1)
  4737                           
  4738                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4739                           ; Switch size 1, requested type "simple"
  4740                           ; Number of cases is 1, Range of values is 0 to 0
  4741                           ; switch strategies available:
  4742                           ; Name         Instructions Cycles
  4743                           ; simple_byte            4     3 (average)
  4744                           ; direct_byte            8     6 (fixed)
  4745                           ; jumptable            260     6 (fixed)
  4746                           ;	Chosen strategy is simple_byte
  4747     0287  0835               	movf	(??_sendMotor+1)^(0+128),w
  4748     0288  3A00               	xorlw	0	; case 0
  4749     0289  1903               	skipnz
  4750     028A  2A8C               	goto	l3972
  4751     028B  2A97               	goto	l825
  4752     028C                     l3972:
  4753                           
  4754                           ; Switch size 1, requested type "simple"
  4755                           ; Number of cases is 3, Range of values is 0 to 2
  4756                           ; switch strategies available:
  4757                           ; Name         Instructions Cycles
  4758                           ; simple_byte           10     6 (average)
  4759                           ; direct_byte           12     6 (fixed)
  4760                           ; jumptable            260     6 (fixed)
  4761                           ;	Chosen strategy is simple_byte
  4762     028C  0834               	movf	??_sendMotor^(0+128),w
  4763     028D  3A00               	xorlw	0	; case 0
  4764     028E  1903               	skipnz
  4765     028F  2A5F               	goto	l3788
  4766     0290  3A01               	xorlw	1	; case 1
  4767     0291  1903               	skipnz
  4768     0292  2A67               	goto	l816
  4769     0293  3A03               	xorlw	3	; case 2
  4770     0294  1903               	skipnz
  4771     0295  2A7A               	goto	l821
  4772     0296  2A97               	goto	l825
  4773     0297                     l825:
  4774     0297  0008               	return
  4775     0298                     __end_of_sendMotor:
  4776                           
  4777                           	psect	text3
  4778     0503                     __ptext3:	
  4779 ;; *************** function _PWM3_LoadDutyValue *****************
  4780 ;; Defined at:
  4781 ;;		line 82 in file "mcc_generated_files/pwm3.c"
  4782 ;; Parameters:    Size  Location     Type
  4783 ;;  dutyValue       2    0[BANK1 ] unsigned short 
  4784 ;; Auto vars:     Size  Location     Type
  4785 ;;		None
  4786 ;; Return value:  Size  Location     Type
  4787 ;;                  1    wreg      void 
  4788 ;; Registers used:
  4789 ;;		wreg, status,2, status,0
  4790 ;; Tracked objects:
  4791 ;;		On entry : 0/0
  4792 ;;		On exit  : 0/0
  4793 ;;		Unchanged: 0/0
  4794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4795 ;;      Params:         0       0       2       0       0       0
  4796 ;;      Locals:         0       0       0       0       0       0
  4797 ;;      Temps:          0       0       2       0       0       0
  4798 ;;      Totals:         0       0       4       0       0       0
  4799 ;;Total ram usage:        4 bytes
  4800 ;; Hardware stack levels used: 1
  4801 ;; Hardware stack levels required when called: 8
  4802 ;; This function calls:
  4803 ;;		Nothing
  4804 ;; This function is called by:
  4805 ;;		_sendMotor
  4806 ;;		_main
  4807 ;; This function uses a non-reentrant model
  4808 ;;
  4809                           
  4810     0503                     _PWM3_LoadDutyValue:	
  4811                           ;psect for function _PWM3_LoadDutyValue
  4812                           
  4813     0503                     l3584:	
  4814                           ;incstack = 0
  4815                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2+status,0]
  4816                           
  4817                           
  4818                           ;mcc_generated_files/pwm3.c: 82: void PWM3_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm3.c: 83: {;mcc_generated_files/pwm3.c: 85:     CCPR3L = ((dutyValue & 0x03FC
      +                          )>>2);
  4819     0503  0021               	movlb	1	; select bank1
  4820     0504  0831               	movf	(PWM3_LoadDutyValue@dutyValue+1)^(0+128),w
  4821     0505  00B3               	movwf	(??_PWM3_LoadDutyValue^(0+128)+1)
  4822     0506  0830               	movf	PWM3_LoadDutyValue@dutyValue^(0+128),w
  4823     0507  00B2               	movwf	??_PWM3_LoadDutyValue^(0+128)
  4824     0508  36B3               	lsrf	(??_PWM3_LoadDutyValue^(0+128)+1),f
  4825     0509  0CB2               	rrf	??_PWM3_LoadDutyValue^(0+128),f
  4826     050A  36B3               	lsrf	(??_PWM3_LoadDutyValue^(0+128)+1),f
  4827     050B  0CB2               	rrf	??_PWM3_LoadDutyValue^(0+128),f
  4828     050C  0832               	movf	??_PWM3_LoadDutyValue^(0+128),w
  4829     050D  0026               	movlb	6	; select bank6
  4830     050E  0091               	movwf	17	;volatile
  4831                           
  4832                           ;mcc_generated_files/pwm3.c: 88:     CCP3CON = ((uint8_t)(CCP3CON & 0xCF) | ((dutyValue 
      +                          & 0x0003)<<4));
  4833     050F  0021               	movlb	1	; select bank1
  4834     0510  0830               	movf	PWM3_LoadDutyValue@dutyValue^(0+128),w
  4835     0511  3903               	andlw	3
  4836     0512  00B2               	movwf	??_PWM3_LoadDutyValue^(0+128)
  4837     0513  3004               	movlw	4
  4838     0514                     u2225:
  4839     0514  35B2               	lslf	??_PWM3_LoadDutyValue^(0+128),f
  4840     0515  0B89               	decfsz	9,f
  4841     0516  2D14               	goto	u2225
  4842     0517  0026               	movlb	6	; select bank6
  4843     0518  0813               	movf	19,w	;volatile
  4844     0519  39CF               	andlw	207
  4845     051A  0021               	movlb	1	; select bank1
  4846     051B  0432               	iorwf	??_PWM3_LoadDutyValue^(0+128),w
  4847     051C  0026               	movlb	6	; select bank6
  4848     051D  0093               	movwf	19	;volatile
  4849     051E                     l75:
  4850     051E  0008               	return
  4851     051F                     __end_of_PWM3_LoadDutyValue:
  4852                           
  4853                           	psect	text4
  4854     0FAA                     __ptext4:	
  4855 ;; *************** function _TMR4_StartTimer *****************
  4856 ;; Defined at:
  4857 ;;		line 87 in file "mcc_generated_files/tmr4.c"
  4858 ;; Parameters:    Size  Location     Type
  4859 ;;		None
  4860 ;; Auto vars:     Size  Location     Type
  4861 ;;		None
  4862 ;; Return value:  Size  Location     Type
  4863 ;;                  1    wreg      void 
  4864 ;; Registers used:
  4865 ;;		None
  4866 ;; Tracked objects:
  4867 ;;		On entry : 0/0
  4868 ;;		On exit  : 0/0
  4869 ;;		Unchanged: 0/0
  4870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4871 ;;      Params:         0       0       0       0       0       0
  4872 ;;      Locals:         0       0       0       0       0       0
  4873 ;;      Temps:          0       0       0       0       0       0
  4874 ;;      Totals:         0       0       0       0       0       0
  4875 ;;Total ram usage:        0 bytes
  4876 ;; Hardware stack levels used: 1
  4877 ;; Hardware stack levels required when called: 8
  4878 ;; This function calls:
  4879 ;;		Nothing
  4880 ;; This function is called by:
  4881 ;;		_updateMotor
  4882 ;; This function uses a non-reentrant model
  4883 ;;
  4884                           
  4885     0FAA                     _TMR4_StartTimer:	
  4886                           ;psect for function _TMR4_StartTimer
  4887                           
  4888     0FAA                     l3782:	
  4889                           ;incstack = 0
  4890                           ; Regs used in _TMR4_StartTimer: []
  4891                           
  4892                           
  4893                           ;mcc_generated_files/tmr4.c: 90:     T4CONbits.TMR4ON = 1;
  4894     0FAA  0028               	movlb	8	; select bank8
  4895     0FAB  1517               	bsf	23,2	;volatile
  4896     0FAC                     l676:
  4897     0FAC  0008               	return
  4898     0FAD                     __end_of_TMR4_StartTimer:
  4899                           
  4900                           	psect	text5
  4901     042F                     __ptext5:	
  4902 ;; *************** function _updateMatrix *****************
  4903 ;; Defined at:
  4904 ;;		line 104 in file "main.c"
  4905 ;; Parameters:    Size  Location     Type
  4906 ;;		None
  4907 ;; Auto vars:     Size  Location     Type
  4908 ;;  direction       1    6[BANK1 ] unsigned char 
  4909 ;; Return value:  Size  Location     Type
  4910 ;;                  1    wreg      void 
  4911 ;; Registers used:
  4912 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4913 ;; Tracked objects:
  4914 ;;		On entry : 0/0
  4915 ;;		On exit  : 0/0
  4916 ;;		Unchanged: 0/0
  4917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4918 ;;      Params:         0       0       0       0       0       0
  4919 ;;      Locals:         0       0       1       0       0       0
  4920 ;;      Temps:          0       0       0       0       0       0
  4921 ;;      Totals:         0       0       1       0       0       0
  4922 ;;Total ram usage:        1 bytes
  4923 ;; Hardware stack levels used: 1
  4924 ;; Hardware stack levels required when called: 11
  4925 ;; This function calls:
  4926 ;;		_sendMatrix
  4927 ;;		_setMatrix
  4928 ;; This function is called by:
  4929 ;;		_main
  4930 ;; This function uses a non-reentrant model
  4931 ;;
  4932                           
  4933     042F                     _updateMatrix:	
  4934                           ;psect for function _updateMatrix
  4935                           
  4936     042F                     l3888:	
  4937                           ;incstack = 0
  4938                           ; Regs used in _updateMatrix: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4939                           
  4940                           
  4941                           ;main.c: 105:     setMatrix(0, currentFloor);
  4942     042F  0020               	movlb	0	; select bank0
  4943     0430  0864               	movf	_currentFloor,w
  4944     0431  0021               	movlb	1	; select bank1
  4945     0432  00B1               	movwf	setMatrix@val^(0+128)
  4946     0433  3000               	movlw	0
  4947     0434  3184  2406  3184   	fcall	_setMatrix
  4948     0437                     l3890:
  4949     0437                     l3892:
  4950                           
  4951                           ;main.c: 108:     if(motorState==0){
  4952     0437  0020               	movlb	0	; select bank0
  4953     0438  084F               	movf	_motorState,w
  4954     0439  1D03               	btfss	3,2
  4955     043A  2C3C               	goto	u2381
  4956     043B  2C3D               	goto	u2380
  4957     043C                     u2381:
  4958     043C  2C41               	goto	l3896
  4959     043D                     u2380:
  4960     043D                     l3894:
  4961                           
  4962                           ;main.c: 109:         direction = 12;
  4963     043D  300C               	movlw	12
  4964     043E  0021               	movlb	1	; select bank1
  4965     043F  00B6               	movwf	updateMatrix@direction^(0+128)
  4966                           
  4967                           ;main.c: 110:     } else if(motorState==1){
  4968     0440  2C4D               	goto	l3902
  4969     0441                     l3896:
  4970     0441  034F               	decf	_motorState,w
  4971     0442  1D03               	btfss	3,2
  4972     0443  2C45               	goto	u2391
  4973     0444  2C46               	goto	u2390
  4974     0445                     u2391:
  4975     0445  2C4A               	goto	l3900
  4976     0446                     u2390:
  4977     0446                     l3898:
  4978                           
  4979                           ;main.c: 111:         direction = 10;
  4980     0446  300A               	movlw	10
  4981     0447  0021               	movlb	1	; select bank1
  4982     0448  00B6               	movwf	updateMatrix@direction^(0+128)
  4983                           
  4984                           ;main.c: 112:     } else{
  4985     0449  2C4D               	goto	l3902
  4986     044A                     l3900:
  4987                           
  4988                           ;main.c: 113:         direction = 11;
  4989     044A  300B               	movlw	11
  4990     044B  0021               	movlb	1	; select bank1
  4991     044C  00B6               	movwf	updateMatrix@direction^(0+128)
  4992     044D                     l3902:
  4993                           
  4994                           ;main.c: 116:     setMatrix(4, direction);
  4995     044D  0836               	movf	updateMatrix@direction^(0+128),w
  4996     044E  00B1               	movwf	setMatrix@val^(0+128)
  4997     044F  3004               	movlw	4
  4998     0450  3184  2406  3184   	fcall	_setMatrix
  4999     0453                     l3904:
  5000                           
  5001                           ;main.c: 117:     sendMatrix();
  5002     0453  3185  251F  3184   	fcall	_sendMatrix
  5003     0456                     l841:
  5004     0456  0008               	return
  5005     0457                     __end_of_updateMatrix:
  5006                           
  5007                           	psect	text6
  5008     0406                     __ptext6:	
  5009 ;; *************** function _setMatrix *****************
  5010 ;; Defined at:
  5011 ;;		line 105 in file "ledMatrix.c"
  5012 ;; Parameters:    Size  Location     Type
  5013 ;;  pos             1    wreg     unsigned char 
  5014 ;;  val             1    1[BANK1 ] unsigned char 
  5015 ;; Auto vars:     Size  Location     Type
  5016 ;;  pos             1    3[BANK1 ] unsigned char 
  5017 ;;  i               1    5[BANK1 ] unsigned char 
  5018 ;;  eeAdd           1    4[BANK1 ] unsigned char 
  5019 ;; Return value:  Size  Location     Type
  5020 ;;                  1    wreg      void 
  5021 ;; Registers used:
  5022 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5023 ;; Tracked objects:
  5024 ;;		On entry : 0/0
  5025 ;;		On exit  : 0/0
  5026 ;;		Unchanged: 0/0
  5027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5028 ;;      Params:         0       0       1       0       0       0
  5029 ;;      Locals:         0       0       3       0       0       0
  5030 ;;      Temps:          0       0       1       0       0       0
  5031 ;;      Totals:         0       0       5       0       0       0
  5032 ;;Total ram usage:        5 bytes
  5033 ;; Hardware stack levels used: 1
  5034 ;; Hardware stack levels required when called: 9
  5035 ;; This function calls:
  5036 ;;		_DATAEE_ReadByte
  5037 ;; This function is called by:
  5038 ;;		_updateMatrix
  5039 ;; This function uses a non-reentrant model
  5040 ;;
  5041                           
  5042     0406                     _setMatrix:	
  5043                           ;psect for function _setMatrix
  5044                           
  5045                           
  5046                           ;incstack = 0
  5047                           ; Regs used in _setMatrix: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5048                           ;setMatrix@pos stored from wreg
  5049     0406  0021               	movlb	1	; select bank1
  5050     0407  00B3               	movwf	setMatrix@pos^(0+128)
  5051     0408                     l3812:
  5052                           
  5053                           ;ledMatrix.c: 109:  uint8_t eeAdd = val<<2;
  5054     0408  0831               	movf	setMatrix@val^(0+128),w
  5055     0409  00B2               	movwf	??_setMatrix^(0+128)
  5056     040A  3001               	movlw	1
  5057     040B                     u2295:
  5058     040B  35B2               	lslf	??_setMatrix^(0+128),f
  5059     040C  3EFF               	addlw	-1
  5060     040D  1D03               	skipz
  5061     040E  2C0B               	goto	u2295
  5062     040F  3532               	lslf	??_setMatrix^(0+128),w
  5063     0410  00B4               	movwf	setMatrix@eeAdd^(0+128)
  5064     0411                     l3814:
  5065                           
  5066                           ;ledMatrix.c: 110:  for(uint8_t i=0;i<4;i++){
  5067     0411  01B5               	clrf	setMatrix@i^(0+128)
  5068     0412                     l3820:
  5069                           
  5070                           ;ledMatrix.c: 111:   matrix[pos++]=DATAEE_ReadByte(eeAdd++);
  5071     0412  0833               	movf	setMatrix@pos^(0+128),w
  5072     0413  3E39               	addlw	(low (_matrix| 0))& (0+255)
  5073     0414  0086               	movwf	6
  5074     0415  0187               	clrf	7
  5075     0416  0834               	movf	setMatrix@eeAdd^(0+128),w
  5076     0417  3187  2734  3184   	fcall	_DATAEE_ReadByte
  5077     041A  0081               	movwf	1
  5078     041B                     l3822:
  5079     041B  3001               	movlw	1
  5080     041C  0021               	movlb	1	; select bank1
  5081     041D  00B2               	movwf	??_setMatrix^(0+128)
  5082     041E  0832               	movf	??_setMatrix^(0+128),w
  5083     041F  07B4               	addwf	setMatrix@eeAdd^(0+128),f
  5084     0420                     l3824:
  5085     0420  3001               	movlw	1
  5086     0421  00B2               	movwf	??_setMatrix^(0+128)
  5087     0422  0832               	movf	??_setMatrix^(0+128),w
  5088     0423  07B3               	addwf	setMatrix@pos^(0+128),f
  5089     0424                     l3826:
  5090                           
  5091                           ;ledMatrix.c: 112:     }
  5092     0424  3001               	movlw	1
  5093     0425  00B2               	movwf	??_setMatrix^(0+128)
  5094     0426  0832               	movf	??_setMatrix^(0+128),w
  5095     0427  07B5               	addwf	setMatrix@i^(0+128),f
  5096     0428                     l3828:
  5097     0428  3004               	movlw	4
  5098     0429  0235               	subwf	setMatrix@i^(0+128),w
  5099     042A  1C03               	skipc
  5100     042B  2C2D               	goto	u2301
  5101     042C  2C2E               	goto	u2300
  5102     042D                     u2301:
  5103     042D  2C12               	goto	l3820
  5104     042E                     u2300:
  5105     042E                     l925:
  5106     042E  0008               	return
  5107     042F                     __end_of_setMatrix:
  5108                           
  5109                           	psect	text7
  5110     0734                     __ptext7:	
  5111 ;; *************** function _DATAEE_ReadByte *****************
  5112 ;; Defined at:
  5113 ;;		line 211 in file "mcc_generated_files/memory.c"
  5114 ;; Parameters:    Size  Location     Type
  5115 ;;  bAdd            1    wreg     unsigned char 
  5116 ;; Auto vars:     Size  Location     Type
  5117 ;;  bAdd            1    0[BANK1 ] unsigned char 
  5118 ;; Return value:  Size  Location     Type
  5119 ;;                  1    wreg      unsigned char 
  5120 ;; Registers used:
  5121 ;;		wreg
  5122 ;; Tracked objects:
  5123 ;;		On entry : 0/0
  5124 ;;		On exit  : 0/0
  5125 ;;		Unchanged: 0/0
  5126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5127 ;;      Params:         0       0       0       0       0       0
  5128 ;;      Locals:         0       0       1       0       0       0
  5129 ;;      Temps:          0       0       0       0       0       0
  5130 ;;      Totals:         0       0       1       0       0       0
  5131 ;;Total ram usage:        1 bytes
  5132 ;; Hardware stack levels used: 1
  5133 ;; Hardware stack levels required when called: 8
  5134 ;; This function calls:
  5135 ;;		Nothing
  5136 ;; This function is called by:
  5137 ;;		_setMatrix
  5138 ;; This function uses a non-reentrant model
  5139 ;;
  5140                           
  5141     0734                     _DATAEE_ReadByte:	
  5142                           ;psect for function _DATAEE_ReadByte
  5143                           
  5144                           
  5145                           ;incstack = 0
  5146                           ; Regs used in _DATAEE_ReadByte: [wreg]
  5147                           ;DATAEE_ReadByte@bAdd stored from wreg
  5148     0734  0021               	movlb	1	; select bank1
  5149     0735  00B0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  5150     0736                     l3600:
  5151                           
  5152                           ;mcc_generated_files/memory.c: 211: uint8_t DATAEE_ReadByte(uint8_t bAdd);mcc_generated_
      +                          files/memory.c: 212: {;mcc_generated_files/memory.c: 213:     EEADRL = (uint8_t)(bAdd & 
      +                          0x0ff);
  5153     0736  0830               	movf	DATAEE_ReadByte@bAdd^(0+128),w
  5154     0737  0023               	movlb	3	; select bank3
  5155     0738  0091               	movwf	17	;volatile
  5156     0739                     l3602:
  5157                           
  5158                           ;mcc_generated_files/memory.c: 214:     EECON1bits.CFGS = 0;
  5159     0739  1315               	bcf	21,6	;volsfr
  5160     073A                     l3604:
  5161                           
  5162                           ;mcc_generated_files/memory.c: 215:     EECON1bits.EEPGD = 0;
  5163     073A  1395               	bcf	21,7	;volsfr
  5164     073B                     l3606:
  5165                           
  5166                           ;mcc_generated_files/memory.c: 216:     EECON1bits.RD = 1;
  5167     073B  1415               	bsf	21,0	;volsfr
  5168     073C                     l3608:
  5169                           
  5170                           ;mcc_generated_files/memory.c: 217:     __nop();
  5171     073C  0000               	nop
  5172     073D                     l3610:
  5173                           
  5174                           ;mcc_generated_files/memory.c: 218:     __nop();
  5175     073D  0000               	nop
  5176                           
  5177                           ;mcc_generated_files/memory.c: 220:     return (EEDATL);
  5178     073E  0023               	movlb	3	; select bank3
  5179     073F  0813               	movf	19,w	;volatile
  5180     0740                     l558:
  5181     0740  0008               	return
  5182     0741                     __end_of_DATAEE_ReadByte:
  5183                           
  5184                           	psect	text8
  5185     051F                     __ptext8:	
  5186 ;; *************** function _sendMatrix *****************
  5187 ;; Defined at:
  5188 ;;		line 115 in file "ledMatrix.c"
  5189 ;; Parameters:    Size  Location     Type
  5190 ;;		None
  5191 ;; Auto vars:     Size  Location     Type
  5192 ;;  i               1    4[BANK1 ] unsigned char 
  5193 ;; Return value:  Size  Location     Type
  5194 ;;                  1    wreg      void 
  5195 ;; Registers used:
  5196 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5197 ;; Tracked objects:
  5198 ;;		On entry : 0/0
  5199 ;;		On exit  : 0/0
  5200 ;;		Unchanged: 0/0
  5201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5202 ;;      Params:         0       0       0       0       0       0
  5203 ;;      Locals:         0       0       1       0       0       0
  5204 ;;      Temps:          0       0       1       0       0       0
  5205 ;;      Totals:         0       0       2       0       0       0
  5206 ;;Total ram usage:        2 bytes
  5207 ;; Hardware stack levels used: 1
  5208 ;; Hardware stack levels required when called: 10
  5209 ;; This function calls:
  5210 ;;		_txMAX7219
  5211 ;; This function is called by:
  5212 ;;		_updateMatrix
  5213 ;; This function uses a non-reentrant model
  5214 ;;
  5215                           
  5216     051F                     _sendMatrix:	
  5217                           ;psect for function _sendMatrix
  5218                           
  5219     051F                     l3830:	
  5220                           ;incstack = 0
  5221                           ; Regs used in _sendMatrix: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5222                           
  5223                           
  5224                           ;ledMatrix.c: 116:     for(uint8_t i=0;i<8;i++){
  5225     051F  0021               	movlb	1	; select bank1
  5226     0520  01B4               	clrf	sendMatrix@i^(0+128)
  5227     0521                     l3836:
  5228                           
  5229                           ;ledMatrix.c: 118:         txMAX7219(i+1,matrix[7-i]);
  5230     0521  3040               	movlw	(low ((_matrix| 0+7)))& (0+255)
  5231     0522  00B3               	movwf	??_sendMatrix^(0+128)
  5232     0523  0834               	movf	sendMatrix@i^(0+128),w
  5233     0524  02B3               	subwf	??_sendMatrix^(0+128),f
  5234     0525  0833               	movf	??_sendMatrix^(0+128),w
  5235     0526  0086               	movwf	6
  5236     0527  0187               	clrf	7
  5237     0528  0801               	movf	1,w
  5238     0529  00B1               	movwf	txMAX7219@dat0^(0+128)
  5239     052A  0834               	movf	sendMatrix@i^(0+128),w
  5240     052B  3E01               	addlw	1
  5241     052C  3184  24E6  3185   	fcall	_txMAX7219
  5242     052F                     l3838:
  5243                           
  5244                           ;ledMatrix.c: 122:     }
  5245     052F  3001               	movlw	1
  5246     0530  0021               	movlb	1	; select bank1
  5247     0531  00B3               	movwf	??_sendMatrix^(0+128)
  5248     0532  0833               	movf	??_sendMatrix^(0+128),w
  5249     0533  07B4               	addwf	sendMatrix@i^(0+128),f
  5250     0534                     l3840:
  5251     0534  3008               	movlw	8
  5252     0535  0234               	subwf	sendMatrix@i^(0+128),w
  5253     0536  1C03               	skipc
  5254     0537  2D39               	goto	u2311
  5255     0538  2D3A               	goto	u2310
  5256     0539                     u2311:
  5257     0539  2D21               	goto	l3836
  5258     053A                     u2310:
  5259     053A                     l930:
  5260     053A  0008               	return
  5261     053B                     __end_of_sendMatrix:
  5262                           
  5263                           	psect	text9
  5264     04E6                     __ptext9:	
  5265 ;; *************** function _txMAX7219 *****************
  5266 ;; Defined at:
  5267 ;;		line 74 in file "ledMatrix.c"
  5268 ;; Parameters:    Size  Location     Type
  5269 ;;  addr0           1    wreg     unsigned char 
  5270 ;;  dat0            1    1[BANK1 ] unsigned char 
  5271 ;; Auto vars:     Size  Location     Type
  5272 ;;  addr0           1    2[BANK1 ] unsigned char 
  5273 ;; Return value:  Size  Location     Type
  5274 ;;                  1    wreg      void 
  5275 ;; Registers used:
  5276 ;;		wreg, status,2, status,0, pclath, cstack
  5277 ;; Tracked objects:
  5278 ;;		On entry : 0/0
  5279 ;;		On exit  : 0/0
  5280 ;;		Unchanged: 0/0
  5281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5282 ;;      Params:         0       0       1       0       0       0
  5283 ;;      Locals:         0       0       1       0       0       0
  5284 ;;      Temps:          0       0       0       0       0       0
  5285 ;;      Totals:         0       0       2       0       0       0
  5286 ;;Total ram usage:        2 bytes
  5287 ;; Hardware stack levels used: 1
  5288 ;; Hardware stack levels required when called: 9
  5289 ;; This function calls:
  5290 ;;		_SPI1_WriteByte
  5291 ;; This function is called by:
  5292 ;;		_sendMatrix
  5293 ;;		_initMAX7219
  5294 ;; This function uses a non-reentrant model
  5295 ;;
  5296                           
  5297     04E6                     _txMAX7219:	
  5298                           ;psect for function _txMAX7219
  5299                           
  5300                           
  5301                           ;incstack = 0
  5302                           ; Regs used in _txMAX7219: [wreg+status,2+status,0+pclath+cstack]
  5303                           ;txMAX7219@addr0 stored from wreg
  5304     04E6  0021               	movlb	1	; select bank1
  5305     04E7  00B2               	movwf	txMAX7219@addr0^(0+128)
  5306     04E8                     l907:	
  5307                           ;ledMatrix.c: 75:     do { LATBbits.LATB1 = 0; } while(0);
  5308                           
  5309     04E8  0022               	movlb	2	; select bank2
  5310     04E9  108D               	bcf	13,1	;volatile
  5311     04EA                     l3618:
  5312                           
  5313                           ;ledMatrix.c: 76:     SPI1_WriteByte(addr0);
  5314     04EA  0021               	movlb	1	; select bank1
  5315     04EB  0832               	movf	txMAX7219@addr0^(0+128),w
  5316     04EC  318F  27D2  3184   	fcall	_SPI1_WriteByte
  5317     04EF                     l909:	
  5318                           ;ledMatrix.c: 77:     while(!PIR1bits.SSP1IF);
  5319                           
  5320     04EF  0020               	movlb	0	; select bank0
  5321     04F0  1D91               	btfss	17,3	;volatile
  5322     04F1  2CF3               	goto	u2231
  5323     04F2  2CF4               	goto	u2230
  5324     04F3                     u2231:
  5325     04F3  2CEF               	goto	l909
  5326     04F4                     u2230:
  5327     04F4                     l911:
  5328                           
  5329                           ;ledMatrix.c: 78:     PIR1bits.SSP1IF = 0;
  5330     04F4  1191               	bcf	17,3	;volatile
  5331     04F5                     l3620:
  5332                           
  5333                           ;ledMatrix.c: 79:     SPI1_WriteByte(dat0);
  5334     04F5  0021               	movlb	1	; select bank1
  5335     04F6  0831               	movf	txMAX7219@dat0^(0+128),w
  5336     04F7  318F  27D2  3184   	fcall	_SPI1_WriteByte
  5337     04FA                     l912:	
  5338                           ;ledMatrix.c: 80:     while(!PIR1bits.SSP1IF);
  5339                           
  5340     04FA  0020               	movlb	0	; select bank0
  5341     04FB  1D91               	btfss	17,3	;volatile
  5342     04FC  2CFE               	goto	u2241
  5343     04FD  2CFF               	goto	u2240
  5344     04FE                     u2241:
  5345     04FE  2CFA               	goto	l912
  5346     04FF                     u2240:
  5347     04FF                     l914:
  5348                           
  5349                           ;ledMatrix.c: 81:     PIR1bits.SSP1IF = 0;
  5350     04FF  1191               	bcf	17,3	;volatile
  5351     0500                     l915:	
  5352                           ;ledMatrix.c: 82:     do { LATBbits.LATB1 = 1; } while(0);
  5353                           
  5354     0500  0022               	movlb	2	; select bank2
  5355     0501  148D               	bsf	13,1	;volatile
  5356     0502                     l917:
  5357     0502  0008               	return
  5358     0503                     __end_of_txMAX7219:
  5359                           
  5360                           	psect	text10
  5361     0FD2                     __ptext10:	
  5362 ;; *************** function _SPI1_WriteByte *****************
  5363 ;; Defined at:
  5364 ;;		line 131 in file "mcc_generated_files/spi1.c"
  5365 ;; Parameters:    Size  Location     Type
  5366 ;;  byte            1    wreg     unsigned char 
  5367 ;; Auto vars:     Size  Location     Type
  5368 ;;  byte            1    0[BANK1 ] unsigned char 
  5369 ;; Return value:  Size  Location     Type
  5370 ;;                  1    wreg      void 
  5371 ;; Registers used:
  5372 ;;		wreg
  5373 ;; Tracked objects:
  5374 ;;		On entry : 0/0
  5375 ;;		On exit  : 0/0
  5376 ;;		Unchanged: 0/0
  5377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5378 ;;      Params:         0       0       0       0       0       0
  5379 ;;      Locals:         0       0       1       0       0       0
  5380 ;;      Temps:          0       0       0       0       0       0
  5381 ;;      Totals:         0       0       1       0       0       0
  5382 ;;Total ram usage:        1 bytes
  5383 ;; Hardware stack levels used: 1
  5384 ;; Hardware stack levels required when called: 8
  5385 ;; This function calls:
  5386 ;;		Nothing
  5387 ;; This function is called by:
  5388 ;;		_txMAX7219
  5389 ;; This function uses a non-reentrant model
  5390 ;;
  5391                           
  5392     0FD2                     _SPI1_WriteByte:	
  5393                           ;psect for function _SPI1_WriteByte
  5394                           
  5395                           
  5396                           ;incstack = 0
  5397                           ; Regs used in _SPI1_WriteByte: [wreg]
  5398                           ;SPI1_WriteByte@byte stored from wreg
  5399     0FD2  0021               	movlb	1	; select bank1
  5400     0FD3  00B0               	movwf	SPI1_WriteByte@byte^(0+128)
  5401     0FD4                     l3582:
  5402                           
  5403                           ;mcc_generated_files/spi1.c: 131: void SPI1_WriteByte(uint8_t byte);mcc_generated_files/
      +                          spi1.c: 132: {;mcc_generated_files/spi1.c: 133:     SSP1BUF = byte;
  5404     0FD4  0830               	movf	SPI1_WriteByte@byte^(0+128),w
  5405     0FD5  0024               	movlb	4	; select bank4
  5406     0FD6  0091               	movwf	17	;volatile
  5407     0FD7                     l58:
  5408     0FD7  0008               	return
  5409     0FD8                     __end_of_SPI1_WriteByte:
  5410                           
  5411                           	psect	text11
  5412     0348                     __ptext11:	
  5413 ;; *************** function _SYSTEM_Initialize *****************
  5414 ;; Defined at:
  5415 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5416 ;; Parameters:    Size  Location     Type
  5417 ;;		None
  5418 ;; Auto vars:     Size  Location     Type
  5419 ;;		None
  5420 ;; Return value:  Size  Location     Type
  5421 ;;                  1    wreg      void 
  5422 ;; Registers used:
  5423 ;;		wreg, status,2, status,0, pclath, cstack
  5424 ;; Tracked objects:
  5425 ;;		On entry : 0/0
  5426 ;;		On exit  : 0/0
  5427 ;;		Unchanged: 0/0
  5428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5429 ;;      Params:         0       0       0       0       0       0
  5430 ;;      Locals:         0       0       0       0       0       0
  5431 ;;      Temps:          0       0       0       0       0       0
  5432 ;;      Totals:         0       0       0       0       0       0
  5433 ;;Total ram usage:        0 bytes
  5434 ;; Hardware stack levels used: 1
  5435 ;; Hardware stack levels required when called: 10
  5436 ;; This function calls:
  5437 ;;		_ADC_Initialize
  5438 ;;		_CCP4_Initialize
  5439 ;;		_CMP1_Initialize
  5440 ;;		_CMP2_Initialize
  5441 ;;		_DAC_Initialize
  5442 ;;		_EUSART_Initialize
  5443 ;;		_OSCILLATOR_Initialize
  5444 ;;		_PIN_MANAGER_Initialize
  5445 ;;		_PWM3_Initialize
  5446 ;;		_SPI1_Initialize
  5447 ;;		_TMR0_Initialize
  5448 ;;		_TMR1_Initialize
  5449 ;;		_TMR2_Initialize
  5450 ;;		_TMR4_Initialize
  5451 ;;		_TMR6_Initialize
  5452 ;;		_WDT_Initialize
  5453 ;; This function is called by:
  5454 ;;		_main
  5455 ;; This function uses a non-reentrant model
  5456 ;;
  5457                           
  5458     0348                     _SYSTEM_Initialize:	
  5459                           ;psect for function _SYSTEM_Initialize
  5460                           
  5461     0348                     l3858:	
  5462                           ;incstack = 0
  5463                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5464                           
  5465                           
  5466                           ;mcc_generated_files/mcc.c: 53:     SPI1_Initialize();
  5467     0348  3187  278B  3183   	fcall	_SPI1_Initialize
  5468                           
  5469                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  5470     034B  3183  23A8  3183   	fcall	_PIN_MANAGER_Initialize
  5471                           
  5472                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  5473     034E  3187  27F9  3183   	fcall	_OSCILLATOR_Initialize
  5474                           
  5475                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  5476     0351  318F  27B4  3183   	fcall	_WDT_Initialize
  5477                           
  5478                           ;mcc_generated_files/mcc.c: 57:     CMP2_Initialize();
  5479     0354  3187  2767  3183   	fcall	_CMP2_Initialize
  5480                           
  5481                           ;mcc_generated_files/mcc.c: 58:     DAC_Initialize();
  5482     0357  318F  27CC  3183   	fcall	_DAC_Initialize
  5483                           
  5484                           ;mcc_generated_files/mcc.c: 59:     TMR4_Initialize();
  5485     035A  3186  2664  3183   	fcall	_TMR4_Initialize
  5486                           
  5487                           ;mcc_generated_files/mcc.c: 60:     TMR2_Initialize();
  5488     035D  318F  27E6  3183   	fcall	_TMR2_Initialize
  5489                           
  5490                           ;mcc_generated_files/mcc.c: 61:     TMR0_Initialize();
  5491     0360  3186  263C  3183   	fcall	_TMR0_Initialize
  5492                           
  5493                           ;mcc_generated_files/mcc.c: 62:     TMR6_Initialize();
  5494     0363  3186  2651  3183   	fcall	_TMR6_Initialize
  5495                           
  5496                           ;mcc_generated_files/mcc.c: 63:     CMP1_Initialize();
  5497     0366  3187  2773  3183   	fcall	_CMP1_Initialize
  5498                           
  5499                           ;mcc_generated_files/mcc.c: 64:     CCP4_Initialize();
  5500     0369  3186  2677  3183   	fcall	_CCP4_Initialize
  5501                           
  5502                           ;mcc_generated_files/mcc.c: 65:     ADC_Initialize();
  5503     036C  318F  27DE  3183   	fcall	_ADC_Initialize
  5504                           
  5505                           ;mcc_generated_files/mcc.c: 66:     PWM3_Initialize();
  5506     036F  3187  27BA  3183   	fcall	_PWM3_Initialize
  5507                           
  5508                           ;mcc_generated_files/mcc.c: 67:     TMR1_Initialize();
  5509     0372  3187  275B  3183   	fcall	_TMR1_Initialize
  5510                           
  5511                           ;mcc_generated_files/mcc.c: 68:     EUSART_Initialize();
  5512     0375  3184  247E  3183   	fcall	_EUSART_Initialize
  5513     0378                     l351:
  5514     0378  0008               	return
  5515     0379                     __end_of_SYSTEM_Initialize:
  5516                           
  5517                           	psect	text12
  5518     0FB4                     __ptext12:	
  5519 ;; *************** function _WDT_Initialize *****************
  5520 ;; Defined at:
  5521 ;;		line 81 in file "mcc_generated_files/mcc.c"
  5522 ;; Parameters:    Size  Location     Type
  5523 ;;		None
  5524 ;; Auto vars:     Size  Location     Type
  5525 ;;		None
  5526 ;; Return value:  Size  Location     Type
  5527 ;;                  1    wreg      void 
  5528 ;; Registers used:
  5529 ;;		wreg
  5530 ;; Tracked objects:
  5531 ;;		On entry : 0/0
  5532 ;;		On exit  : 0/0
  5533 ;;		Unchanged: 0/0
  5534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5535 ;;      Params:         0       0       0       0       0       0
  5536 ;;      Locals:         0       0       0       0       0       0
  5537 ;;      Temps:          0       0       0       0       0       0
  5538 ;;      Totals:         0       0       0       0       0       0
  5539 ;;Total ram usage:        0 bytes
  5540 ;; Hardware stack levels used: 1
  5541 ;; Hardware stack levels required when called: 8
  5542 ;; This function calls:
  5543 ;;		Nothing
  5544 ;; This function is called by:
  5545 ;;		_SYSTEM_Initialize
  5546 ;; This function uses a non-reentrant model
  5547 ;;
  5548                           
  5549     0FB4                     _WDT_Initialize:	
  5550                           ;psect for function _WDT_Initialize
  5551                           
  5552     0FB4                     l3704:	
  5553                           ;incstack = 0
  5554                           ; Regs used in _WDT_Initialize: [wreg]
  5555                           
  5556                           
  5557                           ;mcc_generated_files/mcc.c: 84:     WDTCON = 0x16;
  5558     0FB4  3016               	movlw	22
  5559     0FB5  0021               	movlb	1	; select bank1
  5560     0FB6  0097               	movwf	23	;volatile
  5561     0FB7                     l357:
  5562     0FB7  0008               	return
  5563     0FB8                     __end_of_WDT_Initialize:
  5564                           
  5565                           	psect	text13
  5566     0651                     __ptext13:	
  5567 ;; *************** function _TMR6_Initialize *****************
  5568 ;; Defined at:
  5569 ;;		line 64 in file "mcc_generated_files/tmr6.c"
  5570 ;; Parameters:    Size  Location     Type
  5571 ;;		None
  5572 ;; Auto vars:     Size  Location     Type
  5573 ;;		None
  5574 ;; Return value:  Size  Location     Type
  5575 ;;                  1    wreg      void 
  5576 ;; Registers used:
  5577 ;;		wreg, status,2, status,0, pclath, cstack
  5578 ;; Tracked objects:
  5579 ;;		On entry : 0/0
  5580 ;;		On exit  : 0/0
  5581 ;;		Unchanged: 0/0
  5582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5583 ;;      Params:         0       0       0       0       0       0
  5584 ;;      Locals:         0       0       0       0       0       0
  5585 ;;      Temps:          0       0       0       0       0       0
  5586 ;;      Totals:         0       0       0       0       0       0
  5587 ;;Total ram usage:        0 bytes
  5588 ;; Hardware stack levels used: 1
  5589 ;; Hardware stack levels required when called: 9
  5590 ;; This function calls:
  5591 ;;		_TMR6_SetInterruptHandler
  5592 ;; This function is called by:
  5593 ;;		_SYSTEM_Initialize
  5594 ;; This function uses a non-reentrant model
  5595 ;;
  5596                           
  5597     0651                     _TMR6_Initialize:	
  5598                           ;psect for function _TMR6_Initialize
  5599                           
  5600     0651                     l3748:	
  5601                           ;incstack = 0
  5602                           ; Regs used in _TMR6_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5603                           
  5604                           
  5605                           ;mcc_generated_files/tmr6.c: 69:     PR6 = 0xF9;
  5606     0651  30F9               	movlw	249
  5607     0652  0028               	movlb	8	; select bank8
  5608     0653  009D               	movwf	29	;volatile
  5609     0654                     l3750:
  5610                           
  5611                           ;mcc_generated_files/tmr6.c: 72:     TMR6 = 0x00;
  5612     0654  019C               	clrf	28	;volatile
  5613     0655                     l3752:
  5614                           
  5615                           ;mcc_generated_files/tmr6.c: 75:     PIR3bits.TMR6IF = 0;
  5616     0655  0020               	movlb	0	; select bank0
  5617     0656  1193               	bcf	19,3	;volatile
  5618     0657                     l3754:
  5619                           
  5620                           ;mcc_generated_files/tmr6.c: 78:     PIE3bits.TMR6IE = 1;
  5621     0657  0021               	movlb	1	; select bank1
  5622     0658  1593               	bsf	19,3	;volatile
  5623     0659                     l3756:
  5624                           
  5625                           ;mcc_generated_files/tmr6.c: 81:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
  5626     0659  3003               	movlw	low _TMR6_DefaultInterruptHandler
  5627     065A  00B0               	movwf	TMR6_SetInterruptHandler@InterruptHandler^(0+128)
  5628     065B  3000               	movlw	high _TMR6_DefaultInterruptHandler
  5629     065C  00B1               	movwf	(TMR6_SetInterruptHandler@InterruptHandler^(0+128)+1)
  5630     065D  3187  279F  3186   	fcall	_TMR6_SetInterruptHandler
  5631     0660                     l3758:
  5632                           
  5633                           ;mcc_generated_files/tmr6.c: 84:     T6CON = 0x49;
  5634     0660  3049               	movlw	73
  5635     0661  0028               	movlb	8	; select bank8
  5636     0662  009E               	movwf	30	;volatile
  5637     0663                     l619:
  5638     0663  0008               	return
  5639     0664                     __end_of_TMR6_Initialize:
  5640                           
  5641                           	psect	text14
  5642     079F                     __ptext14:	
  5643 ;; *************** function _TMR6_SetInterruptHandler *****************
  5644 ;; Defined at:
  5645 ;;		line 147 in file "mcc_generated_files/tmr6.c"
  5646 ;; Parameters:    Size  Location     Type
  5647 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  5648 ;;		 -> TMR6_Interrupt(1), TMR6_DefaultInterruptHandler(1), 
  5649 ;; Auto vars:     Size  Location     Type
  5650 ;;		None
  5651 ;; Return value:  Size  Location     Type
  5652 ;;                  1    wreg      void 
  5653 ;; Registers used:
  5654 ;;		wreg
  5655 ;; Tracked objects:
  5656 ;;		On entry : 0/0
  5657 ;;		On exit  : 0/0
  5658 ;;		Unchanged: 0/0
  5659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5660 ;;      Params:         0       0       2       0       0       0
  5661 ;;      Locals:         0       0       0       0       0       0
  5662 ;;      Temps:          0       0       0       0       0       0
  5663 ;;      Totals:         0       0       2       0       0       0
  5664 ;;Total ram usage:        2 bytes
  5665 ;; Hardware stack levels used: 1
  5666 ;; Hardware stack levels required when called: 8
  5667 ;; This function calls:
  5668 ;;		Nothing
  5669 ;; This function is called by:
  5670 ;;		_TMR6_Initialize
  5671 ;;		_main
  5672 ;; This function uses a non-reentrant model
  5673 ;;
  5674                           
  5675     079F                     _TMR6_SetInterruptHandler:	
  5676                           ;psect for function _TMR6_SetInterruptHandler
  5677                           
  5678     079F                     l3614:	
  5679                           ;incstack = 0
  5680                           ; Regs used in _TMR6_SetInterruptHandler: [wreg]
  5681                           
  5682                           
  5683                           ;mcc_generated_files/tmr6.c: 148:     TMR6_InterruptHandler = InterruptHandler;
  5684     079F  0021               	movlb	1	; select bank1
  5685     07A0  0831               	movf	(TMR6_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  5686     07A1  0020               	movlb	0	; select bank0
  5687     07A2  00A5               	movwf	_TMR6_InterruptHandler+1
  5688     07A3  0021               	movlb	1	; select bank1
  5689     07A4  0830               	movf	TMR6_SetInterruptHandler@InterruptHandler^(0+128),w
  5690     07A5  0020               	movlb	0	; select bank0
  5691     07A6  00A4               	movwf	_TMR6_InterruptHandler
  5692     07A7                     l647:
  5693     07A7  0008               	return
  5694     07A8                     __end_of_TMR6_SetInterruptHandler:
  5695                           
  5696                           	psect	text15
  5697     0664                     __ptext15:	
  5698 ;; *************** function _TMR4_Initialize *****************
  5699 ;; Defined at:
  5700 ;;		line 64 in file "mcc_generated_files/tmr4.c"
  5701 ;; Parameters:    Size  Location     Type
  5702 ;;		None
  5703 ;; Auto vars:     Size  Location     Type
  5704 ;;		None
  5705 ;; Return value:  Size  Location     Type
  5706 ;;                  1    wreg      void 
  5707 ;; Registers used:
  5708 ;;		wreg, status,2, status,0, pclath, cstack
  5709 ;; Tracked objects:
  5710 ;;		On entry : 0/0
  5711 ;;		On exit  : 0/0
  5712 ;;		Unchanged: 0/0
  5713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5714 ;;      Params:         0       0       0       0       0       0
  5715 ;;      Locals:         0       0       0       0       0       0
  5716 ;;      Temps:          0       0       0       0       0       0
  5717 ;;      Totals:         0       0       0       0       0       0
  5718 ;;Total ram usage:        0 bytes
  5719 ;; Hardware stack levels used: 1
  5720 ;; Hardware stack levels required when called: 9
  5721 ;; This function calls:
  5722 ;;		_TMR4_SetInterruptHandler
  5723 ;; This function is called by:
  5724 ;;		_SYSTEM_Initialize
  5725 ;; This function uses a non-reentrant model
  5726 ;;
  5727                           
  5728     0664                     _TMR4_Initialize:	
  5729                           ;psect for function _TMR4_Initialize
  5730                           
  5731     0664                     l3716:	
  5732                           ;incstack = 0
  5733                           ; Regs used in _TMR4_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5734                           
  5735                           
  5736                           ;mcc_generated_files/tmr4.c: 69:     PR4 = 0xF9;
  5737     0664  30F9               	movlw	249
  5738     0665  0028               	movlb	8	; select bank8
  5739     0666  0096               	movwf	22	;volatile
  5740     0667                     l3718:
  5741                           
  5742                           ;mcc_generated_files/tmr4.c: 72:     TMR4 = 0x00;
  5743     0667  0195               	clrf	21	;volatile
  5744     0668                     l3720:
  5745                           
  5746                           ;mcc_generated_files/tmr4.c: 75:     PIR3bits.TMR4IF = 0;
  5747     0668  0020               	movlb	0	; select bank0
  5748     0669  1093               	bcf	19,1	;volatile
  5749     066A                     l3722:
  5750                           
  5751                           ;mcc_generated_files/tmr4.c: 78:     PIE3bits.TMR4IE = 1;
  5752     066A  0021               	movlb	1	; select bank1
  5753     066B  1493               	bsf	19,1	;volatile
  5754     066C                     l3724:
  5755                           
  5756                           ;mcc_generated_files/tmr4.c: 81:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
  5757     066C  3002               	movlw	low _TMR4_DefaultInterruptHandler
  5758     066D  00B0               	movwf	TMR4_SetInterruptHandler@InterruptHandler^(0+128)
  5759     066E  3000               	movlw	high _TMR4_DefaultInterruptHandler
  5760     066F  00B1               	movwf	(TMR4_SetInterruptHandler@InterruptHandler^(0+128)+1)
  5761     0670  3187  27A8  3186   	fcall	_TMR4_SetInterruptHandler
  5762     0673                     l3726:
  5763                           
  5764                           ;mcc_generated_files/tmr4.c: 84:     T4CON = 0x49;
  5765     0673  3049               	movlw	73
  5766     0674  0028               	movlb	8	; select bank8
  5767     0675  0097               	movwf	23	;volatile
  5768     0676                     l673:
  5769     0676  0008               	return
  5770     0677                     __end_of_TMR4_Initialize:
  5771                           
  5772                           	psect	text16
  5773     07A8                     __ptext16:	
  5774 ;; *************** function _TMR4_SetInterruptHandler *****************
  5775 ;; Defined at:
  5776 ;;		line 147 in file "mcc_generated_files/tmr4.c"
  5777 ;; Parameters:    Size  Location     Type
  5778 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  5779 ;;		 -> TMR4_Interrupt(1), TMR4_DefaultInterruptHandler(1), 
  5780 ;; Auto vars:     Size  Location     Type
  5781 ;;		None
  5782 ;; Return value:  Size  Location     Type
  5783 ;;                  1    wreg      void 
  5784 ;; Registers used:
  5785 ;;		wreg
  5786 ;; Tracked objects:
  5787 ;;		On entry : 0/0
  5788 ;;		On exit  : 0/0
  5789 ;;		Unchanged: 0/0
  5790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5791 ;;      Params:         0       0       2       0       0       0
  5792 ;;      Locals:         0       0       0       0       0       0
  5793 ;;      Temps:          0       0       0       0       0       0
  5794 ;;      Totals:         0       0       2       0       0       0
  5795 ;;Total ram usage:        2 bytes
  5796 ;; Hardware stack levels used: 1
  5797 ;; Hardware stack levels required when called: 8
  5798 ;; This function calls:
  5799 ;;		Nothing
  5800 ;; This function is called by:
  5801 ;;		_TMR4_Initialize
  5802 ;;		_main
  5803 ;; This function uses a non-reentrant model
  5804 ;;
  5805                           
  5806     07A8                     _TMR4_SetInterruptHandler:	
  5807                           ;psect for function _TMR4_SetInterruptHandler
  5808                           
  5809     07A8                     l3616:	
  5810                           ;incstack = 0
  5811                           ; Regs used in _TMR4_SetInterruptHandler: [wreg]
  5812                           
  5813                           
  5814                           ;mcc_generated_files/tmr4.c: 148:     TMR4_InterruptHandler = InterruptHandler;
  5815     07A8  0021               	movlb	1	; select bank1
  5816     07A9  0831               	movf	(TMR4_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  5817     07AA  0020               	movlb	0	; select bank0
  5818     07AB  00A3               	movwf	_TMR4_InterruptHandler+1
  5819     07AC  0021               	movlb	1	; select bank1
  5820     07AD  0830               	movf	TMR4_SetInterruptHandler@InterruptHandler^(0+128),w
  5821     07AE  0020               	movlb	0	; select bank0
  5822     07AF  00A2               	movwf	_TMR4_InterruptHandler
  5823     07B0                     l701:
  5824     07B0  0008               	return
  5825     07B1                     __end_of_TMR4_SetInterruptHandler:
  5826                           
  5827                           	psect	text17
  5828     0FE6                     __ptext17:	
  5829 ;; *************** function _TMR2_Initialize *****************
  5830 ;; Defined at:
  5831 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  5832 ;; Parameters:    Size  Location     Type
  5833 ;;		None
  5834 ;; Auto vars:     Size  Location     Type
  5835 ;;		None
  5836 ;; Return value:  Size  Location     Type
  5837 ;;                  1    wreg      void 
  5838 ;; Registers used:
  5839 ;;		wreg, status,2
  5840 ;; Tracked objects:
  5841 ;;		On entry : 0/0
  5842 ;;		On exit  : 0/0
  5843 ;;		Unchanged: 0/0
  5844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5845 ;;      Params:         0       0       0       0       0       0
  5846 ;;      Locals:         0       0       0       0       0       0
  5847 ;;      Temps:          0       0       0       0       0       0
  5848 ;;      Totals:         0       0       0       0       0       0
  5849 ;;Total ram usage:        0 bytes
  5850 ;; Hardware stack levels used: 1
  5851 ;; Hardware stack levels required when called: 8
  5852 ;; This function calls:
  5853 ;;		Nothing
  5854 ;; This function is called by:
  5855 ;;		_SYSTEM_Initialize
  5856 ;; This function uses a non-reentrant model
  5857 ;;
  5858                           
  5859     0FE6                     _TMR2_Initialize:	
  5860                           ;psect for function _TMR2_Initialize
  5861                           
  5862     0FE6                     l3728:	
  5863                           ;incstack = 0
  5864                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  5865                           
  5866                           
  5867                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xFF;
  5868     0FE6  30FF               	movlw	255
  5869     0FE7  0020               	movlb	0	; select bank0
  5870     0FE8  009B               	movwf	27	;volatile
  5871     0FE9                     l3730:
  5872                           
  5873                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  5874     0FE9  019A               	clrf	26	;volatile
  5875     0FEA                     l3732:
  5876                           
  5877                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  5878     0FEA  1091               	bcf	17,1	;volatile
  5879     0FEB                     l3734:
  5880                           
  5881                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x04;
  5882     0FEB  3004               	movlw	4
  5883     0FEC  009C               	movwf	28	;volatile
  5884     0FED                     l370:
  5885     0FED  0008               	return
  5886     0FEE                     __end_of_TMR2_Initialize:
  5887                           
  5888                           	psect	text18
  5889     075B                     __ptext18:	
  5890 ;; *************** function _TMR1_Initialize *****************
  5891 ;; Defined at:
  5892 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  5893 ;; Parameters:    Size  Location     Type
  5894 ;;		None
  5895 ;; Auto vars:     Size  Location     Type
  5896 ;;		None
  5897 ;; Return value:  Size  Location     Type
  5898 ;;                  1    wreg      void 
  5899 ;; Registers used:
  5900 ;;		wreg, status,2
  5901 ;; Tracked objects:
  5902 ;;		On entry : 0/0
  5903 ;;		On exit  : 0/0
  5904 ;;		Unchanged: 0/0
  5905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5906 ;;      Params:         0       0       0       0       0       0
  5907 ;;      Locals:         0       0       0       0       0       0
  5908 ;;      Temps:          0       0       0       0       0       0
  5909 ;;      Totals:         0       0       0       0       0       0
  5910 ;;Total ram usage:        0 bytes
  5911 ;; Hardware stack levels used: 1
  5912 ;; Hardware stack levels required when called: 8
  5913 ;; This function calls:
  5914 ;;		Nothing
  5915 ;; This function is called by:
  5916 ;;		_SYSTEM_Initialize
  5917 ;; This function uses a non-reentrant model
  5918 ;;
  5919                           
  5920     075B                     _TMR1_Initialize:	
  5921                           ;psect for function _TMR1_Initialize
  5922                           
  5923     075B                     l3774:	
  5924                           ;incstack = 0
  5925                           ; Regs used in _TMR1_Initialize: [wreg+status,2]
  5926                           
  5927                           
  5928                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
  5929     075B  0020               	movlb	0	; select bank0
  5930     075C  0199               	clrf	25	;volatile
  5931                           
  5932                           ;mcc_generated_files/tmr1.c: 71:     TMR1H = 0x00;
  5933     075D  0197               	clrf	23	;volatile
  5934                           
  5935                           ;mcc_generated_files/tmr1.c: 74:     TMR1L = 0x00;
  5936     075E  0196               	clrf	22	;volatile
  5937     075F                     l3776:
  5938                           
  5939                           ;mcc_generated_files/tmr1.c: 77:     PIR1bits.TMR1IF = 0;
  5940     075F  1011               	bcf	17,0	;volatile
  5941     0760                     l3778:
  5942                           
  5943                           ;mcc_generated_files/tmr1.c: 80:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  5944     0760  0817               	movf	23,w	;volatile
  5945     0761  00AB               	movwf	_timer1ReloadVal+1	;volatile
  5946     0762  0816               	movf	22,w	;volatile
  5947     0763  00AA               	movwf	_timer1ReloadVal	;volatile
  5948     0764                     l3780:
  5949                           
  5950                           ;mcc_generated_files/tmr1.c: 83:     T1CON = 0x05;
  5951     0764  3005               	movlw	5
  5952     0765  0098               	movwf	24	;volatile
  5953     0766                     l408:
  5954     0766  0008               	return
  5955     0767                     __end_of_TMR1_Initialize:
  5956                           
  5957                           	psect	text19
  5958     063C                     __ptext19:	
  5959 ;; *************** function _TMR0_Initialize *****************
  5960 ;; Defined at:
  5961 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  5962 ;; Parameters:    Size  Location     Type
  5963 ;;		None
  5964 ;; Auto vars:     Size  Location     Type
  5965 ;;		None
  5966 ;; Return value:  Size  Location     Type
  5967 ;;                  1    wreg      void 
  5968 ;; Registers used:
  5969 ;;		wreg, status,2, status,0, pclath, cstack
  5970 ;; Tracked objects:
  5971 ;;		On entry : 0/0
  5972 ;;		On exit  : 0/0
  5973 ;;		Unchanged: 0/0
  5974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5975 ;;      Params:         0       0       0       0       0       0
  5976 ;;      Locals:         0       0       0       0       0       0
  5977 ;;      Temps:          0       0       0       0       0       0
  5978 ;;      Totals:         0       0       0       0       0       0
  5979 ;;Total ram usage:        0 bytes
  5980 ;; Hardware stack levels used: 1
  5981 ;; Hardware stack levels required when called: 9
  5982 ;; This function calls:
  5983 ;;		_TMR0_SetInterruptHandler
  5984 ;; This function is called by:
  5985 ;;		_SYSTEM_Initialize
  5986 ;; This function uses a non-reentrant model
  5987 ;;
  5988                           
  5989     063C                     _TMR0_Initialize:	
  5990                           ;psect for function _TMR0_Initialize
  5991                           
  5992     063C                     l3736:	
  5993                           ;incstack = 0
  5994                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5995                           
  5996                           
  5997                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD7 
      +                          & 0x3F));
  5998     063C  0021               	movlb	1	; select bank1
  5999     063D  0815               	movf	21,w	;volatile
  6000     063E  39C0               	andlw	192
  6001     063F  3817               	iorlw	23
  6002     0640  0095               	movwf	21	;volatile
  6003     0641                     l3738:
  6004                           
  6005                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0xD9;
  6006     0641  30D9               	movlw	217
  6007     0642  0020               	movlb	0	; select bank0
  6008     0643  0095               	movwf	21	;volatile
  6009     0644                     l3740:
  6010                           
  6011                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 217;
  6012     0644  30D9               	movlw	217
  6013     0645  00B8               	movwf	_timer0ReloadVal	;volatile
  6014     0646                     l3742:
  6015                           
  6016                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
  6017     0646  110B               	bcf	11,2	;volatile
  6018     0647                     l3744:
  6019                           
  6020                           ;mcc_generated_files/tmr0.c: 81:     INTCONbits.TMR0IE = 1;
  6021     0647  168B               	bsf	11,5	;volatile
  6022     0648                     l3746:
  6023                           
  6024                           ;mcc_generated_files/tmr0.c: 84:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  6025     0648  309D               	movlw	low _TMR0_DefaultInterruptHandler
  6026     0649  0021               	movlb	1	; select bank1
  6027     064A  00B0               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  6028     064B  300F               	movlw	high _TMR0_DefaultInterruptHandler
  6029     064C  00B1               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  6030     064D  3187  27B1  3186   	fcall	_TMR0_SetInterruptHandler
  6031     0650                     l451:
  6032     0650  0008               	return
  6033     0651                     __end_of_TMR0_Initialize:
  6034                           
  6035                           	psect	text20
  6036     07B1                     __ptext20:	
  6037 ;; *************** function _TMR0_SetInterruptHandler *****************
  6038 ;; Defined at:
  6039 ;;		line 125 in file "mcc_generated_files/tmr0.c"
  6040 ;; Parameters:    Size  Location     Type
  6041 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  6042 ;;		 -> TMR0_Interrupt(1), TMR0_DefaultInterruptHandler(1), 
  6043 ;; Auto vars:     Size  Location     Type
  6044 ;;		None
  6045 ;; Return value:  Size  Location     Type
  6046 ;;                  1    wreg      void 
  6047 ;; Registers used:
  6048 ;;		wreg
  6049 ;; Tracked objects:
  6050 ;;		On entry : 0/0
  6051 ;;		On exit  : 0/0
  6052 ;;		Unchanged: 0/0
  6053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6054 ;;      Params:         0       0       2       0       0       0
  6055 ;;      Locals:         0       0       0       0       0       0
  6056 ;;      Temps:          0       0       0       0       0       0
  6057 ;;      Totals:         0       0       2       0       0       0
  6058 ;;Total ram usage:        2 bytes
  6059 ;; Hardware stack levels used: 1
  6060 ;; Hardware stack levels required when called: 8
  6061 ;; This function calls:
  6062 ;;		Nothing
  6063 ;; This function is called by:
  6064 ;;		_TMR0_Initialize
  6065 ;;		_main
  6066 ;; This function uses a non-reentrant model
  6067 ;;
  6068                           
  6069     07B1                     _TMR0_SetInterruptHandler:	
  6070                           ;psect for function _TMR0_SetInterruptHandler
  6071                           
  6072     07B1                     l3598:	
  6073                           ;incstack = 0
  6074                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  6075                           
  6076                           
  6077                           ;mcc_generated_files/tmr0.c: 126:     TMR0_InterruptHandler = InterruptHandler;
  6078     07B1  0021               	movlb	1	; select bank1
  6079     07B2  0831               	movf	(TMR0_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  6080     07B3  0020               	movlb	0	; select bank0
  6081     07B4  00A9               	movwf	_TMR0_InterruptHandler+1
  6082     07B5  0021               	movlb	1	; select bank1
  6083     07B6  0830               	movf	TMR0_SetInterruptHandler@InterruptHandler^(0+128),w
  6084     07B7  0020               	movlb	0	; select bank0
  6085     07B8  00A8               	movwf	_TMR0_InterruptHandler
  6086     07B9                     l467:
  6087     07B9  0008               	return
  6088     07BA                     __end_of_TMR0_SetInterruptHandler:
  6089                           
  6090                           	psect	text21
  6091     078B                     __ptext21:	
  6092 ;; *************** function _SPI1_Initialize *****************
  6093 ;; Defined at:
  6094 ;;		line 62 in file "mcc_generated_files/spi1.c"
  6095 ;; Parameters:    Size  Location     Type
  6096 ;;		None
  6097 ;; Auto vars:     Size  Location     Type
  6098 ;;		None
  6099 ;; Return value:  Size  Location     Type
  6100 ;;                  1    wreg      void 
  6101 ;; Registers used:
  6102 ;;		wreg, status,2
  6103 ;; Tracked objects:
  6104 ;;		On entry : 0/0
  6105 ;;		On exit  : 0/0
  6106 ;;		Unchanged: 0/0
  6107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6108 ;;      Params:         0       0       0       0       0       0
  6109 ;;      Locals:         0       0       0       0       0       0
  6110 ;;      Temps:          0       0       0       0       0       0
  6111 ;;      Totals:         0       0       0       0       0       0
  6112 ;;Total ram usage:        0 bytes
  6113 ;; Hardware stack levels used: 1
  6114 ;; Hardware stack levels required when called: 8
  6115 ;; This function calls:
  6116 ;;		Nothing
  6117 ;; This function is called by:
  6118 ;;		_SYSTEM_Initialize
  6119 ;; This function uses a non-reentrant model
  6120 ;;
  6121                           
  6122     078B                     _SPI1_Initialize:	
  6123                           ;psect for function _SPI1_Initialize
  6124                           
  6125     078B                     l3622:	
  6126                           ;incstack = 0
  6127                           ; Regs used in _SPI1_Initialize: [wreg+status,2]
  6128                           
  6129                           
  6130                           ;mcc_generated_files/spi1.c: 65:     SSP1STAT = 0x00;
  6131     078B  0024               	movlb	4	; select bank4
  6132     078C  0194               	clrf	20	;volatile
  6133                           
  6134                           ;mcc_generated_files/spi1.c: 66:     SSP1CON1 = 0x00;
  6135     078D  0195               	clrf	21	;volatile
  6136     078E                     l3624:
  6137                           
  6138                           ;mcc_generated_files/spi1.c: 67:     SSP1ADD = 0x01;
  6139     078E  3001               	movlw	1
  6140     078F  0092               	movwf	18	;volatile
  6141     0790                     l3626:
  6142                           
  6143                           ;mcc_generated_files/spi1.c: 68:     TRISBbits.TRISB4 = 0;
  6144     0790  0021               	movlb	1	; select bank1
  6145     0791  120D               	bcf	13,4	;volatile
  6146     0792                     l3628:
  6147                           
  6148                           ;mcc_generated_files/spi1.c: 69:     SSP1CON1bits.SSPEN = 0;
  6149     0792  0024               	movlb	4	; select bank4
  6150     0793  1295               	bcf	21,5	;volatile
  6151     0794                     l21:
  6152     0794  0008               	return
  6153     0795                     __end_of_SPI1_Initialize:
  6154                           
  6155                           	psect	text22
  6156     07BA                     __ptext22:	
  6157 ;; *************** function _PWM3_Initialize *****************
  6158 ;; Defined at:
  6159 ;;		line 64 in file "mcc_generated_files/pwm3.c"
  6160 ;; Parameters:    Size  Location     Type
  6161 ;;		None
  6162 ;; Auto vars:     Size  Location     Type
  6163 ;;		None
  6164 ;; Return value:  Size  Location     Type
  6165 ;;                  1    wreg      void 
  6166 ;; Registers used:
  6167 ;;		wreg, status,2, status,0
  6168 ;; Tracked objects:
  6169 ;;		On entry : 0/0
  6170 ;;		On exit  : 0/0
  6171 ;;		Unchanged: 0/0
  6172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6173 ;;      Params:         0       0       0       0       0       0
  6174 ;;      Locals:         0       0       0       0       0       0
  6175 ;;      Temps:          0       0       0       0       0       0
  6176 ;;      Totals:         0       0       0       0       0       0
  6177 ;;Total ram usage:        0 bytes
  6178 ;; Hardware stack levels used: 1
  6179 ;; Hardware stack levels required when called: 8
  6180 ;; This function calls:
  6181 ;;		Nothing
  6182 ;; This function is called by:
  6183 ;;		_SYSTEM_Initialize
  6184 ;; This function uses a non-reentrant model
  6185 ;;
  6186                           
  6187     07BA                     _PWM3_Initialize:	
  6188                           ;psect for function _PWM3_Initialize
  6189                           
  6190     07BA                     l3630:	
  6191                           ;incstack = 0
  6192                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
  6193                           
  6194                           
  6195                           ;mcc_generated_files/pwm3.c: 69:  CCP3CON = 0x0C;
  6196     07BA  300C               	movlw	12
  6197     07BB  0026               	movlb	6	; select bank6
  6198     07BC  0093               	movwf	19	;volatile
  6199     07BD                     l3632:
  6200                           
  6201                           ;mcc_generated_files/pwm3.c: 72:  CCPR3L = 0x00;
  6202     07BD  0191               	clrf	17	;volatile
  6203     07BE                     l3634:
  6204                           
  6205                           ;mcc_generated_files/pwm3.c: 75:  CCPR3H = 0x00;
  6206     07BE  0192               	clrf	18	;volatile
  6207     07BF                     l3636:
  6208                           
  6209                           ;mcc_generated_files/pwm3.c: 78:  CCPTMRS0bits.C3TSEL = 0x0;
  6210     07BF  30CF               	movlw	-49
  6211     07C0  0025               	movlb	5	; select bank5
  6212     07C1  059E               	andwf	30,f	;volatile
  6213     07C2                     l72:
  6214     07C2  0008               	return
  6215     07C3                     __end_of_PWM3_Initialize:
  6216                           
  6217                           	psect	text23
  6218     03A8                     __ptext23:	
  6219 ;; *************** function _PIN_MANAGER_Initialize *****************
  6220 ;; Defined at:
  6221 ;;		line 58 in file "mcc_generated_files/pin_manager.c"
  6222 ;; Parameters:    Size  Location     Type
  6223 ;;		None
  6224 ;; Auto vars:     Size  Location     Type
  6225 ;;		None
  6226 ;; Return value:  Size  Location     Type
  6227 ;;                  1    wreg      void 
  6228 ;; Registers used:
  6229 ;;		wreg, status,2, status,0, pclath, cstack
  6230 ;; Tracked objects:
  6231 ;;		On entry : 0/0
  6232 ;;		On exit  : 0/0
  6233 ;;		Unchanged: 0/0
  6234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6235 ;;      Params:         0       0       0       0       0       0
  6236 ;;      Locals:         0       0       0       0       0       0
  6237 ;;      Temps:          0       0       0       0       0       0
  6238 ;;      Totals:         0       0       0       0       0       0
  6239 ;;Total ram usage:        0 bytes
  6240 ;; Hardware stack levels used: 1
  6241 ;; Hardware stack levels required when called: 9
  6242 ;; This function calls:
  6243 ;;		_IOCBF0_SetInterruptHandler
  6244 ;;		_IOCBF3_SetInterruptHandler
  6245 ;; This function is called by:
  6246 ;;		_SYSTEM_Initialize
  6247 ;; This function uses a non-reentrant model
  6248 ;;
  6249                           
  6250     03A8                     _PIN_MANAGER_Initialize:	
  6251                           ;psect for function _PIN_MANAGER_Initialize
  6252                           
  6253     03A8                     l3650:	
  6254                           ;incstack = 0
  6255                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6256                           
  6257                           
  6258                           ;mcc_generated_files/pin_manager.c: 63:     LATA = 0x00;
  6259     03A8  0022               	movlb	2	; select bank2
  6260     03A9  018C               	clrf	12	;volatile
  6261                           
  6262                           ;mcc_generated_files/pin_manager.c: 64:     LATB = 0x00;
  6263     03AA  018D               	clrf	13	;volatile
  6264     03AB                     l3652:
  6265                           
  6266                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0x37;
  6267     03AB  3037               	movlw	55
  6268     03AC  0021               	movlb	1	; select bank1
  6269     03AD  008C               	movwf	12	;volatile
  6270     03AE                     l3654:
  6271                           
  6272                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0xEF;
  6273     03AE  30EF               	movlw	239
  6274     03AF  008D               	movwf	13	;volatile
  6275                           
  6276                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x00;
  6277     03B0  0023               	movlb	3	; select bank3
  6278     03B1  018D               	clrf	13	;volatile
  6279     03B2                     l3656:
  6280                           
  6281                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x07;
  6282     03B2  3007               	movlw	7
  6283     03B3  008C               	movwf	12	;volatile
  6284     03B4                     l3658:
  6285                           
  6286                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  6287     03B4  0024               	movlb	4	; select bank4
  6288     03B5  018D               	clrf	13	;volatile
  6289     03B6                     l3660:
  6290                           
  6291                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  6292     03B6  018C               	clrf	12	;volatile
  6293     03B7                     l3662:
  6294                           
  6295                           ;mcc_generated_files/pin_manager.c: 83:     OPTION_REGbits.nWPUEN = 1;
  6296     03B7  0021               	movlb	1	; select bank1
  6297     03B8  1795               	bsf	21,7	;volatile
  6298     03B9                     l3664:
  6299                           
  6300                           ;mcc_generated_files/pin_manager.c: 89:     APFCON0 = 0xC0;
  6301     03B9  30C0               	movlw	192
  6302     03BA  0022               	movlb	2	; select bank2
  6303     03BB  009D               	movwf	29	;volatile
  6304     03BC                     l3666:
  6305                           
  6306                           ;mcc_generated_files/pin_manager.c: 90:     APFCON1 = 0x01;
  6307     03BC  3001               	movlw	1
  6308     03BD  009E               	movwf	30	;volatile
  6309     03BE                     l3668:
  6310                           
  6311                           ;mcc_generated_files/pin_manager.c: 96:     IOCBFbits.IOCBF0 = 0;
  6312     03BE  0027               	movlb	7	; select bank7
  6313     03BF  1016               	bcf	22,0	;volatile
  6314     03C0                     l3670:
  6315                           
  6316                           ;mcc_generated_files/pin_manager.c: 98:     IOCBFbits.IOCBF3 = 0;
  6317     03C0  1196               	bcf	22,3	;volatile
  6318     03C1                     l3672:
  6319                           
  6320                           ;mcc_generated_files/pin_manager.c: 100:     IOCBNbits.IOCBN0 = 1;
  6321     03C1  1415               	bsf	21,0	;volatile
  6322     03C2                     l3674:
  6323                           
  6324                           ;mcc_generated_files/pin_manager.c: 102:     IOCBNbits.IOCBN3 = 1;
  6325     03C2  1595               	bsf	21,3	;volatile
  6326     03C3                     l3676:
  6327                           
  6328                           ;mcc_generated_files/pin_manager.c: 104:     IOCBPbits.IOCBP0 = 1;
  6329     03C3  1414               	bsf	20,0	;volatile
  6330     03C4                     l3678:
  6331                           
  6332                           ;mcc_generated_files/pin_manager.c: 106:     IOCBPbits.IOCBP3 = 1;
  6333     03C4  1594               	bsf	20,3	;volatile
  6334     03C5                     l3680:
  6335                           
  6336                           ;mcc_generated_files/pin_manager.c: 111:     IOCBF0_SetInterruptHandler(IOCBF0_DefaultIn
      +                          terruptHandler);
  6337     03C5  309B               	movlw	low _IOCBF0_DefaultInterruptHandler
  6338     03C6  0021               	movlb	1	; select bank1
  6339     03C7  00B0               	movwf	IOCBF0_SetInterruptHandler@InterruptHandler^(0+128)
  6340     03C8  300F               	movlw	high _IOCBF0_DefaultInterruptHandler
  6341     03C9  00B1               	movwf	(IOCBF0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  6342     03CA  3187  27CC  3183   	fcall	_IOCBF0_SetInterruptHandler
  6343     03CD                     l3682:
  6344                           
  6345                           ;mcc_generated_files/pin_manager.c: 112:     IOCBF3_SetInterruptHandler(IOCBF3_DefaultIn
      +                          terruptHandler);
  6346     03CD  309C               	movlw	low _IOCBF3_DefaultInterruptHandler
  6347     03CE  0021               	movlb	1	; select bank1
  6348     03CF  00B0               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler^(0+128)
  6349     03D0  300F               	movlw	high _IOCBF3_DefaultInterruptHandler
  6350     03D1  00B1               	movwf	(IOCBF3_SetInterruptHandler@InterruptHandler^(0+128)+1)
  6351     03D2  3187  27C3  3183   	fcall	_IOCBF3_SetInterruptHandler
  6352     03D5                     l3684:
  6353                           
  6354                           ;mcc_generated_files/pin_manager.c: 115:     INTCONbits.IOCIE = 1;
  6355     03D5  158B               	bsf	11,3	;volatile
  6356     03D6                     l257:
  6357     03D6  0008               	return
  6358     03D7                     __end_of_PIN_MANAGER_Initialize:
  6359                           
  6360                           	psect	text24
  6361     07C3                     __ptext24:	
  6362 ;; *************** function _IOCBF3_SetInterruptHandler *****************
  6363 ;; Defined at:
  6364 ;;		line 181 in file "mcc_generated_files/pin_manager.c"
  6365 ;; Parameters:    Size  Location     Type
  6366 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  6367 ;;		 -> S2_Interrupt(1), IOCBF3_DefaultInterruptHandler(1), 
  6368 ;; Auto vars:     Size  Location     Type
  6369 ;;		None
  6370 ;; Return value:  Size  Location     Type
  6371 ;;                  1    wreg      void 
  6372 ;; Registers used:
  6373 ;;		wreg
  6374 ;; Tracked objects:
  6375 ;;		On entry : 0/0
  6376 ;;		On exit  : 0/0
  6377 ;;		Unchanged: 0/0
  6378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6379 ;;      Params:         0       0       2       0       0       0
  6380 ;;      Locals:         0       0       0       0       0       0
  6381 ;;      Temps:          0       0       0       0       0       0
  6382 ;;      Totals:         0       0       2       0       0       0
  6383 ;;Total ram usage:        2 bytes
  6384 ;; Hardware stack levels used: 1
  6385 ;; Hardware stack levels required when called: 8
  6386 ;; This function calls:
  6387 ;;		Nothing
  6388 ;; This function is called by:
  6389 ;;		_PIN_MANAGER_Initialize
  6390 ;;		_main
  6391 ;; This function uses a non-reentrant model
  6392 ;;
  6393                           
  6394     07C3                     _IOCBF3_SetInterruptHandler:	
  6395                           ;psect for function _IOCBF3_SetInterruptHandler
  6396                           
  6397     07C3                     l3594:	
  6398                           ;incstack = 0
  6399                           ; Regs used in _IOCBF3_SetInterruptHandler: [wreg]
  6400                           
  6401                           
  6402                           ;mcc_generated_files/pin_manager.c: 182:     IOCBF3_InterruptHandler = InterruptHandler;
  6403     07C3  0021               	movlb	1	; select bank1
  6404     07C4  0831               	movf	(IOCBF3_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  6405     07C5  0020               	movlb	0	; select bank0
  6406     07C6  00AF               	movwf	_IOCBF3_InterruptHandler+1
  6407     07C7  0021               	movlb	1	; select bank1
  6408     07C8  0830               	movf	IOCBF3_SetInterruptHandler@InterruptHandler^(0+128),w
  6409     07C9  0020               	movlb	0	; select bank0
  6410     07CA  00AE               	movwf	_IOCBF3_InterruptHandler
  6411     07CB                     l279:
  6412     07CB  0008               	return
  6413     07CC                     __end_of_IOCBF3_SetInterruptHandler:
  6414                           
  6415                           	psect	text25
  6416     07CC                     __ptext25:	
  6417 ;; *************** function _IOCBF0_SetInterruptHandler *****************
  6418 ;; Defined at:
  6419 ;;		line 151 in file "mcc_generated_files/pin_manager.c"
  6420 ;; Parameters:    Size  Location     Type
  6421 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  6422 ;;		 -> S1_Interrupt(1), IOCBF0_DefaultInterruptHandler(1), 
  6423 ;; Auto vars:     Size  Location     Type
  6424 ;;		None
  6425 ;; Return value:  Size  Location     Type
  6426 ;;                  1    wreg      void 
  6427 ;; Registers used:
  6428 ;;		wreg
  6429 ;; Tracked objects:
  6430 ;;		On entry : 0/0
  6431 ;;		On exit  : 0/0
  6432 ;;		Unchanged: 0/0
  6433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6434 ;;      Params:         0       0       2       0       0       0
  6435 ;;      Locals:         0       0       0       0       0       0
  6436 ;;      Temps:          0       0       0       0       0       0
  6437 ;;      Totals:         0       0       2       0       0       0
  6438 ;;Total ram usage:        2 bytes
  6439 ;; Hardware stack levels used: 1
  6440 ;; Hardware stack levels required when called: 8
  6441 ;; This function calls:
  6442 ;;		Nothing
  6443 ;; This function is called by:
  6444 ;;		_PIN_MANAGER_Initialize
  6445 ;;		_main
  6446 ;; This function uses a non-reentrant model
  6447 ;;
  6448                           
  6449     07CC                     _IOCBF0_SetInterruptHandler:	
  6450                           ;psect for function _IOCBF0_SetInterruptHandler
  6451                           
  6452     07CC                     l3592:	
  6453                           ;incstack = 0
  6454                           ; Regs used in _IOCBF0_SetInterruptHandler: [wreg]
  6455                           
  6456                           
  6457                           ;mcc_generated_files/pin_manager.c: 152:     IOCBF0_InterruptHandler = InterruptHandler;
  6458     07CC  0021               	movlb	1	; select bank1
  6459     07CD  0831               	movf	(IOCBF0_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  6460     07CE  0020               	movlb	0	; select bank0
  6461     07CF  00B1               	movwf	_IOCBF0_InterruptHandler+1
  6462     07D0  0021               	movlb	1	; select bank1
  6463     07D1  0830               	movf	IOCBF0_SetInterruptHandler@InterruptHandler^(0+128),w
  6464     07D2  0020               	movlb	0	; select bank0
  6465     07D3  00B0               	movwf	_IOCBF0_InterruptHandler
  6466     07D4                     l269:
  6467     07D4  0008               	return
  6468     07D5                     __end_of_IOCBF0_SetInterruptHandler:
  6469                           
  6470                           	psect	text26
  6471     07F9                     __ptext26:	
  6472 ;; *************** function _OSCILLATOR_Initialize *****************
  6473 ;; Defined at:
  6474 ;;		line 71 in file "mcc_generated_files/mcc.c"
  6475 ;; Parameters:    Size  Location     Type
  6476 ;;		None
  6477 ;; Auto vars:     Size  Location     Type
  6478 ;;		None
  6479 ;; Return value:  Size  Location     Type
  6480 ;;                  1    wreg      void 
  6481 ;; Registers used:
  6482 ;;		wreg, status,2
  6483 ;; Tracked objects:
  6484 ;;		On entry : 0/0
  6485 ;;		On exit  : 0/0
  6486 ;;		Unchanged: 0/0
  6487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6488 ;;      Params:         0       0       0       0       0       0
  6489 ;;      Locals:         0       0       0       0       0       0
  6490 ;;      Temps:          0       0       0       0       0       0
  6491 ;;      Totals:         0       0       0       0       0       0
  6492 ;;Total ram usage:        0 bytes
  6493 ;; Hardware stack levels used: 1
  6494 ;; Hardware stack levels required when called: 8
  6495 ;; This function calls:
  6496 ;;		Nothing
  6497 ;; This function is called by:
  6498 ;;		_SYSTEM_Initialize
  6499 ;; This function uses a non-reentrant model
  6500 ;;
  6501                           
  6502     07F9                     _OSCILLATOR_Initialize:	
  6503                           ;psect for function _OSCILLATOR_Initialize
  6504                           
  6505     07F9                     l3698:	
  6506                           ;incstack = 0
  6507                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  6508                           
  6509                           
  6510                           ;mcc_generated_files/mcc.c: 74:     OSCCON = 0x70;
  6511     07F9  3070               	movlw	112
  6512     07FA  0021               	movlb	1	; select bank1
  6513     07FB  0099               	movwf	25	;volatile
  6514     07FC                     l3700:
  6515                           
  6516                           ;mcc_generated_files/mcc.c: 76:     OSCTUNE = 0x00;
  6517     07FC  0198               	clrf	24	;volatile
  6518     07FD                     l3702:
  6519                           
  6520                           ;mcc_generated_files/mcc.c: 78:     BORCON = 0x00;
  6521     07FD  0022               	movlb	2	; select bank2
  6522     07FE  0196               	clrf	22	;volatile
  6523     07FF                     l354:
  6524     07FF  0008               	return
  6525     0800                     __end_of_OSCILLATOR_Initialize:
  6526                           
  6527                           	psect	text27
  6528     047E                     __ptext27:	
  6529 ;; *************** function _EUSART_Initialize *****************
  6530 ;; Defined at:
  6531 ;;		line 66 in file "mcc_generated_files/eusart.c"
  6532 ;; Parameters:    Size  Location     Type
  6533 ;;		None
  6534 ;; Auto vars:     Size  Location     Type
  6535 ;;		None
  6536 ;; Return value:  Size  Location     Type
  6537 ;;                  1    wreg      void 
  6538 ;; Registers used:
  6539 ;;		wreg, status,2, status,0, pclath, cstack
  6540 ;; Tracked objects:
  6541 ;;		On entry : 0/0
  6542 ;;		On exit  : 0/0
  6543 ;;		Unchanged: 0/0
  6544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6545 ;;      Params:         0       0       0       0       0       0
  6546 ;;      Locals:         0       0       0       0       0       0
  6547 ;;      Temps:          0       0       0       0       0       0
  6548 ;;      Totals:         0       0       0       0       0       0
  6549 ;;Total ram usage:        0 bytes
  6550 ;; Hardware stack levels used: 1
  6551 ;; Hardware stack levels required when called: 9
  6552 ;; This function calls:
  6553 ;;		_EUSART_SetErrorHandler
  6554 ;;		_EUSART_SetFramingErrorHandler
  6555 ;;		_EUSART_SetOverrunErrorHandler
  6556 ;; This function is called by:
  6557 ;;		_SYSTEM_Initialize
  6558 ;; This function uses a non-reentrant model
  6559 ;;
  6560                           
  6561     047E                     _EUSART_Initialize:	
  6562                           ;psect for function _EUSART_Initialize
  6563                           
  6564     047E                     l3638:	
  6565                           ;incstack = 0
  6566                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6567                           
  6568                           
  6569                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  6570     047E  3008               	movlw	8
  6571     047F  0023               	movlb	3	; select bank3
  6572     0480  009F               	movwf	31	;volatile
  6573                           
  6574                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  6575     0481  3090               	movlw	144
  6576     0482  009D               	movwf	29	;volatile
  6577                           
  6578                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0xA4;
  6579     0483  30A4               	movlw	164
  6580     0484  009E               	movwf	30	;volatile
  6581                           
  6582                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x67;
  6583     0485  3067               	movlw	103
  6584     0486  009B               	movwf	27	;volatile
  6585     0487                     l3640:
  6586                           
  6587                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  6588     0487  019C               	clrf	28	;volatile
  6589     0488                     l3642:
  6590                           
  6591                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  6592     0488  3000               	movlw	0
  6593     0489  0021               	movlb	1	; select bank1
  6594     048A  00B0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128)
  6595     048B  3000               	movlw	0
  6596     048C  00B1               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler^(0+128)+1)
  6597     048D  3187  27DE  3184   	fcall	_EUSART_SetFramingErrorHandler
  6598     0490                     l3644:
  6599                           
  6600                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  6601     0490  3000               	movlw	0
  6602     0491  0021               	movlb	1	; select bank1
  6603     0492  00B0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)
  6604     0493  3000               	movlw	0
  6605     0494  00B1               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)+1)
  6606     0495  3187  27D5  3184   	fcall	_EUSART_SetOverrunErrorHandler
  6607     0498                     l3646:
  6608                           
  6609                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  6610     0498  3000               	movlw	0
  6611     0499  0021               	movlb	1	; select bank1
  6612     049A  00B0               	movwf	EUSART_SetErrorHandler@interruptHandler^(0+128)
  6613     049B  3000               	movlw	0
  6614     049C  00B1               	movwf	(EUSART_SetErrorHandler@interruptHandler^(0+128)+1)
  6615     049D  3187  27E7  3184   	fcall	_EUSART_SetErrorHandler
  6616     04A0                     l3648:
  6617                           
  6618                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  6619     04A0  0020               	movlb	0	; select bank0
  6620     04A1  01CE               	clrf	_eusartRxLastError	;volatile
  6621     04A2                     l118:
  6622     04A2  0008               	return
  6623     04A3                     __end_of_EUSART_Initialize:
  6624                           
  6625                           	psect	text28
  6626     07D5                     __ptext28:	
  6627 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  6628 ;; Defined at:
  6629 ;;		line 161 in file "mcc_generated_files/eusart.c"
  6630 ;; Parameters:    Size  Location     Type
  6631 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  6632 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  6633 ;; Auto vars:     Size  Location     Type
  6634 ;;		None
  6635 ;; Return value:  Size  Location     Type
  6636 ;;                  1    wreg      void 
  6637 ;; Registers used:
  6638 ;;		wreg
  6639 ;; Tracked objects:
  6640 ;;		On entry : 0/0
  6641 ;;		On exit  : 0/0
  6642 ;;		Unchanged: 0/0
  6643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6644 ;;      Params:         0       0       2       0       0       0
  6645 ;;      Locals:         0       0       0       0       0       0
  6646 ;;      Temps:          0       0       0       0       0       0
  6647 ;;      Totals:         0       0       2       0       0       0
  6648 ;;Total ram usage:        2 bytes
  6649 ;; Hardware stack levels used: 1
  6650 ;; Hardware stack levels required when called: 8
  6651 ;; This function calls:
  6652 ;;		Nothing
  6653 ;; This function is called by:
  6654 ;;		_EUSART_Initialize
  6655 ;; This function uses a non-reentrant model
  6656 ;;
  6657                           
  6658     07D5                     _EUSART_SetOverrunErrorHandler:	
  6659                           ;psect for function _EUSART_SetOverrunErrorHandler
  6660                           
  6661     07D5                     l3588:	
  6662                           ;incstack = 0
  6663                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  6664                           
  6665                           
  6666                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  6667     07D5  0021               	movlb	1	; select bank1
  6668     07D6  0831               	movf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^(0+128),w
  6669     07D7  0020               	movlb	0	; select bank0
  6670     07D8  00B5               	movwf	_EUSART_OverrunErrorHandler+1
  6671     07D9  0021               	movlb	1	; select bank1
  6672     07DA  0830               	movf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128),w
  6673     07DB  0020               	movlb	0	; select bank0
  6674     07DC  00B4               	movwf	_EUSART_OverrunErrorHandler
  6675     07DD                     l160:
  6676     07DD  0008               	return
  6677     07DE                     __end_of_EUSART_SetOverrunErrorHandler:
  6678                           
  6679                           	psect	text29
  6680     07DE                     __ptext29:	
  6681 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  6682 ;; Defined at:
  6683 ;;		line 157 in file "mcc_generated_files/eusart.c"
  6684 ;; Parameters:    Size  Location     Type
  6685 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  6686 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  6687 ;; Auto vars:     Size  Location     Type
  6688 ;;		None
  6689 ;; Return value:  Size  Location     Type
  6690 ;;                  1    wreg      void 
  6691 ;; Registers used:
  6692 ;;		wreg
  6693 ;; Tracked objects:
  6694 ;;		On entry : 0/0
  6695 ;;		On exit  : 0/0
  6696 ;;		Unchanged: 0/0
  6697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6698 ;;      Params:         0       0       2       0       0       0
  6699 ;;      Locals:         0       0       0       0       0       0
  6700 ;;      Temps:          0       0       0       0       0       0
  6701 ;;      Totals:         0       0       2       0       0       0
  6702 ;;Total ram usage:        2 bytes
  6703 ;; Hardware stack levels used: 1
  6704 ;; Hardware stack levels required when called: 8
  6705 ;; This function calls:
  6706 ;;		Nothing
  6707 ;; This function is called by:
  6708 ;;		_EUSART_Initialize
  6709 ;; This function uses a non-reentrant model
  6710 ;;
  6711                           
  6712     07DE                     _EUSART_SetFramingErrorHandler:	
  6713                           ;psect for function _EUSART_SetFramingErrorHandler
  6714                           
  6715     07DE                     l3586:	
  6716                           ;incstack = 0
  6717                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  6718                           
  6719                           
  6720                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  6721     07DE  0021               	movlb	1	; select bank1
  6722     07DF  0831               	movf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^(0+128),w
  6723     07E0  0020               	movlb	0	; select bank0
  6724     07E1  00B7               	movwf	_EUSART_FramingErrorHandler+1
  6725     07E2  0021               	movlb	1	; select bank1
  6726     07E3  0830               	movf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128),w
  6727     07E4  0020               	movlb	0	; select bank0
  6728     07E5  00B6               	movwf	_EUSART_FramingErrorHandler
  6729     07E6                     l157:
  6730     07E6  0008               	return
  6731     07E7                     __end_of_EUSART_SetFramingErrorHandler:
  6732                           
  6733                           	psect	text30
  6734     07E7                     __ptext30:	
  6735 ;; *************** function _EUSART_SetErrorHandler *****************
  6736 ;; Defined at:
  6737 ;;		line 165 in file "mcc_generated_files/eusart.c"
  6738 ;; Parameters:    Size  Location     Type
  6739 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  6740 ;;		 -> EUSART_DefaultErrorHandler(1), 
  6741 ;; Auto vars:     Size  Location     Type
  6742 ;;		None
  6743 ;; Return value:  Size  Location     Type
  6744 ;;                  1    wreg      void 
  6745 ;; Registers used:
  6746 ;;		wreg
  6747 ;; Tracked objects:
  6748 ;;		On entry : 0/0
  6749 ;;		On exit  : 0/0
  6750 ;;		Unchanged: 0/0
  6751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6752 ;;      Params:         0       0       2       0       0       0
  6753 ;;      Locals:         0       0       0       0       0       0
  6754 ;;      Temps:          0       0       0       0       0       0
  6755 ;;      Totals:         0       0       2       0       0       0
  6756 ;;Total ram usage:        2 bytes
  6757 ;; Hardware stack levels used: 1
  6758 ;; Hardware stack levels required when called: 8
  6759 ;; This function calls:
  6760 ;;		Nothing
  6761 ;; This function is called by:
  6762 ;;		_EUSART_Initialize
  6763 ;; This function uses a non-reentrant model
  6764 ;;
  6765                           
  6766     07E7                     _EUSART_SetErrorHandler:	
  6767                           ;psect for function _EUSART_SetErrorHandler
  6768                           
  6769     07E7                     l3590:	
  6770                           ;incstack = 0
  6771                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  6772                           
  6773                           
  6774                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  6775     07E7  0021               	movlb	1	; select bank1
  6776     07E8  0831               	movf	(EUSART_SetErrorHandler@interruptHandler+1)^(0+128),w
  6777     07E9  0020               	movlb	0	; select bank0
  6778     07EA  00B3               	movwf	_EUSART_ErrorHandler+1
  6779     07EB  0021               	movlb	1	; select bank1
  6780     07EC  0830               	movf	EUSART_SetErrorHandler@interruptHandler^(0+128),w
  6781     07ED  0020               	movlb	0	; select bank0
  6782     07EE  00B2               	movwf	_EUSART_ErrorHandler
  6783     07EF                     l163:
  6784     07EF  0008               	return
  6785     07F0                     __end_of_EUSART_SetErrorHandler:
  6786                           
  6787                           	psect	text31
  6788     0FCC                     __ptext31:	
  6789 ;; *************** function _DAC_Initialize *****************
  6790 ;; Defined at:
  6791 ;;		line 58 in file "mcc_generated_files/dac.c"
  6792 ;; Parameters:    Size  Location     Type
  6793 ;;		None
  6794 ;; Auto vars:     Size  Location     Type
  6795 ;;		None
  6796 ;; Return value:  Size  Location     Type
  6797 ;;                  1    wreg      void 
  6798 ;; Registers used:
  6799 ;;		wreg
  6800 ;; Tracked objects:
  6801 ;;		On entry : 0/0
  6802 ;;		On exit  : 0/0
  6803 ;;		Unchanged: 0/0
  6804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6805 ;;      Params:         0       0       0       0       0       0
  6806 ;;      Locals:         0       0       0       0       0       0
  6807 ;;      Temps:          0       0       0       0       0       0
  6808 ;;      Totals:         0       0       0       0       0       0
  6809 ;;Total ram usage:        0 bytes
  6810 ;; Hardware stack levels used: 1
  6811 ;; Hardware stack levels required when called: 8
  6812 ;; This function calls:
  6813 ;;		Nothing
  6814 ;; This function is called by:
  6815 ;;		_SYSTEM_Initialize
  6816 ;; This function uses a non-reentrant model
  6817 ;;
  6818                           
  6819     0FCC                     _DAC_Initialize:	
  6820                           ;psect for function _DAC_Initialize
  6821                           
  6822     0FCC                     l3714:	
  6823                           ;incstack = 0
  6824                           ; Regs used in _DAC_Initialize: [wreg]
  6825                           
  6826                           
  6827                           ;mcc_generated_files/dac.c: 61:     DACCON0 = 0x80;
  6828     0FCC  3080               	movlw	128
  6829     0FCD  0022               	movlb	2	; select bank2
  6830     0FCE  0098               	movwf	24	;volatile
  6831                           
  6832                           ;mcc_generated_files/dac.c: 63:     DACCON1 = 0x10;
  6833     0FCF  3010               	movlw	16
  6834     0FD0  0099               	movwf	25	;volatile
  6835     0FD1                     l590:
  6836     0FD1  0008               	return
  6837     0FD2                     __end_of_DAC_Initialize:
  6838                           
  6839                           	psect	text32
  6840     0767                     __ptext32:	
  6841 ;; *************** function _CMP2_Initialize *****************
  6842 ;; Defined at:
  6843 ;;		line 64 in file "mcc_generated_files/cmp2.c"
  6844 ;; Parameters:    Size  Location     Type
  6845 ;;		None
  6846 ;; Auto vars:     Size  Location     Type
  6847 ;;		None
  6848 ;; Return value:  Size  Location     Type
  6849 ;;                  1    wreg      void 
  6850 ;; Registers used:
  6851 ;;		wreg
  6852 ;; Tracked objects:
  6853 ;;		On entry : 0/0
  6854 ;;		On exit  : 0/0
  6855 ;;		Unchanged: 0/0
  6856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6857 ;;      Params:         0       0       0       0       0       0
  6858 ;;      Locals:         0       0       0       0       0       0
  6859 ;;      Temps:          0       0       0       0       0       0
  6860 ;;      Totals:         0       0       0       0       0       0
  6861 ;;Total ram usage:        0 bytes
  6862 ;; Hardware stack levels used: 1
  6863 ;; Hardware stack levels required when called: 8
  6864 ;; This function calls:
  6865 ;;		Nothing
  6866 ;; This function is called by:
  6867 ;;		_SYSTEM_Initialize
  6868 ;; This function uses a non-reentrant model
  6869 ;;
  6870                           
  6871     0767                     _CMP2_Initialize:	
  6872                           ;psect for function _CMP2_Initialize
  6873                           
  6874     0767                     l3706:	
  6875                           ;incstack = 0
  6876                           ; Regs used in _CMP2_Initialize: [wreg]
  6877                           
  6878                           
  6879                           ;mcc_generated_files/cmp2.c: 71:     PIE2bits.C2IE = 0;
  6880     0767  0021               	movlb	1	; select bank1
  6881     0768  1312               	bcf	18,6	;volatile
  6882     0769                     l3708:
  6883                           
  6884                           ;mcc_generated_files/cmp2.c: 74:     CM2CON0 = 0x84;
  6885     0769  3084               	movlw	132
  6886     076A  0022               	movlb	2	; select bank2
  6887     076B  0093               	movwf	19	;volatile
  6888                           
  6889                           ;mcc_generated_files/cmp2.c: 77:     CM2CON1 = 0x91;
  6890     076C  3091               	movlw	145
  6891     076D  0094               	movwf	20	;volatile
  6892     076E                     l3710:
  6893                           
  6894                           ;mcc_generated_files/cmp2.c: 80:     PIR2bits.C2IF = 0;
  6895     076E  0020               	movlb	0	; select bank0
  6896     076F  1312               	bcf	18,6	;volatile
  6897     0770                     l3712:
  6898                           
  6899                           ;mcc_generated_files/cmp2.c: 83:     PIE2bits.C2IE = 1;
  6900     0770  0021               	movlb	1	; select bank1
  6901     0771  1712               	bsf	18,6	;volatile
  6902     0772                     l573:
  6903     0772  0008               	return
  6904     0773                     __end_of_CMP2_Initialize:
  6905                           
  6906                           	psect	text33
  6907     0773                     __ptext33:	
  6908 ;; *************** function _CMP1_Initialize *****************
  6909 ;; Defined at:
  6910 ;;		line 64 in file "mcc_generated_files/cmp1.c"
  6911 ;; Parameters:    Size  Location     Type
  6912 ;;		None
  6913 ;; Auto vars:     Size  Location     Type
  6914 ;;		None
  6915 ;; Return value:  Size  Location     Type
  6916 ;;                  1    wreg      void 
  6917 ;; Registers used:
  6918 ;;		wreg
  6919 ;; Tracked objects:
  6920 ;;		On entry : 0/0
  6921 ;;		On exit  : 0/0
  6922 ;;		Unchanged: 0/0
  6923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6924 ;;      Params:         0       0       0       0       0       0
  6925 ;;      Locals:         0       0       0       0       0       0
  6926 ;;      Temps:          0       0       0       0       0       0
  6927 ;;      Totals:         0       0       0       0       0       0
  6928 ;;Total ram usage:        0 bytes
  6929 ;; Hardware stack levels used: 1
  6930 ;; Hardware stack levels required when called: 8
  6931 ;; This function calls:
  6932 ;;		Nothing
  6933 ;; This function is called by:
  6934 ;;		_SYSTEM_Initialize
  6935 ;; This function uses a non-reentrant model
  6936 ;;
  6937                           
  6938     0773                     _CMP1_Initialize:	
  6939                           ;psect for function _CMP1_Initialize
  6940                           
  6941     0773                     l3760:	
  6942                           ;incstack = 0
  6943                           ; Regs used in _CMP1_Initialize: [wreg]
  6944                           
  6945                           
  6946                           ;mcc_generated_files/cmp1.c: 71:     PIE2bits.C1IE = 0;
  6947     0773  0021               	movlb	1	; select bank1
  6948     0774  1292               	bcf	18,5	;volatile
  6949     0775                     l3762:
  6950                           
  6951                           ;mcc_generated_files/cmp1.c: 74:     CM1CON0 = 0x84;
  6952     0775  3084               	movlw	132
  6953     0776  0022               	movlb	2	; select bank2
  6954     0777  0091               	movwf	17	;volatile
  6955                           
  6956                           ;mcc_generated_files/cmp1.c: 77:     CM1CON1 = 0x90;
  6957     0778  3090               	movlw	144
  6958     0779  0092               	movwf	18	;volatile
  6959     077A                     l3764:
  6960                           
  6961                           ;mcc_generated_files/cmp1.c: 80:     PIR2bits.C1IF = 0;
  6962     077A  0020               	movlb	0	; select bank0
  6963     077B  1292               	bcf	18,5	;volatile
  6964     077C                     l3766:
  6965                           
  6966                           ;mcc_generated_files/cmp1.c: 83:     PIE2bits.C1IE = 1;
  6967     077C  0021               	movlb	1	; select bank1
  6968     077D  1692               	bsf	18,5	;volatile
  6969     077E                     l719:
  6970     077E  0008               	return
  6971     077F                     __end_of_CMP1_Initialize:
  6972                           
  6973                           	psect	text34
  6974     0677                     __ptext34:	
  6975 ;; *************** function _CCP4_Initialize *****************
  6976 ;; Defined at:
  6977 ;;		line 65 in file "mcc_generated_files/ccp4.c"
  6978 ;; Parameters:    Size  Location     Type
  6979 ;;		None
  6980 ;; Auto vars:     Size  Location     Type
  6981 ;;		None
  6982 ;; Return value:  Size  Location     Type
  6983 ;;                  1    wreg      void 
  6984 ;; Registers used:
  6985 ;;		wreg, status,2, status,0, pclath, cstack
  6986 ;; Tracked objects:
  6987 ;;		On entry : 0/0
  6988 ;;		On exit  : 0/0
  6989 ;;		Unchanged: 0/0
  6990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6991 ;;      Params:         0       0       0       0       0       0
  6992 ;;      Locals:         0       0       0       0       0       0
  6993 ;;      Temps:          0       0       0       0       0       0
  6994 ;;      Totals:         0       0       0       0       0       0
  6995 ;;Total ram usage:        0 bytes
  6996 ;; Hardware stack levels used: 1
  6997 ;; Hardware stack levels required when called: 9
  6998 ;; This function calls:
  6999 ;;		_CCP4_SetCallBack
  7000 ;; This function is called by:
  7001 ;;		_SYSTEM_Initialize
  7002 ;; This function uses a non-reentrant model
  7003 ;;
  7004                           
  7005     0677                     _CCP4_Initialize:	
  7006                           ;psect for function _CCP4_Initialize
  7007                           
  7008     0677                     l3686:	
  7009                           ;incstack = 0
  7010                           ; Regs used in _CCP4_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7011                           
  7012                           
  7013                           ;mcc_generated_files/ccp4.c: 70:  CCP4CON = 0x04;
  7014     0677  3004               	movlw	4
  7015     0678  0026               	movlb	6	; select bank6
  7016     0679  009A               	movwf	26	;volatile
  7017     067A                     l3688:
  7018                           
  7019                           ;mcc_generated_files/ccp4.c: 73:  CCPR4L = 0x00;
  7020     067A  0198               	clrf	24	;volatile
  7021     067B                     l3690:
  7022                           
  7023                           ;mcc_generated_files/ccp4.c: 76:  CCPR4H = 0x00;
  7024     067B  0199               	clrf	25	;volatile
  7025     067C                     l3692:
  7026                           
  7027                           ;mcc_generated_files/ccp4.c: 79:     CCP4_SetCallBack(CCP4_DefaultCallBack);
  7028     067C  309A               	movlw	low _CCP4_DefaultCallBack
  7029     067D  0021               	movlb	1	; select bank1
  7030     067E  00B0               	movwf	CCP4_SetCallBack@customCallBack^(0+128)
  7031     067F  300F               	movlw	high _CCP4_DefaultCallBack
  7032     0680  00B1               	movwf	(CCP4_SetCallBack@customCallBack^(0+128)+1)
  7033     0681  3187  27F0  3186   	fcall	_CCP4_SetCallBack
  7034     0684                     l3694:
  7035                           
  7036                           ;mcc_generated_files/ccp4.c: 83:     PIR3bits.CCP4IF = 0;
  7037     0684  0020               	movlb	0	; select bank0
  7038     0685  1293               	bcf	19,5	;volatile
  7039     0686                     l3696:
  7040                           
  7041                           ;mcc_generated_files/ccp4.c: 86:     PIE3bits.CCP4IE = 1;
  7042     0686  0021               	movlb	1	; select bank1
  7043     0687  1693               	bsf	19,5	;volatile
  7044     0688                     l302:
  7045     0688  0008               	return
  7046     0689                     __end_of_CCP4_Initialize:
  7047                           
  7048                           	psect	text35
  7049     07F0                     __ptext35:	
  7050 ;; *************** function _CCP4_SetCallBack *****************
  7051 ;; Defined at:
  7052 ;;		line 104 in file "mcc_generated_files/ccp4.c"
  7053 ;; Parameters:    Size  Location     Type
  7054 ;;  customCallBa    2    0[BANK1 ] PTR FTN(unsigned short ,
  7055 ;;		 -> CCP4_Interrupt(1), CCP4_DefaultCallBack(1), 
  7056 ;; Auto vars:     Size  Location     Type
  7057 ;;		None
  7058 ;; Return value:  Size  Location     Type
  7059 ;;                  1    wreg      void 
  7060 ;; Registers used:
  7061 ;;		wreg
  7062 ;; Tracked objects:
  7063 ;;		On entry : 0/0
  7064 ;;		On exit  : 0/0
  7065 ;;		Unchanged: 0/0
  7066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7067 ;;      Params:         0       0       2       0       0       0
  7068 ;;      Locals:         0       0       0       0       0       0
  7069 ;;      Temps:          0       0       0       0       0       0
  7070 ;;      Totals:         0       0       2       0       0       0
  7071 ;;Total ram usage:        2 bytes
  7072 ;; Hardware stack levels used: 1
  7073 ;; Hardware stack levels required when called: 8
  7074 ;; This function calls:
  7075 ;;		Nothing
  7076 ;; This function is called by:
  7077 ;;		_CCP4_Initialize
  7078 ;;		_main
  7079 ;; This function uses a non-reentrant model
  7080 ;;
  7081                           
  7082     07F0                     _CCP4_SetCallBack:	
  7083                           ;psect for function _CCP4_SetCallBack
  7084                           
  7085     07F0                     l3596:	
  7086                           ;incstack = 0
  7087                           ; Regs used in _CCP4_SetCallBack: [wreg]
  7088                           
  7089                           
  7090                           ;mcc_generated_files/ccp4.c: 105:     CCP4_CallBack = customCallBack;
  7091     07F0  0021               	movlb	1	; select bank1
  7092     07F1  0831               	movf	(CCP4_SetCallBack@customCallBack+1)^(0+128),w
  7093     07F2  0020               	movlb	0	; select bank0
  7094     07F3  00AD               	movwf	_CCP4_CallBack+1
  7095     07F4  0021               	movlb	1	; select bank1
  7096     07F5  0830               	movf	CCP4_SetCallBack@customCallBack^(0+128),w
  7097     07F6  0020               	movlb	0	; select bank0
  7098     07F7  00AC               	movwf	_CCP4_CallBack
  7099     07F8                     l308:
  7100     07F8  0008               	return
  7101     07F9                     __end_of_CCP4_SetCallBack:
  7102                           
  7103                           	psect	text36
  7104     0FDE                     __ptext36:	
  7105 ;; *************** function _ADC_Initialize *****************
  7106 ;; Defined at:
  7107 ;;		line 67 in file "mcc_generated_files/adc.c"
  7108 ;; Parameters:    Size  Location     Type
  7109 ;;		None
  7110 ;; Auto vars:     Size  Location     Type
  7111 ;;		None
  7112 ;; Return value:  Size  Location     Type
  7113 ;;                  1    wreg      void 
  7114 ;; Registers used:
  7115 ;;		wreg, status,2
  7116 ;; Tracked objects:
  7117 ;;		On entry : 0/0
  7118 ;;		On exit  : 0/0
  7119 ;;		Unchanged: 0/0
  7120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7121 ;;      Params:         0       0       0       0       0       0
  7122 ;;      Locals:         0       0       0       0       0       0
  7123 ;;      Temps:          0       0       0       0       0       0
  7124 ;;      Totals:         0       0       0       0       0       0
  7125 ;;Total ram usage:        0 bytes
  7126 ;; Hardware stack levels used: 1
  7127 ;; Hardware stack levels required when called: 8
  7128 ;; This function calls:
  7129 ;;		Nothing
  7130 ;; This function is called by:
  7131 ;;		_SYSTEM_Initialize
  7132 ;; This function uses a non-reentrant model
  7133 ;;
  7134                           
  7135     0FDE                     _ADC_Initialize:	
  7136                           ;psect for function _ADC_Initialize
  7137                           
  7138     0FDE                     l3768:	
  7139                           ;incstack = 0
  7140                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  7141                           
  7142                           
  7143                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0x90;
  7144     0FDE  3090               	movlw	144
  7145     0FDF  0021               	movlb	1	; select bank1
  7146     0FE0  009E               	movwf	30	;volatile
  7147     0FE1                     l3770:
  7148                           
  7149                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  7150     0FE1  019B               	clrf	27	;volatile
  7151     0FE2                     l3772:
  7152                           
  7153                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  7154     0FE2  019C               	clrf	28	;volatile
  7155                           
  7156                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x01;
  7157     0FE3  3001               	movlw	1
  7158     0FE4  009D               	movwf	29	;volatile
  7159     0FE5                     l487:
  7160     0FE5  0008               	return
  7161     0FE6                     __end_of_ADC_Initialize:
  7162                           
  7163                           	psect	text37
  7164     0FC7                     __ptext37:	
  7165 ;; *************** function _EUSART_is_rx_ready *****************
  7166 ;; Defined at:
  7167 ;;		line 99 in file "mcc_generated_files/eusart.c"
  7168 ;; Parameters:    Size  Location     Type
  7169 ;;		None
  7170 ;; Auto vars:     Size  Location     Type
  7171 ;;		None
  7172 ;; Return value:  Size  Location     Type
  7173 ;;                  1    wreg      _Bool 
  7174 ;; Registers used:
  7175 ;;		wreg, status,2, status,0
  7176 ;; Tracked objects:
  7177 ;;		On entry : 0/0
  7178 ;;		On exit  : 0/0
  7179 ;;		Unchanged: 0/0
  7180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7181 ;;      Params:         0       0       0       0       0       0
  7182 ;;      Locals:         0       0       0       0       0       0
  7183 ;;      Temps:          0       0       0       0       0       0
  7184 ;;      Totals:         0       0       0       0       0       0
  7185 ;;Total ram usage:        0 bytes
  7186 ;; Hardware stack levels used: 1
  7187 ;; Hardware stack levels required when called: 8
  7188 ;; This function calls:
  7189 ;;		Nothing
  7190 ;; This function is called by:
  7191 ;;		_main
  7192 ;; This function uses a non-reentrant model
  7193 ;;
  7194                           
  7195     0FC7                     _EUSART_is_rx_ready:	
  7196                           ;psect for function _EUSART_is_rx_ready
  7197                           
  7198     0FC7                     l3842:	
  7199                           ;incstack = 0
  7200                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
  7201                           
  7202                           
  7203                           ;mcc_generated_files/eusart.c: 101:     return (_Bool)(PIR1bits.RCIF);
  7204     0FC7  0020               	movlb	0	; select bank0
  7205     0FC8  0E11               	swapf	17,w	;volatile
  7206     0FC9  0C89               	rrf	9,f
  7207     0FCA  3901               	andlw	1
  7208     0FCB                     l126:
  7209     0FCB  0008               	return
  7210     0FCC                     __end_of_EUSART_is_rx_ready:
  7211                           
  7212                           	psect	text38
  7213     06DC                     __ptext38:	
  7214 ;; *************** function _EUSART_Read *****************
  7215 ;; Defined at:
  7216 ;;		line 113 in file "mcc_generated_files/eusart.c"
  7217 ;; Parameters:    Size  Location     Type
  7218 ;;		None
  7219 ;; Auto vars:     Size  Location     Type
  7220 ;;		None
  7221 ;; Return value:  Size  Location     Type
  7222 ;;                  1    wreg      unsigned char 
  7223 ;; Registers used:
  7224 ;;		wreg, status,2
  7225 ;; Tracked objects:
  7226 ;;		On entry : 0/0
  7227 ;;		On exit  : 0/0
  7228 ;;		Unchanged: 0/0
  7229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7230 ;;      Params:         0       0       0       0       0       0
  7231 ;;      Locals:         0       0       0       0       0       0
  7232 ;;      Temps:          0       0       0       0       0       0
  7233 ;;      Totals:         0       0       0       0       0       0
  7234 ;;Total ram usage:        0 bytes
  7235 ;; Hardware stack levels used: 1
  7236 ;; Hardware stack levels required when called: 8
  7237 ;; This function calls:
  7238 ;;		Nothing
  7239 ;; This function is called by:
  7240 ;;		_main
  7241 ;; This function uses a non-reentrant model
  7242 ;;
  7243                           
  7244     06DC                     _EUSART_Read:	
  7245                           ;psect for function _EUSART_Read
  7246                           
  7247     06DC                     l3846:	
  7248                           ;incstack = 0
  7249                           ; Regs used in _EUSART_Read: [wreg+status,2]
  7250                           
  7251     06DC                     l135:	
  7252                           ;mcc_generated_files/eusart.c: 116:     {;mcc_generated_files/eusart.c: 117:     }
  7253                           
  7254                           
  7255                           ;mcc_generated_files/eusart.c: 115:     while(!PIR1bits.RCIF)
  7256     06DC  0020               	movlb	0	; select bank0
  7257     06DD  1E91               	btfss	17,5	;volatile
  7258     06DE  2EE0               	goto	u2321
  7259     06DF  2EE1               	goto	u2320
  7260     06E0                     u2321:
  7261     06E0  2EDC               	goto	l135
  7262     06E1                     u2320:
  7263     06E1                     l3848:
  7264                           
  7265                           ;mcc_generated_files/eusart.c: 119:     eusartRxLastError.status = 0;
  7266     06E1  01CE               	clrf	_eusartRxLastError	;volatile
  7267     06E2                     l3850:
  7268                           
  7269                           ;mcc_generated_files/eusart.c: 121:     if(1 == RCSTAbits.OERR)
  7270     06E2  0023               	movlb	3	; select bank3
  7271     06E3  1C9D               	btfss	29,1	;volatile
  7272     06E4  2EE6               	goto	u2331
  7273     06E5  2EE7               	goto	u2330
  7274     06E6                     u2331:
  7275     06E6  2EE9               	goto	l3854
  7276     06E7                     u2330:
  7277     06E7                     l3852:
  7278                           
  7279                           ;mcc_generated_files/eusart.c: 122:     {;mcc_generated_files/eusart.c: 125:         RCS
      +                          TAbits.CREN = 0;
  7280     06E7  121D               	bcf	29,4	;volatile
  7281                           
  7282                           ;mcc_generated_files/eusart.c: 126:         RCSTAbits.CREN = 1;
  7283     06E8  161D               	bsf	29,4	;volatile
  7284     06E9                     l3854:
  7285                           
  7286                           ;mcc_generated_files/eusart.c: 129:     return RCREG;
  7287     06E9  0819               	movf	25,w	;volatile
  7288     06EA                     l139:
  7289     06EA  0008               	return
  7290     06EB                     __end_of_EUSART_Read:
  7291                           
  7292                           	psect	text39
  7293     0FF7                     __ptext39:	
  7294 ;; *************** function _CMP2_SetInterruptHandler *****************
  7295 ;; Defined at:
  7296 ;;		line 105 in file "mcc_generated_files/cmp2.c"
  7297 ;; Parameters:    Size  Location     Type
  7298 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  7299 ;;		 -> S4_Interrupt(1), 
  7300 ;; Auto vars:     Size  Location     Type
  7301 ;;		None
  7302 ;; Return value:  Size  Location     Type
  7303 ;;                  1    wreg      void 
  7304 ;; Registers used:
  7305 ;;		wreg
  7306 ;; Tracked objects:
  7307 ;;		On entry : 0/0
  7308 ;;		On exit  : 0/0
  7309 ;;		Unchanged: 0/0
  7310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7311 ;;      Params:         0       0       2       0       0       0
  7312 ;;      Locals:         0       0       0       0       0       0
  7313 ;;      Temps:          0       0       0       0       0       0
  7314 ;;      Totals:         0       0       2       0       0       0
  7315 ;;Total ram usage:        2 bytes
  7316 ;; Hardware stack levels used: 1
  7317 ;; Hardware stack levels required when called: 8
  7318 ;; This function calls:
  7319 ;;		Nothing
  7320 ;; This function is called by:
  7321 ;;		_main
  7322 ;; This function uses a non-reentrant model
  7323 ;;
  7324                           
  7325     0FF7                     _CMP2_SetInterruptHandler:	
  7326                           ;psect for function _CMP2_SetInterruptHandler
  7327                           
  7328     0FF7                     l3860:	
  7329                           ;incstack = 0
  7330                           ; Regs used in _CMP2_SetInterruptHandler: [wreg]
  7331                           
  7332                           
  7333                           ;mcc_generated_files/cmp2.c: 106:     CMP2_InterruptHandler = InterruptHandler;
  7334     0FF7  0021               	movlb	1	; select bank1
  7335     0FF8  0831               	movf	(CMP2_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  7336     0FF9  0020               	movlb	0	; select bank0
  7337     0FFA  00A7               	movwf	_CMP2_InterruptHandler+1
  7338     0FFB  0021               	movlb	1	; select bank1
  7339     0FFC  0830               	movf	CMP2_SetInterruptHandler@InterruptHandler^(0+128),w
  7340     0FFD  0020               	movlb	0	; select bank0
  7341     0FFE  00A6               	movwf	_CMP2_InterruptHandler
  7342     0FFF                     l583:
  7343     0FFF  0008               	return
  7344     1000                     __end_of_CMP2_SetInterruptHandler:
  7345                           
  7346                           	psect	text40
  7347     0FEE                     __ptext40:	
  7348 ;; *************** function _CMP1_SetInterruptHandler *****************
  7349 ;; Defined at:
  7350 ;;		line 105 in file "mcc_generated_files/cmp1.c"
  7351 ;; Parameters:    Size  Location     Type
  7352 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  7353 ;;		 -> S3_Interrupt(1), 
  7354 ;; Auto vars:     Size  Location     Type
  7355 ;;		None
  7356 ;; Return value:  Size  Location     Type
  7357 ;;                  1    wreg      void 
  7358 ;; Registers used:
  7359 ;;		wreg
  7360 ;; Tracked objects:
  7361 ;;		On entry : 0/0
  7362 ;;		On exit  : 0/0
  7363 ;;		Unchanged: 0/0
  7364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7365 ;;      Params:         0       0       2       0       0       0
  7366 ;;      Locals:         0       0       0       0       0       0
  7367 ;;      Temps:          0       0       0       0       0       0
  7368 ;;      Totals:         0       0       2       0       0       0
  7369 ;;Total ram usage:        2 bytes
  7370 ;; Hardware stack levels used: 1
  7371 ;; Hardware stack levels required when called: 8
  7372 ;; This function calls:
  7373 ;;		Nothing
  7374 ;; This function is called by:
  7375 ;;		_main
  7376 ;; This function uses a non-reentrant model
  7377 ;;
  7378                           
  7379     0FEE                     _CMP1_SetInterruptHandler:	
  7380                           ;psect for function _CMP1_SetInterruptHandler
  7381                           
  7382     0FEE                     l3862:	
  7383                           ;incstack = 0
  7384                           ; Regs used in _CMP1_SetInterruptHandler: [wreg]
  7385                           
  7386                           
  7387                           ;mcc_generated_files/cmp1.c: 106:     CMP1_InterruptHandler = InterruptHandler;
  7388     0FEE  0021               	movlb	1	; select bank1
  7389     0FEF  0831               	movf	(CMP1_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  7390     0FF0  0020               	movlb	0	; select bank0
  7391     0FF1  00A1               	movwf	_CMP1_InterruptHandler+1
  7392     0FF2  0021               	movlb	1	; select bank1
  7393     0FF3  0830               	movf	CMP1_SetInterruptHandler@InterruptHandler^(0+128),w
  7394     0FF4  0020               	movlb	0	; select bank0
  7395     0FF5  00A0               	movwf	_CMP1_InterruptHandler
  7396     0FF6                     l729:
  7397     0FF6  0008               	return
  7398     0FF7                     __end_of_CMP1_SetInterruptHandler:
  7399                           
  7400                           	psect	intentry
  7401     0004                     __pintentry:	
  7402 ;; *************** function _INTERRUPT_InterruptManager *****************
  7403 ;; Defined at:
  7404 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  7405 ;; Parameters:    Size  Location     Type
  7406 ;;		None
  7407 ;; Auto vars:     Size  Location     Type
  7408 ;;		None
  7409 ;; Return value:  Size  Location     Type
  7410 ;;                  1    wreg      void 
  7411 ;; Registers used:
  7412 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7413 ;; Tracked objects:
  7414 ;;		On entry : 0/0
  7415 ;;		On exit  : 0/0
  7416 ;;		Unchanged: 0/0
  7417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7418 ;;      Params:         0       0       0       0       0       0
  7419 ;;      Locals:         0       0       0       0       0       0
  7420 ;;      Temps:          0       0       0       0       0       0
  7421 ;;      Totals:         0       0       0       0       0       0
  7422 ;;Total ram usage:        0 bytes
  7423 ;; Hardware stack levels used: 1
  7424 ;; Hardware stack levels required when called: 7
  7425 ;; This function calls:
  7426 ;;		_CCP4_CaptureISR
  7427 ;;		_CMP1_ISR
  7428 ;;		_CMP2_ISR
  7429 ;;		_PIN_MANAGER_IOC
  7430 ;;		_TMR0_ISR
  7431 ;;		_TMR4_ISR
  7432 ;;		_TMR6_ISR
  7433 ;; This function is called by:
  7434 ;;		Interrupt level 1
  7435 ;; This function uses a non-reentrant model
  7436 ;;
  7437                           
  7438     0004                     _INTERRUPT_InterruptManager:
  7439                           
  7440                           ;incstack = 0
  7441     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  7442                           
  7443                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7444     0005  3180               	pagesel	$
  7445     0006                     i1l3480:
  7446                           
  7447                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.IOCIE == 1 && INTCONbits
      +                          .IOCIF == 1)
  7448     0006  1D8B               	btfss	11,3	;volatile
  7449     0007  2809               	goto	u204_21
  7450     0008  280A               	goto	u204_20
  7451     0009                     u204_21:
  7452     0009  2812               	goto	i1l192
  7453     000A                     u204_20:
  7454     000A                     i1l3482:
  7455     000A  1C0B               	btfss	11,0	;volatile
  7456     000B  280D               	goto	u205_21
  7457     000C  280E               	goto	u205_20
  7458     000D                     u205_21:
  7459     000D  2812               	goto	i1l192
  7460     000E                     u205_20:
  7461     000E                     i1l3484:
  7462                           
  7463                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
  7464     000E  3186  269B  3180   	fcall	_PIN_MANAGER_IOC
  7465                           
  7466                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  7467     0011  2868               	goto	i1l208
  7468     0012                     i1l192:	
  7469                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.TMR0IE == 1 && INTC
      +                          ONbits.TMR0IF == 1)
  7470                           
  7471     0012  1E8B               	btfss	11,5	;volatile
  7472     0013  2815               	goto	u206_21
  7473     0014  2816               	goto	u206_20
  7474     0015                     u206_21:
  7475     0015  281E               	goto	i1l194
  7476     0016                     u206_20:
  7477     0016                     i1l3486:
  7478     0016  1D0B               	btfss	11,2	;volatile
  7479     0017  2819               	goto	u207_21
  7480     0018  281A               	goto	u207_20
  7481     0019                     u207_21:
  7482     0019  281E               	goto	i1l194
  7483     001A                     u207_20:
  7484     001A                     i1l3488:
  7485                           
  7486                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         TMR0_ISR();
  7487     001A  3186  26CC  3180   	fcall	_TMR0_ISR
  7488                           
  7489                           ;mcc_generated_files/interrupt_manager.c: 62:     }
  7490     001D  2868               	goto	i1l208
  7491     001E                     i1l194:	
  7492                           ;mcc_generated_files/interrupt_manager.c: 63:     else if(INTCONbits.PEIE == 1)
  7493                           
  7494     001E  1F0B               	btfss	11,6	;volatile
  7495     001F  2821               	goto	u208_21
  7496     0020  2822               	goto	u208_20
  7497     0021                     u208_21:
  7498     0021  2868               	goto	i1l202
  7499     0022                     u208_20:
  7500     0022                     i1l3490:
  7501                           
  7502                           ;mcc_generated_files/interrupt_manager.c: 64:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 65:         if(PIE3bits.TMR4IE == 1 && PIR3bits.TMR4IF == 1)
  7503     0022  0021               	movlb	1	; select bank1
  7504     0023  1C93               	btfss	19,1	;volatile
  7505     0024  2826               	goto	u209_21
  7506     0025  2827               	goto	u209_20
  7507     0026                     u209_21:
  7508     0026  2830               	goto	i1l197
  7509     0027                     u209_20:
  7510     0027                     i1l3492:
  7511     0027  0020               	movlb	0	; select bank0
  7512     0028  1C93               	btfss	19,1	;volatile
  7513     0029  282B               	goto	u210_21
  7514     002A  282C               	goto	u210_20
  7515     002B                     u210_21:
  7516     002B  2830               	goto	i1l197
  7517     002C                     u210_20:
  7518     002C                     i1l3494:
  7519                           
  7520                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             TMR4_ISR();
  7521     002C  3186  2626  3180   	fcall	_TMR4_ISR
  7522                           
  7523                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  7524     002F  2868               	goto	i1l208
  7525     0030                     i1l197:	
  7526                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE2bits.C2IE == 1 && PIR2
      +                          bits.C2IF == 1)
  7527                           
  7528     0030  0021               	movlb	1	; select bank1
  7529     0031  1F12               	btfss	18,6	;volatile
  7530     0032  2834               	goto	u211_21
  7531     0033  2835               	goto	u211_20
  7532     0034                     u211_21:
  7533     0034  283E               	goto	i1l199
  7534     0035                     u211_20:
  7535     0035                     i1l3496:
  7536     0035  0020               	movlb	0	; select bank0
  7537     0036  1F12               	btfss	18,6	;volatile
  7538     0037  2839               	goto	u212_21
  7539     0038  283A               	goto	u212_20
  7540     0039                     u212_21:
  7541     0039  283E               	goto	i1l199
  7542     003A                     u212_20:
  7543     003A                     i1l3498:
  7544                           
  7545                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             CMP2_ISR();
  7546     003A  3187  2718  3180   	fcall	_CMP2_ISR
  7547                           
  7548                           ;mcc_generated_files/interrupt_manager.c: 72:         }
  7549     003D  2868               	goto	i1l208
  7550     003E                     i1l199:	
  7551                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE2bits.C1IE == 1 && PIR2
      +                          bits.C1IF == 1)
  7552                           
  7553     003E  0021               	movlb	1	; select bank1
  7554     003F  1E92               	btfss	18,5	;volatile
  7555     0040  2842               	goto	u213_21
  7556     0041  2843               	goto	u213_20
  7557     0042                     u213_21:
  7558     0042  284C               	goto	i1l201
  7559     0043                     u213_20:
  7560     0043                     i1l3500:
  7561     0043  0020               	movlb	0	; select bank0
  7562     0044  1E92               	btfss	18,5	;volatile
  7563     0045  2847               	goto	u214_21
  7564     0046  2848               	goto	u214_20
  7565     0047                     u214_21:
  7566     0047  284C               	goto	i1l201
  7567     0048                     u214_20:
  7568     0048                     i1l3502:
  7569                           
  7570                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             CMP1_ISR();
  7571     0048  3187  2726  3180   	fcall	_CMP1_ISR
  7572                           
  7573                           ;mcc_generated_files/interrupt_manager.c: 76:         }
  7574     004B  2868               	goto	i1l208
  7575     004C                     i1l201:	
  7576                           ;mcc_generated_files/interrupt_manager.c: 77:         else if(PIE3bits.CCP4IE == 1 && PI
      +                          R3bits.CCP4IF == 1)
  7577                           
  7578     004C  0021               	movlb	1	; select bank1
  7579     004D  1E93               	btfss	19,5	;volatile
  7580     004E  2850               	goto	u215_21
  7581     004F  2851               	goto	u215_20
  7582     0050                     u215_21:
  7583     0050  285A               	goto	i1l203
  7584     0051                     u215_20:
  7585     0051                     i1l3504:
  7586     0051  0020               	movlb	0	; select bank0
  7587     0052  1E93               	btfss	19,5	;volatile
  7588     0053  2855               	goto	u216_21
  7589     0054  2856               	goto	u216_20
  7590     0055                     u216_21:
  7591     0055  285A               	goto	i1l203
  7592     0056                     u216_20:
  7593     0056                     i1l3506:
  7594                           
  7595                           ;mcc_generated_files/interrupt_manager.c: 78:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 79:             CCP4_CaptureISR();
  7596     0056  3186  2689  3180   	fcall	_CCP4_CaptureISR
  7597                           
  7598                           ;mcc_generated_files/interrupt_manager.c: 80:         }
  7599     0059  2868               	goto	i1l208
  7600     005A                     i1l203:	
  7601                           ;mcc_generated_files/interrupt_manager.c: 81:         else if(PIE3bits.TMR6IE == 1 && PI
      +                          R3bits.TMR6IF == 1)
  7602                           
  7603     005A  0021               	movlb	1	; select bank1
  7604     005B  1D93               	btfss	19,3	;volatile
  7605     005C  285E               	goto	u217_21
  7606     005D  285F               	goto	u217_20
  7607     005E                     u217_21:
  7608     005E  2868               	goto	i1l202
  7609     005F                     u217_20:
  7610     005F                     i1l3508:
  7611     005F  0020               	movlb	0	; select bank0
  7612     0060  1D93               	btfss	19,3	;volatile
  7613     0061  2863               	goto	u218_21
  7614     0062  2864               	goto	u218_20
  7615     0063                     u218_21:
  7616     0063  2868               	goto	i1l202
  7617     0064                     u218_20:
  7618     0064                     i1l3510:
  7619                           
  7620                           ;mcc_generated_files/interrupt_manager.c: 82:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 83:             TMR6_ISR();
  7621     0064  3186  2610  3180   	fcall	_TMR6_ISR
  7622                           
  7623                           ;mcc_generated_files/interrupt_manager.c: 84:         }
  7624     0067  2868               	goto	i1l208
  7625     0068                     i1l202:
  7626     0068                     i1l208:
  7627     0068  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  7628     0069  0009               	retfie
  7629     006A                     __end_of_INTERRUPT_InterruptManager:
  7630                           
  7631                           	psect	text42
  7632     0610                     __ptext42:	
  7633 ;; *************** function _TMR6_ISR *****************
  7634 ;; Defined at:
  7635 ;;		line 119 in file "mcc_generated_files/tmr6.c"
  7636 ;; Parameters:    Size  Location     Type
  7637 ;;		None
  7638 ;; Auto vars:     Size  Location     Type
  7639 ;;		None
  7640 ;; Return value:  Size  Location     Type
  7641 ;;                  1    wreg      void 
  7642 ;; Registers used:
  7643 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7644 ;; Tracked objects:
  7645 ;;		On entry : 0/0
  7646 ;;		On exit  : 0/0
  7647 ;;		Unchanged: 0/0
  7648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7649 ;;      Params:         0       0       0       0       0       0
  7650 ;;      Locals:         0       0       0       0       0       0
  7651 ;;      Temps:          0       0       0       0       0       0
  7652 ;;      Totals:         0       0       0       0       0       0
  7653 ;;Total ram usage:        0 bytes
  7654 ;; Hardware stack levels used: 1
  7655 ;; Hardware stack levels required when called: 6
  7656 ;; This function calls:
  7657 ;;		_TMR6_CallBack
  7658 ;; This function is called by:
  7659 ;;		_INTERRUPT_InterruptManager
  7660 ;; This function uses a non-reentrant model
  7661 ;;
  7662                           
  7663     0610                     _TMR6_ISR:	
  7664                           ;psect for function _TMR6_ISR
  7665                           
  7666     0610                     i1l3410:	
  7667                           ;incstack = 0
  7668                           ; Regs used in _TMR6_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7669                           
  7670                           
  7671                           ;mcc_generated_files/tmr6.c: 121:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr6.c: 124:     PIR3bits.TMR6IF = 0;
  7672     0610  0020               	movlb	0	; select bank0
  7673     0611  1193               	bcf	19,3	;volatile
  7674     0612                     i1l3412:
  7675                           
  7676                           ;mcc_generated_files/tmr6.c: 127:     if (++CountCallBack >= 400)
  7677     0612  3001               	movlw	1
  7678     0613  07C7               	addwf	TMR6_ISR@CountCallBack,f	;volatile
  7679     0614  3000               	movlw	0
  7680     0615  3DC8               	addwfc	TMR6_ISR@CountCallBack+1,f	;volatile
  7681     0616  3001               	movlw	1
  7682     0617  0248               	subwf	TMR6_ISR@CountCallBack+1,w	;volatile
  7683     0618  3090               	movlw	144
  7684     0619  1903               	skipnz
  7685     061A  0247               	subwf	TMR6_ISR@CountCallBack,w	;volatile
  7686     061B  1C03               	skipc
  7687     061C  2E1E               	goto	u196_21
  7688     061D  2E1F               	goto	u196_20
  7689     061E                     u196_21:
  7690     061E  2E25               	goto	i1l640
  7691     061F                     u196_20:
  7692     061F                     i1l3414:
  7693                           
  7694                           ;mcc_generated_files/tmr6.c: 128:     {;mcc_generated_files/tmr6.c: 130:         TMR6_Ca
      +                          llBack();
  7695     061F  3187  2741  3186   	fcall	_TMR6_CallBack
  7696     0622                     i1l3416:
  7697                           
  7698                           ;mcc_generated_files/tmr6.c: 133:         CountCallBack = 0;
  7699     0622  0020               	movlb	0	; select bank0
  7700     0623  01C7               	clrf	TMR6_ISR@CountCallBack	;volatile
  7701     0624  01C8               	clrf	TMR6_ISR@CountCallBack+1	;volatile
  7702     0625                     i1l640:
  7703     0625  0008               	return
  7704     0626                     __end_of_TMR6_ISR:
  7705                           
  7706                           	psect	text43
  7707     0741                     __ptext43:	
  7708 ;; *************** function _TMR6_CallBack *****************
  7709 ;; Defined at:
  7710 ;;		line 137 in file "mcc_generated_files/tmr6.c"
  7711 ;; Parameters:    Size  Location     Type
  7712 ;;		None
  7713 ;; Auto vars:     Size  Location     Type
  7714 ;;		None
  7715 ;; Return value:  Size  Location     Type
  7716 ;;                  1    wreg      void 
  7717 ;; Registers used:
  7718 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7719 ;; Tracked objects:
  7720 ;;		On entry : 0/0
  7721 ;;		On exit  : 0/0
  7722 ;;		Unchanged: 0/0
  7723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7724 ;;      Params:         0       0       0       0       0       0
  7725 ;;      Locals:         0       0       0       0       0       0
  7726 ;;      Temps:          0       0       0       0       0       0
  7727 ;;      Totals:         0       0       0       0       0       0
  7728 ;;Total ram usage:        0 bytes
  7729 ;; Hardware stack levels used: 1
  7730 ;; Hardware stack levels required when called: 5
  7731 ;; This function calls:
  7732 ;;		Absolute function
  7733 ;;		_TMR6_DefaultInterruptHandler
  7734 ;;		_TMR6_Interrupt
  7735 ;; This function is called by:
  7736 ;;		_TMR6_ISR
  7737 ;; This function uses a non-reentrant model
  7738 ;;
  7739                           
  7740     0741                     _TMR6_CallBack:	
  7741                           ;psect for function _TMR6_CallBack
  7742                           
  7743     0741                     i1l3192:	
  7744                           ;incstack = 0
  7745                           ; Regs used in _TMR6_CallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7746                           
  7747                           
  7748                           ;mcc_generated_files/tmr6.c: 141:     if(TMR6_InterruptHandler)
  7749     0741  0020               	movlb	0	; select bank0
  7750     0742  0824               	movf	_TMR6_InterruptHandler,w
  7751     0743  0425               	iorwf	_TMR6_InterruptHandler+1,w
  7752     0744  1903               	btfsc	3,2
  7753     0745  2F47               	goto	u165_21
  7754     0746  2F48               	goto	u165_20
  7755     0747                     u165_21:
  7756     0747  2F4D               	goto	i1l644
  7757     0748                     u165_20:
  7758     0748                     i1l3194:
  7759                           
  7760                           ;mcc_generated_files/tmr6.c: 142:     {;mcc_generated_files/tmr6.c: 143:         TMR6_In
      +                          terruptHandler();
  7761     0748  0825               	movf	_TMR6_InterruptHandler+1,w
  7762     0749  008A               	movwf	10
  7763     074A  0824               	movf	_TMR6_InterruptHandler,w
  7764     074B  000A               	callw
  7765     074C  3187               	pagesel	$
  7766     074D                     i1l644:
  7767     074D  0008               	return
  7768     074E                     __end_of_TMR6_CallBack:
  7769                           
  7770                           	psect	text44
  7771     0003                     __ptext44:	
  7772 ;; *************** function _TMR6_DefaultInterruptHandler *****************
  7773 ;; Defined at:
  7774 ;;		line 151 in file "mcc_generated_files/tmr6.c"
  7775 ;; Parameters:    Size  Location     Type
  7776 ;;		None
  7777 ;; Auto vars:     Size  Location     Type
  7778 ;;		None
  7779 ;; Return value:  Size  Location     Type
  7780 ;;                  1    wreg      void 
  7781 ;; Registers used:
  7782 ;;		None
  7783 ;; Tracked objects:
  7784 ;;		On entry : 0/0
  7785 ;;		On exit  : 0/0
  7786 ;;		Unchanged: 0/0
  7787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7788 ;;      Params:         0       0       0       0       0       0
  7789 ;;      Locals:         0       0       0       0       0       0
  7790 ;;      Temps:          0       0       0       0       0       0
  7791 ;;      Totals:         0       0       0       0       0       0
  7792 ;;Total ram usage:        0 bytes
  7793 ;; Hardware stack levels used: 1
  7794 ;; This function calls:
  7795 ;;		Nothing
  7796 ;; This function is called by:
  7797 ;;		_TMR6_Initialize
  7798 ;;		_TMR6_CallBack
  7799 ;; This function uses a non-reentrant model
  7800 ;;
  7801                           
  7802     0003                     _TMR6_DefaultInterruptHandler:	
  7803                           ;psect for function _TMR6_DefaultInterruptHandler
  7804                           
  7805     0003                     i1l650:	
  7806                           ;incstack = 0
  7807                           ; Regs used in _TMR6_DefaultInterruptHandler: []
  7808                           
  7809     0003  0008               	return
  7810     0004                     __end_of_TMR6_DefaultInterruptHandler:
  7811                           
  7812                           	psect	text45
  7813     06AC                     __ptext45:	
  7814 ;; *************** function _TMR6_Interrupt *****************
  7815 ;; Defined at:
  7816 ;;		line 161 in file "main.c"
  7817 ;; Parameters:    Size  Location     Type
  7818 ;;		None
  7819 ;; Auto vars:     Size  Location     Type
  7820 ;;		None
  7821 ;; Return value:  Size  Location     Type
  7822 ;;                  1    wreg      void 
  7823 ;; Registers used:
  7824 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7825 ;; Tracked objects:
  7826 ;;		On entry : 0/0
  7827 ;;		On exit  : 0/0
  7828 ;;		Unchanged: 0/0
  7829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7830 ;;      Params:         0       0       0       0       0       0
  7831 ;;      Locals:         0       0       0       0       0       0
  7832 ;;      Temps:          0       0       0       0       0       0
  7833 ;;      Totals:         0       0       0       0       0       0
  7834 ;;Total ram usage:        0 bytes
  7835 ;; Hardware stack levels used: 1
  7836 ;; Hardware stack levels required when called: 4
  7837 ;; This function calls:
  7838 ;;		_TMR6_StopTimer
  7839 ;;		_TMR6_WriteTimer
  7840 ;;		i1_updateMatrix
  7841 ;;		i1_updateMotor
  7842 ;; This function is called by:
  7843 ;;		_main
  7844 ;;		_TMR6_CallBack
  7845 ;; This function uses a non-reentrant model
  7846 ;;
  7847                           
  7848     06AC                     _TMR6_Interrupt:	
  7849                           ;psect for function _TMR6_Interrupt
  7850                           
  7851     06AC                     i1l2912:	
  7852                           ;incstack = 0
  7853                           ; Regs used in _TMR6_Interrupt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7854                           
  7855                           
  7856                           ;main.c: 162:     TMR6_StopTimer();
  7857     06AC  318F  27A7  3186   	fcall	_TMR6_StopTimer
  7858     06AF                     i1l2914:
  7859                           
  7860                           ;main.c: 163:     TMR6_WriteTimer(0);
  7861     06AF  3000               	movlw	0
  7862     06B0  318F  27C2  3186   	fcall	_TMR6_WriteTimer
  7863     06B3                     i1l2916:
  7864                           
  7865                           ;main.c: 164:     floorFlag = 0;
  7866     06B3  0020               	movlb	0	; select bank0
  7867     06B4  01CD               	clrf	_floorFlag
  7868     06B5                     i1l2918:
  7869                           
  7870                           ;main.c: 165:     updateMotor();
  7871     06B5  3183  23D7  3186   	fcall	i1_updateMotor
  7872     06B8                     i1l2920:
  7873                           
  7874                           ;main.c: 166:     updateMatrix();
  7875     06B8  3184  24A3  3186   	fcall	i1_updateMatrix
  7876     06BB                     i1l855:
  7877     06BB  0008               	return
  7878     06BC                     __end_of_TMR6_Interrupt:
  7879                           
  7880                           	psect	text46
  7881     0FC2                     __ptext46:	
  7882 ;; *************** function _TMR6_WriteTimer *****************
  7883 ;; Defined at:
  7884 ;;		line 108 in file "mcc_generated_files/tmr6.c"
  7885 ;; Parameters:    Size  Location     Type
  7886 ;;  timerVal        1    wreg     unsigned char 
  7887 ;; Auto vars:     Size  Location     Type
  7888 ;;  timerVal        1    0[COMMON] unsigned char 
  7889 ;; Return value:  Size  Location     Type
  7890 ;;                  1    wreg      void 
  7891 ;; Registers used:
  7892 ;;		wreg
  7893 ;; Tracked objects:
  7894 ;;		On entry : 0/0
  7895 ;;		On exit  : 0/0
  7896 ;;		Unchanged: 0/0
  7897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7898 ;;      Params:         0       0       0       0       0       0
  7899 ;;      Locals:         1       0       0       0       0       0
  7900 ;;      Temps:          0       0       0       0       0       0
  7901 ;;      Totals:         1       0       0       0       0       0
  7902 ;;Total ram usage:        1 bytes
  7903 ;; Hardware stack levels used: 1
  7904 ;; This function calls:
  7905 ;;		Nothing
  7906 ;; This function is called by:
  7907 ;;		_TMR6_Interrupt
  7908 ;; This function uses a non-reentrant model
  7909 ;;
  7910                           
  7911     0FC2                     _TMR6_WriteTimer:	
  7912                           ;psect for function _TMR6_WriteTimer
  7913                           
  7914                           
  7915                           ;incstack = 0
  7916                           ; Regs used in _TMR6_WriteTimer: [wreg]
  7917                           ;TMR6_WriteTimer@timerVal stored from wreg
  7918     0FC2  00F0               	movwf	TMR6_WriteTimer@timerVal
  7919     0FC3                     i1l2788:
  7920                           
  7921                           ;mcc_generated_files/tmr6.c: 108: void TMR6_WriteTimer(uint8_t timerVal);mcc_generated_f
      +                          iles/tmr6.c: 109: {;mcc_generated_files/tmr6.c: 111:     TMR6 = timerVal;
  7922     0FC3  0870               	movf	TMR6_WriteTimer@timerVal,w
  7923     0FC4  0028               	movlb	8	; select bank8
  7924     0FC5  009C               	movwf	28	;volatile
  7925     0FC6                     i1l631:
  7926     0FC6  0008               	return
  7927     0FC7                     __end_of_TMR6_WriteTimer:
  7928                           
  7929                           	psect	text47
  7930     0FA7                     __ptext47:	
  7931 ;; *************** function _TMR6_StopTimer *****************
  7932 ;; Defined at:
  7933 ;;		line 93 in file "mcc_generated_files/tmr6.c"
  7934 ;; Parameters:    Size  Location     Type
  7935 ;;		None
  7936 ;; Auto vars:     Size  Location     Type
  7937 ;;		None
  7938 ;; Return value:  Size  Location     Type
  7939 ;;                  1    wreg      void 
  7940 ;; Registers used:
  7941 ;;		None
  7942 ;; Tracked objects:
  7943 ;;		On entry : 0/0
  7944 ;;		On exit  : 0/0
  7945 ;;		Unchanged: 0/0
  7946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7947 ;;      Params:         0       0       0       0       0       0
  7948 ;;      Locals:         0       0       0       0       0       0
  7949 ;;      Temps:          0       0       0       0       0       0
  7950 ;;      Totals:         0       0       0       0       0       0
  7951 ;;Total ram usage:        0 bytes
  7952 ;; Hardware stack levels used: 1
  7953 ;; This function calls:
  7954 ;;		Nothing
  7955 ;; This function is called by:
  7956 ;;		_TMR6_Interrupt
  7957 ;; This function uses a non-reentrant model
  7958 ;;
  7959                           
  7960     0FA7                     _TMR6_StopTimer:	
  7961                           ;psect for function _TMR6_StopTimer
  7962                           
  7963     0FA7                     i1l2786:	
  7964                           ;incstack = 0
  7965                           ; Regs used in _TMR6_StopTimer: []
  7966                           
  7967                           
  7968                           ;mcc_generated_files/tmr6.c: 96:     T6CONbits.TMR6ON = 0;
  7969     0FA7  0028               	movlb	8	; select bank8
  7970     0FA8  111E               	bcf	30,2	;volatile
  7971     0FA9                     i1l625:
  7972     0FA9  0008               	return
  7973     0FAA                     __end_of_TMR6_StopTimer:
  7974                           
  7975                           	psect	text48
  7976     0626                     __ptext48:	
  7977 ;; *************** function _TMR4_ISR *****************
  7978 ;; Defined at:
  7979 ;;		line 119 in file "mcc_generated_files/tmr4.c"
  7980 ;; Parameters:    Size  Location     Type
  7981 ;;		None
  7982 ;; Auto vars:     Size  Location     Type
  7983 ;;		None
  7984 ;; Return value:  Size  Location     Type
  7985 ;;                  1    wreg      void 
  7986 ;; Registers used:
  7987 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7988 ;; Tracked objects:
  7989 ;;		On entry : 0/0
  7990 ;;		On exit  : 0/0
  7991 ;;		Unchanged: 0/0
  7992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7993 ;;      Params:         0       0       0       0       0       0
  7994 ;;      Locals:         0       0       0       0       0       0
  7995 ;;      Temps:          0       0       0       0       0       0
  7996 ;;      Totals:         0       0       0       0       0       0
  7997 ;;Total ram usage:        0 bytes
  7998 ;; Hardware stack levels used: 1
  7999 ;; Hardware stack levels required when called: 6
  8000 ;; This function calls:
  8001 ;;		_TMR4_CallBack
  8002 ;; This function is called by:
  8003 ;;		_INTERRUPT_InterruptManager
  8004 ;; This function uses a non-reentrant model
  8005 ;;
  8006                           
  8007     0626                     _TMR4_ISR:	
  8008                           ;psect for function _TMR4_ISR
  8009                           
  8010     0626                     i1l3384:	
  8011                           ;incstack = 0
  8012                           ; Regs used in _TMR4_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8013                           
  8014                           
  8015                           ;mcc_generated_files/tmr4.c: 121:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr4.c: 124:     PIR3bits.TMR4IF = 0;
  8016     0626  0020               	movlb	0	; select bank0
  8017     0627  1093               	bcf	19,1	;volatile
  8018     0628                     i1l3386:
  8019                           
  8020                           ;mcc_generated_files/tmr4.c: 127:     if (++CountCallBack >= 100)
  8021     0628  3001               	movlw	1
  8022     0629  07C5               	addwf	TMR4_ISR@CountCallBack,f	;volatile
  8023     062A  3000               	movlw	0
  8024     062B  3DC6               	addwfc	TMR4_ISR@CountCallBack+1,f	;volatile
  8025     062C  3000               	movlw	0
  8026     062D  0246               	subwf	TMR4_ISR@CountCallBack+1,w	;volatile
  8027     062E  3064               	movlw	100
  8028     062F  1903               	skipnz
  8029     0630  0245               	subwf	TMR4_ISR@CountCallBack,w	;volatile
  8030     0631  1C03               	skipc
  8031     0632  2E34               	goto	u193_21
  8032     0633  2E35               	goto	u193_20
  8033     0634                     u193_21:
  8034     0634  2E3B               	goto	i1l694
  8035     0635                     u193_20:
  8036     0635                     i1l3388:
  8037                           
  8038                           ;mcc_generated_files/tmr4.c: 128:     {;mcc_generated_files/tmr4.c: 130:         TMR4_Ca
      +                          llBack();
  8039     0635  3187  274E  3186   	fcall	_TMR4_CallBack
  8040     0638                     i1l3390:
  8041                           
  8042                           ;mcc_generated_files/tmr4.c: 133:         CountCallBack = 0;
  8043     0638  0020               	movlb	0	; select bank0
  8044     0639  01C5               	clrf	TMR4_ISR@CountCallBack	;volatile
  8045     063A  01C6               	clrf	TMR4_ISR@CountCallBack+1	;volatile
  8046     063B                     i1l694:
  8047     063B  0008               	return
  8048     063C                     __end_of_TMR4_ISR:
  8049                           
  8050                           	psect	text49
  8051     074E                     __ptext49:	
  8052 ;; *************** function _TMR4_CallBack *****************
  8053 ;; Defined at:
  8054 ;;		line 137 in file "mcc_generated_files/tmr4.c"
  8055 ;; Parameters:    Size  Location     Type
  8056 ;;		None
  8057 ;; Auto vars:     Size  Location     Type
  8058 ;;		None
  8059 ;; Return value:  Size  Location     Type
  8060 ;;                  1    wreg      void 
  8061 ;; Registers used:
  8062 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8063 ;; Tracked objects:
  8064 ;;		On entry : 0/0
  8065 ;;		On exit  : 0/0
  8066 ;;		Unchanged: 0/0
  8067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8068 ;;      Params:         0       0       0       0       0       0
  8069 ;;      Locals:         0       0       0       0       0       0
  8070 ;;      Temps:          0       0       0       0       0       0
  8071 ;;      Totals:         0       0       0       0       0       0
  8072 ;;Total ram usage:        0 bytes
  8073 ;; Hardware stack levels used: 1
  8074 ;; Hardware stack levels required when called: 5
  8075 ;; This function calls:
  8076 ;;		Absolute function
  8077 ;;		_TMR4_DefaultInterruptHandler
  8078 ;;		_TMR4_Interrupt
  8079 ;; This function is called by:
  8080 ;;		_TMR4_ISR
  8081 ;; This function uses a non-reentrant model
  8082 ;;
  8083                           
  8084     074E                     _TMR4_CallBack:	
  8085                           ;psect for function _TMR4_CallBack
  8086                           
  8087     074E                     i1l3198:	
  8088                           ;incstack = 0
  8089                           ; Regs used in _TMR4_CallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8090                           
  8091                           
  8092                           ;mcc_generated_files/tmr4.c: 141:     if(TMR4_InterruptHandler)
  8093     074E  0020               	movlb	0	; select bank0
  8094     074F  0822               	movf	_TMR4_InterruptHandler,w
  8095     0750  0423               	iorwf	_TMR4_InterruptHandler+1,w
  8096     0751  1903               	btfsc	3,2
  8097     0752  2F54               	goto	u166_21
  8098     0753  2F55               	goto	u166_20
  8099     0754                     u166_21:
  8100     0754  2F5A               	goto	i1l698
  8101     0755                     u166_20:
  8102     0755                     i1l3200:
  8103                           
  8104                           ;mcc_generated_files/tmr4.c: 142:     {;mcc_generated_files/tmr4.c: 143:         TMR4_In
      +                          terruptHandler();
  8105     0755  0823               	movf	_TMR4_InterruptHandler+1,w
  8106     0756  008A               	movwf	10
  8107     0757  0822               	movf	_TMR4_InterruptHandler,w
  8108     0758  000A               	callw
  8109     0759  3187               	pagesel	$
  8110     075A                     i1l698:
  8111     075A  0008               	return
  8112     075B                     __end_of_TMR4_CallBack:
  8113                           
  8114                           	psect	text50
  8115     0002                     __ptext50:	
  8116 ;; *************** function _TMR4_DefaultInterruptHandler *****************
  8117 ;; Defined at:
  8118 ;;		line 151 in file "mcc_generated_files/tmr4.c"
  8119 ;; Parameters:    Size  Location     Type
  8120 ;;		None
  8121 ;; Auto vars:     Size  Location     Type
  8122 ;;		None
  8123 ;; Return value:  Size  Location     Type
  8124 ;;                  1    wreg      void 
  8125 ;; Registers used:
  8126 ;;		None
  8127 ;; Tracked objects:
  8128 ;;		On entry : 0/0
  8129 ;;		On exit  : 0/0
  8130 ;;		Unchanged: 0/0
  8131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8132 ;;      Params:         0       0       0       0       0       0
  8133 ;;      Locals:         0       0       0       0       0       0
  8134 ;;      Temps:          0       0       0       0       0       0
  8135 ;;      Totals:         0       0       0       0       0       0
  8136 ;;Total ram usage:        0 bytes
  8137 ;; Hardware stack levels used: 1
  8138 ;; This function calls:
  8139 ;;		Nothing
  8140 ;; This function is called by:
  8141 ;;		_TMR4_Initialize
  8142 ;;		_TMR4_CallBack
  8143 ;; This function uses a non-reentrant model
  8144 ;;
  8145                           
  8146     0002                     _TMR4_DefaultInterruptHandler:	
  8147                           ;psect for function _TMR4_DefaultInterruptHandler
  8148                           
  8149     0002                     i1l704:	
  8150                           ;incstack = 0
  8151                           ; Regs used in _TMR4_DefaultInterruptHandler: []
  8152                           
  8153     0002  0008               	return
  8154     0003                     __end_of_TMR4_DefaultInterruptHandler:
  8155                           
  8156                           	psect	text51
  8157     06BC                     __ptext51:	
  8158 ;; *************** function _TMR4_Interrupt *****************
  8159 ;; Defined at:
  8160 ;;		line 153 in file "main.c"
  8161 ;; Parameters:    Size  Location     Type
  8162 ;;		None
  8163 ;; Auto vars:     Size  Location     Type
  8164 ;;		None
  8165 ;; Return value:  Size  Location     Type
  8166 ;;                  1    wreg      void 
  8167 ;; Registers used:
  8168 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8169 ;; Tracked objects:
  8170 ;;		On entry : 0/0
  8171 ;;		On exit  : 0/0
  8172 ;;		Unchanged: 0/0
  8173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8174 ;;      Params:         0       0       0       0       0       0
  8175 ;;      Locals:         0       0       0       0       0       0
  8176 ;;      Temps:          0       0       0       0       0       0
  8177 ;;      Totals:         0       0       0       0       0       0
  8178 ;;Total ram usage:        0 bytes
  8179 ;; Hardware stack levels used: 1
  8180 ;; Hardware stack levels required when called: 4
  8181 ;; This function calls:
  8182 ;;		_TMR4_StopTimer
  8183 ;;		_TMR4_WriteTimer
  8184 ;;		i1_updateMatrix
  8185 ;;		i1_updateMotor
  8186 ;; This function is called by:
  8187 ;;		_main
  8188 ;;		_TMR4_CallBack
  8189 ;; This function uses a non-reentrant model
  8190 ;;
  8191                           
  8192     06BC                     _TMR4_Interrupt:	
  8193                           ;psect for function _TMR4_Interrupt
  8194                           
  8195     06BC                     i1l2902:	
  8196                           ;incstack = 0
  8197                           ; Regs used in _TMR4_Interrupt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8198                           
  8199                           
  8200                           ;main.c: 154:     TMR4_StopTimer();
  8201     06BC  318F  27A4  3186   	fcall	_TMR4_StopTimer
  8202     06BF                     i1l2904:
  8203                           
  8204                           ;main.c: 155:     TMR4_WriteTimer(0);
  8205     06BF  3000               	movlw	0
  8206     06C0  318F  27BD  3186   	fcall	_TMR4_WriteTimer
  8207     06C3                     i1l2906:
  8208                           
  8209                           ;main.c: 156:     directionFlag = 0;
  8210     06C3  0020               	movlb	0	; select bank0
  8211     06C4  01CC               	clrf	_directionFlag
  8212     06C5                     i1l2908:
  8213                           
  8214                           ;main.c: 157:     updateMotor();
  8215     06C5  3183  23D7  3186   	fcall	i1_updateMotor
  8216     06C8                     i1l2910:
  8217                           
  8218                           ;main.c: 158:     updateMatrix();
  8219     06C8  3184  24A3  3186   	fcall	i1_updateMatrix
  8220     06CB                     i1l852:
  8221     06CB  0008               	return
  8222     06CC                     __end_of_TMR4_Interrupt:
  8223                           
  8224                           	psect	text52
  8225     0FBD                     __ptext52:	
  8226 ;; *************** function _TMR4_WriteTimer *****************
  8227 ;; Defined at:
  8228 ;;		line 108 in file "mcc_generated_files/tmr4.c"
  8229 ;; Parameters:    Size  Location     Type
  8230 ;;  timerVal        1    wreg     unsigned char 
  8231 ;; Auto vars:     Size  Location     Type
  8232 ;;  timerVal        1    0[COMMON] unsigned char 
  8233 ;; Return value:  Size  Location     Type
  8234 ;;                  1    wreg      void 
  8235 ;; Registers used:
  8236 ;;		wreg
  8237 ;; Tracked objects:
  8238 ;;		On entry : 0/0
  8239 ;;		On exit  : 0/0
  8240 ;;		Unchanged: 0/0
  8241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8242 ;;      Params:         0       0       0       0       0       0
  8243 ;;      Locals:         1       0       0       0       0       0
  8244 ;;      Temps:          0       0       0       0       0       0
  8245 ;;      Totals:         1       0       0       0       0       0
  8246 ;;Total ram usage:        1 bytes
  8247 ;; Hardware stack levels used: 1
  8248 ;; This function calls:
  8249 ;;		Nothing
  8250 ;; This function is called by:
  8251 ;;		_TMR4_Interrupt
  8252 ;; This function uses a non-reentrant model
  8253 ;;
  8254                           
  8255     0FBD                     _TMR4_WriteTimer:	
  8256                           ;psect for function _TMR4_WriteTimer
  8257                           
  8258                           
  8259                           ;incstack = 0
  8260                           ; Regs used in _TMR4_WriteTimer: [wreg]
  8261                           ;TMR4_WriteTimer@timerVal stored from wreg
  8262     0FBD  00F0               	movwf	TMR4_WriteTimer@timerVal
  8263     0FBE                     i1l2792:
  8264                           
  8265                           ;mcc_generated_files/tmr4.c: 108: void TMR4_WriteTimer(uint8_t timerVal);mcc_generated_f
      +                          iles/tmr4.c: 109: {;mcc_generated_files/tmr4.c: 111:     TMR4 = timerVal;
  8266     0FBE  0870               	movf	TMR4_WriteTimer@timerVal,w
  8267     0FBF  0028               	movlb	8	; select bank8
  8268     0FC0  0095               	movwf	21	;volatile
  8269     0FC1                     i1l685:
  8270     0FC1  0008               	return
  8271     0FC2                     __end_of_TMR4_WriteTimer:
  8272                           
  8273                           	psect	text53
  8274     0FA4                     __ptext53:	
  8275 ;; *************** function _TMR4_StopTimer *****************
  8276 ;; Defined at:
  8277 ;;		line 93 in file "mcc_generated_files/tmr4.c"
  8278 ;; Parameters:    Size  Location     Type
  8279 ;;		None
  8280 ;; Auto vars:     Size  Location     Type
  8281 ;;		None
  8282 ;; Return value:  Size  Location     Type
  8283 ;;                  1    wreg      void 
  8284 ;; Registers used:
  8285 ;;		None
  8286 ;; Tracked objects:
  8287 ;;		On entry : 0/0
  8288 ;;		On exit  : 0/0
  8289 ;;		Unchanged: 0/0
  8290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8291 ;;      Params:         0       0       0       0       0       0
  8292 ;;      Locals:         0       0       0       0       0       0
  8293 ;;      Temps:          0       0       0       0       0       0
  8294 ;;      Totals:         0       0       0       0       0       0
  8295 ;;Total ram usage:        0 bytes
  8296 ;; Hardware stack levels used: 1
  8297 ;; This function calls:
  8298 ;;		Nothing
  8299 ;; This function is called by:
  8300 ;;		_TMR4_Interrupt
  8301 ;; This function uses a non-reentrant model
  8302 ;;
  8303                           
  8304     0FA4                     _TMR4_StopTimer:	
  8305                           ;psect for function _TMR4_StopTimer
  8306                           
  8307     0FA4                     i1l2790:	
  8308                           ;incstack = 0
  8309                           ; Regs used in _TMR4_StopTimer: []
  8310                           
  8311                           
  8312                           ;mcc_generated_files/tmr4.c: 96:     T4CONbits.TMR4ON = 0;
  8313     0FA4  0028               	movlb	8	; select bank8
  8314     0FA5  1117               	bcf	23,2	;volatile
  8315     0FA6                     i1l679:
  8316     0FA6  0008               	return
  8317     0FA7                     __end_of_TMR4_StopTimer:
  8318                           
  8319                           	psect	text54
  8320     06CC                     __ptext54:	
  8321 ;; *************** function _TMR0_ISR *****************
  8322 ;; Defined at:
  8323 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  8324 ;; Parameters:    Size  Location     Type
  8325 ;;		None
  8326 ;; Auto vars:     Size  Location     Type
  8327 ;;		None
  8328 ;; Return value:  Size  Location     Type
  8329 ;;                  1    wreg      void 
  8330 ;; Registers used:
  8331 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8332 ;; Tracked objects:
  8333 ;;		On entry : 0/0
  8334 ;;		On exit  : 0/0
  8335 ;;		Unchanged: 0/0
  8336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8337 ;;      Params:         0       0       0       0       0       0
  8338 ;;      Locals:         0       0       0       0       0       0
  8339 ;;      Temps:          0       0       0       0       0       0
  8340 ;;      Totals:         0       0       0       0       0       0
  8341 ;;Total ram usage:        0 bytes
  8342 ;; Hardware stack levels used: 1
  8343 ;; Hardware stack levels required when called: 2
  8344 ;; This function calls:
  8345 ;;		Absolute function
  8346 ;;		_TMR0_DefaultInterruptHandler
  8347 ;;		_TMR0_Interrupt
  8348 ;; This function is called by:
  8349 ;;		_INTERRUPT_InterruptManager
  8350 ;; This function uses a non-reentrant model
  8351 ;;
  8352                           
  8353     06CC                     _TMR0_ISR:	
  8354                           ;psect for function _TMR0_ISR
  8355                           
  8356     06CC                     i1l3376:	
  8357                           ;incstack = 0
  8358                           ; Regs used in _TMR0_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8359                           
  8360                           
  8361                           ;mcc_generated_files/tmr0.c: 112:     INTCONbits.TMR0IF = 0;
  8362     06CC  110B               	bcf	11,2	;volatile
  8363     06CD                     i1l3378:
  8364                           
  8365                           ;mcc_generated_files/tmr0.c: 114:     TMR0 = timer0ReloadVal;
  8366     06CD  0020               	movlb	0	; select bank0
  8367     06CE  0838               	movf	_timer0ReloadVal,w	;volatile
  8368     06CF  0095               	movwf	21	;volatile
  8369     06D0                     i1l3380:
  8370                           
  8371                           ;mcc_generated_files/tmr0.c: 116:     if(TMR0_InterruptHandler)
  8372     06D0  0828               	movf	_TMR0_InterruptHandler,w
  8373     06D1  0429               	iorwf	_TMR0_InterruptHandler+1,w
  8374     06D2  1903               	btfsc	3,2
  8375     06D3  2ED5               	goto	u192_21
  8376     06D4  2ED6               	goto	u192_20
  8377     06D5                     u192_21:
  8378     06D5  2EDB               	goto	i1l464
  8379     06D6                     u192_20:
  8380     06D6                     i1l3382:
  8381                           
  8382                           ;mcc_generated_files/tmr0.c: 117:     {;mcc_generated_files/tmr0.c: 118:         TMR0_In
      +                          terruptHandler();
  8383     06D6  0829               	movf	_TMR0_InterruptHandler+1,w
  8384     06D7  008A               	movwf	10
  8385     06D8  0828               	movf	_TMR0_InterruptHandler,w
  8386     06D9  000A               	callw
  8387     06DA  3186               	pagesel	$
  8388     06DB                     i1l464:
  8389     06DB  0008               	return
  8390     06DC                     __end_of_TMR0_ISR:
  8391                           
  8392                           	psect	text55
  8393     0F9D                     __ptext55:	
  8394 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  8395 ;; Defined at:
  8396 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  8397 ;; Parameters:    Size  Location     Type
  8398 ;;		None
  8399 ;; Auto vars:     Size  Location     Type
  8400 ;;		None
  8401 ;; Return value:  Size  Location     Type
  8402 ;;                  1    wreg      void 
  8403 ;; Registers used:
  8404 ;;		None
  8405 ;; Tracked objects:
  8406 ;;		On entry : 0/0
  8407 ;;		On exit  : 0/0
  8408 ;;		Unchanged: 0/0
  8409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8410 ;;      Params:         0       0       0       0       0       0
  8411 ;;      Locals:         0       0       0       0       0       0
  8412 ;;      Temps:          0       0       0       0       0       0
  8413 ;;      Totals:         0       0       0       0       0       0
  8414 ;;Total ram usage:        0 bytes
  8415 ;; Hardware stack levels used: 1
  8416 ;; This function calls:
  8417 ;;		Nothing
  8418 ;; This function is called by:
  8419 ;;		_TMR0_Initialize
  8420 ;;		_TMR0_ISR
  8421 ;; This function uses a non-reentrant model
  8422 ;;
  8423                           
  8424     0F9D                     _TMR0_DefaultInterruptHandler:	
  8425                           ;psect for function _TMR0_DefaultInterruptHandler
  8426                           
  8427     0F9D                     i1l470:	
  8428                           ;incstack = 0
  8429                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  8430                           
  8431     0F9D  0008               	return
  8432     0F9E                     __end_of_TMR0_DefaultInterruptHandler:
  8433                           
  8434                           	psect	text56
  8435     008C                     __ptext56:	
  8436 ;; *************** function _TMR0_Interrupt *****************
  8437 ;; Defined at:
  8438 ;;		line 120 in file "main.c"
  8439 ;; Parameters:    Size  Location     Type
  8440 ;;		None
  8441 ;; Auto vars:     Size  Location     Type
  8442 ;;  i               2   10[BANK0 ] int 
  8443 ;;  i               2    8[BANK0 ] int 
  8444 ;;  t               4   12[BANK0 ] unsigned long 
  8445 ;;  v               4    4[BANK0 ] unsigned long 
  8446 ;;  p               2   16[BANK0 ] unsigned short 
  8447 ;; Return value:  Size  Location     Type
  8448 ;;                  1    wreg      void 
  8449 ;; Registers used:
  8450 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8451 ;; Tracked objects:
  8452 ;;		On entry : 0/0
  8453 ;;		On exit  : 0/0
  8454 ;;		Unchanged: 0/0
  8455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8456 ;;      Params:         0       0       0       0       0       0
  8457 ;;      Locals:         0      14       0       0       0       0
  8458 ;;      Temps:          0       4       0       0       0       0
  8459 ;;      Totals:         0      18       0       0       0       0
  8460 ;;Total ram usage:       18 bytes
  8461 ;; Hardware stack levels used: 1
  8462 ;; Hardware stack levels required when called: 1
  8463 ;; This function calls:
  8464 ;;		_ADC_GetConversion
  8465 ;;		_EUSART_Write
  8466 ;;		_EUSART_is_tx_ready
  8467 ;;		___lldiv
  8468 ;;		___lwdiv
  8469 ;;		___wmul
  8470 ;; This function is called by:
  8471 ;;		_main
  8472 ;;		_TMR0_ISR
  8473 ;; This function uses a non-reentrant model
  8474 ;;
  8475                           
  8476     008C                     _TMR0_Interrupt:	
  8477                           ;psect for function _TMR0_Interrupt
  8478                           
  8479     008C                     i1l3260:	
  8480                           ;incstack = 0
  8481                           ; Regs used in _TMR0_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8482                           
  8483                           
  8484                           ;main.c: 123:     uint16_t p = position;
  8485     008C  0020               	movlb	0	; select bank0
  8486     008D  0862               	movf	_position,w
  8487     008E  00D0               	movwf	??_TMR0_Interrupt
  8488     008F  01D1               	clrf	??_TMR0_Interrupt+1
  8489     0090  0850               	movf	??_TMR0_Interrupt,w
  8490     0091  00E0               	movwf	TMR0_Interrupt@p
  8491     0092  0851               	movf	??_TMR0_Interrupt+1,w
  8492     0093  00E1               	movwf	TMR0_Interrupt@p+1
  8493     0094                     i1l3262:
  8494                           
  8495                           ;main.c: 124:     p *= 180;
  8496     0094  30B4               	movlw	180
  8497     0095  00F0               	movwf	___wmul@multiplier
  8498     0096  3000               	movlw	0
  8499     0097  00F1               	movwf	___wmul@multiplier+1
  8500     0098  0861               	movf	TMR0_Interrupt@p+1,w
  8501     0099  00F3               	movwf	___wmul@multiplicand+1
  8502     009A  0860               	movf	TMR0_Interrupt@p,w
  8503     009B  00F2               	movwf	___wmul@multiplicand
  8504     009C  3184  24C7  3180   	fcall	___wmul
  8505     009F  0871               	movf	?___wmul+1,w
  8506     00A0  0020               	movlb	0	; select bank0
  8507     00A1  00E1               	movwf	TMR0_Interrupt@p+1
  8508     00A2  0870               	movf	?___wmul,w
  8509     00A3  00E0               	movwf	TMR0_Interrupt@p
  8510     00A4                     i1l3264:
  8511                           
  8512                           ;main.c: 125:     p /= 215;
  8513     00A4  30D7               	movlw	215
  8514     00A5  00F0               	movwf	___lwdiv@divisor
  8515     00A6  3000               	movlw	0
  8516     00A7  00F1               	movwf	___lwdiv@divisor+1
  8517     00A8  0861               	movf	TMR0_Interrupt@p+1,w
  8518     00A9  00F3               	movwf	___lwdiv@dividend+1
  8519     00AA  0860               	movf	TMR0_Interrupt@p,w
  8520     00AB  00F2               	movwf	___lwdiv@dividend
  8521     00AC  3182  22D9  3180   	fcall	___lwdiv
  8522     00AF  0871               	movf	?___lwdiv+1,w
  8523     00B0  0020               	movlb	0	; select bank0
  8524     00B1  00E1               	movwf	TMR0_Interrupt@p+1
  8525     00B2  0870               	movf	?___lwdiv,w
  8526     00B3  00E0               	movwf	TMR0_Interrupt@p
  8527                           
  8528                           ;main.c: 129:     uint32_t v = 0;
  8529     00B4  3000               	movlw	0
  8530     00B5  00D7               	movwf	TMR0_Interrupt@v+3
  8531     00B6  3000               	movlw	0
  8532     00B7  00D6               	movwf	TMR0_Interrupt@v+2
  8533     00B8  3000               	movlw	0
  8534     00B9  00D5               	movwf	TMR0_Interrupt@v+1
  8535     00BA  3000               	movlw	0
  8536     00BB  00D4               	movwf	TMR0_Interrupt@v
  8537     00BC                     i1l3266:
  8538                           
  8539                           ;main.c: 130:     for(int i = 0; i < 16; i++){
  8540     00BC  01D8               	clrf	TMR0_Interrupt@i
  8541     00BD  01D9               	clrf	TMR0_Interrupt@i+1
  8542     00BE                     i1l3272:
  8543                           
  8544                           ;main.c: 131:         v += velocity[i];
  8545     00BE  0020               	movlb	0	; select bank0
  8546     00BF  0858               	movf	TMR0_Interrupt@i,w
  8547     00C0  3EA0               	addlw	(low (_velocity| 0))& (0+255)
  8548     00C1  0086               	movwf	6
  8549     00C2  0187               	clrf	7
  8550     00C3  0801               	movf	1,w
  8551     00C4  00D0               	movwf	??_TMR0_Interrupt
  8552     00C5  01D1               	clrf	??_TMR0_Interrupt+1
  8553     00C6  01D2               	clrf	??_TMR0_Interrupt+2
  8554     00C7  01D3               	clrf	??_TMR0_Interrupt+3
  8555     00C8  0850               	movf	??_TMR0_Interrupt,w
  8556     00C9  07D4               	addwf	TMR0_Interrupt@v,f
  8557     00CA  0851               	movf	??_TMR0_Interrupt+1,w
  8558     00CB  3DD5               	addwfc	TMR0_Interrupt@v+1,f
  8559     00CC  0852               	movf	??_TMR0_Interrupt+2,w
  8560     00CD  3DD6               	addwfc	TMR0_Interrupt@v+2,f
  8561     00CE  0853               	movf	??_TMR0_Interrupt+3,w
  8562     00CF  3DD7               	addwfc	TMR0_Interrupt@v+3,f
  8563     00D0                     i1l3274:
  8564                           
  8565                           ;main.c: 132:     }
  8566     00D0  3001               	movlw	1
  8567     00D1  07D8               	addwf	TMR0_Interrupt@i,f
  8568     00D2  3000               	movlw	0
  8569     00D3  3DD9               	addwfc	TMR0_Interrupt@i+1,f
  8570     00D4                     i1l3276:
  8571     00D4  0859               	movf	TMR0_Interrupt@i+1,w
  8572     00D5  3A80               	xorlw	128
  8573     00D6  00D0               	movwf	??_TMR0_Interrupt
  8574     00D7  3080               	movlw	128
  8575     00D8  0250               	subwf	??_TMR0_Interrupt,w
  8576     00D9  1D03               	skipz
  8577     00DA  28DD               	goto	u174_25
  8578     00DB  3010               	movlw	16
  8579     00DC  0258               	subwf	TMR0_Interrupt@i,w
  8580     00DD                     u174_25:
  8581     00DD  1C03               	skipc
  8582     00DE  28E0               	goto	u174_21
  8583     00DF  28E1               	goto	u174_20
  8584     00E0                     u174_21:
  8585     00E0  28BE               	goto	i1l3272
  8586     00E1                     u174_20:
  8587     00E1                     i1l3278:
  8588                           
  8589                           ;main.c: 133:     v = v>>4;
  8590     00E1  0020               	movlb	0	; select bank0
  8591     00E2  0854               	movf	TMR0_Interrupt@v,w
  8592     00E3  00D0               	movwf	??_TMR0_Interrupt
  8593     00E4  0855               	movf	TMR0_Interrupt@v+1,w
  8594     00E5  00D1               	movwf	??_TMR0_Interrupt+1
  8595     00E6  0856               	movf	TMR0_Interrupt@v+2,w
  8596     00E7  00D2               	movwf	??_TMR0_Interrupt+2
  8597     00E8  0857               	movf	TMR0_Interrupt@v+3,w
  8598     00E9  00D3               	movwf	??_TMR0_Interrupt+3
  8599     00EA  3004               	movlw	4
  8600     00EB                     u175_25:
  8601     00EB  36D3               	lsrf	??_TMR0_Interrupt+3,f
  8602     00EC  0CD2               	rrf	??_TMR0_Interrupt+2,f
  8603     00ED  0CD1               	rrf	??_TMR0_Interrupt+1,f
  8604     00EE  0CD0               	rrf	??_TMR0_Interrupt,f
  8605     00EF                     u175_20:
  8606     00EF  0B89               	decfsz	9,f
  8607     00F0  28EB               	goto	u175_25
  8608     00F1  0853               	movf	??_TMR0_Interrupt+3,w
  8609     00F2  00D7               	movwf	TMR0_Interrupt@v+3
  8610     00F3  0852               	movf	??_TMR0_Interrupt+2,w
  8611     00F4  00D6               	movwf	TMR0_Interrupt@v+2
  8612     00F5  0851               	movf	??_TMR0_Interrupt+1,w
  8613     00F6  00D5               	movwf	TMR0_Interrupt@v+1
  8614     00F7  0850               	movf	??_TMR0_Interrupt,w
  8615     00F8  00D4               	movwf	TMR0_Interrupt@v
  8616     00F9                     i1l3280:
  8617                           
  8618                           ;main.c: 137:     uint32_t t = ADC_GetConversion(channel_AN2);
  8619     00F9  3002               	movlw	2
  8620     00FA  3185  258F  3180   	fcall	_ADC_GetConversion
  8621     00FD  0870               	movf	?_ADC_GetConversion,w
  8622     00FE  0020               	movlb	0	; select bank0
  8623     00FF  00DC               	movwf	TMR0_Interrupt@t
  8624     0100  0871               	movf	?_ADC_GetConversion+1,w
  8625     0101  00DD               	movwf	TMR0_Interrupt@t+1
  8626     0102  01DE               	clrf	TMR0_Interrupt@t+2
  8627     0103  01DF               	clrf	TMR0_Interrupt@t+3
  8628     0104                     i1l3282:
  8629                           
  8630                           ;main.c: 138:     t = t<<12;
  8631     0104  085C               	movf	TMR0_Interrupt@t,w
  8632     0105  00D0               	movwf	??_TMR0_Interrupt
  8633     0106  085D               	movf	TMR0_Interrupt@t+1,w
  8634     0107  00D1               	movwf	??_TMR0_Interrupt+1
  8635     0108  085E               	movf	TMR0_Interrupt@t+2,w
  8636     0109  00D2               	movwf	??_TMR0_Interrupt+2
  8637     010A  085F               	movf	TMR0_Interrupt@t+3,w
  8638     010B  00D3               	movwf	??_TMR0_Interrupt+3
  8639     010C  300C               	movlw	12
  8640     010D                     u176_25:
  8641     010D  35D0               	lslf	??_TMR0_Interrupt,f
  8642     010E  0DD1               	rlf	??_TMR0_Interrupt+1,f
  8643     010F  0DD2               	rlf	??_TMR0_Interrupt+2,f
  8644     0110  0DD3               	rlf	??_TMR0_Interrupt+3,f
  8645     0111                     u176_20:
  8646     0111  0B89               	decfsz	9,f
  8647     0112  290D               	goto	u176_25
  8648     0113  0853               	movf	??_TMR0_Interrupt+3,w
  8649     0114  00DF               	movwf	TMR0_Interrupt@t+3
  8650     0115  0852               	movf	??_TMR0_Interrupt+2,w
  8651     0116  00DE               	movwf	TMR0_Interrupt@t+2
  8652     0117  0851               	movf	??_TMR0_Interrupt+1,w
  8653     0118  00DD               	movwf	TMR0_Interrupt@t+1
  8654     0119  0850               	movf	??_TMR0_Interrupt,w
  8655     011A  00DC               	movwf	TMR0_Interrupt@t
  8656                           
  8657                           ;main.c: 139:     t /= 10230;
  8658     011B  3000               	movlw	0
  8659     011C  00F3               	movwf	___lldiv@divisor+3
  8660     011D  3000               	movlw	0
  8661     011E  00F2               	movwf	___lldiv@divisor+2
  8662     011F  3027               	movlw	39
  8663     0120  00F1               	movwf	___lldiv@divisor+1
  8664     0121  30F6               	movlw	246
  8665     0122  00F0               	movwf	___lldiv@divisor
  8666     0123  085F               	movf	TMR0_Interrupt@t+3,w
  8667     0124  00F7               	movwf	___lldiv@dividend+3
  8668     0125  085E               	movf	TMR0_Interrupt@t+2,w
  8669     0126  00F6               	movwf	___lldiv@dividend+2
  8670     0127  085D               	movf	TMR0_Interrupt@t+1,w
  8671     0128  00F5               	movwf	___lldiv@dividend+1
  8672     0129  085C               	movf	TMR0_Interrupt@t,w
  8673     012A  00F4               	movwf	___lldiv@dividend
  8674     012B  3181  21FA  3180   	fcall	___lldiv
  8675     012E  0873               	movf	?___lldiv+3,w
  8676     012F  0020               	movlb	0	; select bank0
  8677     0130  00DF               	movwf	TMR0_Interrupt@t+3
  8678     0131  0872               	movf	?___lldiv+2,w
  8679     0132  00DE               	movwf	TMR0_Interrupt@t+2
  8680     0133  0871               	movf	?___lldiv+1,w
  8681     0134  00DD               	movwf	TMR0_Interrupt@t+1
  8682     0135  0870               	movf	?___lldiv,w
  8683     0136  00DC               	movwf	TMR0_Interrupt@t
  8684     0137                     i1l3284:
  8685                           
  8686                           ;main.c: 141:     data_tx[0] = (0x80 | ((motorState<<4) | (currentFloor-1))) & 0xB3;
  8687     0137  084F               	movf	_motorState,w
  8688     0138  00D0               	movwf	??_TMR0_Interrupt
  8689     0139  3004               	movlw	4
  8690     013A                     u177_25:
  8691     013A  35D0               	lslf	??_TMR0_Interrupt,f
  8692     013B  0B89               	decfsz	9,f
  8693     013C  293A               	goto	u177_25
  8694     013D  0864               	movf	_currentFloor,w
  8695     013E  3EFF               	addlw	255
  8696     013F  0450               	iorwf	??_TMR0_Interrupt,w
  8697     0140  3880               	iorlw	128
  8698     0141  39B3               	andlw	179
  8699     0142  00C1               	movwf	_data_tx
  8700     0143                     i1l3286:
  8701                           
  8702                           ;main.c: 142:     data_tx[1] = (p>>1) & 0x7F;
  8703     0143  0861               	movf	TMR0_Interrupt@p+1,w
  8704     0144  00D1               	movwf	??_TMR0_Interrupt+1
  8705     0145  0860               	movf	TMR0_Interrupt@p,w
  8706     0146  00D0               	movwf	??_TMR0_Interrupt
  8707     0147  36D1               	lsrf	??_TMR0_Interrupt+1,f
  8708     0148  0CD0               	rrf	??_TMR0_Interrupt,f
  8709     0149  0850               	movf	??_TMR0_Interrupt,w
  8710     014A  397F               	andlw	127
  8711     014B  00C2               	movwf	_data_tx+1
  8712     014C                     i1l3288:
  8713                           
  8714                           ;main.c: 143:     data_tx[2] = (v<<2) & 0x7F;
  8715     014C  0854               	movf	TMR0_Interrupt@v,w
  8716     014D  00D0               	movwf	??_TMR0_Interrupt
  8717     014E  3001               	movlw	1
  8718     014F                     u178_25:
  8719     014F  35D0               	lslf	??_TMR0_Interrupt,f
  8720     0150  3EFF               	addlw	-1
  8721     0151  1D03               	skipz
  8722     0152  294F               	goto	u178_25
  8723     0153  3550               	lslf	??_TMR0_Interrupt,w
  8724     0154  397F               	andlw	127
  8725     0155  00C3               	movwf	_data_tx+2
  8726     0156                     i1l3290:
  8727                           
  8728                           ;main.c: 144:     data_tx[3] = t<<1 & 0x7F;
  8729     0156  355C               	lslf	TMR0_Interrupt@t,w
  8730     0157  397F               	andlw	127
  8731     0158  00C4               	movwf	_data_tx+3
  8732     0159                     i1l3292:
  8733                           
  8734                           ;main.c: 146:     if(EUSART_is_tx_ready()){
  8735     0159  3186  26EB  3180   	fcall	_EUSART_is_tx_ready
  8736     015C  3A00               	xorlw	0
  8737     015D  1903               	skipnz
  8738     015E  2960               	goto	u179_21
  8739     015F  2961               	goto	u179_20
  8740     0160                     u179_21:
  8741     0160  297F               	goto	i1l849
  8742     0161                     u179_20:
  8743     0161                     i1l3294:
  8744                           
  8745                           ;main.c: 147:         for(int i = 0; i<4; i++){
  8746     0161  0020               	movlb	0	; select bank0
  8747     0162  01DA               	clrf	TMR0_Interrupt@i_1680
  8748     0163  01DB               	clrf	TMR0_Interrupt@i_1680+1
  8749     0164                     i1l3300:
  8750                           
  8751                           ;main.c: 148:             EUSART_Write(data_tx[i]);
  8752     0164  0020               	movlb	0	; select bank0
  8753     0165  085A               	movf	TMR0_Interrupt@i_1680,w
  8754     0166  3E41               	addlw	(low (_data_tx| 0))& (0+255)
  8755     0167  0086               	movwf	6
  8756     0168  0187               	clrf	7
  8757     0169  0801               	movf	1,w
  8758     016A  3187  2795  3180   	fcall	_EUSART_Write
  8759     016D                     i1l3302:
  8760                           
  8761                           ;main.c: 149:         }
  8762     016D  3001               	movlw	1
  8763     016E  0020               	movlb	0	; select bank0
  8764     016F  07DA               	addwf	TMR0_Interrupt@i_1680,f
  8765     0170  3000               	movlw	0
  8766     0171  3DDB               	addwfc	TMR0_Interrupt@i_1680+1,f
  8767     0172                     i1l3304:
  8768     0172  085B               	movf	TMR0_Interrupt@i_1680+1,w
  8769     0173  3A80               	xorlw	128
  8770     0174  00D0               	movwf	??_TMR0_Interrupt
  8771     0175  3080               	movlw	128
  8772     0176  0250               	subwf	??_TMR0_Interrupt,w
  8773     0177  1D03               	skipz
  8774     0178  297B               	goto	u180_25
  8775     0179  3004               	movlw	4
  8776     017A  025A               	subwf	TMR0_Interrupt@i_1680,w
  8777     017B                     u180_25:
  8778     017B  1C03               	skipc
  8779     017C  297E               	goto	u180_21
  8780     017D  297F               	goto	u180_20
  8781     017E                     u180_21:
  8782     017E  2964               	goto	i1l3300
  8783     017F                     u180_20:
  8784     017F                     i1l849:
  8785     017F  0008               	return
  8786     0180                     __end_of_TMR0_Interrupt:
  8787                           
  8788                           	psect	text57
  8789     04C7                     __ptext57:	
  8790 ;; *************** function ___wmul *****************
  8791 ;; Defined at:
  8792 ;;		line 15 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  8793 ;; Parameters:    Size  Location     Type
  8794 ;;  multiplier      2    0[COMMON] unsigned int 
  8795 ;;  multiplicand    2    2[COMMON] unsigned int 
  8796 ;; Auto vars:     Size  Location     Type
  8797 ;;  product         2    4[COMMON] unsigned int 
  8798 ;; Return value:  Size  Location     Type
  8799 ;;                  2    0[COMMON] unsigned int 
  8800 ;; Registers used:
  8801 ;;		wreg, status,2, status,0
  8802 ;; Tracked objects:
  8803 ;;		On entry : 0/0
  8804 ;;		On exit  : 0/0
  8805 ;;		Unchanged: 0/0
  8806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8807 ;;      Params:         4       0       0       0       0       0
  8808 ;;      Locals:         2       0       0       0       0       0
  8809 ;;      Temps:          0       0       0       0       0       0
  8810 ;;      Totals:         6       0       0       0       0       0
  8811 ;;Total ram usage:        6 bytes
  8812 ;; Hardware stack levels used: 1
  8813 ;; This function calls:
  8814 ;;		Nothing
  8815 ;; This function is called by:
  8816 ;;		_TMR0_Interrupt
  8817 ;; This function uses a non-reentrant model
  8818 ;;
  8819                           
  8820     04C7                     ___wmul:	
  8821                           ;psect for function ___wmul
  8822                           
  8823     04C7                     i1l2956:	
  8824                           ;incstack = 0
  8825                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8826                           
  8827     04C7  01F4               	clrf	___wmul@product
  8828     04C8  01F5               	clrf	___wmul@product+1
  8829     04C9                     i1l2958:
  8830     04C9  1C70               	btfss	___wmul@multiplier,0
  8831     04CA  2CCC               	goto	u145_21
  8832     04CB  2CCD               	goto	u145_20
  8833     04CC                     u145_21:
  8834     04CC  2CD1               	goto	i1l1080
  8835     04CD                     u145_20:
  8836     04CD                     i1l2960:
  8837     04CD  0872               	movf	___wmul@multiplicand,w
  8838     04CE  07F4               	addwf	___wmul@product,f
  8839     04CF  0873               	movf	___wmul@multiplicand+1,w
  8840     04D0  3DF5               	addwfc	___wmul@product+1,f
  8841     04D1                     i1l1080:
  8842     04D1  3001               	movlw	1
  8843     04D2                     u146_25:
  8844     04D2  35F2               	lslf	___wmul@multiplicand,f
  8845     04D3  0DF3               	rlf	___wmul@multiplicand+1,f
  8846     04D4  0B89               	decfsz	9,f
  8847     04D5  2CD2               	goto	u146_25
  8848     04D6                     i1l2962:
  8849     04D6  3001               	movlw	1
  8850     04D7                     u147_25:
  8851     04D7  36F1               	lsrf	___wmul@multiplier+1,f
  8852     04D8  0CF0               	rrf	___wmul@multiplier,f
  8853     04D9  0B89               	decfsz	9,f
  8854     04DA  2CD7               	goto	u147_25
  8855     04DB                     i1l2964:
  8856     04DB  0870               	movf	___wmul@multiplier,w
  8857     04DC  0471               	iorwf	___wmul@multiplier+1,w
  8858     04DD  1D03               	btfss	3,2
  8859     04DE  2CE0               	goto	u148_21
  8860     04DF  2CE1               	goto	u148_20
  8861     04E0                     u148_21:
  8862     04E0  2CC9               	goto	i1l2958
  8863     04E1                     u148_20:
  8864     04E1                     i1l2966:
  8865     04E1  0875               	movf	___wmul@product+1,w
  8866     04E2  00F1               	movwf	?___wmul+1
  8867     04E3  0874               	movf	___wmul@product,w
  8868     04E4  00F0               	movwf	?___wmul
  8869     04E5                     i1l1082:
  8870     04E5  0008               	return
  8871     04E6                     __end_of___wmul:
  8872                           
  8873                           	psect	text58
  8874     02D9                     __ptext58:	
  8875 ;; *************** function ___lwdiv *****************
  8876 ;; Defined at:
  8877 ;;		line 5 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  8878 ;; Parameters:    Size  Location     Type
  8879 ;;  divisor         2    0[COMMON] unsigned int 
  8880 ;;  dividend        2    2[COMMON] unsigned int 
  8881 ;; Auto vars:     Size  Location     Type
  8882 ;;  quotient        2    5[COMMON] unsigned int 
  8883 ;;  counter         1    7[COMMON] unsigned char 
  8884 ;; Return value:  Size  Location     Type
  8885 ;;                  2    0[COMMON] unsigned int 
  8886 ;; Registers used:
  8887 ;;		wreg, status,2, status,0
  8888 ;; Tracked objects:
  8889 ;;		On entry : 0/0
  8890 ;;		On exit  : 0/0
  8891 ;;		Unchanged: 0/0
  8892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8893 ;;      Params:         4       0       0       0       0       0
  8894 ;;      Locals:         3       0       0       0       0       0
  8895 ;;      Temps:          1       0       0       0       0       0
  8896 ;;      Totals:         8       0       0       0       0       0
  8897 ;;Total ram usage:        8 bytes
  8898 ;; Hardware stack levels used: 1
  8899 ;; This function calls:
  8900 ;;		Nothing
  8901 ;; This function is called by:
  8902 ;;		_TMR0_Interrupt
  8903 ;; This function uses a non-reentrant model
  8904 ;;
  8905                           
  8906     02D9                     ___lwdiv:	
  8907                           ;psect for function ___lwdiv
  8908                           
  8909     02D9                     i1l2994:	
  8910                           ;incstack = 0
  8911                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  8912                           
  8913     02D9  01F5               	clrf	___lwdiv@quotient
  8914     02DA  01F6               	clrf	___lwdiv@quotient+1
  8915     02DB                     i1l2996:
  8916     02DB  0870               	movf	___lwdiv@divisor,w
  8917     02DC  0471               	iorwf	___lwdiv@divisor+1,w
  8918     02DD  1903               	btfsc	3,2
  8919     02DE  2AE0               	goto	u156_21
  8920     02DF  2AE1               	goto	u156_20
  8921     02E0                     u156_21:
  8922     02E0  2B10               	goto	i1l3016
  8923     02E1                     u156_20:
  8924     02E1                     i1l2998:
  8925     02E1  01F7               	clrf	___lwdiv@counter
  8926     02E2  0AF7               	incf	___lwdiv@counter,f
  8927     02E3  2AED               	goto	i1l3004
  8928     02E4                     i1l3000:
  8929     02E4  3001               	movlw	1
  8930     02E5                     u157_25:
  8931     02E5  35F0               	lslf	___lwdiv@divisor,f
  8932     02E6  0DF1               	rlf	___lwdiv@divisor+1,f
  8933     02E7  0B89               	decfsz	9,f
  8934     02E8  2AE5               	goto	u157_25
  8935     02E9                     i1l3002:
  8936     02E9  3001               	movlw	1
  8937     02EA  00F4               	movwf	??___lwdiv
  8938     02EB  0874               	movf	??___lwdiv,w
  8939     02EC  07F7               	addwf	___lwdiv@counter,f
  8940     02ED                     i1l3004:
  8941     02ED  1FF1               	btfss	___lwdiv@divisor+1,7
  8942     02EE  2AF0               	goto	u158_21
  8943     02EF  2AF1               	goto	u158_20
  8944     02F0                     u158_21:
  8945     02F0  2AE4               	goto	i1l3000
  8946     02F1                     u158_20:
  8947     02F1                     i1l3006:
  8948     02F1  3001               	movlw	1
  8949     02F2                     u159_25:
  8950     02F2  35F5               	lslf	___lwdiv@quotient,f
  8951     02F3  0DF6               	rlf	___lwdiv@quotient+1,f
  8952     02F4  0B89               	decfsz	9,f
  8953     02F5  2AF2               	goto	u159_25
  8954     02F6  0871               	movf	___lwdiv@divisor+1,w
  8955     02F7  0273               	subwf	___lwdiv@dividend+1,w
  8956     02F8  1D03               	skipz
  8957     02F9  2AFC               	goto	u160_25
  8958     02FA  0870               	movf	___lwdiv@divisor,w
  8959     02FB  0272               	subwf	___lwdiv@dividend,w
  8960     02FC                     u160_25:
  8961     02FC  1C03               	skipc
  8962     02FD  2AFF               	goto	u160_21
  8963     02FE  2B00               	goto	u160_20
  8964     02FF                     u160_21:
  8965     02FF  2B05               	goto	i1l3012
  8966     0300                     u160_20:
  8967     0300                     i1l3008:
  8968     0300  0870               	movf	___lwdiv@divisor,w
  8969     0301  02F2               	subwf	___lwdiv@dividend,f
  8970     0302  0871               	movf	___lwdiv@divisor+1,w
  8971     0303  3BF3               	subwfb	___lwdiv@dividend+1,f
  8972     0304                     i1l3010:
  8973     0304  1475               	bsf	___lwdiv@quotient,0
  8974     0305                     i1l3012:
  8975     0305  3001               	movlw	1
  8976     0306                     u161_25:
  8977     0306  36F1               	lsrf	___lwdiv@divisor+1,f
  8978     0307  0CF0               	rrf	___lwdiv@divisor,f
  8979     0308  0B89               	decfsz	9,f
  8980     0309  2B06               	goto	u161_25
  8981     030A                     i1l3014:
  8982     030A  3001               	movlw	1
  8983     030B  02F7               	subwf	___lwdiv@counter,f
  8984     030C  1D03               	btfss	3,2
  8985     030D  2B0F               	goto	u162_21
  8986     030E  2B10               	goto	u162_20
  8987     030F                     u162_21:
  8988     030F  2AF1               	goto	i1l3006
  8989     0310                     u162_20:
  8990     0310                     i1l3016:
  8991     0310  0876               	movf	___lwdiv@quotient+1,w
  8992     0311  00F1               	movwf	?___lwdiv+1
  8993     0312  0875               	movf	___lwdiv@quotient,w
  8994     0313  00F0               	movwf	?___lwdiv
  8995     0314                     i1l1360:
  8996     0314  0008               	return
  8997     0315                     __end_of___lwdiv:
  8998                           
  8999                           	psect	text59
  9000     01FA                     __ptext59:	
  9001 ;; *************** function ___lldiv *****************
  9002 ;; Defined at:
  9003 ;;		line 5 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\__lldiv.c"
  9004 ;; Parameters:    Size  Location     Type
  9005 ;;  divisor         4    0[COMMON] unsigned long 
  9006 ;;  dividend        4    4[COMMON] unsigned long 
  9007 ;; Auto vars:     Size  Location     Type
  9008 ;;  quotient        4    9[COMMON] unsigned long 
  9009 ;;  counter         1   13[COMMON] unsigned char 
  9010 ;; Return value:  Size  Location     Type
  9011 ;;                  4    0[COMMON] unsigned long 
  9012 ;; Registers used:
  9013 ;;		wreg, status,2, status,0
  9014 ;; Tracked objects:
  9015 ;;		On entry : 0/0
  9016 ;;		On exit  : 0/0
  9017 ;;		Unchanged: 0/0
  9018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9019 ;;      Params:         8       0       0       0       0       0
  9020 ;;      Locals:         5       0       0       0       0       0
  9021 ;;      Temps:          1       0       0       0       0       0
  9022 ;;      Totals:        14       0       0       0       0       0
  9023 ;;Total ram usage:       14 bytes
  9024 ;; Hardware stack levels used: 1
  9025 ;; This function calls:
  9026 ;;		Nothing
  9027 ;; This function is called by:
  9028 ;;		_TMR0_Interrupt
  9029 ;; This function uses a non-reentrant model
  9030 ;;
  9031                           
  9032     01FA                     ___lldiv:	
  9033                           ;psect for function ___lldiv
  9034                           
  9035     01FA                     i1l2970:	
  9036                           ;incstack = 0
  9037                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  9038                           
  9039     01FA  3000               	movlw	0
  9040     01FB  00FC               	movwf	___lldiv@quotient+3
  9041     01FC  3000               	movlw	0
  9042     01FD  00FB               	movwf	___lldiv@quotient+2
  9043     01FE  3000               	movlw	0
  9044     01FF  00FA               	movwf	___lldiv@quotient+1
  9045     0200  3000               	movlw	0
  9046     0201  00F9               	movwf	___lldiv@quotient
  9047     0202  0873               	movf	___lldiv@divisor+3,w
  9048     0203  0472               	iorwf	___lldiv@divisor+2,w
  9049     0204  0471               	iorwf	___lldiv@divisor+1,w
  9050     0205  0470               	iorwf	___lldiv@divisor,w
  9051     0206  1903               	skipnz
  9052     0207  2A09               	goto	u149_21
  9053     0208  2A0A               	goto	u149_20
  9054     0209                     u149_21:
  9055     0209  2A4B               	goto	i1l2990
  9056     020A                     u149_20:
  9057     020A                     i1l2972:
  9058     020A  01FD               	clrf	___lldiv@counter
  9059     020B  0AFD               	incf	___lldiv@counter,f
  9060     020C  2A18               	goto	i1l2976
  9061     020D                     i1l2974:
  9062     020D  3001               	movlw	1
  9063     020E                     u150_25:
  9064     020E  35F0               	lslf	___lldiv@divisor,f
  9065     020F  0DF1               	rlf	___lldiv@divisor+1,f
  9066     0210  0DF2               	rlf	___lldiv@divisor+2,f
  9067     0211  0DF3               	rlf	___lldiv@divisor+3,f
  9068     0212  0B89               	decfsz	9,f
  9069     0213  2A0E               	goto	u150_25
  9070     0214  3001               	movlw	1
  9071     0215  00F8               	movwf	??___lldiv
  9072     0216  0878               	movf	??___lldiv,w
  9073     0217  07FD               	addwf	___lldiv@counter,f
  9074     0218                     i1l2976:
  9075     0218  1FF3               	btfss	___lldiv@divisor+3,7
  9076     0219  2A1B               	goto	u151_21
  9077     021A  2A1C               	goto	u151_20
  9078     021B                     u151_21:
  9079     021B  2A0D               	goto	i1l2974
  9080     021C                     u151_20:
  9081     021C                     i1l2978:
  9082     021C  3001               	movlw	1
  9083     021D                     u152_25:
  9084     021D  35F9               	lslf	___lldiv@quotient,f
  9085     021E  0DFA               	rlf	___lldiv@quotient+1,f
  9086     021F  0DFB               	rlf	___lldiv@quotient+2,f
  9087     0220  0DFC               	rlf	___lldiv@quotient+3,f
  9088     0221  0B89               	decfsz	9,f
  9089     0222  2A1D               	goto	u152_25
  9090     0223                     i1l2980:
  9091     0223  0873               	movf	___lldiv@divisor+3,w
  9092     0224  0277               	subwf	___lldiv@dividend+3,w
  9093     0225  1D03               	skipz
  9094     0226  2A31               	goto	u153_25
  9095     0227  0872               	movf	___lldiv@divisor+2,w
  9096     0228  0276               	subwf	___lldiv@dividend+2,w
  9097     0229  1D03               	skipz
  9098     022A  2A31               	goto	u153_25
  9099     022B  0871               	movf	___lldiv@divisor+1,w
  9100     022C  0275               	subwf	___lldiv@dividend+1,w
  9101     022D  1D03               	skipz
  9102     022E  2A31               	goto	u153_25
  9103     022F  0870               	movf	___lldiv@divisor,w
  9104     0230  0274               	subwf	___lldiv@dividend,w
  9105     0231                     u153_25:
  9106     0231  1C03               	skipc
  9107     0232  2A34               	goto	u153_21
  9108     0233  2A35               	goto	u153_20
  9109     0234                     u153_21:
  9110     0234  2A3E               	goto	i1l2986
  9111     0235                     u153_20:
  9112     0235                     i1l2982:
  9113     0235  0870               	movf	___lldiv@divisor,w
  9114     0236  02F4               	subwf	___lldiv@dividend,f
  9115     0237  0871               	movf	___lldiv@divisor+1,w
  9116     0238  3BF5               	subwfb	___lldiv@dividend+1,f
  9117     0239  0872               	movf	___lldiv@divisor+2,w
  9118     023A  3BF6               	subwfb	___lldiv@dividend+2,f
  9119     023B  0873               	movf	___lldiv@divisor+3,w
  9120     023C  3BF7               	subwfb	___lldiv@dividend+3,f
  9121     023D                     i1l2984:
  9122     023D  1479               	bsf	___lldiv@quotient,0
  9123     023E                     i1l2986:
  9124     023E  3001               	movlw	1
  9125     023F                     u154_25:
  9126     023F  36F3               	lsrf	___lldiv@divisor+3,f
  9127     0240  0CF2               	rrf	___lldiv@divisor+2,f
  9128     0241  0CF1               	rrf	___lldiv@divisor+1,f
  9129     0242  0CF0               	rrf	___lldiv@divisor,f
  9130     0243  0B89               	decfsz	9,f
  9131     0244  2A3F               	goto	u154_25
  9132     0245                     i1l2988:
  9133     0245  3001               	movlw	1
  9134     0246  02FD               	subwf	___lldiv@counter,f
  9135     0247  1D03               	btfss	3,2
  9136     0248  2A4A               	goto	u155_21
  9137     0249  2A4B               	goto	u155_20
  9138     024A                     u155_21:
  9139     024A  2A1C               	goto	i1l2978
  9140     024B                     u155_20:
  9141     024B                     i1l2990:
  9142     024B  087C               	movf	___lldiv@quotient+3,w
  9143     024C  00F3               	movwf	?___lldiv+3
  9144     024D  087B               	movf	___lldiv@quotient+2,w
  9145     024E  00F2               	movwf	?___lldiv+2
  9146     024F  087A               	movf	___lldiv@quotient+1,w
  9147     0250  00F1               	movwf	?___lldiv+1
  9148     0251  0879               	movf	___lldiv@quotient,w
  9149     0252  00F0               	movwf	?___lldiv
  9150     0253                     i1l1116:
  9151     0253  0008               	return
  9152     0254                     __end_of___lldiv:
  9153                           
  9154                           	psect	text60
  9155     06EB                     __ptext60:	
  9156 ;; *************** function _EUSART_is_tx_ready *****************
  9157 ;; Defined at:
  9158 ;;		line 94 in file "mcc_generated_files/eusart.c"
  9159 ;; Parameters:    Size  Location     Type
  9160 ;;		None
  9161 ;; Auto vars:     Size  Location     Type
  9162 ;;		None
  9163 ;; Return value:  Size  Location     Type
  9164 ;;                  1    wreg      _Bool 
  9165 ;; Registers used:
  9166 ;;		wreg, status,2
  9167 ;; Tracked objects:
  9168 ;;		On entry : 0/0
  9169 ;;		On exit  : 0/0
  9170 ;;		Unchanged: 0/0
  9171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9172 ;;      Params:         0       0       0       0       0       0
  9173 ;;      Locals:         1       0       0       0       0       0
  9174 ;;      Temps:          0       0       0       0       0       0
  9175 ;;      Totals:         1       0       0       0       0       0
  9176 ;;Total ram usage:        1 bytes
  9177 ;; Hardware stack levels used: 1
  9178 ;; This function calls:
  9179 ;;		Nothing
  9180 ;; This function is called by:
  9181 ;;		_TMR0_Interrupt
  9182 ;; This function uses a non-reentrant model
  9183 ;;
  9184                           
  9185     06EB                     _EUSART_is_tx_ready:	
  9186                           ;psect for function _EUSART_is_tx_ready
  9187                           
  9188     06EB                     i1l2844:	
  9189                           ;incstack = 0
  9190                           ; Regs used in _EUSART_is_tx_ready: [wreg+status,2]
  9191                           
  9192                           
  9193                           ;mcc_generated_files/eusart.c: 96:     return (_Bool)(PIR1bits.TXIF && TXSTAbits.TXEN);
  9194     06EB  01F0               	clrf	_EUSART_is_tx_ready$323
  9195     06EC                     i1l2846:
  9196     06EC  0020               	movlb	0	; select bank0
  9197     06ED  1E11               	btfss	17,4	;volatile
  9198     06EE  2EF0               	goto	u135_21
  9199     06EF  2EF1               	goto	u135_20
  9200     06F0                     u135_21:
  9201     06F0  2EF8               	goto	i1l2852
  9202     06F1                     u135_20:
  9203     06F1                     i1l2848:
  9204     06F1  0023               	movlb	3	; select bank3
  9205     06F2  1E9E               	btfss	30,5	;volatile
  9206     06F3  2EF5               	goto	u136_21
  9207     06F4  2EF6               	goto	u136_20
  9208     06F5                     u136_21:
  9209     06F5  2EF8               	goto	i1l2852
  9210     06F6                     u136_20:
  9211     06F6                     i1l2850:
  9212     06F6  01F0               	clrf	_EUSART_is_tx_ready$323
  9213     06F7  0AF0               	incf	_EUSART_is_tx_ready$323,f
  9214     06F8                     i1l2852:
  9215     06F8  0870               	movf	_EUSART_is_tx_ready$323,w
  9216     06F9                     i1l123:
  9217     06F9  0008               	return
  9218     06FA                     __end_of_EUSART_is_tx_ready:
  9219                           
  9220                           	psect	text61
  9221     0795                     __ptext61:	
  9222 ;; *************** function _EUSART_Write *****************
  9223 ;; Defined at:
  9224 ;;		line 132 in file "mcc_generated_files/eusart.c"
  9225 ;; Parameters:    Size  Location     Type
  9226 ;;  txData          1    wreg     unsigned char 
  9227 ;; Auto vars:     Size  Location     Type
  9228 ;;  txData          1    0[COMMON] unsigned char 
  9229 ;; Return value:  Size  Location     Type
  9230 ;;                  1    wreg      void 
  9231 ;; Registers used:
  9232 ;;		wreg
  9233 ;; Tracked objects:
  9234 ;;		On entry : 0/0
  9235 ;;		On exit  : 0/0
  9236 ;;		Unchanged: 0/0
  9237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9238 ;;      Params:         0       0       0       0       0       0
  9239 ;;      Locals:         1       0       0       0       0       0
  9240 ;;      Temps:          0       0       0       0       0       0
  9241 ;;      Totals:         1       0       0       0       0       0
  9242 ;;Total ram usage:        1 bytes
  9243 ;; Hardware stack levels used: 1
  9244 ;; This function calls:
  9245 ;;		Nothing
  9246 ;; This function is called by:
  9247 ;;		_TMR0_Interrupt
  9248 ;; This function uses a non-reentrant model
  9249 ;;
  9250                           
  9251     0795                     _EUSART_Write:	
  9252                           ;psect for function _EUSART_Write
  9253                           
  9254                           
  9255                           ;incstack = 0
  9256                           ; Regs used in _EUSART_Write: [wreg]
  9257                           ;EUSART_Write@txData stored from wreg
  9258     0795  00F0               	movwf	EUSART_Write@txData
  9259     0796                     i1l2856:
  9260     0796                     i1l142:	
  9261                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
  9262                           
  9263                           
  9264                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
  9265     0796  0020               	movlb	0	; select bank0
  9266     0797  1E11               	btfss	17,4	;volatile
  9267     0798  2F9A               	goto	u137_21
  9268     0799  2F9B               	goto	u137_20
  9269     079A                     u137_21:
  9270     079A  2F96               	goto	i1l142
  9271     079B                     u137_20:
  9272     079B                     i1l2858:
  9273                           
  9274                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
  9275     079B  0870               	movf	EUSART_Write@txData,w
  9276     079C  0023               	movlb	3	; select bank3
  9277     079D  009A               	movwf	26	;volatile
  9278     079E                     i1l145:
  9279     079E  0008               	return
  9280     079F                     __end_of_EUSART_Write:
  9281                           
  9282                           	psect	text62
  9283     058F                     __ptext62:	
  9284 ;; *************** function _ADC_GetConversion *****************
  9285 ;; Defined at:
  9286 ;;		line 112 in file "mcc_generated_files/adc.c"
  9287 ;; Parameters:    Size  Location     Type
  9288 ;;  channel         1    wreg     enum E2485
  9289 ;; Auto vars:     Size  Location     Type
  9290 ;;  channel         1    3[COMMON] enum E2485
  9291 ;; Return value:  Size  Location     Type
  9292 ;;                  2    0[COMMON] unsigned short 
  9293 ;; Registers used:
  9294 ;;		wreg, status,2, status,0
  9295 ;; Tracked objects:
  9296 ;;		On entry : 0/0
  9297 ;;		On exit  : 0/0
  9298 ;;		Unchanged: 0/0
  9299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9300 ;;      Params:         2       0       0       0       0       0
  9301 ;;      Locals:         1       0       0       0       0       0
  9302 ;;      Temps:          1       0       0       0       0       0
  9303 ;;      Totals:         4       0       0       0       0       0
  9304 ;;Total ram usage:        4 bytes
  9305 ;; Hardware stack levels used: 1
  9306 ;; This function calls:
  9307 ;;		Nothing
  9308 ;; This function is called by:
  9309 ;;		_TMR0_Interrupt
  9310 ;; This function uses a non-reentrant model
  9311 ;;
  9312                           
  9313     058F                     _ADC_GetConversion:	
  9314                           ;psect for function _ADC_GetConversion
  9315                           
  9316                           
  9317                           ;incstack = 0
  9318                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  9319                           ;ADC_GetConversion@channel stored from wreg
  9320     058F  00F3               	movwf	ADC_GetConversion@channel
  9321     0590                     i1l2872:
  9322                           
  9323                           ;mcc_generated_files/adc.c: 112: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = ch
      +                          annel;
  9324     0590  0873               	movf	ADC_GetConversion@channel,w
  9325     0591  00F2               	movwf	??_ADC_GetConversion
  9326     0592  0DF2               	rlf	??_ADC_GetConversion,f
  9327     0593  0DF2               	rlf	??_ADC_GetConversion,f
  9328     0594  0021               	movlb	1	; select bank1
  9329     0595  081D               	movf	29,w	;volatile
  9330     0596  0672               	xorwf	??_ADC_GetConversion,w
  9331     0597  3983               	andlw	-125
  9332     0598  0672               	xorwf	??_ADC_GetConversion,w
  9333     0599  009D               	movwf	29	;volatile
  9334     059A                     i1l2874:
  9335                           
  9336                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
  9337     059A  141D               	bsf	29,0	;volatile
  9338     059B                     i1l2876:
  9339                           
  9340                           ;mcc_generated_files/adc.c: 121:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  9341     059B  3003               	movlw	3
  9342     059C                     u243_27:
  9343     059C  0B89               	decfsz	9,f
  9344     059D  2D9C               	goto	u243_27
  9345     059E  0000               	nop
  9346     059F                     i1l2878:
  9347                           
  9348                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GO_nDONE = 1;
  9349     059F  0021               	movlb	1	; select bank1
  9350     05A0  149D               	bsf	29,1	;volatile
  9351     05A1                     i1l502:	
  9352                           ;mcc_generated_files/adc.c: 128:     {;mcc_generated_files/adc.c: 129:     }
  9353                           
  9354                           
  9355                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GO_nDONE)
  9356     05A1  189D               	btfsc	29,1	;volatile
  9357     05A2  2DA4               	goto	u138_21
  9358     05A3  2DA5               	goto	u138_20
  9359     05A4                     u138_21:
  9360     05A4  2DA1               	goto	i1l502
  9361     05A5                     u138_20:
  9362     05A5                     i1l2880:
  9363                           
  9364                           ;mcc_generated_files/adc.c: 132:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  9365     05A5  081C               	movf	28,w	;volatile
  9366     05A6  00F1               	movwf	?_ADC_GetConversion+1
  9367     05A7  081B               	movf	27,w	;volatile
  9368     05A8  00F0               	movwf	?_ADC_GetConversion
  9369     05A9                     i1l505:
  9370     05A9  0008               	return
  9371     05AA                     __end_of_ADC_GetConversion:
  9372                           
  9373                           	psect	text63
  9374     069B                     __ptext63:	
  9375 ;; *************** function _PIN_MANAGER_IOC *****************
  9376 ;; Defined at:
  9377 ;;		line 119 in file "mcc_generated_files/pin_manager.c"
  9378 ;; Parameters:    Size  Location     Type
  9379 ;;		None
  9380 ;; Auto vars:     Size  Location     Type
  9381 ;;		None
  9382 ;; Return value:  Size  Location     Type
  9383 ;;                  1    wreg      void 
  9384 ;; Registers used:
  9385 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9386 ;; Tracked objects:
  9387 ;;		On entry : 0/0
  9388 ;;		On exit  : 0/0
  9389 ;;		Unchanged: 0/0
  9390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9391 ;;      Params:         0       0       0       0       0       0
  9392 ;;      Locals:         0       0       0       0       0       0
  9393 ;;      Temps:          0       0       0       0       0       0
  9394 ;;      Totals:         0       0       0       0       0       0
  9395 ;;Total ram usage:        0 bytes
  9396 ;; Hardware stack levels used: 1
  9397 ;; Hardware stack levels required when called: 6
  9398 ;; This function calls:
  9399 ;;		_IOCBF0_ISR
  9400 ;;		_IOCBF3_ISR
  9401 ;; This function is called by:
  9402 ;;		_INTERRUPT_InterruptManager
  9403 ;; This function uses a non-reentrant model
  9404 ;;
  9405                           
  9406     069B                     _PIN_MANAGER_IOC:	
  9407                           ;psect for function _PIN_MANAGER_IOC
  9408                           
  9409     069B                     i1l3368:	
  9410                           ;incstack = 0
  9411                           ; Regs used in _PIN_MANAGER_IOC: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9412                           
  9413                           
  9414                           ;mcc_generated_files/pin_manager.c: 122:     if(IOCBFbits.IOCBF0 == 1)
  9415     069B  0027               	movlb	7	; select bank7
  9416     069C  1C16               	btfss	22,0	;volatile
  9417     069D  2E9F               	goto	u190_21
  9418     069E  2EA0               	goto	u190_20
  9419     069F                     u190_21:
  9420     069F  2EA3               	goto	i1l3372
  9421     06A0                     u190_20:
  9422     06A0                     i1l3370:
  9423                           
  9424                           ;mcc_generated_files/pin_manager.c: 123:     {;mcc_generated_files/pin_manager.c: 124:  
      +                                 IOCBF0_ISR();
  9425     06A0  3187  2709  3186   	fcall	_IOCBF0_ISR
  9426     06A3                     i1l3372:
  9427                           
  9428                           ;mcc_generated_files/pin_manager.c: 127:     if(IOCBFbits.IOCBF3 == 1)
  9429     06A3  0027               	movlb	7	; select bank7
  9430     06A4  1D96               	btfss	22,3	;volatile
  9431     06A5  2EA7               	goto	u191_21
  9432     06A6  2EA8               	goto	u191_20
  9433     06A7                     u191_21:
  9434     06A7  2EAB               	goto	i1l262
  9435     06A8                     u191_20:
  9436     06A8                     i1l3374:
  9437                           
  9438                           ;mcc_generated_files/pin_manager.c: 128:     {;mcc_generated_files/pin_manager.c: 129:  
      +                                 IOCBF3_ISR();
  9439     06A8  3186  26FA  3186   	fcall	_IOCBF3_ISR
  9440     06AB                     i1l262:
  9441     06AB  0008               	return
  9442     06AC                     __end_of_PIN_MANAGER_IOC:
  9443                           
  9444                           	psect	text64
  9445     06FA                     __ptext64:	
  9446 ;; *************** function _IOCBF3_ISR *****************
  9447 ;; Defined at:
  9448 ;;		line 166 in file "mcc_generated_files/pin_manager.c"
  9449 ;; Parameters:    Size  Location     Type
  9450 ;;		None
  9451 ;; Auto vars:     Size  Location     Type
  9452 ;;		None
  9453 ;; Return value:  Size  Location     Type
  9454 ;;                  1    wreg      void 
  9455 ;; Registers used:
  9456 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9457 ;; Tracked objects:
  9458 ;;		On entry : 0/0
  9459 ;;		On exit  : 0/0
  9460 ;;		Unchanged: 0/0
  9461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9462 ;;      Params:         0       0       0       0       0       0
  9463 ;;      Locals:         0       0       0       0       0       0
  9464 ;;      Temps:          0       0       0       0       0       0
  9465 ;;      Totals:         0       0       0       0       0       0
  9466 ;;Total ram usage:        0 bytes
  9467 ;; Hardware stack levels used: 1
  9468 ;; Hardware stack levels required when called: 5
  9469 ;; This function calls:
  9470 ;;		Absolute function
  9471 ;;		_IOCBF3_DefaultInterruptHandler
  9472 ;;		_S2_Interrupt
  9473 ;; This function is called by:
  9474 ;;		_PIN_MANAGER_IOC
  9475 ;; This function uses a non-reentrant model
  9476 ;;
  9477                           
  9478     06FA                     _IOCBF3_ISR:	
  9479                           ;psect for function _IOCBF3_ISR
  9480                           
  9481     06FA                     i1l3090:	
  9482                           ;incstack = 0
  9483                           ; Regs used in _IOCBF3_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9484                           
  9485                           
  9486                           ;mcc_generated_files/pin_manager.c: 171:     if(IOCBF3_InterruptHandler)
  9487     06FA  0020               	movlb	0	; select bank0
  9488     06FB  082E               	movf	_IOCBF3_InterruptHandler,w
  9489     06FC  042F               	iorwf	_IOCBF3_InterruptHandler+1,w
  9490     06FD  1903               	btfsc	3,2
  9491     06FE  2F00               	goto	u164_21
  9492     06FF  2F01               	goto	u164_20
  9493     0700                     u164_21:
  9494     0700  2F06               	goto	i1l3094
  9495     0701                     u164_20:
  9496     0701                     i1l3092:
  9497                           
  9498                           ;mcc_generated_files/pin_manager.c: 172:     {;mcc_generated_files/pin_manager.c: 173:  
      +                                 IOCBF3_InterruptHandler();
  9499     0701  082F               	movf	_IOCBF3_InterruptHandler+1,w
  9500     0702  008A               	movwf	10
  9501     0703  082E               	movf	_IOCBF3_InterruptHandler,w
  9502     0704  000A               	callw
  9503     0705  3186               	pagesel	$
  9504     0706                     i1l3094:
  9505                           
  9506                           ;mcc_generated_files/pin_manager.c: 175:     IOCBFbits.IOCBF3 = 0;
  9507     0706  0027               	movlb	7	; select bank7
  9508     0707  1196               	bcf	22,3	;volatile
  9509     0708                     i1l276:
  9510     0708  0008               	return
  9511     0709                     __end_of_IOCBF3_ISR:
  9512                           
  9513                           	psect	text65
  9514     0F9C                     __ptext65:	
  9515 ;; *************** function _IOCBF3_DefaultInterruptHandler *****************
  9516 ;; Defined at:
  9517 ;;		line 188 in file "mcc_generated_files/pin_manager.c"
  9518 ;; Parameters:    Size  Location     Type
  9519 ;;		None
  9520 ;; Auto vars:     Size  Location     Type
  9521 ;;		None
  9522 ;; Return value:  Size  Location     Type
  9523 ;;                  1    wreg      void 
  9524 ;; Registers used:
  9525 ;;		None
  9526 ;; Tracked objects:
  9527 ;;		On entry : 0/0
  9528 ;;		On exit  : 0/0
  9529 ;;		Unchanged: 0/0
  9530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9531 ;;      Params:         0       0       0       0       0       0
  9532 ;;      Locals:         0       0       0       0       0       0
  9533 ;;      Temps:          0       0       0       0       0       0
  9534 ;;      Totals:         0       0       0       0       0       0
  9535 ;;Total ram usage:        0 bytes
  9536 ;; Hardware stack levels used: 1
  9537 ;; This function calls:
  9538 ;;		Nothing
  9539 ;; This function is called by:
  9540 ;;		_PIN_MANAGER_Initialize
  9541 ;;		_IOCBF3_ISR
  9542 ;; This function uses a non-reentrant model
  9543 ;;
  9544                           
  9545     0F9C                     _IOCBF3_DefaultInterruptHandler:	
  9546                           ;psect for function _IOCBF3_DefaultInterruptHandler
  9547                           
  9548     0F9C                     i1l282:	
  9549                           ;incstack = 0
  9550                           ; Regs used in _IOCBF3_DefaultInterruptHandler: []
  9551                           
  9552     0F9C  0008               	return
  9553     0F9D                     __end_of_IOCBF3_DefaultInterruptHandler:
  9554                           
  9555                           	psect	text66
  9556     053B                     __ptext66:	
  9557 ;; *************** function _S2_Interrupt *****************
  9558 ;; Defined at:
  9559 ;;		line 199 in file "main.c"
  9560 ;; Parameters:    Size  Location     Type
  9561 ;;		None
  9562 ;; Auto vars:     Size  Location     Type
  9563 ;;		None
  9564 ;; Return value:  Size  Location     Type
  9565 ;;                  1    wreg      void 
  9566 ;; Registers used:
  9567 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9568 ;; Tracked objects:
  9569 ;;		On entry : 0/0
  9570 ;;		On exit  : 0/0
  9571 ;;		Unchanged: 0/0
  9572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9573 ;;      Params:         0       0       0       0       0       0
  9574 ;;      Locals:         0       0       0       0       0       0
  9575 ;;      Temps:          0       0       0       0       0       0
  9576 ;;      Totals:         0       0       0       0       0       0
  9577 ;;Total ram usage:        0 bytes
  9578 ;; Hardware stack levels used: 1
  9579 ;; Hardware stack levels required when called: 4
  9580 ;; This function calls:
  9581 ;;		_TMR6_StartTimer
  9582 ;;		i1_updateMatrix
  9583 ;;		i1_updateMotor
  9584 ;; This function is called by:
  9585 ;;		_main
  9586 ;;		_IOCBF3_ISR
  9587 ;; This function uses a non-reentrant model
  9588 ;;
  9589                           
  9590     053B                     _S2_Interrupt:	
  9591                           ;psect for function _S2_Interrupt
  9592                           
  9593     053B                     i1l2938:	
  9594                           ;incstack = 0
  9595                           ; Regs used in _S2_Interrupt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9596                           
  9597                           
  9598                           ;main.c: 200:     if(targetFloor == 2 && currentFloor != 2){
  9599     053B  3002               	movlw	2
  9600     053C  0020               	movlb	0	; select bank0
  9601     053D  0663               	xorwf	_targetFloor,w
  9602     053E  1D03               	btfss	3,2
  9603     053F  2D41               	goto	u141_21
  9604     0540  2D42               	goto	u141_20
  9605     0541                     u141_21:
  9606     0541  2D4D               	goto	i1l2946
  9607     0542                     u141_20:
  9608     0542                     i1l2940:
  9609     0542  3002               	movlw	2
  9610     0543  0664               	xorwf	_currentFloor,w
  9611     0544  1903               	btfsc	3,2
  9612     0545  2D47               	goto	u142_21
  9613     0546  2D48               	goto	u142_20
  9614     0547                     u142_21:
  9615     0547  2D4D               	goto	i1l2946
  9616     0548                     u142_20:
  9617     0548                     i1l2942:
  9618                           
  9619                           ;main.c: 201:         floorFlag = 1;
  9620     0548  01CD               	clrf	_floorFlag
  9621     0549  0ACD               	incf	_floorFlag,f
  9622     054A                     i1l2944:
  9623                           
  9624                           ;main.c: 202:         TMR6_StartTimer();
  9625     054A  318F  279E  3185   	fcall	_TMR6_StartTimer
  9626     054D                     i1l2946:
  9627                           
  9628                           ;main.c: 204:     currentFloor = 2;
  9629     054D  3002               	movlw	2
  9630     054E  0020               	movlb	0	; select bank0
  9631     054F  00E4               	movwf	_currentFloor
  9632     0550                     i1l2948:
  9633                           
  9634                           ;main.c: 205:     updateMotor();
  9635     0550  3183  23D7  3185   	fcall	i1_updateMotor
  9636     0553                     i1l2950:
  9637                           
  9638                           ;main.c: 206:     updateMatrix();
  9639     0553  3184  24A3  3185   	fcall	i1_updateMatrix
  9640     0556                     i1l871:
  9641     0556  0008               	return
  9642     0557                     __end_of_S2_Interrupt:
  9643                           
  9644                           	psect	text67
  9645     0709                     __ptext67:	
  9646 ;; *************** function _IOCBF0_ISR *****************
  9647 ;; Defined at:
  9648 ;;		line 136 in file "mcc_generated_files/pin_manager.c"
  9649 ;; Parameters:    Size  Location     Type
  9650 ;;		None
  9651 ;; Auto vars:     Size  Location     Type
  9652 ;;		None
  9653 ;; Return value:  Size  Location     Type
  9654 ;;                  1    wreg      void 
  9655 ;; Registers used:
  9656 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9657 ;; Tracked objects:
  9658 ;;		On entry : 0/0
  9659 ;;		On exit  : 0/0
  9660 ;;		Unchanged: 0/0
  9661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9662 ;;      Params:         0       0       0       0       0       0
  9663 ;;      Locals:         0       0       0       0       0       0
  9664 ;;      Temps:          0       0       0       0       0       0
  9665 ;;      Totals:         0       0       0       0       0       0
  9666 ;;Total ram usage:        0 bytes
  9667 ;; Hardware stack levels used: 1
  9668 ;; Hardware stack levels required when called: 5
  9669 ;; This function calls:
  9670 ;;		Absolute function
  9671 ;;		_IOCBF0_DefaultInterruptHandler
  9672 ;;		_S1_Interrupt
  9673 ;; This function is called by:
  9674 ;;		_PIN_MANAGER_IOC
  9675 ;; This function uses a non-reentrant model
  9676 ;;
  9677                           
  9678     0709                     _IOCBF0_ISR:	
  9679                           ;psect for function _IOCBF0_ISR
  9680                           
  9681     0709                     i1l3084:	
  9682                           ;incstack = 0
  9683                           ; Regs used in _IOCBF0_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9684                           
  9685                           
  9686                           ;mcc_generated_files/pin_manager.c: 141:     if(IOCBF0_InterruptHandler)
  9687     0709  0020               	movlb	0	; select bank0
  9688     070A  0830               	movf	_IOCBF0_InterruptHandler,w
  9689     070B  0431               	iorwf	_IOCBF0_InterruptHandler+1,w
  9690     070C  1903               	btfsc	3,2
  9691     070D  2F0F               	goto	u163_21
  9692     070E  2F10               	goto	u163_20
  9693     070F                     u163_21:
  9694     070F  2F15               	goto	i1l3088
  9695     0710                     u163_20:
  9696     0710                     i1l3086:
  9697                           
  9698                           ;mcc_generated_files/pin_manager.c: 142:     {;mcc_generated_files/pin_manager.c: 143:  
      +                                 IOCBF0_InterruptHandler();
  9699     0710  0831               	movf	_IOCBF0_InterruptHandler+1,w
  9700     0711  008A               	movwf	10
  9701     0712  0830               	movf	_IOCBF0_InterruptHandler,w
  9702     0713  000A               	callw
  9703     0714  3187               	pagesel	$
  9704     0715                     i1l3088:
  9705                           
  9706                           ;mcc_generated_files/pin_manager.c: 145:     IOCBFbits.IOCBF0 = 0;
  9707     0715  0027               	movlb	7	; select bank7
  9708     0716  1016               	bcf	22,0	;volatile
  9709     0717                     i1l266:
  9710     0717  0008               	return
  9711     0718                     __end_of_IOCBF0_ISR:
  9712                           
  9713                           	psect	text68
  9714     0F9B                     __ptext68:	
  9715 ;; *************** function _IOCBF0_DefaultInterruptHandler *****************
  9716 ;; Defined at:
  9717 ;;		line 158 in file "mcc_generated_files/pin_manager.c"
  9718 ;; Parameters:    Size  Location     Type
  9719 ;;		None
  9720 ;; Auto vars:     Size  Location     Type
  9721 ;;		None
  9722 ;; Return value:  Size  Location     Type
  9723 ;;                  1    wreg      void 
  9724 ;; Registers used:
  9725 ;;		None
  9726 ;; Tracked objects:
  9727 ;;		On entry : 0/0
  9728 ;;		On exit  : 0/0
  9729 ;;		Unchanged: 0/0
  9730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9731 ;;      Params:         0       0       0       0       0       0
  9732 ;;      Locals:         0       0       0       0       0       0
  9733 ;;      Temps:          0       0       0       0       0       0
  9734 ;;      Totals:         0       0       0       0       0       0
  9735 ;;Total ram usage:        0 bytes
  9736 ;; Hardware stack levels used: 1
  9737 ;; This function calls:
  9738 ;;		Nothing
  9739 ;; This function is called by:
  9740 ;;		_PIN_MANAGER_Initialize
  9741 ;;		_IOCBF0_ISR
  9742 ;; This function uses a non-reentrant model
  9743 ;;
  9744                           
  9745     0F9B                     _IOCBF0_DefaultInterruptHandler:	
  9746                           ;psect for function _IOCBF0_DefaultInterruptHandler
  9747                           
  9748     0F9B                     i1l272:	
  9749                           ;incstack = 0
  9750                           ; Regs used in _IOCBF0_DefaultInterruptHandler: []
  9751                           
  9752     0F9B  0008               	return
  9753     0F9C                     __end_of_IOCBF0_DefaultInterruptHandler:
  9754                           
  9755                           	psect	text69
  9756     05AA                     __ptext69:	
  9757 ;; *************** function _S1_Interrupt *****************
  9758 ;; Defined at:
  9759 ;;		line 188 in file "main.c"
  9760 ;; Parameters:    Size  Location     Type
  9761 ;;		None
  9762 ;; Auto vars:     Size  Location     Type
  9763 ;;		None
  9764 ;; Return value:  Size  Location     Type
  9765 ;;                  1    wreg      void 
  9766 ;; Registers used:
  9767 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9768 ;; Tracked objects:
  9769 ;;		On entry : 0/0
  9770 ;;		On exit  : 0/0
  9771 ;;		Unchanged: 0/0
  9772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9773 ;;      Params:         0       0       0       0       0       0
  9774 ;;      Locals:         0       0       0       0       0       0
  9775 ;;      Temps:          0       0       0       0       0       0
  9776 ;;      Totals:         0       0       0       0       0       0
  9777 ;;Total ram usage:        0 bytes
  9778 ;; Hardware stack levels used: 1
  9779 ;; Hardware stack levels required when called: 4
  9780 ;; This function calls:
  9781 ;;		_TMR6_StartTimer
  9782 ;;		i1_updateMatrix
  9783 ;;		i1_updateMotor
  9784 ;; This function is called by:
  9785 ;;		_main
  9786 ;;		_IOCBF0_ISR
  9787 ;; This function uses a non-reentrant model
  9788 ;;
  9789                           
  9790     05AA                     _S1_Interrupt:	
  9791                           ;psect for function _S1_Interrupt
  9792                           
  9793     05AA                     i1l2922:	
  9794                           ;incstack = 0
  9795                           ; Regs used in _S1_Interrupt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9796                           
  9797                           
  9798                           ;main.c: 189:     position = 0;
  9799     05AA  0020               	movlb	0	; select bank0
  9800     05AB  01E2               	clrf	_position
  9801     05AC                     i1l2924:
  9802                           
  9803                           ;main.c: 190:     if(targetFloor == 1 && currentFloor != 1){
  9804     05AC  0363               	decf	_targetFloor,w
  9805     05AD  1D03               	btfss	3,2
  9806     05AE  2DB0               	goto	u139_21
  9807     05AF  2DB1               	goto	u139_20
  9808     05B0                     u139_21:
  9809     05B0  2DBB               	goto	i1l2932
  9810     05B1                     u139_20:
  9811     05B1                     i1l2926:
  9812     05B1  0364               	decf	_currentFloor,w
  9813     05B2  1903               	btfsc	3,2
  9814     05B3  2DB5               	goto	u140_21
  9815     05B4  2DB6               	goto	u140_20
  9816     05B5                     u140_21:
  9817     05B5  2DBB               	goto	i1l2932
  9818     05B6                     u140_20:
  9819     05B6                     i1l2928:
  9820                           
  9821                           ;main.c: 191:         floorFlag = 1;
  9822     05B6  01CD               	clrf	_floorFlag
  9823     05B7  0ACD               	incf	_floorFlag,f
  9824     05B8                     i1l2930:
  9825                           
  9826                           ;main.c: 192:         TMR6_StartTimer();
  9827     05B8  318F  279E  3185   	fcall	_TMR6_StartTimer
  9828     05BB                     i1l2932:
  9829                           
  9830                           ;main.c: 194:     currentFloor = 1;
  9831     05BB  0020               	movlb	0	; select bank0
  9832     05BC  01E4               	clrf	_currentFloor
  9833     05BD  0AE4               	incf	_currentFloor,f
  9834     05BE                     i1l2934:
  9835                           
  9836                           ;main.c: 195:     updateMotor();
  9837     05BE  3183  23D7  3185   	fcall	i1_updateMotor
  9838     05C1                     i1l2936:
  9839                           
  9840                           ;main.c: 196:     updateMatrix();
  9841     05C1  3184  24A3  3185   	fcall	i1_updateMatrix
  9842     05C4                     i1l867:
  9843     05C4  0008               	return
  9844     05C5                     __end_of_S1_Interrupt:
  9845                           
  9846                           	psect	text70
  9847     0718                     __ptext70:	
  9848 ;; *************** function _CMP2_ISR *****************
  9849 ;; Defined at:
  9850 ;;		line 91 in file "mcc_generated_files/cmp2.c"
  9851 ;; Parameters:    Size  Location     Type
  9852 ;;		None
  9853 ;; Auto vars:     Size  Location     Type
  9854 ;;		None
  9855 ;; Return value:  Size  Location     Type
  9856 ;;                  1    wreg      void 
  9857 ;; Registers used:
  9858 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9859 ;; Tracked objects:
  9860 ;;		On entry : 0/0
  9861 ;;		On exit  : 0/0
  9862 ;;		Unchanged: 0/0
  9863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9864 ;;      Params:         0       0       0       0       0       0
  9865 ;;      Locals:         0       0       0       0       0       0
  9866 ;;      Temps:          0       0       0       0       0       0
  9867 ;;      Totals:         0       0       0       0       0       0
  9868 ;;Total ram usage:        0 bytes
  9869 ;; Hardware stack levels used: 1
  9870 ;; Hardware stack levels required when called: 5
  9871 ;; This function calls:
  9872 ;;		Absolute function
  9873 ;;		_S4_Interrupt
  9874 ;; This function is called by:
  9875 ;;		_INTERRUPT_InterruptManager
  9876 ;; This function uses a non-reentrant model
  9877 ;;
  9878                           
  9879     0718                     _CMP2_ISR:	
  9880                           ;psect for function _CMP2_ISR
  9881                           
  9882     0718                     i1l3392:	
  9883                           ;incstack = 0
  9884                           ; Regs used in _CMP2_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9885                           
  9886                           
  9887                           ;mcc_generated_files/cmp2.c: 94:     PIR2bits.C2IF = 0;
  9888     0718  0020               	movlb	0	; select bank0
  9889     0719  1312               	bcf	18,6	;volatile
  9890     071A                     i1l3394:
  9891                           
  9892                           ;mcc_generated_files/cmp2.c: 96:     if(CMP2_InterruptHandler)
  9893     071A  0826               	movf	_CMP2_InterruptHandler,w
  9894     071B  0427               	iorwf	_CMP2_InterruptHandler+1,w
  9895     071C  1903               	btfsc	3,2
  9896     071D  2F1F               	goto	u194_21
  9897     071E  2F20               	goto	u194_20
  9898     071F                     u194_21:
  9899     071F  2F25               	goto	i1l580
  9900     0720                     u194_20:
  9901     0720                     i1l3396:
  9902                           
  9903                           ;mcc_generated_files/cmp2.c: 97:     {;mcc_generated_files/cmp2.c: 98:         CMP2_Inte
      +                          rruptHandler();
  9904     0720  0827               	movf	_CMP2_InterruptHandler+1,w
  9905     0721  008A               	movwf	10
  9906     0722  0826               	movf	_CMP2_InterruptHandler,w
  9907     0723  000A               	callw
  9908     0724  3187               	pagesel	$
  9909     0725                     i1l580:
  9910     0725  0008               	return
  9911     0726                     __end_of_CMP2_ISR:
  9912                           
  9913                           	psect	text71
  9914     0557                     __ptext71:	
  9915 ;; *************** function _S4_Interrupt *****************
  9916 ;; Defined at:
  9917 ;;		line 219 in file "main.c"
  9918 ;; Parameters:    Size  Location     Type
  9919 ;;		None
  9920 ;; Auto vars:     Size  Location     Type
  9921 ;;		None
  9922 ;; Return value:  Size  Location     Type
  9923 ;;                  1    wreg      void 
  9924 ;; Registers used:
  9925 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9926 ;; Tracked objects:
  9927 ;;		On entry : 0/0
  9928 ;;		On exit  : 0/0
  9929 ;;		Unchanged: 0/0
  9930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9931 ;;      Params:         0       0       0       0       0       0
  9932 ;;      Locals:         0       0       0       0       0       0
  9933 ;;      Temps:          0       0       0       0       0       0
  9934 ;;      Totals:         0       0       0       0       0       0
  9935 ;;Total ram usage:        0 bytes
  9936 ;; Hardware stack levels used: 1
  9937 ;; Hardware stack levels required when called: 4
  9938 ;; This function calls:
  9939 ;;		_TMR6_StartTimer
  9940 ;;		i1_updateMatrix
  9941 ;;		i1_updateMotor
  9942 ;; This function is called by:
  9943 ;;		_main
  9944 ;;		_CMP2_ISR
  9945 ;; This function uses a non-reentrant model
  9946 ;;
  9947                           
  9948     0557                     _S4_Interrupt:	
  9949                           ;psect for function _S4_Interrupt
  9950                           
  9951     0557                     i1l3338:	
  9952                           ;incstack = 0
  9953                           ; Regs used in _S4_Interrupt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9954                           
  9955                           
  9956                           ;main.c: 220:     if(targetFloor == 4 && currentFloor != 4){
  9957     0557  3004               	movlw	4
  9958     0558  0020               	movlb	0	; select bank0
  9959     0559  0663               	xorwf	_targetFloor,w
  9960     055A  1D03               	btfss	3,2
  9961     055B  2D5D               	goto	u186_21
  9962     055C  2D5E               	goto	u186_20
  9963     055D                     u186_21:
  9964     055D  2D69               	goto	i1l3346
  9965     055E                     u186_20:
  9966     055E                     i1l3340:
  9967     055E  3004               	movlw	4
  9968     055F  0664               	xorwf	_currentFloor,w
  9969     0560  1903               	btfsc	3,2
  9970     0561  2D63               	goto	u187_21
  9971     0562  2D64               	goto	u187_20
  9972     0563                     u187_21:
  9973     0563  2D69               	goto	i1l3346
  9974     0564                     u187_20:
  9975     0564                     i1l3342:
  9976                           
  9977                           ;main.c: 221:         floorFlag = 1;
  9978     0564  01CD               	clrf	_floorFlag
  9979     0565  0ACD               	incf	_floorFlag,f
  9980     0566                     i1l3344:
  9981                           
  9982                           ;main.c: 222:         TMR6_StartTimer();
  9983     0566  318F  279E  3185   	fcall	_TMR6_StartTimer
  9984     0569                     i1l3346:
  9985                           
  9986                           ;main.c: 224:     currentFloor = 4;
  9987     0569  3004               	movlw	4
  9988     056A  0020               	movlb	0	; select bank0
  9989     056B  00E4               	movwf	_currentFloor
  9990     056C                     i1l3348:
  9991                           
  9992                           ;main.c: 225:     updateMotor();
  9993     056C  3183  23D7  3185   	fcall	i1_updateMotor
  9994     056F                     i1l3350:
  9995                           
  9996                           ;main.c: 226:     updateMatrix();
  9997     056F  3184  24A3  3185   	fcall	i1_updateMatrix
  9998     0572                     i1l879:
  9999     0572  0008               	return
 10000     0573                     __end_of_S4_Interrupt:
 10001                           
 10002                           	psect	text72
 10003     0726                     __ptext72:	
 10004 ;; *************** function _CMP1_ISR *****************
 10005 ;; Defined at:
 10006 ;;		line 91 in file "mcc_generated_files/cmp1.c"
 10007 ;; Parameters:    Size  Location     Type
 10008 ;;		None
 10009 ;; Auto vars:     Size  Location     Type
 10010 ;;		None
 10011 ;; Return value:  Size  Location     Type
 10012 ;;                  1    wreg      void 
 10013 ;; Registers used:
 10014 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10015 ;; Tracked objects:
 10016 ;;		On entry : 0/0
 10017 ;;		On exit  : 0/0
 10018 ;;		Unchanged: 0/0
 10019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10020 ;;      Params:         0       0       0       0       0       0
 10021 ;;      Locals:         0       0       0       0       0       0
 10022 ;;      Temps:          0       0       0       0       0       0
 10023 ;;      Totals:         0       0       0       0       0       0
 10024 ;;Total ram usage:        0 bytes
 10025 ;; Hardware stack levels used: 1
 10026 ;; Hardware stack levels required when called: 5
 10027 ;; This function calls:
 10028 ;;		Absolute function
 10029 ;;		_S3_Interrupt
 10030 ;; This function is called by:
 10031 ;;		_INTERRUPT_InterruptManager
 10032 ;; This function uses a non-reentrant model
 10033 ;;
 10034                           
 10035     0726                     _CMP1_ISR:	
 10036                           ;psect for function _CMP1_ISR
 10037                           
 10038     0726                     i1l3398:	
 10039                           ;incstack = 0
 10040                           ; Regs used in _CMP1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10041                           
 10042                           
 10043                           ;mcc_generated_files/cmp1.c: 94:     PIR2bits.C1IF = 0;
 10044     0726  0020               	movlb	0	; select bank0
 10045     0727  1292               	bcf	18,5	;volatile
 10046     0728                     i1l3400:
 10047                           
 10048                           ;mcc_generated_files/cmp1.c: 96:     if(CMP1_InterruptHandler)
 10049     0728  0820               	movf	_CMP1_InterruptHandler,w
 10050     0729  0421               	iorwf	_CMP1_InterruptHandler+1,w
 10051     072A  1903               	btfsc	3,2
 10052     072B  2F2D               	goto	u195_21
 10053     072C  2F2E               	goto	u195_20
 10054     072D                     u195_21:
 10055     072D  2F33               	goto	i1l726
 10056     072E                     u195_20:
 10057     072E                     i1l3402:
 10058                           
 10059                           ;mcc_generated_files/cmp1.c: 97:     {;mcc_generated_files/cmp1.c: 98:         CMP1_Inte
      +                          rruptHandler();
 10060     072E  0821               	movf	_CMP1_InterruptHandler+1,w
 10061     072F  008A               	movwf	10
 10062     0730  0820               	movf	_CMP1_InterruptHandler,w
 10063     0731  000A               	callw
 10064     0732  3187               	pagesel	$
 10065     0733                     i1l726:
 10066     0733  0008               	return
 10067     0734                     __end_of_CMP1_ISR:
 10068                           
 10069                           	psect	text73
 10070     0573                     __ptext73:	
 10071 ;; *************** function _S3_Interrupt *****************
 10072 ;; Defined at:
 10073 ;;		line 209 in file "main.c"
 10074 ;; Parameters:    Size  Location     Type
 10075 ;;		None
 10076 ;; Auto vars:     Size  Location     Type
 10077 ;;		None
 10078 ;; Return value:  Size  Location     Type
 10079 ;;                  1    wreg      void 
 10080 ;; Registers used:
 10081 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10082 ;; Tracked objects:
 10083 ;;		On entry : 0/0
 10084 ;;		On exit  : 0/0
 10085 ;;		Unchanged: 0/0
 10086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10087 ;;      Params:         0       0       0       0       0       0
 10088 ;;      Locals:         0       0       0       0       0       0
 10089 ;;      Temps:          0       0       0       0       0       0
 10090 ;;      Totals:         0       0       0       0       0       0
 10091 ;;Total ram usage:        0 bytes
 10092 ;; Hardware stack levels used: 1
 10093 ;; Hardware stack levels required when called: 4
 10094 ;; This function calls:
 10095 ;;		_TMR6_StartTimer
 10096 ;;		i1_updateMatrix
 10097 ;;		i1_updateMotor
 10098 ;; This function is called by:
 10099 ;;		_main
 10100 ;;		_CMP1_ISR
 10101 ;; This function uses a non-reentrant model
 10102 ;;
 10103                           
 10104     0573                     _S3_Interrupt:	
 10105                           ;psect for function _S3_Interrupt
 10106                           
 10107     0573                     i1l3324:	
 10108                           ;incstack = 0
 10109                           ; Regs used in _S3_Interrupt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10110                           
 10111                           
 10112                           ;main.c: 210:     if(targetFloor == 3 && currentFloor != 3){
 10113     0573  3003               	movlw	3
 10114     0574  0020               	movlb	0	; select bank0
 10115     0575  0663               	xorwf	_targetFloor,w
 10116     0576  1D03               	btfss	3,2
 10117     0577  2D79               	goto	u184_21
 10118     0578  2D7A               	goto	u184_20
 10119     0579                     u184_21:
 10120     0579  2D85               	goto	i1l3332
 10121     057A                     u184_20:
 10122     057A                     i1l3326:
 10123     057A  3003               	movlw	3
 10124     057B  0664               	xorwf	_currentFloor,w
 10125     057C  1903               	btfsc	3,2
 10126     057D  2D7F               	goto	u185_21
 10127     057E  2D80               	goto	u185_20
 10128     057F                     u185_21:
 10129     057F  2D85               	goto	i1l3332
 10130     0580                     u185_20:
 10131     0580                     i1l3328:
 10132                           
 10133                           ;main.c: 211:         floorFlag = 1;
 10134     0580  01CD               	clrf	_floorFlag
 10135     0581  0ACD               	incf	_floorFlag,f
 10136     0582                     i1l3330:
 10137                           
 10138                           ;main.c: 212:         TMR6_StartTimer();
 10139     0582  318F  279E  3185   	fcall	_TMR6_StartTimer
 10140     0585                     i1l3332:
 10141                           
 10142                           ;main.c: 214:     currentFloor = 3;
 10143     0585  3003               	movlw	3
 10144     0586  0020               	movlb	0	; select bank0
 10145     0587  00E4               	movwf	_currentFloor
 10146     0588                     i1l3334:
 10147                           
 10148                           ;main.c: 215:     updateMotor();
 10149     0588  3183  23D7  3185   	fcall	i1_updateMotor
 10150     058B                     i1l3336:
 10151                           
 10152                           ;main.c: 216:     updateMatrix();
 10153     058B  3184  24A3  3185   	fcall	i1_updateMatrix
 10154     058E                     i1l875:
 10155     058E  0008               	return
 10156     058F                     __end_of_S3_Interrupt:
 10157                           
 10158                           	psect	text74
 10159     03D7                     __ptext74:	
 10160 ;; *************** function i1_updateMotor *****************
 10161 ;; Defined at:
 10162 ;;		line 85 in file "main.c"
 10163 ;; Parameters:    Size  Location     Type
 10164 ;;		None
 10165 ;; Auto vars:     Size  Location     Type
 10166 ;;		None
 10167 ;; Return value:  Size  Location     Type
 10168 ;;                  1    wreg      void 
 10169 ;; Registers used:
 10170 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10171 ;; Tracked objects:
 10172 ;;		On entry : 0/0
 10173 ;;		On exit  : 0/0
 10174 ;;		Unchanged: 0/0
 10175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10176 ;;      Params:         0       0       0       0       0       0
 10177 ;;      Locals:         0       0       0       0       0       0
 10178 ;;      Temps:          0       0       0       0       0       0
 10179 ;;      Totals:         0       0       0       0       0       0
 10180 ;;Total ram usage:        0 bytes
 10181 ;; Hardware stack levels used: 1
 10182 ;; Hardware stack levels required when called: 2
 10183 ;; This function calls:
 10184 ;;		i1_TMR4_StartTimer
 10185 ;;		i1_sendMotor
 10186 ;; This function is called by:
 10187 ;;		_TMR4_Interrupt
 10188 ;;		_TMR6_Interrupt
 10189 ;;		_S1_Interrupt
 10190 ;;		_S2_Interrupt
 10191 ;;		_S3_Interrupt
 10192 ;;		_S4_Interrupt
 10193 ;; This function uses a non-reentrant model
 10194 ;;
 10195                           
 10196     03D7                     i1_updateMotor:	
 10197                           ;psect for function i1_updateMotor
 10198                           
 10199     03D7                     i1l2794:	
 10200                           ;incstack = 0
 10201                           ; Regs used in i1_updateMotor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10202                           
 10203                           
 10204                           ;main.c: 86:     if(currentFloor==targetFloor){
 10205     03D7  0020               	movlb	0	; select bank0
 10206     03D8  0864               	movf	_currentFloor,w
 10207     03D9  0663               	xorwf	_targetFloor,w
 10208     03DA  1D03               	skipz
 10209     03DB  2BDD               	goto	u128_21
 10210     03DC  2BDE               	goto	u128_20
 10211     03DD                     u128_21:
 10212     03DD  2BE0               	goto	i1l2798
 10213     03DE                     u128_20:
 10214     03DE                     i1l2796:
 10215                           
 10216                           ;main.c: 87:         motorState = 0;
 10217     03DE  01CF               	clrf	_motorState
 10218                           
 10219                           ;main.c: 88:     } else if(currentFloor < targetFloor){
 10220     03DF  2C02               	goto	i1l2816
 10221     03E0                     i1l2798:
 10222     03E0  0863               	movf	_targetFloor,w
 10223     03E1  0264               	subwf	_currentFloor,w
 10224     03E2  1803               	skipnc
 10225     03E3  2BE5               	goto	u129_21
 10226     03E4  2BE6               	goto	u129_20
 10227     03E5                     u129_21:
 10228     03E5  2BF5               	goto	i1l2808
 10229     03E6                     u129_20:
 10230     03E6                     i1l2800:
 10231                           
 10232                           ;main.c: 89:         if(motorState == 2){
 10233     03E6  3002               	movlw	2
 10234     03E7  064F               	xorwf	_motorState,w
 10235     03E8  1D03               	btfss	3,2
 10236     03E9  2BEB               	goto	u130_21
 10237     03EA  2BEC               	goto	u130_20
 10238     03EB                     u130_21:
 10239     03EB  2BF1               	goto	i1l2806
 10240     03EC                     u130_20:
 10241     03EC                     i1l2802:
 10242                           
 10243                           ;main.c: 90:             directionFlag = 1;
 10244     03EC  01CC               	clrf	_directionFlag
 10245     03ED  0ACC               	incf	_directionFlag,f
 10246     03EE                     i1l2804:
 10247                           
 10248                           ;main.c: 91:             TMR4_StartTimer();
 10249     03EE  318F  27A1  3183   	fcall	i1_TMR4_StartTimer
 10250     03F1                     i1l2806:
 10251                           
 10252                           ;main.c: 93:         motorState = 1;
 10253     03F1  0020               	movlb	0	; select bank0
 10254     03F2  01CF               	clrf	_motorState
 10255     03F3  0ACF               	incf	_motorState,f
 10256                           
 10257                           ;main.c: 94:     } else{
 10258     03F4  2C02               	goto	i1l2816
 10259     03F5                     i1l2808:
 10260                           
 10261                           ;main.c: 95:         if(motorState == 1){
 10262     03F5  034F               	decf	_motorState,w
 10263     03F6  1D03               	btfss	3,2
 10264     03F7  2BF9               	goto	u131_21
 10265     03F8  2BFA               	goto	u131_20
 10266     03F9                     u131_21:
 10267     03F9  2BFF               	goto	i1l2814
 10268     03FA                     u131_20:
 10269     03FA                     i1l2810:
 10270                           
 10271                           ;main.c: 96:             directionFlag = 1;
 10272     03FA  01CC               	clrf	_directionFlag
 10273     03FB  0ACC               	incf	_directionFlag,f
 10274     03FC                     i1l2812:
 10275                           
 10276                           ;main.c: 97:             TMR4_StartTimer();
 10277     03FC  318F  27A1  3183   	fcall	i1_TMR4_StartTimer
 10278     03FF                     i1l2814:
 10279                           
 10280                           ;main.c: 99:         motorState = 2;
 10281     03FF  3002               	movlw	2
 10282     0400  0020               	movlb	0	; select bank0
 10283     0401  00CF               	movwf	_motorState
 10284     0402                     i1l2816:
 10285                           
 10286                           ;main.c: 101:     sendMotor();
 10287     0402  3182  2298  3183   	fcall	i1_sendMotor
 10288     0405                     i1l834:
 10289     0405  0008               	return
 10290     0406                     __end_ofi1_updateMotor:
 10291                           
 10292                           	psect	text75
 10293     0298                     __ptext75:	
 10294 ;; *************** function i1_sendMotor *****************
 10295 ;; Defined at:
 10296 ;;		line 57 in file "main.c"
 10297 ;; Parameters:    Size  Location     Type
 10298 ;;		None
 10299 ;; Auto vars:     Size  Location     Type
 10300 ;;		None
 10301 ;; Return value:  Size  Location     Type
 10302 ;;                  1    wreg      void 
 10303 ;; Registers used:
 10304 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10305 ;; Tracked objects:
 10306 ;;		On entry : 0/0
 10307 ;;		On exit  : 0/0
 10308 ;;		Unchanged: 0/0
 10309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10310 ;;      Params:         0       0       0       0       0       0
 10311 ;;      Locals:         0       0       0       0       0       0
 10312 ;;      Temps:          2       0       0       0       0       0
 10313 ;;      Totals:         2       0       0       0       0       0
 10314 ;;Total ram usage:        2 bytes
 10315 ;; Hardware stack levels used: 1
 10316 ;; Hardware stack levels required when called: 1
 10317 ;; This function calls:
 10318 ;;		i1_PWM3_LoadDutyValue
 10319 ;; This function is called by:
 10320 ;;		i1_updateMotor
 10321 ;; This function uses a non-reentrant model
 10322 ;;
 10323                           
 10324     0298                     i1_sendMotor:	
 10325                           ;psect for function i1_sendMotor
 10326                           
 10327     0298                     i1l2724:	
 10328                           ;incstack = 0
 10329                           ; Regs used in i1_sendMotor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10330                           
 10331                           
 10332                           ;main.c: 58:     if(floorFlag || directionFlag){
 10333     0298  0020               	movlb	0	; select bank0
 10334     0299  084D               	movf	_floorFlag,w
 10335     029A  1D03               	btfss	3,2
 10336     029B  2A9D               	goto	u121_21
 10337     029C  2A9E               	goto	u121_20
 10338     029D                     u121_21:
 10339     029D  2AA3               	goto	i1l2728
 10340     029E                     u121_20:
 10341     029E                     i1l2726:
 10342     029E  084C               	movf	_directionFlag,w
 10343     029F  1903               	btfsc	3,2
 10344     02A0  2AA2               	goto	u122_21
 10345     02A1  2AA3               	goto	u122_20
 10346     02A2                     u122_21:
 10347     02A2  2AC5               	goto	i1l2746
 10348     02A3                     u122_20:
 10349     02A3                     i1l2728:
 10350                           
 10351                           ;main.c: 59:         PWM3_LoadDutyValue(0);
 10352     02A3  3000               	movlw	0
 10353     02A4  00F0               	movwf	i1PWM3_LoadDutyValue@dutyValue
 10354     02A5  00F1               	movwf	i1PWM3_LoadDutyValue@dutyValue+1
 10355     02A6  3185  25F9  3182   	fcall	i1_PWM3_LoadDutyValue
 10356                           
 10357                           ;main.c: 60:     } else{
 10358     02A9  2AD8               	goto	i1l825
 10359     02AA                     i1l816:	
 10360                           ;main.c: 66:                 do { LATAbits.LATA7 = 1; } while(0);
 10361                           
 10362     02AA  0022               	movlb	2	; select bank2
 10363     02AB  178C               	bsf	12,7	;volatile
 10364     02AC                     i1l2732:
 10365                           
 10366                           ;main.c: 67:                 if(currentFloor == 4){
 10367     02AC  3004               	movlw	4
 10368     02AD  0020               	movlb	0	; select bank0
 10369     02AE  0664               	xorwf	_currentFloor,w
 10370     02AF  1D03               	btfss	3,2
 10371     02B0  2AB2               	goto	u123_21
 10372     02B1  2AB3               	goto	u123_20
 10373     02B2                     u123_21:
 10374     02B2  2AB4               	goto	i1l2736
 10375     02B3                     u123_20:
 10376     02B3  2AA3               	goto	i1l2728
 10377     02B4                     i1l2736:
 10378                           
 10379                           ;main.c: 70:                     PWM3_LoadDutyValue(409);
 10380     02B4  3099               	movlw	153
 10381     02B5  00F0               	movwf	i1PWM3_LoadDutyValue@dutyValue
 10382     02B6  3001               	movlw	1
 10383     02B7  00F1               	movwf	i1PWM3_LoadDutyValue@dutyValue+1
 10384     02B8  3185  25F9  3182   	fcall	i1_PWM3_LoadDutyValue
 10385     02BB  2AD8               	goto	i1l825
 10386     02BC                     i1l821:	
 10387                           ;main.c: 74:                 do { LATAbits.LATA7 = 0; } while(0);
 10388                           
 10389     02BC  0022               	movlb	2	; select bank2
 10390     02BD  138C               	bcf	12,7	;volatile
 10391     02BE                     i1l2738:
 10392                           
 10393                           ;main.c: 75:                 if(currentFloor == 1){
 10394     02BE  0020               	movlb	0	; select bank0
 10395     02BF  0364               	decf	_currentFloor,w
 10396     02C0  1D03               	btfss	3,2
 10397     02C1  2AC3               	goto	u124_21
 10398     02C2  2AC4               	goto	u124_20
 10399     02C3                     u124_21:
 10400     02C3  2AB4               	goto	i1l2736
 10401     02C4                     u124_20:
 10402     02C4  2AA3               	goto	i1l2728
 10403     02C5                     i1l2746:
 10404     02C5  084F               	movf	_motorState,w
 10405     02C6  00F4               	movwf	??i1_sendMotor
 10406     02C7  01F5               	clrf	??i1_sendMotor+1
 10407                           
 10408                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10409                           ; Switch size 1, requested type "simple"
 10410                           ; Number of cases is 1, Range of values is 0 to 0
 10411                           ; switch strategies available:
 10412                           ; Name         Instructions Cycles
 10413                           ; simple_byte            4     3 (average)
 10414                           ; direct_byte            8     6 (fixed)
 10415                           ; jumptable            260     6 (fixed)
 10416                           ;	Chosen strategy is simple_byte
 10417     02C8  0875               	movf	??i1_sendMotor+1,w
 10418     02C9  3A00               	xorlw	0	; case 0
 10419     02CA  1903               	skipnz
 10420     02CB  2ACD               	goto	i1l3974
 10421     02CC  2AD8               	goto	i1l825
 10422     02CD                     i1l3974:
 10423                           
 10424                           ; Switch size 1, requested type "simple"
 10425                           ; Number of cases is 3, Range of values is 0 to 2
 10426                           ; switch strategies available:
 10427                           ; Name         Instructions Cycles
 10428                           ; simple_byte           10     6 (average)
 10429                           ; direct_byte           12     6 (fixed)
 10430                           ; jumptable            260     6 (fixed)
 10431                           ;	Chosen strategy is simple_byte
 10432     02CD  0874               	movf	??i1_sendMotor,w
 10433     02CE  3A00               	xorlw	0	; case 0
 10434     02CF  1903               	skipnz
 10435     02D0  2AA3               	goto	i1l2728
 10436     02D1  3A01               	xorlw	1	; case 1
 10437     02D2  1903               	skipnz
 10438     02D3  2AAA               	goto	i1l816
 10439     02D4  3A03               	xorlw	3	; case 2
 10440     02D5  1903               	skipnz
 10441     02D6  2ABC               	goto	i1l821
 10442     02D7  2AD8               	goto	i1l825
 10443     02D8                     i1l825:
 10444     02D8  0008               	return
 10445     02D9                     __end_ofi1_sendMotor:
 10446                           
 10447                           	psect	text76
 10448     05F9                     __ptext76:	
 10449 ;; *************** function i1_PWM3_LoadDutyValue *****************
 10450 ;; Defined at:
 10451 ;;		line 82 in file "mcc_generated_files/pwm3.c"
 10452 ;; Parameters:    Size  Location     Type
 10453 ;;  dutyValue       2    0[COMMON] unsigned short 
 10454 ;; Auto vars:     Size  Location     Type
 10455 ;;		None
 10456 ;; Return value:  Size  Location     Type
 10457 ;;                  1    wreg      void 
 10458 ;; Registers used:
 10459 ;;		wreg, status,2, status,0
 10460 ;; Tracked objects:
 10461 ;;		On entry : 0/0
 10462 ;;		On exit  : 0/0
 10463 ;;		Unchanged: 0/0
 10464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10465 ;;      Params:         2       0       0       0       0       0
 10466 ;;      Locals:         0       0       0       0       0       0
 10467 ;;      Temps:          2       0       0       0       0       0
 10468 ;;      Totals:         4       0       0       0       0       0
 10469 ;;Total ram usage:        4 bytes
 10470 ;; Hardware stack levels used: 1
 10471 ;; This function calls:
 10472 ;;		Nothing
 10473 ;; This function is called by:
 10474 ;;		i1_sendMotor
 10475 ;; This function uses a non-reentrant model
 10476 ;;
 10477                           
 10478     05F9                     i1_PWM3_LoadDutyValue:	
 10479                           ;psect for function i1_PWM3_LoadDutyValue
 10480                           
 10481     05F9                     i1l2702:	
 10482                           ;incstack = 0
 10483                           ; Regs used in i1_PWM3_LoadDutyValue: [wreg+status,2+status,0]
 10484                           
 10485                           
 10486                           ;mcc_generated_files/pwm3.c: 82: void PWM3_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm3.c: 83: {;mcc_generated_files/pwm3.c: 85:     CCPR3L = ((dutyValue & 0x03FC
      +                          )>>2);
 10487     05F9  0871               	movf	i1PWM3_LoadDutyValue@dutyValue+1,w
 10488     05FA  00F3               	movwf	??i1_PWM3_LoadDutyValue+1
 10489     05FB  0870               	movf	i1PWM3_LoadDutyValue@dutyValue,w
 10490     05FC  00F2               	movwf	??i1_PWM3_LoadDutyValue
 10491     05FD  36F3               	lsrf	??i1_PWM3_LoadDutyValue+1,f
 10492     05FE  0CF2               	rrf	??i1_PWM3_LoadDutyValue,f
 10493     05FF  36F3               	lsrf	??i1_PWM3_LoadDutyValue+1,f
 10494     0600  0CF2               	rrf	??i1_PWM3_LoadDutyValue,f
 10495     0601  0872               	movf	??i1_PWM3_LoadDutyValue,w
 10496     0602  0026               	movlb	6	; select bank6
 10497     0603  0091               	movwf	17	;volatile
 10498                           
 10499                           ;mcc_generated_files/pwm3.c: 88:     CCP3CON = ((uint8_t)(CCP3CON & 0xCF) | ((dutyValue 
      +                          & 0x0003)<<4));
 10500     0604  0870               	movf	i1PWM3_LoadDutyValue@dutyValue,w
 10501     0605  3903               	andlw	3
 10502     0606  00F2               	movwf	??i1_PWM3_LoadDutyValue
 10503     0607  3004               	movlw	4
 10504     0608                     u118_25:
 10505     0608  35F2               	lslf	??i1_PWM3_LoadDutyValue,f
 10506     0609  0B89               	decfsz	9,f
 10507     060A  2E08               	goto	u118_25
 10508     060B  0813               	movf	19,w	;volatile
 10509     060C  39CF               	andlw	207
 10510     060D  0472               	iorwf	??i1_PWM3_LoadDutyValue,w
 10511     060E  0093               	movwf	19	;volatile
 10512     060F                     i1l75:
 10513     060F  0008               	return
 10514     0610                     __end_ofi1_PWM3_LoadDutyValue:
 10515                           
 10516                           	psect	text77
 10517     0FA1                     __ptext77:	
 10518 ;; *************** function i1_TMR4_StartTimer *****************
 10519 ;; Defined at:
 10520 ;;		line 87 in file "mcc_generated_files/tmr4.c"
 10521 ;; Parameters:    Size  Location     Type
 10522 ;;		None
 10523 ;; Auto vars:     Size  Location     Type
 10524 ;;		None
 10525 ;; Return value:  Size  Location     Type
 10526 ;;                  1    wreg      void 
 10527 ;; Registers used:
 10528 ;;		None
 10529 ;; Tracked objects:
 10530 ;;		On entry : 0/0
 10531 ;;		On exit  : 0/0
 10532 ;;		Unchanged: 0/0
 10533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10534 ;;      Params:         0       0       0       0       0       0
 10535 ;;      Locals:         0       0       0       0       0       0
 10536 ;;      Temps:          0       0       0       0       0       0
 10537 ;;      Totals:         0       0       0       0       0       0
 10538 ;;Total ram usage:        0 bytes
 10539 ;; Hardware stack levels used: 1
 10540 ;; This function calls:
 10541 ;;		Nothing
 10542 ;; This function is called by:
 10543 ;;		i1_updateMotor
 10544 ;; This function uses a non-reentrant model
 10545 ;;
 10546                           
 10547     0FA1                     i1_TMR4_StartTimer:	
 10548                           ;psect for function i1_TMR4_StartTimer
 10549                           
 10550     0FA1                     i1l2722:	
 10551                           ;incstack = 0
 10552                           ; Regs used in i1_TMR4_StartTimer: []
 10553                           
 10554                           
 10555                           ;mcc_generated_files/tmr4.c: 90:     T4CONbits.TMR4ON = 1;
 10556     0FA1  0028               	movlb	8	; select bank8
 10557     0FA2  1517               	bsf	23,2	;volatile
 10558     0FA3                     i1l676:
 10559     0FA3  0008               	return
 10560     0FA4                     __end_ofi1_TMR4_StartTimer:
 10561                           
 10562                           	psect	text78
 10563     04A3                     __ptext78:	
 10564 ;; *************** function i1_updateMatrix *****************
 10565 ;; Defined at:
 10566 ;;		line 104 in file "main.c"
 10567 ;; Parameters:    Size  Location     Type
 10568 ;;		None
 10569 ;; Auto vars:     Size  Location     Type
 10570 ;;  direction       1    6[COMMON] unsigned char 
 10571 ;; Return value:  Size  Location     Type
 10572 ;;                  1    wreg      void 
 10573 ;; Registers used:
 10574 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10575 ;; Tracked objects:
 10576 ;;		On entry : 0/0
 10577 ;;		On exit  : 0/0
 10578 ;;		Unchanged: 0/0
 10579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10580 ;;      Params:         0       0       0       0       0       0
 10581 ;;      Locals:         1       0       0       0       0       0
 10582 ;;      Temps:          0       0       0       0       0       0
 10583 ;;      Totals:         1       0       0       0       0       0
 10584 ;;Total ram usage:        1 bytes
 10585 ;; Hardware stack levels used: 1
 10586 ;; Hardware stack levels required when called: 3
 10587 ;; This function calls:
 10588 ;;		i1_sendMatrix
 10589 ;;		i1_setMatrix
 10590 ;; This function is called by:
 10591 ;;		_TMR4_Interrupt
 10592 ;;		_TMR6_Interrupt
 10593 ;;		_S1_Interrupt
 10594 ;;		_S2_Interrupt
 10595 ;;		_S3_Interrupt
 10596 ;;		_S4_Interrupt
 10597 ;; This function uses a non-reentrant model
 10598 ;;
 10599                           
 10600     04A3                     i1_updateMatrix:	
 10601                           ;psect for function i1_updateMatrix
 10602                           
 10603     04A3                     i1l2818:	
 10604                           ;incstack = 0
 10605                           ; Regs used in i1_updateMatrix: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10606                           
 10607                           
 10608                           ;main.c: 105:     setMatrix(0, currentFloor);
 10609     04A3  0020               	movlb	0	; select bank0
 10610     04A4  0864               	movf	_currentFloor,w
 10611     04A5  00F1               	movwf	i1setMatrix@val
 10612     04A6  3000               	movlw	0
 10613     04A7  3184  2457  3184   	fcall	i1_setMatrix
 10614     04AA                     i1l2820:
 10615     04AA                     i1l2822:
 10616                           
 10617                           ;main.c: 108:     if(motorState==0){
 10618     04AA  0020               	movlb	0	; select bank0
 10619     04AB  084F               	movf	_motorState,w
 10620     04AC  1D03               	btfss	3,2
 10621     04AD  2CAF               	goto	u132_21
 10622     04AE  2CB0               	goto	u132_20
 10623     04AF                     u132_21:
 10624     04AF  2CB3               	goto	i1l2826
 10625     04B0                     u132_20:
 10626     04B0                     i1l2824:
 10627                           
 10628                           ;main.c: 109:         direction = 12;
 10629     04B0  300C               	movlw	12
 10630     04B1  00F6               	movwf	i1updateMatrix@direction
 10631                           
 10632                           ;main.c: 110:     } else if(motorState==1){
 10633     04B2  2CBD               	goto	i1l2832
 10634     04B3                     i1l2826:
 10635     04B3  034F               	decf	_motorState,w
 10636     04B4  1D03               	btfss	3,2
 10637     04B5  2CB7               	goto	u133_21
 10638     04B6  2CB8               	goto	u133_20
 10639     04B7                     u133_21:
 10640     04B7  2CBB               	goto	i1l2830
 10641     04B8                     u133_20:
 10642     04B8                     i1l2828:
 10643                           
 10644                           ;main.c: 111:         direction = 10;
 10645     04B8  300A               	movlw	10
 10646     04B9  00F6               	movwf	i1updateMatrix@direction
 10647                           
 10648                           ;main.c: 112:     } else{
 10649     04BA  2CBD               	goto	i1l2832
 10650     04BB                     i1l2830:
 10651                           
 10652                           ;main.c: 113:         direction = 11;
 10653     04BB  300B               	movlw	11
 10654     04BC  00F6               	movwf	i1updateMatrix@direction
 10655     04BD                     i1l2832:
 10656                           
 10657                           ;main.c: 116:     setMatrix(4, direction);
 10658     04BD  0876               	movf	i1updateMatrix@direction,w
 10659     04BE  00F1               	movwf	i1setMatrix@val
 10660     04BF  3004               	movlw	4
 10661     04C0  3184  2457  3184   	fcall	i1_setMatrix
 10662     04C3                     i1l2834:
 10663                           
 10664                           ;main.c: 117:     sendMatrix();
 10665     04C3  3185  25C5  3184   	fcall	i1_sendMatrix
 10666     04C6                     i1l841:
 10667     04C6  0008               	return
 10668     04C7                     __end_ofi1_updateMatrix:
 10669                           
 10670                           	psect	text79
 10671     0457                     __ptext79:	
 10672 ;; *************** function i1_setMatrix *****************
 10673 ;; Defined at:
 10674 ;;		line 105 in file "ledMatrix.c"
 10675 ;; Parameters:    Size  Location     Type
 10676 ;;  pos             1    wreg     unsigned char 
 10677 ;;  val             1    1[COMMON] unsigned char 
 10678 ;; Auto vars:     Size  Location     Type
 10679 ;;  pos             1    3[COMMON] unsigned char 
 10680 ;;  i               1    5[COMMON] unsigned char 
 10681 ;;  eeAdd           1    4[COMMON] unsigned char 
 10682 ;; Return value:  Size  Location     Type
 10683 ;;                  1    wreg      void 
 10684 ;; Registers used:
 10685 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10686 ;; Tracked objects:
 10687 ;;		On entry : 0/0
 10688 ;;		On exit  : 0/0
 10689 ;;		Unchanged: 0/0
 10690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10691 ;;      Params:         1       0       0       0       0       0
 10692 ;;      Locals:         3       0       0       0       0       0
 10693 ;;      Temps:          1       0       0       0       0       0
 10694 ;;      Totals:         5       0       0       0       0       0
 10695 ;;Total ram usage:        5 bytes
 10696 ;; Hardware stack levels used: 1
 10697 ;; Hardware stack levels required when called: 1
 10698 ;; This function calls:
 10699 ;;		i1_DATAEE_ReadByte
 10700 ;; This function is called by:
 10701 ;;		i1_updateMatrix
 10702 ;; This function uses a non-reentrant model
 10703 ;;
 10704                           
 10705     0457                     i1_setMatrix:	
 10706                           ;psect for function i1_setMatrix
 10707                           
 10708                           
 10709                           ;incstack = 0
 10710                           ; Regs used in i1_setMatrix: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10711                           ;i1setMatrix@pos stored from wreg
 10712     0457  00F3               	movwf	i1setMatrix@pos
 10713     0458                     i1l2752:
 10714                           
 10715                           ;ledMatrix.c: 109:  uint8_t eeAdd = val<<2;
 10716     0458  0871               	movf	i1setMatrix@val,w
 10717     0459  00F2               	movwf	??i1_setMatrix
 10718     045A  3001               	movlw	1
 10719     045B                     u125_25:
 10720     045B  35F2               	lslf	??i1_setMatrix,f
 10721     045C  3EFF               	addlw	-1
 10722     045D  1D03               	skipz
 10723     045E  2C5B               	goto	u125_25
 10724     045F  3572               	lslf	??i1_setMatrix,w
 10725     0460  00F4               	movwf	i1setMatrix@eeAdd
 10726     0461                     i1l2754:
 10727                           
 10728                           ;ledMatrix.c: 110:  for(uint8_t i=0;i<4;i++){
 10729     0461  01F5               	clrf	i1setMatrix@i
 10730     0462                     i1l2760:
 10731                           
 10732                           ;ledMatrix.c: 111:   matrix[pos++]=DATAEE_ReadByte(eeAdd++);
 10733     0462  0873               	movf	i1setMatrix@pos,w
 10734     0463  3E39               	addlw	(low (_matrix| 0))& (0+255)
 10735     0464  0086               	movwf	6
 10736     0465  0187               	clrf	7
 10737     0466  0874               	movf	i1setMatrix@eeAdd,w
 10738     0467  3187  277F  3184   	fcall	i1_DATAEE_ReadByte
 10739     046A  0081               	movwf	1
 10740     046B                     i1l2762:
 10741     046B  3001               	movlw	1
 10742     046C  00F2               	movwf	??i1_setMatrix
 10743     046D  0872               	movf	??i1_setMatrix,w
 10744     046E  07F4               	addwf	i1setMatrix@eeAdd,f
 10745     046F                     i1l2764:
 10746     046F  3001               	movlw	1
 10747     0470  00F2               	movwf	??i1_setMatrix
 10748     0471  0872               	movf	??i1_setMatrix,w
 10749     0472  07F3               	addwf	i1setMatrix@pos,f
 10750     0473                     i1l2766:
 10751                           
 10752                           ;ledMatrix.c: 112:     }
 10753     0473  3001               	movlw	1
 10754     0474  00F2               	movwf	??i1_setMatrix
 10755     0475  0872               	movf	??i1_setMatrix,w
 10756     0476  07F5               	addwf	i1setMatrix@i,f
 10757     0477                     i1l2768:
 10758     0477  3004               	movlw	4
 10759     0478  0275               	subwf	i1setMatrix@i,w
 10760     0479  1C03               	skipc
 10761     047A  2C7C               	goto	u126_21
 10762     047B  2C7D               	goto	u126_20
 10763     047C                     u126_21:
 10764     047C  2C62               	goto	i1l2760
 10765     047D                     u126_20:
 10766     047D                     i1l925:
 10767     047D  0008               	return
 10768     047E                     __end_ofi1_setMatrix:
 10769                           
 10770                           	psect	text80
 10771     077F                     __ptext80:	
 10772 ;; *************** function i1_DATAEE_ReadByte *****************
 10773 ;; Defined at:
 10774 ;;		line 211 in file "mcc_generated_files/memory.c"
 10775 ;; Parameters:    Size  Location     Type
 10776 ;;  bAdd            1    wreg     unsigned char 
 10777 ;; Auto vars:     Size  Location     Type
 10778 ;;  bAdd            1    0[COMMON] unsigned char 
 10779 ;; Return value:  Size  Location     Type
 10780 ;;                  1    wreg      unsigned char 
 10781 ;; Registers used:
 10782 ;;		wreg
 10783 ;; Tracked objects:
 10784 ;;		On entry : 0/0
 10785 ;;		On exit  : 0/0
 10786 ;;		Unchanged: 0/0
 10787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10788 ;;      Params:         0       0       0       0       0       0
 10789 ;;      Locals:         1       0       0       0       0       0
 10790 ;;      Temps:          0       0       0       0       0       0
 10791 ;;      Totals:         1       0       0       0       0       0
 10792 ;;Total ram usage:        1 bytes
 10793 ;; Hardware stack levels used: 1
 10794 ;; This function calls:
 10795 ;;		Nothing
 10796 ;; This function is called by:
 10797 ;;		i1_setMatrix
 10798 ;; This function uses a non-reentrant model
 10799 ;;
 10800                           
 10801     077F                     i1_DATAEE_ReadByte:	
 10802                           ;psect for function i1_DATAEE_ReadByte
 10803                           
 10804                           
 10805                           ;incstack = 0
 10806                           ; Regs used in i1_DATAEE_ReadByte: [wreg]
 10807                           ;i1DATAEE_ReadByte@bAdd stored from wreg
 10808     077F  00F0               	movwf	i1DATAEE_ReadByte@bAdd
 10809     0780                     i1l2704:
 10810                           
 10811                           ;mcc_generated_files/memory.c: 211: uint8_t DATAEE_ReadByte(uint8_t bAdd);mcc_generated_
      +                          files/memory.c: 212: {;mcc_generated_files/memory.c: 213:     EEADRL = (uint8_t)(bAdd & 
      +                          0x0ff);
 10812     0780  0870               	movf	i1DATAEE_ReadByte@bAdd,w
 10813     0781  0023               	movlb	3	; select bank3
 10814     0782  0091               	movwf	17	;volatile
 10815     0783                     i1l2706:
 10816                           
 10817                           ;mcc_generated_files/memory.c: 214:     EECON1bits.CFGS = 0;
 10818     0783  1315               	bcf	21,6	;volsfr
 10819     0784                     i1l2708:
 10820                           
 10821                           ;mcc_generated_files/memory.c: 215:     EECON1bits.EEPGD = 0;
 10822     0784  1395               	bcf	21,7	;volsfr
 10823     0785                     i1l2710:
 10824                           
 10825                           ;mcc_generated_files/memory.c: 216:     EECON1bits.RD = 1;
 10826     0785  1415               	bsf	21,0	;volsfr
 10827     0786                     i1l2712:
 10828                           
 10829                           ;mcc_generated_files/memory.c: 217:     __nop();
 10830     0786  0000               	nop
 10831     0787                     i1l2714:
 10832                           
 10833                           ;mcc_generated_files/memory.c: 218:     __nop();
 10834     0787  0000               	nop
 10835                           
 10836                           ;mcc_generated_files/memory.c: 220:     return (EEDATL);
 10837     0788  0023               	movlb	3	; select bank3
 10838     0789  0813               	movf	19,w	;volatile
 10839     078A                     i1l558:
 10840     078A  0008               	return
 10841     078B                     __end_ofi1_DATAEE_ReadByte:
 10842                           
 10843                           	psect	text81
 10844     05C5                     __ptext81:	
 10845 ;; *************** function i1_sendMatrix *****************
 10846 ;; Defined at:
 10847 ;;		line 115 in file "ledMatrix.c"
 10848 ;; Parameters:    Size  Location     Type
 10849 ;;		None
 10850 ;; Auto vars:     Size  Location     Type
 10851 ;;  i               1    4[COMMON] unsigned char 
 10852 ;; Return value:  Size  Location     Type
 10853 ;;                  1    wreg      void 
 10854 ;; Registers used:
 10855 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10856 ;; Tracked objects:
 10857 ;;		On entry : 0/0
 10858 ;;		On exit  : 0/0
 10859 ;;		Unchanged: 0/0
 10860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10861 ;;      Params:         0       0       0       0       0       0
 10862 ;;      Locals:         1       0       0       0       0       0
 10863 ;;      Temps:          1       0       0       0       0       0
 10864 ;;      Totals:         2       0       0       0       0       0
 10865 ;;Total ram usage:        2 bytes
 10866 ;; Hardware stack levels used: 1
 10867 ;; Hardware stack levels required when called: 2
 10868 ;; This function calls:
 10869 ;;		i1_txMAX7219
 10870 ;; This function is called by:
 10871 ;;		i1_updateMatrix
 10872 ;; This function uses a non-reentrant model
 10873 ;;
 10874                           
 10875     05C5                     i1_sendMatrix:	
 10876                           ;psect for function i1_sendMatrix
 10877                           
 10878     05C5                     i1l2770:	
 10879                           ;incstack = 0
 10880                           ; Regs used in i1_sendMatrix: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10881                           
 10882                           
 10883                           ;ledMatrix.c: 116:     for(uint8_t i=0;i<8;i++){
 10884     05C5  01F4               	clrf	i1sendMatrix@i
 10885     05C6                     i1l2776:
 10886                           
 10887                           ;ledMatrix.c: 118:         txMAX7219(i+1,matrix[7-i]);
 10888     05C6  3040               	movlw	(low ((_matrix| 0+7)))& (0+255)
 10889     05C7  00F3               	movwf	??i1_sendMatrix
 10890     05C8  0874               	movf	i1sendMatrix@i,w
 10891     05C9  02F3               	subwf	??i1_sendMatrix,f
 10892     05CA  0873               	movf	??i1_sendMatrix,w
 10893     05CB  0086               	movwf	6
 10894     05CC  0187               	clrf	7
 10895     05CD  0801               	movf	1,w
 10896     05CE  00F1               	movwf	i1txMAX7219@dat0
 10897     05CF  0874               	movf	i1sendMatrix@i,w
 10898     05D0  3E01               	addlw	1
 10899     05D1  3185  25DF  3185   	fcall	i1_txMAX7219
 10900     05D4                     i1l2778:
 10901                           
 10902                           ;ledMatrix.c: 122:     }
 10903     05D4  3001               	movlw	1
 10904     05D5  00F3               	movwf	??i1_sendMatrix
 10905     05D6  0873               	movf	??i1_sendMatrix,w
 10906     05D7  07F4               	addwf	i1sendMatrix@i,f
 10907     05D8                     i1l2780:
 10908     05D8  3008               	movlw	8
 10909     05D9  0274               	subwf	i1sendMatrix@i,w
 10910     05DA  1C03               	skipc
 10911     05DB  2DDD               	goto	u127_21
 10912     05DC  2DDE               	goto	u127_20
 10913     05DD                     u127_21:
 10914     05DD  2DC6               	goto	i1l2776
 10915     05DE                     u127_20:
 10916     05DE                     i1l930:
 10917     05DE  0008               	return
 10918     05DF                     __end_ofi1_sendMatrix:
 10919                           
 10920                           	psect	text82
 10921     05DF                     __ptext82:	
 10922 ;; *************** function i1_txMAX7219 *****************
 10923 ;; Defined at:
 10924 ;;		line 74 in file "ledMatrix.c"
 10925 ;; Parameters:    Size  Location     Type
 10926 ;;  addr0           1    wreg     unsigned char 
 10927 ;;  dat0            1    1[COMMON] unsigned char 
 10928 ;; Auto vars:     Size  Location     Type
 10929 ;;  addr0           1    2[COMMON] unsigned char 
 10930 ;; Return value:  Size  Location     Type
 10931 ;;                  1    wreg      void 
 10932 ;; Registers used:
 10933 ;;		wreg, status,2, status,0, pclath, cstack
 10934 ;; Tracked objects:
 10935 ;;		On entry : 0/0
 10936 ;;		On exit  : 0/0
 10937 ;;		Unchanged: 0/0
 10938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10939 ;;      Params:         1       0       0       0       0       0
 10940 ;;      Locals:         1       0       0       0       0       0
 10941 ;;      Temps:          0       0       0       0       0       0
 10942 ;;      Totals:         2       0       0       0       0       0
 10943 ;;Total ram usage:        2 bytes
 10944 ;; Hardware stack levels used: 1
 10945 ;; Hardware stack levels required when called: 1
 10946 ;; This function calls:
 10947 ;;		i1_SPI1_WriteByte
 10948 ;; This function is called by:
 10949 ;;		i1_sendMatrix
 10950 ;; This function uses a non-reentrant model
 10951 ;;
 10952                           
 10953     05DF                     i1_txMAX7219:	
 10954                           ;psect for function i1_txMAX7219
 10955                           
 10956                           
 10957                           ;incstack = 0
 10958                           ; Regs used in i1_txMAX7219: [wreg+status,2+status,0+pclath+cstack]
 10959                           ;i1txMAX7219@addr0 stored from wreg
 10960     05DF  00F2               	movwf	i1txMAX7219@addr0
 10961     05E0                     i1l907:	
 10962                           ;ledMatrix.c: 75:     do { LATBbits.LATB1 = 0; } while(0);
 10963                           
 10964     05E0  0022               	movlb	2	; select bank2
 10965     05E1  108D               	bcf	13,1	;volatile
 10966     05E2                     i1l2718:
 10967                           
 10968                           ;ledMatrix.c: 76:     SPI1_WriteByte(addr0);
 10969     05E2  0872               	movf	i1txMAX7219@addr0,w
 10970     05E3  318F  27B8  3185   	fcall	i1_SPI1_WriteByte
 10971     05E6                     i1l909:	
 10972                           ;ledMatrix.c: 77:     while(!PIR1bits.SSP1IF);
 10973                           
 10974     05E6  0020               	movlb	0	; select bank0
 10975     05E7  1D91               	btfss	17,3	;volatile
 10976     05E8  2DEA               	goto	u119_21
 10977     05E9  2DEB               	goto	u119_20
 10978     05EA                     u119_21:
 10979     05EA  2DE6               	goto	i1l909
 10980     05EB                     u119_20:
 10981     05EB                     i1l911:
 10982                           
 10983                           ;ledMatrix.c: 78:     PIR1bits.SSP1IF = 0;
 10984     05EB  1191               	bcf	17,3	;volatile
 10985     05EC                     i1l2720:
 10986                           
 10987                           ;ledMatrix.c: 79:     SPI1_WriteByte(dat0);
 10988     05EC  0871               	movf	i1txMAX7219@dat0,w
 10989     05ED  318F  27B8  3185   	fcall	i1_SPI1_WriteByte
 10990     05F0                     i1l912:	
 10991                           ;ledMatrix.c: 80:     while(!PIR1bits.SSP1IF);
 10992                           
 10993     05F0  0020               	movlb	0	; select bank0
 10994     05F1  1D91               	btfss	17,3	;volatile
 10995     05F2  2DF4               	goto	u120_21
 10996     05F3  2DF5               	goto	u120_20
 10997     05F4                     u120_21:
 10998     05F4  2DF0               	goto	i1l912
 10999     05F5                     u120_20:
 11000     05F5                     i1l914:
 11001                           
 11002                           ;ledMatrix.c: 81:     PIR1bits.SSP1IF = 0;
 11003     05F5  1191               	bcf	17,3	;volatile
 11004     05F6                     i1l915:	
 11005                           ;ledMatrix.c: 82:     do { LATBbits.LATB1 = 1; } while(0);
 11006                           
 11007     05F6  0022               	movlb	2	; select bank2
 11008     05F7  148D               	bsf	13,1	;volatile
 11009     05F8                     i1l917:
 11010     05F8  0008               	return
 11011     05F9                     __end_ofi1_txMAX7219:
 11012                           
 11013                           	psect	text83
 11014     0FB8                     __ptext83:	
 11015 ;; *************** function i1_SPI1_WriteByte *****************
 11016 ;; Defined at:
 11017 ;;		line 131 in file "mcc_generated_files/spi1.c"
 11018 ;; Parameters:    Size  Location     Type
 11019 ;;  byte            1    wreg     unsigned char 
 11020 ;; Auto vars:     Size  Location     Type
 11021 ;;  byte            1    0[COMMON] unsigned char 
 11022 ;; Return value:  Size  Location     Type
 11023 ;;                  1    wreg      void 
 11024 ;; Registers used:
 11025 ;;		wreg
 11026 ;; Tracked objects:
 11027 ;;		On entry : 0/0
 11028 ;;		On exit  : 0/0
 11029 ;;		Unchanged: 0/0
 11030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11031 ;;      Params:         0       0       0       0       0       0
 11032 ;;      Locals:         1       0       0       0       0       0
 11033 ;;      Temps:          0       0       0       0       0       0
 11034 ;;      Totals:         1       0       0       0       0       0
 11035 ;;Total ram usage:        1 bytes
 11036 ;; Hardware stack levels used: 1
 11037 ;; This function calls:
 11038 ;;		Nothing
 11039 ;; This function is called by:
 11040 ;;		i1_txMAX7219
 11041 ;; This function uses a non-reentrant model
 11042 ;;
 11043                           
 11044     0FB8                     i1_SPI1_WriteByte:	
 11045                           ;psect for function i1_SPI1_WriteByte
 11046                           
 11047                           
 11048                           ;incstack = 0
 11049                           ; Regs used in i1_SPI1_WriteByte: [wreg]
 11050                           ;i1SPI1_WriteByte@byte stored from wreg
 11051     0FB8  00F0               	movwf	i1SPI1_WriteByte@byte
 11052     0FB9                     i1l2700:
 11053                           
 11054                           ;mcc_generated_files/spi1.c: 131: void SPI1_WriteByte(uint8_t byte);mcc_generated_files/
      +                          spi1.c: 132: {;mcc_generated_files/spi1.c: 133:     SSP1BUF = byte;
 11055     0FB9  0870               	movf	i1SPI1_WriteByte@byte,w
 11056     0FBA  0024               	movlb	4	; select bank4
 11057     0FBB  0091               	movwf	17	;volatile
 11058     0FBC                     i1l58:
 11059     0FBC  0008               	return
 11060     0FBD                     __end_ofi1_SPI1_WriteByte:
 11061                           
 11062                           	psect	text84
 11063     0F9E                     __ptext84:	
 11064 ;; *************** function _TMR6_StartTimer *****************
 11065 ;; Defined at:
 11066 ;;		line 87 in file "mcc_generated_files/tmr6.c"
 11067 ;; Parameters:    Size  Location     Type
 11068 ;;		None
 11069 ;; Auto vars:     Size  Location     Type
 11070 ;;		None
 11071 ;; Return value:  Size  Location     Type
 11072 ;;                  1    wreg      void 
 11073 ;; Registers used:
 11074 ;;		None
 11075 ;; Tracked objects:
 11076 ;;		On entry : 0/0
 11077 ;;		On exit  : 0/0
 11078 ;;		Unchanged: 0/0
 11079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11080 ;;      Params:         0       0       0       0       0       0
 11081 ;;      Locals:         0       0       0       0       0       0
 11082 ;;      Temps:          0       0       0       0       0       0
 11083 ;;      Totals:         0       0       0       0       0       0
 11084 ;;Total ram usage:        0 bytes
 11085 ;; Hardware stack levels used: 1
 11086 ;; This function calls:
 11087 ;;		Nothing
 11088 ;; This function is called by:
 11089 ;;		_S1_Interrupt
 11090 ;;		_S2_Interrupt
 11091 ;;		_S3_Interrupt
 11092 ;;		_S4_Interrupt
 11093 ;; This function uses a non-reentrant model
 11094 ;;
 11095                           
 11096     0F9E                     _TMR6_StartTimer:	
 11097                           ;psect for function _TMR6_StartTimer
 11098                           
 11099     0F9E                     i1l2784:	
 11100                           ;incstack = 0
 11101                           ; Regs used in _TMR6_StartTimer: []
 11102                           
 11103                           
 11104                           ;mcc_generated_files/tmr6.c: 90:     T6CONbits.TMR6ON = 1;
 11105     0F9E  0028               	movlb	8	; select bank8
 11106     0F9F  151E               	bsf	30,2	;volatile
 11107     0FA0                     i1l622:
 11108     0FA0  0008               	return
 11109     0FA1                     __end_of_TMR6_StartTimer:
 11110                           
 11111                           	psect	text85
 11112     0689                     __ptext85:	
 11113 ;; *************** function _CCP4_CaptureISR *****************
 11114 ;; Defined at:
 11115 ;;		line 89 in file "mcc_generated_files/ccp4.c"
 11116 ;; Parameters:    Size  Location     Type
 11117 ;;		None
 11118 ;; Auto vars:     Size  Location     Type
 11119 ;;  module          2    3[COMMON] struct CCPR4Reg_tag
 11120 ;; Return value:  Size  Location     Type
 11121 ;;                  1    wreg      void 
 11122 ;; Registers used:
 11123 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11124 ;; Tracked objects:
 11125 ;;		On entry : 0/0
 11126 ;;		On exit  : 0/0
 11127 ;;		Unchanged: 0/0
 11128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11129 ;;      Params:         0       0       0       0       0       0
 11130 ;;      Locals:         2       0       0       0       0       0
 11131 ;;      Temps:          0       0       0       0       0       0
 11132 ;;      Totals:         2       0       0       0       0       0
 11133 ;;Total ram usage:        2 bytes
 11134 ;; Hardware stack levels used: 1
 11135 ;; Hardware stack levels required when called: 2
 11136 ;; This function calls:
 11137 ;;		Absolute function
 11138 ;;		_CCP4_DefaultCallBack
 11139 ;;		_CCP4_Interrupt
 11140 ;; This function is called by:
 11141 ;;		_INTERRUPT_InterruptManager
 11142 ;; This function uses a non-reentrant model
 11143 ;;
 11144                           
 11145     0689                     _CCP4_CaptureISR:	
 11146                           ;psect for function _CCP4_CaptureISR
 11147                           
 11148     0689                     i1l3404:	
 11149                           ;incstack = 0
 11150                           ; Regs used in _CCP4_CaptureISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11151                           
 11152                           
 11153                           ;mcc_generated_files/ccp4.c: 91:     CCP4_PERIOD_REG_T module;;mcc_generated_files/ccp4.
      +                          c: 94:     PIR3bits.CCP4IF = 0;
 11154     0689  0020               	movlb	0	; select bank0
 11155     068A  1293               	bcf	19,5	;volatile
 11156     068B                     i1l3406:
 11157                           
 11158                           ;mcc_generated_files/ccp4.c: 97:     module.ccpr4l = CCPR4L;
 11159     068B  0026               	movlb	6	; select bank6
 11160     068C  0818               	movf	24,w	;volatile
 11161     068D  00F3               	movwf	CCP4_CaptureISR@module
 11162                           
 11163                           ;mcc_generated_files/ccp4.c: 98:     module.ccpr4h = CCPR4H;
 11164     068E  0819               	movf	25,w	;volatile
 11165     068F  00F4               	movwf	CCP4_CaptureISR@module+1
 11166     0690                     i1l3408:
 11167                           
 11168                           ;mcc_generated_files/ccp4.c: 101:     CCP4_CallBack(module.ccpr4_16Bit);
 11169     0690  0874               	movf	CCP4_CaptureISR@module+1,w
 11170     0691  00F1               	movwf	CCP4_Interrupt@capturedValue+1
 11171     0692  0873               	movf	CCP4_CaptureISR@module,w
 11172     0693  00F0               	movwf	CCP4_Interrupt@capturedValue
 11173     0694  0020               	movlb	0	; select bank0
 11174     0695  082D               	movf	_CCP4_CallBack+1,w
 11175     0696  008A               	movwf	10
 11176     0697  082C               	movf	_CCP4_CallBack,w
 11177     0698  000A               	callw
 11178     0699  3186               	pagesel	$
 11179     069A                     i1l305:
 11180     069A  0008               	return
 11181     069B                     __end_of_CCP4_CaptureISR:
 11182                           
 11183                           	psect	text86
 11184     0F9A                     __ptext86:	
 11185 ;; *************** function _CCP4_DefaultCallBack *****************
 11186 ;; Defined at:
 11187 ;;		line 60 in file "mcc_generated_files/ccp4.c"
 11188 ;; Parameters:    Size  Location     Type
 11189 ;;  capturedValu    2    0[COMMON] unsigned short 
 11190 ;; Auto vars:     Size  Location     Type
 11191 ;;		None
 11192 ;; Return value:  Size  Location     Type
 11193 ;;                  1    wreg      void 
 11194 ;; Registers used:
 11195 ;;		None
 11196 ;; Tracked objects:
 11197 ;;		On entry : 0/0
 11198 ;;		On exit  : 0/0
 11199 ;;		Unchanged: 0/0
 11200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11201 ;;      Params:         2       0       0       0       0       0
 11202 ;;      Locals:         0       0       0       0       0       0
 11203 ;;      Temps:          0       0       0       0       0       0
 11204 ;;      Totals:         2       0       0       0       0       0
 11205 ;;Total ram usage:        2 bytes
 11206 ;; Hardware stack levels used: 1
 11207 ;; This function calls:
 11208 ;;		Nothing
 11209 ;; This function is called by:
 11210 ;;		_CCP4_Initialize
 11211 ;;		_CCP4_CaptureISR
 11212 ;; This function uses a non-reentrant model
 11213 ;;
 11214                           
 11215     0F9A                     _CCP4_DefaultCallBack:	
 11216                           ;psect for function _CCP4_DefaultCallBack
 11217                           
 11218     0F9A                     i1l299:	
 11219                           ;incstack = 0
 11220                           ; Regs used in _CCP4_DefaultCallBack: []
 11221                           
 11222     0F9A  0008               	return
 11223     0F9B                     __end_of_CCP4_DefaultCallBack:
 11224                           
 11225                           	psect	text87
 11226     0315                     __ptext87:	
 11227 ;; *************** function _CCP4_Interrupt *****************
 11228 ;; Defined at:
 11229 ;;		line 169 in file "main.c"
 11230 ;; Parameters:    Size  Location     Type
 11231 ;;  capturedValu    2    0[COMMON] unsigned short 
 11232 ;; Auto vars:     Size  Location     Type
 11233 ;;		None
 11234 ;; Return value:  Size  Location     Type
 11235 ;;                  1    wreg      void 
 11236 ;; Registers used:
 11237 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11238 ;; Tracked objects:
 11239 ;;		On entry : 0/0
 11240 ;;		On exit  : 0/0
 11241 ;;		Unchanged: 0/0
 11242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11243 ;;      Params:         2       0       0       0       0       0
 11244 ;;      Locals:         0       0       0       0       0       0
 11245 ;;      Temps:          1       0       0       0       0       0
 11246 ;;      Totals:         3       0       0       0       0       0
 11247 ;;Total ram usage:        3 bytes
 11248 ;; Hardware stack levels used: 1
 11249 ;; Hardware stack levels required when called: 1
 11250 ;; This function calls:
 11251 ;;		_TMR1_HasOverflowOccured
 11252 ;; This function is called by:
 11253 ;;		_main
 11254 ;;		_CCP4_CaptureISR
 11255 ;; This function uses a non-reentrant model
 11256 ;;
 11257                           
 11258     0315                     _CCP4_Interrupt:	
 11259                           ;psect for function _CCP4_Interrupt
 11260                           
 11261     0315                     i1l3306:	
 11262                           ;incstack = 0
 11263                           ; Regs used in _CCP4_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11264                           
 11265                           
 11266                           ;main.c: 170:     if(PORTAbits.RA7){
 11267     0315  0020               	movlb	0	; select bank0
 11268     0316  1F8C               	btfss	12,7	;volatile
 11269     0317  2B19               	goto	u181_21
 11270     0318  2B1A               	goto	u181_20
 11271     0319                     u181_21:
 11272     0319  2B1F               	goto	i1l3310
 11273     031A                     u181_20:
 11274     031A                     i1l3308:
 11275                           
 11276                           ;main.c: 171:         position++;
 11277     031A  3001               	movlw	1
 11278     031B  00F2               	movwf	??_CCP4_Interrupt
 11279     031C  0872               	movf	??_CCP4_Interrupt,w
 11280     031D  07E2               	addwf	_position,f
 11281                           
 11282                           ;main.c: 172:     } else{
 11283     031E  2B21               	goto	i1l3312
 11284     031F                     i1l3310:
 11285                           
 11286                           ;main.c: 173:         position--;
 11287     031F  3001               	movlw	1
 11288     0320  02E2               	subwf	_position,f
 11289     0321                     i1l3312:
 11290                           
 11291                           ;main.c: 175:     if(TMR1_HasOverflowOccured()){
 11292     0321  318F  27B0  3183   	fcall	_TMR1_HasOverflowOccured
 11293     0324  3A00               	xorlw	0
 11294     0325  1903               	skipnz
 11295     0326  2B28               	goto	u182_21
 11296     0327  2B29               	goto	u182_20
 11297     0328                     u182_21:
 11298     0328  2B35               	goto	i1l3318
 11299     0329                     u182_20:
 11300     0329                     i1l3314:
 11301                           
 11302                           ;main.c: 176:         velocity[++velocity_idx] = 0;
 11303     0329  3001               	movlw	1
 11304     032A  00F2               	movwf	??_CCP4_Interrupt
 11305     032B  0872               	movf	??_CCP4_Interrupt,w
 11306     032C  0020               	movlb	0	; select bank0
 11307     032D  07CB               	addwf	_velocity_idx,f
 11308     032E  084B               	movf	_velocity_idx,w
 11309     032F  3EA0               	addlw	(low (_velocity| 0))& (0+255)
 11310     0330  0086               	movwf	6
 11311     0331  0187               	clrf	7
 11312     0332  0181               	clrf	1
 11313     0333                     i1l3316:
 11314                           
 11315                           ;main.c: 177:         PIR1bits.TMR1IF = 0;
 11316     0333  1011               	bcf	17,0	;volatile
 11317                           
 11318                           ;main.c: 178:     } else{
 11319     0334  2B40               	goto	i1l3320
 11320     0335                     i1l3318:
 11321                           
 11322                           ;main.c: 179:         velocity[++velocity_idx] = capturedValue;
 11323     0335  3001               	movlw	1
 11324     0336  00F2               	movwf	??_CCP4_Interrupt
 11325     0337  0872               	movf	??_CCP4_Interrupt,w
 11326     0338  0020               	movlb	0	; select bank0
 11327     0339  07CB               	addwf	_velocity_idx,f
 11328     033A  084B               	movf	_velocity_idx,w
 11329     033B  3EA0               	addlw	(low (_velocity| 0))& (0+255)
 11330     033C  0086               	movwf	6
 11331     033D  0187               	clrf	7
 11332     033E  0870               	movf	CCP4_Interrupt@capturedValue,w
 11333     033F  0081               	movwf	1
 11334     0340                     i1l3320:
 11335                           
 11336                           ;main.c: 181:     if(velocity_idx>15){
 11337     0340  3010               	movlw	16
 11338     0341  024B               	subwf	_velocity_idx,w
 11339     0342  1C03               	skipc
 11340     0343  2B45               	goto	u183_21
 11341     0344  2B46               	goto	u183_20
 11342     0345                     u183_21:
 11343     0345  2B47               	goto	i1l863
 11344     0346                     u183_20:
 11345     0346                     i1l3322:
 11346                           
 11347                           ;main.c: 182:         velocity_idx = 0;
 11348     0346  01CB               	clrf	_velocity_idx
 11349     0347                     i1l863:
 11350     0347  0008               	return
 11351     0348                     __end_of_CCP4_Interrupt:
 11352                           
 11353                           	psect	text88
 11354     0FB0                     __ptext88:	
 11355 ;; *************** function _TMR1_HasOverflowOccured *****************
 11356 ;; Defined at:
 11357 ;;		line 150 in file "mcc_generated_files/tmr1.c"
 11358 ;; Parameters:    Size  Location     Type
 11359 ;;		None
 11360 ;; Auto vars:     Size  Location     Type
 11361 ;;		None
 11362 ;; Return value:  Size  Location     Type
 11363 ;;                  1    wreg      _Bool 
 11364 ;; Registers used:
 11365 ;;		wreg, status,2, status,0
 11366 ;; Tracked objects:
 11367 ;;		On entry : 0/0
 11368 ;;		On exit  : 0/0
 11369 ;;		Unchanged: 0/0
 11370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11371 ;;      Params:         0       0       0       0       0       0
 11372 ;;      Locals:         0       0       0       0       0       0
 11373 ;;      Temps:          0       0       0       0       0       0
 11374 ;;      Totals:         0       0       0       0       0       0
 11375 ;;Total ram usage:        0 bytes
 11376 ;; Hardware stack levels used: 1
 11377 ;; This function calls:
 11378 ;;		Nothing
 11379 ;; This function is called by:
 11380 ;;		_CCP4_Interrupt
 11381 ;; This function uses a non-reentrant model
 11382 ;;
 11383                           
 11384     0FB0                     _TMR1_HasOverflowOccured:	
 11385                           ;psect for function _TMR1_HasOverflowOccured
 11386                           
 11387     0FB0                     i1l2866:	
 11388                           ;incstack = 0
 11389                           ; Regs used in _TMR1_HasOverflowOccured: [wreg+status,2+status,0]
 11390                           
 11391                           
 11392                           ;mcc_generated_files/tmr1.c: 153:     return(PIR1bits.TMR1IF);
 11393     0FB0  0020               	movlb	0	; select bank0
 11394     0FB1  0811               	movf	17,w	;volatile
 11395     0FB2  3901               	andlw	1
 11396     0FB3                     i1l434:
 11397     0FB3  0008               	return
 11398     0FB4                     __end_of_TMR1_HasOverflowOccured:
 11399     007E                     btemp	set	126	;btemp
 11400     007E                     int$flags	set	126
 11401     007E                     wtemp0	set	126
 11402                           
 11403                           	psect	idloc
 11404                           
 11405                           ;Config register IDLOC0 @ 0x8000
 11406                           ;	unspecified, using default values
 11407     8000                     	org	32768
 11408     8000  3FFF               	dw	16383
 11409                           
 11410                           ;Config register IDLOC1 @ 0x8001
 11411                           ;	unspecified, using default values
 11412     8001                     	org	32769
 11413     8001  3FFF               	dw	16383
 11414                           
 11415                           ;Config register IDLOC2 @ 0x8002
 11416                           ;	unspecified, using default values
 11417     8002                     	org	32770
 11418     8002  3FFF               	dw	16383
 11419                           
 11420                           ;Config register IDLOC3 @ 0x8003
 11421                           ;	unspecified, using default values
 11422     8003                     	org	32771
 11423     8003  3FFF               	dw	16383
 11424                           
 11425                           	psect	config
 11426                           
 11427                           ;Config register CONFIG1 @ 0x8007
 11428                           ;	Oscillator Selection
 11429                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 11430                           ;	Watchdog Timer Enable
 11431                           ;	WDTE = OFF, WDT disabled
 11432                           ;	Power-up Timer Enable
 11433                           ;	PWRTE = OFF, PWRT disabled
 11434                           ;	MCLR Pin Function Select
 11435                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 11436                           ;	Flash Program Memory Code Protection
 11437                           ;	CP = OFF, Program memory code protection is disabled
 11438                           ;	Data Memory Code Protection
 11439                           ;	CPD = OFF, Data memory code protection is disabled
 11440                           ;	Brown-out Reset Enable
 11441                           ;	BOREN = ON, Brown-out Reset enabled
 11442                           ;	Clock Out Enable
 11443                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 11444                           ;	Internal/External Switchover
 11445                           ;	IESO = ON, Internal/External Switchover mode is enabled
 11446                           ;	Fail-Safe Clock Monitor Enable
 11447                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 11448     8007                     	org	32775
 11449     8007  3FE4               	dw	16356
 11450                           
 11451                           ;Config register CONFIG2 @ 0x8008
 11452                           ;	Flash Memory Self-Write Protection
 11453                           ;	WRT = OFF, Write protection off
 11454                           ;	PLL Enable
 11455                           ;	PLLEN = OFF, 4x PLL disabled
 11456                           ;	Stack Overflow/Underflow Reset Enable
 11457                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 11458                           ;	Brown-out Reset Voltage Selection
 11459                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 11460                           ;	Low-Voltage Programming Enable
 11461                           ;	LVP = ON, Low-voltage programming enabled
 11462     8008                     	org	32776
 11463     8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    4
    Data        3
    BSS         39
    Persistent  57
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     18      69
    BANK1            80      8      24
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    CMP1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> S3_Interrupt(), 

    CMP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> S3_Interrupt(), Absolute function(), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_Interrupt(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_Interrupt(), TMR4_DefaultInterruptHandler(), Absolute function(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR6_Interrupt(), TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR6_Interrupt(), TMR6_DefaultInterruptHandler(), Absolute function(), 

    CMP2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> S4_Interrupt(), 

    CMP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> S4_Interrupt(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Interrupt(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Interrupt(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    CCP4_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_Interrupt(), CCP4_DefaultCallBack(), 

    CCP4_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_Interrupt(), CCP4_DefaultCallBack(), Absolute function(), 

    IOCBF3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> S2_Interrupt(), IOCBF3_DefaultInterruptHandler(), 

    IOCBF3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> S2_Interrupt(), Absolute function(), IOCBF3_DefaultInterruptHandler(), 

    IOCBF0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> S1_Interrupt(), IOCBF0_DefaultInterruptHandler(), 

    IOCBF0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> S1_Interrupt(), Absolute function(), IOCBF0_DefaultInterruptHandler(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR6_Interrupt->i1_updateMatrix
    _TMR4_Interrupt->i1_updateMatrix
    _TMR0_Interrupt->___lldiv
    _S2_Interrupt->i1_updateMatrix
    _S1_Interrupt->i1_updateMatrix
    _S4_Interrupt->i1_updateMatrix
    _S3_Interrupt->i1_updateMatrix
    i1_updateMotor->i1_sendMotor
    i1_sendMotor->i1_PWM3_LoadDutyValue
    i1_updateMatrix->i1_setMatrix
    i1_setMatrix->i1_DATAEE_ReadByte
    i1_sendMatrix->i1_txMAX7219
    i1_txMAX7219->i1_SPI1_WriteByte
    _CCP4_CaptureISR->_CCP4_Interrupt

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR0_ISR->_TMR0_Interrupt

Critical Paths under _main in BANK1

    _main->_updateMatrix
    _updateMotor->_sendMotor
    _sendMotor->_PWM3_LoadDutyValue
    _updateMatrix->_setMatrix
    _setMatrix->_DATAEE_ReadByte
    _sendMatrix->_txMAX7219
    _txMAX7219->_SPI1_WriteByte
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF3_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _CCP4_Initialize->_CCP4_SetCallBack

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    5835
                                              7 BANK1      1     1      0
                   _CCP4_SetCallBack
           _CMP1_SetInterruptHandler
           _CMP2_SetInterruptHandler
                        _EUSART_Read
                 _EUSART_is_rx_ready
         _IOCBF0_SetInterruptHandler
         _IOCBF3_SetInterruptHandler
                 _PWM3_LoadDutyValue
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
           _TMR4_SetInterruptHandler
           _TMR6_SetInterruptHandler
                       _updateMatrix
                        _updateMotor
 ---------------------------------------------------------------------------------
 (1) _updateMotor                                          0     0      0     692
                    _TMR4_StartTimer
                          _sendMotor
 ---------------------------------------------------------------------------------
 (2) _sendMotor                                            2     2      0     692
                                              4 BANK1      2     2      0
                 _PWM3_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _PWM3_LoadDutyValue                                   4     2      2     692
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _updateMatrix                                         1     1      0    1277
                                              6 BANK1      1     1      0
                         _sendMatrix
                          _setMatrix
 ---------------------------------------------------------------------------------
 (2) _setMatrix                                            5     4      1     381
                                              1 BANK1      5     4      1
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (3) _DATAEE_ReadByte                                      1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _sendMatrix                                           2     2      0     853
                                              3 BANK1      2     2      0
                          _txMAX7219
 ---------------------------------------------------------------------------------
 (3) _txMAX7219                                            2     1      1     723
                                              1 BANK1      2     1      1
                     _SPI1_WriteByte
 ---------------------------------------------------------------------------------
 (4) _SPI1_WriteByte                                       1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1629
                     _ADC_Initialize
                    _CCP4_Initialize
                    _CMP1_Initialize
                    _CMP2_Initialize
                     _DAC_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM3_Initialize
                    _SPI1_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                    _TMR6_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     211
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR6_SetInterruptHandler                             2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     211
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     422
         _IOCBF0_SetInterruptHandler
         _IOCBF3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCBF3_SetInterruptHandler                           2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCBF0_SetInterruptHandler                           2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     363
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _DAC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP4_Initialize                                      0     0      0     211
                   _CCP4_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP4_SetCallBack                                     2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CMP2_SetInterruptHandler                             2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _CMP1_SetInterruptHandler                             2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0    5009
                    _CCP4_CaptureISR
                           _CMP1_ISR
                           _CMP2_ISR
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
                           _TMR4_ISR
                           _TMR6_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR6_ISR                                             0     0      0     619
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (7) _TMR6_CallBack                                        0     0      0     619
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
                     _TMR6_Interrupt *
 ---------------------------------------------------------------------------------
 (8) _TMR6_Interrupt                                       0     0      0     619
                     _TMR6_StopTimer
                    _TMR6_WriteTimer
                     i1_updateMatrix
                      i1_updateMotor
 ---------------------------------------------------------------------------------
 (9) _TMR6_WriteTimer                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _TMR6_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR6_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR4_ISR                                             0     0      0     619
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (7) _TMR4_CallBack                                        0     0      0     619
                   Absolute function *
       _TMR4_DefaultInterruptHandler *
                     _TMR4_Interrupt *
 ---------------------------------------------------------------------------------
 (8) _TMR4_Interrupt                                       0     0      0     619
                     _TMR4_StopTimer
                    _TMR4_WriteTimer
                     i1_updateMatrix
                      i1_updateMotor
 ---------------------------------------------------------------------------------
 (9) _TMR4_WriteTimer                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _TMR4_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR4_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0    1261
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                     _TMR0_Interrupt *
 ---------------------------------------------------------------------------------
 (7) _TMR0_Interrupt                                      18    18      0    1261
                                              0 BANK0     18    18      0
                  _ADC_GetConversion
                       _EUSART_Write
                 _EUSART_is_tx_ready
                            ___lldiv
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (8) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (8) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (8) _EUSART_is_tx_ready                                   1     1      0      24
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _ADC_GetConversion                                    4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _PIN_MANAGER_IOC                                      0     0      0    1194
                         _IOCBF0_ISR
                         _IOCBF3_ISR
 ---------------------------------------------------------------------------------
 (7) _IOCBF3_ISR                                           0     0      0     597
                   Absolute function *
     _IOCBF3_DefaultInterruptHandler *
                       _S2_Interrupt *
 ---------------------------------------------------------------------------------
 (8) _S2_Interrupt                                         0     0      0     597
                    _TMR6_StartTimer
                     i1_updateMatrix
                      i1_updateMotor
 ---------------------------------------------------------------------------------
 (8) _IOCBF3_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _IOCBF0_ISR                                           0     0      0     597
                   Absolute function *
     _IOCBF0_DefaultInterruptHandler *
                       _S1_Interrupt *
 ---------------------------------------------------------------------------------
 (8) _S1_Interrupt                                         0     0      0     597
                    _TMR6_StartTimer
                     i1_updateMatrix
                      i1_updateMotor
 ---------------------------------------------------------------------------------
 (8) _IOCBF0_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CMP2_ISR                                             0     0      0     597
                   Absolute function *
                       _S4_Interrupt *
 ---------------------------------------------------------------------------------
 (7) _S4_Interrupt                                         0     0      0     597
                    _TMR6_StartTimer
                     i1_updateMatrix
                      i1_updateMotor
 ---------------------------------------------------------------------------------
 (6) _CMP1_ISR                                             0     0      0     597
                   Absolute function *
                       _S3_Interrupt *
 ---------------------------------------------------------------------------------
 (7) _S3_Interrupt                                         0     0      0     597
                    _TMR6_StartTimer
                     i1_updateMatrix
                      i1_updateMotor
 ---------------------------------------------------------------------------------
 (9) i1_updateMotor                                        0     0      0     200
                  i1_TMR4_StartTimer
                        i1_sendMotor
 ---------------------------------------------------------------------------------
 (10) i1_sendMotor                                         2     2      0     200
                                              4 COMMON     2     2      0
               i1_PWM3_LoadDutyValue
 ---------------------------------------------------------------------------------
 (11) i1_PWM3_LoadDutyValue                                4     2      2     200
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (10) i1_TMR4_StartTimer                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (9) i1_updateMatrix                                       1     1      0     397
                                              6 COMMON     1     1      0
                       i1_sendMatrix
                        i1_setMatrix
 ---------------------------------------------------------------------------------
 (10) i1_setMatrix                                         5     4      1     189
                                              1 COMMON     5     4      1
                  i1_DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (11) i1_DATAEE_ReadByte                                   1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) i1_sendMatrix                                        2     2      0     182
                                              3 COMMON     2     2      0
                        i1_txMAX7219
 ---------------------------------------------------------------------------------
 (11) i1_txMAX7219                                         2     1      1      92
                                              1 COMMON     2     1      1
                   i1_SPI1_WriteByte
 ---------------------------------------------------------------------------------
 (12) i1_SPI1_WriteByte                                    1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _TMR6_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CCP4_CaptureISR                                      2     2      0     122
                                              3 COMMON     2     2      0
                   Absolute function *
               _CCP4_DefaultCallBack *
                     _CCP4_Interrupt *
 ---------------------------------------------------------------------------------
 (7) _CCP4_Interrupt                                       3     1      2      75
                                              0 COMMON     3     1      2
            _TMR1_HasOverflowOccured
 ---------------------------------------------------------------------------------
 (8) _TMR1_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _CCP4_DefaultCallBack                                 2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CCP4_SetCallBack
   _CMP1_SetInterruptHandler
   _CMP2_SetInterruptHandler
   _EUSART_Read
   _EUSART_is_rx_ready
   _IOCBF0_SetInterruptHandler
   _IOCBF3_SetInterruptHandler
   _PWM3_LoadDutyValue
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP4_Initialize
       _CCP4_SetCallBack
     _CMP1_Initialize
     _CMP2_Initialize
     _DAC_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCBF0_SetInterruptHandler
       _IOCBF3_SetInterruptHandler
     _PWM3_Initialize
     _SPI1_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
     _TMR2_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _WDT_Initialize
   _TMR0_SetInterruptHandler
   _TMR4_SetInterruptHandler
   _TMR6_SetInterruptHandler
   _updateMatrix
     _sendMatrix
       _txMAX7219
         _SPI1_WriteByte
     _setMatrix
       _DATAEE_ReadByte
   _updateMotor
     _TMR4_StartTimer
     _sendMotor
       _PWM3_LoadDutyValue

 _INTERRUPT_InterruptManager (ROOT)
   _CCP4_CaptureISR
     Absolute function(Fake) *
     _CCP4_DefaultCallBack *
     _CCP4_Interrupt *
       _TMR1_HasOverflowOccured
   _CMP1_ISR
     Absolute function(Fake) *
     _S3_Interrupt *
       _TMR6_StartTimer
       i1_updateMatrix
         i1_sendMatrix
           i1_txMAX7219
             i1_SPI1_WriteByte
         i1_setMatrix
           i1_DATAEE_ReadByte
       i1_updateMotor
         i1_TMR4_StartTimer
         i1_sendMotor
           i1_PWM3_LoadDutyValue
   _CMP2_ISR
     Absolute function(Fake) *
     _S4_Interrupt *
       _TMR6_StartTimer
       i1_updateMatrix
       i1_updateMotor
   _PIN_MANAGER_IOC
     _IOCBF0_ISR
       Absolute function(Fake) *
       _IOCBF0_DefaultInterruptHandler *
       _S1_Interrupt *
         _TMR6_StartTimer
         i1_updateMatrix
         i1_updateMotor
     _IOCBF3_ISR
       Absolute function(Fake) *
       _IOCBF3_DefaultInterruptHandler *
       _S2_Interrupt *
         _TMR6_StartTimer
         i1_updateMatrix
         i1_updateMotor
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _TMR0_Interrupt *
       _ADC_GetConversion
       _EUSART_Write
       _EUSART_is_tx_ready
       ___lldiv
       ___lwdiv
       ___wmul
   _TMR4_ISR
     _TMR4_CallBack
       Absolute function(Fake) *
       _TMR4_DefaultInterruptHandler *
       _TMR4_Interrupt *
         _TMR4_StopTimer
         _TMR4_WriteTimer
         i1_updateMatrix
         i1_updateMotor
   _TMR6_ISR
     _TMR6_CallBack
       Absolute function(Fake) *
       _TMR6_DefaultInterruptHandler *
       _TMR6_Interrupt *
         _TMR6_StopTimer
         _TMR6_WriteTimer
         i1_updateMatrix
         i1_updateMotor

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      6B       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     12      45       6       86.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      8      18       8       30.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      6B      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Oct 02 20:44:56 2022

                              _CCP4_Initialize 0677                             SPI1_WriteByte@byte 00B0  
             ??_IOCBF3_DefaultInterruptHandler 0070                ?_IOCBF3_DefaultInterruptHandler 0070  
                                           l21 0794                                             l72 07C2  
                                           l58 0FD7                              ??_CMP1_Initialize 00B0  
                                           l75 051E                              ??_TMR6_StartTimer 0070  
                          ___wmul@multiplicand 0072                               ??_TMR6_StopTimer 0070  
                              _timer0ReloadVal 0038                                            l126 0FCB  
                                          l302 0688                                            l118 04A2  
                                          l135 06DC                                            l160 07DD  
                                          l139 06EA                                            l163 07EF  
                                          l308 07F8                                            l157 07E6  
                                          l351 0378                                            l408 0766  
                                          l257 03D6                                            l354 07FF  
                                          l370 0FED                                            l451 0650  
                                          l269 07D4                                            l701 07B0  
                                          l357 0FB7                                            l279 07CB  
                                          l467 07B9                                            l619 0663  
                                          l573 0772                                            l821 027A  
                                          l590 0FD1                                            l558 0740  
                                          l583 0FFF                                            l487 0FE5  
                                          l719 077E                                            l647 07A7  
                                          l911 04F4                                            l912 04FA  
                                          l816 0267                                            l729 0FF6  
                                          l673 0676                                            l841 0456  
                                          l825 0297                                            l914 04FF  
                                          l930 053A                                            l834 03A7  
                                          l915 0500                                            l907 04E8  
                                          l676 0FAC                                            l917 0502  
                                          l909 04EF                                            l925 042E  
                                          _PR2 001B                                            _PR4 0416  
                                          _PR6 041D                                _timer1ReloadVal 002A  
                    ?_CMP2_SetInterruptHandler 00B0                 ?_EUSART_SetFramingErrorHandler 00B0  
                              _TMR2_Initialize 0FE6                 CCP4_SetCallBack@customCallBack 00B0  
                                          wreg 0009                               _CCP4_SetCallBack 07F0  
                      __end_of_CCP4_CaptureISR 069B                                TMR0_Interrupt@i 0058  
                              TMR0_Interrupt@p 0060                                TMR0_Interrupt@t 005C  
                              TMR0_Interrupt@v 0054                                   ?_EUSART_Read 0070  
                                         l3600 0736                                           l3610 073D  
                                         l3602 0739                                           l3700 07FC  
                                         l3620 04F5                                           l3604 073A  
                                         l3710 076E                                           l3702 07FD  
                                         l3630 07BA                                           l3622 078B  
                                         l3614 079F                                           l3606 073B  
                                         l3712 0770                                           l3640 0487  
                                         l3632 07BD                                           l3624 078E  
                                         l3616 07A8                                           l3720 0668  
                                         l3704 0FB4                                           l3608 073C  
                                         l3706 0767                                           l3714 0FCC  
                                         l3642 0488                                           l3650 03A8  
                                         l3634 07BE                                           l3626 0790  
                                         l3730 0FE9                                           l3722 066A  
                                         l3618 04EA                                           l3708 0769  
                                         l3644 0490                                           l3660 03B6  
                                         l3652 03AB                                           l3636 07BF  
                                         l3628 0792                                           l3740 0644  
                                         l3732 0FEA                                           l3724 066C  
                                         l3716 0664                                           l3820 0412  
                                         l3812 0408                                           l3900 044A  
                                         l3590 07E7                                           l3646 0498  
                                         l3638 047E                                           l3670 03C0  
                                         l3662 03B7                                           l3654 03AE  
                                         l3742 0646                                           l3734 0FEB  
                                         l3726 0673                                           l3718 0667  
                                         l3750 0654                                           l3582 0FD4  
                                         l3830 051F                                           l3822 041B  
                                         l3814 0411                                           l3902 044D  
                                         l3806 0283                                           l3910 01C4  
                                         l3760 0773                                           l3648 04A0  
                                         l3592 07CC                                           l3680 03C5  
                                         l3672 03C1                                           l3664 03B9  
                                         l3656 03B2                                           l3744 0647  
                                         l3736 063C                                           l3728 0FE6  
                                         l3752 0655                                           l3840 0534  
                                         l3824 0420                                           l3904 0453  
                                         l3584 0503                                           l3920 01DA  
                                         l3912 01CD                                           l3850 06E2  
                                         l3842 0FC7                                           l3770 0FE1  
                                         l3690 067B                                           l3762 0775  
                                         l3586 07DE                                           l3594 07C3  
                                         l3682 03CD                                           l3674 03C2  
                                         l3666 03BC                                           l3658 03B4  
                                         l3746 0648                                           l3738 0641  
                                         l3754 0657                                           l3826 0424  
                                         l3922 01DF                                           l3914 01CF  
                                         l3906 0180                                           l3860 0FF7  
                                         l3852 06E7                                           l3772 0FE2  
                                         l3596 07F0                                           l3692 067C  
                                         l3764 077A                                           l3588 07D5  
                                         l3684 03D5                                           l3676 03C3  
                                         l3668 03BE                                           l3780 0764  
                                         l3756 0659                                           l3748 0651  
                                         l3836 0521                                           l3828 0428  
                                         l3924 01E7                                           l3916 01D1  
                                         l3908 01C3                                           l3862 0FEE  
                                         l3854 06E9                                           l3846 06DC  
                                         l3694 0684                                           l3686 0677  
                                         l3766 077C                                           l3678 03C4  
                                         l3598 07B1                                           l3774 075B  
                                         l3758 0660                                           l3838 052F  
                                         l3782 0FAA                                           l3870 0388  
                                         l3926 01F1                                           l3848 06E1  
                                         l3768 0FDE                                           l3696 0686  
                                         l3688 067A                                           l3776 075F  
                                         l3792 0269                                           l3784 0254  
                                         l3880 039C                                           l3872 038E  
                                         l3864 0379                                           l3928 01F4  
                                         l3698 07F9                                           l3778 0760  
                                         l3858 0348                                           l3890 0437  
                                         l3786 025A                                           l3882 039E  
                                         l3874 0390                                           l3866 0380  
                                         l3892 0437                                           l3972 028C  
                                         l3796 0271                                           l3788 025F  
                                         l3884 03A1                                           l3876 0393  
                                         l3868 0382                                           l3894 043D  
                                         l3798 027C                                           l3878 0397  
                                         l3886 03A4                                           l3896 0441  
                                         l3888 042F                                           l3898 0446  
                                         u2300 042E                                           u2301 042D  
                                         _LATA 010C                                           u2230 04F4  
                                         u2310 053A                                           _LATB 010D  
                                         u2231 04F3                                           u2311 0539  
                                         u2320 06E1                                           u2240 04FF  
                                         u2400 01D9                                           u2321 06E0  
                                         u2241 04FE                                           u2225 0514  
                                         u2401 01D8                                           u2330 06E7  
                                         u2250 025A                                           u2410 01E7  
                                         u2331 06E6                                           u2251 0259  
                                         u2411 01E6                                           u2260 025F  
                                         u2340 0380                                           u2420 01F1  
                                         u2261 025E                                           u2341 037F  
                                         u2421 01F0                                           u2270 0270  
                                         u2350 0388                                           u2271 026F  
                                         u2351 0387                                           u2280 0282  
                                         u2360 038E                                           u2281 0281  
                                         u2361 038D                                           u2370 039C  
                                         u2371 039B                                           u2380 043D  
                                         u2381 043C                                           u2390 0446  
                                         u2295 040B                                           u2391 0445  
                            ??_CMP2_Initialize 00B0                                           i1l58 0FBC  
                                         i1l75 060F                        _TMR1_HasOverflowOccured 0FB0  
                                         _TMR0 0015                                           _TMR2 001A  
                                         _TMR4 0415                                           _TMR6 041C  
                                         _WPUA 020C                                           _WPUB 020D  
                            ??_TMR6_WriteTimer 0070                                           _main 0180  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E                          i1DATAEE_ReadByte@bAdd 0070  
                                         start 006A                               __end_of_CMP1_ISR 0734  
                             __end_of_CMP2_ISR 0726                          __end_ofi1_updateMotor 0406  
                   ??_TMR4_SetInterruptHandler 00B2                                 i1_updateMatrix 04A3  
                      __end_of_TMR0_Initialize 0651                 ??_TMR0_DefaultInterruptHandler 0070  
                                ?_EUSART_Write 0070                       _CMP1_SetInterruptHandler 0FEE  
                __end_of_OSCILLATOR_Initialize 0800                                          ?_main 0070  
                                  i1_txMAX7219 05DF                         ??_CCP4_DefaultCallBack 0072  
                              __end_of___lldiv 0254                                          _T1CON 0018  
                                        _T2CON 001C                                          _T4CON 0417  
                                        _T6CON 041E                                __end_of___lwdiv 0315  
                                        i1l201 004C                                          i1l202 0068  
                                        i1l123 06F9                                          i1l203 005A  
                                        i1l142 0796                                          i1l208 0068  
                                        i1l305 069A                                          i1l145 079E  
                                        i1l262 06AB                                          i1l502 05A1  
                                        i1l272 0F9B                                          i1l192 0012  
                                        i1l505 05A9                                          i1l434 0FB3  
                                        i1l266 0717                                          i1l282 0F9C  
                                        i1l194 001E                                          i1l276 0708  
                                        i1l197 0030                                          i1l622 0FA0  
                                        i1l470 0F9D                                          i1l631 0FC6  
                                        i1l199 003E                                          i1l464 06DB  
                                        i1l704 0002                                          i1l640 0625  
                                        i1l625 0FA9                                          i1l650 0003  
                                        i1l299 0F9A                                          i1l580 0725  
                                        i1l644 074D                                          i1l821 02BC  
                                        i1l558 078A                                          i1l726 0733  
                                        i1l911 05EB                                          i1l912 05F0  
                                        i1l816 02AA                                          i1l841 04C6  
                                        i1l825 02D8                                          i1l914 05F5  
                                        i1l930 05DE                                          i1l834 0405  
                                        i1l915 05F6                                          i1l907 05E0  
                                        i1l676 0FA3                                          i1l852 06CB  
                                        i1l917 05F8                                          i1l909 05E6  
                                        i1l925 047D                                          i1l685 0FC1  
                                        i1l694 063B                                          i1l863 0347  
                                        i1l871 0556                                          i1l679 0FA6  
                                        i1l855 06BB                                          i1l849 017F  
                                        i1l698 075A                                          i1l875 058E  
                                        i1l867 05C4                                          i1l879 0572  
                                        _RCREG 0199                                          _RCSTA 019D  
                                        _TMR1H 0017                                          _TMR1L 0016  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TXREG 019A                                          _TXSTA 019E  
                              _TMR4_Initialize 0664                      ?_TMR0_SetInterruptHandler 00B0  
                    ?_TMR6_SetInterruptHandler 00B0                               __end_of_TMR0_ISR 06DC  
                             __end_of_TMR4_ISR 063C                               __end_of_TMR6_ISR 0626  
                              _DATAEE_ReadByte 0734                        __end_of_PIN_MANAGER_IOC 06AC  
                               _WDT_Initialize 0FB4                                    i1_setMatrix 0457  
                                  i1_sendMotor 0298                        __end_of_PWM3_Initialize 07C3  
                      __end_of_TMR1_Initialize 0767                                          pclath 000A  
                                        status 0003                        __end_of_CCP4_Initialize 0689  
                                        wtemp0 007E                               i1setMatrix@eeAdd 0074  
                            ?i1_SPI1_WriteByte 0070                         __end_ofi1_updateMatrix 04C7  
               ??_TMR6_DefaultInterruptHandler 0070                             ??i1_SPI1_WriteByte 0070  
                             ??_DAC_Initialize 00B0                                __initialization 006C  
                                 __end_of_main 01FA                                 ??_EUSART_Write 0070  
                      __end_of_TMR2_Initialize 0FEE                    ?_INTERRUPT_InterruptManager 0070  
                                       ??_main 00B7                        _IOCBF0_InterruptHandler 0030  
                       __end_of_WDT_Initialize 0FB8                                _TMR6_Initialize 0651  
                    ??_TMR1_HasOverflowOccured 0070                               ?_CCP4_CaptureISR 0070  
            _EUSART_DefaultFramingErrorHandler 0000                                         _ADCON0 009D  
                                       _ADCON1 009E                     _EUSART_OverrunErrorHandler 0034  
                                       _ADRESH 009C                                         _EEADRH 0192  
                                       _ADRESL 009B                                         _EEADRL 0191  
                                       _EEDATH 0194                                         _CCPR3H 0312  
                                       _CCPR4H 0319                                         _EEDATL 0193  
                                       _CCPR3L 0311                                         _CCPR4L 0318  
                                       _EECON2 0196                                         _ANSELA 018C  
                                       _ANSELB 018D                     __end_of_EUSART_is_rx_ready 0FCC  
                                       _BORCON 0116                                         _T1GCON 0019  
                                       i1l1116 0253                                         i1l3000 02E4  
                                       i1l1080 04D1                                         i1l3010 0304  
                                       i1l3002 02E9                                         i1l1082 04E5  
                                       i1l3012 0305                                         i1l3004 02ED  
                                       i1l3014 030A                                         i1l3006 02F1  
                                       u120_20 05F5                                         i1l1360 0314  
                                       i1l3008 0300                                         i1l3016 0310  
                                       i1l3200 0755                                         u120_21 05F4  
                                       i1l3300 0164                                         i1l3310 031F  
                                       i1l3302 016D                                         i1l3320 0340  
                                       i1l3312 0321                                         u121_20 029E  
                                       i1l3400 0728                                         i1l3304 0172  
                                       u121_21 029D                                         i1l3322 0346  
                                       i1l3314 0329                                         i1l3306 0315  
                                       i1l3330 0582                                         i1l3402 072E  
                                       i1l3090 06FA                                         i1l3410 0610  
                                       i1l3316 0333                                         i1l3308 031A  
                                       i1l3404 0689                                         i1l2700 0FB9  
                                       i1l3332 0585                                         i1l3324 0573  
                                       i1l3340 055E                                         i1l3084 0709  
                                       i1l3092 0701                                         i1l3260 008C  
                                       i1l3412 0612                                         i1l3500 0043  
                                       i1l3318 0335                                         i1l3406 068B  
                                       i1l2710 0785                                         i1l2702 05F9  
                                       i1l3334 0588                                         i1l3326 057A  
                                       i1l3350 056F                                         i1l3342 0564  
                                       i1l3086 0710                                         i1l3094 0706  
                                       i1l3262 0094                                         i1l3414 061F  
                                       i1l3510 0064                                         i1l3502 0048  
                                       i1l3408 0690                                         i1l2720 05EC  
                                       i1l2712 0786                                         i1l2704 0780  
                                       u122_20 02A3                                         u130_20 03EC  
                                       i1l2800 03E6                                         i1l3336 058B  
                                       i1l3328 0580                                         i1l3344 0566  
                                       i1l3088 0715                                         i1l3280 00F9  
                                       i1l3272 00BE                                         i1l3264 00A4  
                                       i1l3192 0741                                         i1l3416 0622  
                                       i1l3504 0051                                         u210_20 002C  
                                       u122_21 02A2                                         u130_21 03EB  
                                       u210_21 002B                                         i1l2714 0787  
                                       i1l2706 0783                                         i1l2722 0FA1  
                                       i1l2810 03FA                                         i1l2802 03EC  
                                       i1l3346 0569                                         i1l3338 0557  
                                       i1l3370 06A0                                         i1l3290 0156  
                                       i1l3282 0104                                         i1l3274 00D0  
                                       i1l3266 00BC                                         i1l3194 0748  
                                       i1l3506 0056                                         i1l2708 0784  
                                       i1l2820 04AA                                         i1l2732 02AC  
                                       i1l2724 0298                                         i1l2812 03FC  
                                       i1l2804 03EE                                         i1l3348 056C  
                                       i1l3372 06A3                                         i1l3292 0159  
                                       i1l3284 0137                                         i1l3276 00D4  
                                       i1l3380 06D0                                         i1l3508 005F  
                                       i1l2718 05E2                                         i1l2830 04BB  
                                       i1l2822 04AA                                         i1l2726 029E  
                                       i1l2814 03FF                                         i1l2806 03F1  
                                       i1l3374 06A8                                         i1l3294 0161  
                                       i1l3286 0143                                         i1l3278 00E1  
                                       i1l3382 06D6                                         i1l2910 06C8  
                                       i1l2902 06BC                                         i1l3198 074E  
                                       i1l3390 0638                                         i1l2760 0462  
                                       i1l2752 0458                                         i1l2832 04BD  
                                       i1l2824 04B0                                         i1l2736 02B4  
                                       u123_20 02B3                                         i1l2728 02A3  
                                       u131_20 03FA                                         i1l2808 03F5  
                                       i1l2816 0402                                         i1l3392 0718  
                                       i1l3368 069B                                         i1l3288 014C  
                                       i1l3376 06CC                                         i1l2904 06BF  
                                       i1l3384 0626                                         i1l2920 06B8  
                                       i1l2912 06AC                                         u211_20 0035  
                                       i1l3480 0006                                         u123_21 02B2  
                                       u131_21 03F9                                         u211_21 0034  
                                       i1l2770 05C5                                         i1l2762 046B  
                                       i1l2754 0461                                         i1l2834 04C3  
                                       i1l2826 04B3                                         i1l2818 04A3  
                                       i1l2738 02BE                                         i1l2746 02C5  
                                       i1l3394 071A                                         i1l2930 05B8  
                                       i1l2922 05AA                                         i1l2850 06F6  
                                       i1l3378 06CD                                         i1l2906 06C3  
                                       i1l3386 0628                                         i1l2914 06AF  
                                       i1l3490 0022                                         i1l3482 000A  
                                       i1l2780 05D8                                         i1l2764 046F  
                                       i1l2828 04B8                                         i1l3396 0720  
                                       i1l2932 05BB                                         i1l2924 05AC  
                                       i1l2940 0542                                         i1l2852 06F8  
                                       i1l2844 06EB                                         i1l2908 06C5  
                                       i1l3388 0635                                         i1l2916 06B3  
                                       i1l3492 0027                                         i1l3484 000E  
                                       i1l2766 0473                                         i1l3398 0726  
                                       i1l2934 05BE                                         i1l2926 05B1  
                                       i1l2950 0553                                         i1l2942 0548  
                                       i1l2846 06EC                                         i1l2790 0FA4  
                                       i1l2918 06B5                                         i1l3494 002C  
                                       i1l3486 0016                                         i1l2784 0F9E  
                                       i1l2776 05C6                                         i1l2768 0477  
                                       u132_20 04B0                                         u124_20 02C4  
                                       i1l2936 05C1                                         i1l2928 05B6  
                                       u140_20 05B6                                         i1l2944 054A  
                                       i1l2880 05A5                                         i1l2872 0590  
                                       i1l2856 0796                                         i1l2848 06F1  
                                       i1l2960 04CD                                         i1l2792 0FBE  
                                       u212_20 003A                                         i1l3496 0035  
                                       i1l3488 001A                                         u204_20 000A  
                                       u132_21 04AF                                         u124_21 02C3  
                                       u140_21 05B5                                         u212_21 0039  
                                       u204_21 0009                                         i1l2866 0FB0  
                                       i1l2778 05D4                                         i1l2794 03D7  
                                       i1l2946 054D                                         i1l2938 053B  
                                       i1l2874 059A                                         i1l2858 079B  
                                       i1l2970 01FA                                         i1l2962 04D6  
                                       i1l2786 0FA7                                         i1l3498 003A  
                                       i1l2796 03DE                                         i1l2948 0550  
                                       i1l2876 059B                                         i1l2980 0223  
                                       i1l2972 020A                                         i1l2964 04DB  
                                       i1l2956 04C7                                         i1l2788 0FC3  
                                       i1l2798 03E0                                         i1l2878 059F  
                                       i1l2982 0235                                         i1l2974 020D  
                                       i1l2990 024B                                         i1l2966 04E1  
                                       i1l2958 04C9                                         u133_20 04B8  
                                       u141_20 0542                                         i1l2984 023D  
                                       i1l2976 0218                                         u213_20 0043  
                                       u205_20 000E                                         u133_21 04B7  
                                       u141_21 0541                                         u213_21 0042  
                                       u205_21 000D                                         i1l2986 023E  
                                       i1l2978 021C                                         i1l2994 02D9  
                                       i1l2988 0245                                         i1l2996 02DB  
                                       u125_25 045B                                         i1l3974 02CD  
                                       i1l2998 02E1                                         u126_20 047D  
                                       u142_20 0548                                         u214_20 0048  
                                       u206_20 0016                                         u126_21 047C  
                                       u142_21 0547                                         u214_21 0047  
                                       u206_21 0015                                         u118_25 0608  
                                       u150_25 020E                                         u119_20 05EB  
                                       u127_20 05DE                                         u135_20 06F1  
                                       u151_20 021C                                         u215_20 0051  
                                       u207_20 001A                                         u119_21 05EA  
                                       u127_21 05DD                                         u135_21 06F0  
                                       u151_21 021B                                         u215_21 0050  
                                       u207_21 0019                                         u128_20 03DE  
                                       u136_20 06F6                                         u160_20 0300  
                                       u216_20 0056                                         u208_20 0022  
                                       u128_21 03DD                                         u136_21 06F5  
                                       u160_21 02FF                                         u216_21 0055  
                                       u208_21 0021                                         u152_25 021D  
                                       u160_25 02FC                                         u129_20 03E6  
                                       u137_20 079B                                         u153_20 0235  
                                       u145_20 04CD                                         u217_20 005F  
                                       u209_20 0027                                         u129_21 03E5  
                                       u137_21 079A                                         u153_21 0234  
                                       u145_21 04CC                                         u217_21 005E  
                                       u209_21 0026                                         u153_25 0231  
                                       u161_25 0306                        TMR4_WriteTimer@timerVal 0070  
                                       u138_20 05A5                                         u162_20 0310  
                                       u218_20 0064                                         u138_21 05A4  
                                       u162_21 030F                                         u218_21 0063  
                                       u154_25 023F                                         u146_25 04D2  
                                       u139_20 05B1                                         u163_20 0710  
                                       u155_20 024B                                         u139_21 05B0  
                                       u163_21 070F                                         u155_21 024A  
                                       u147_25 04D7                                         u243_27 059C  
                                       u164_20 0701                                         u156_20 02E1  
                                       u148_20 04E1                                         u180_20 017F  
                                       u164_21 0700                                         u156_21 02E0  
                                       u148_21 04E0                                         u180_21 017E  
                                       u180_25 017B                     __end_of_EUSART_is_tx_ready 06FA  
                                       u181_20 031A                                         u149_20 020A  
                                       u165_20 0748                                         u181_21 0319  
                                       u149_21 0209                                         u165_21 0747  
                                       u157_25 02E5                                         u182_20 0329  
                                       u190_20 06A0                                         u158_20 02F1  
                                       u174_20 00E1                                         u166_20 0755  
                                       u182_21 0328                                         u190_21 069F  
                                       u158_21 02F0                                         u174_21 00E0  
                                       u166_21 0754                                         u174_25 00DD  
                                       u183_20 0346                                         u191_20 06A8  
                                       u175_20 00EF                                         u183_21 0345  
                                       u191_21 06A7                                         u159_25 02F2  
                                       u175_25 00EB                                         u184_20 057A  
                                       u176_20 0111                                         u192_20 06D6  
                                       u184_21 0579                                         u192_21 06D5  
                                       u176_25 010D                                         u185_20 0580  
                                       u193_20 0635                                         u185_21 057F  
                                       u193_21 0634                                         u177_25 013A  
                                       u186_20 055E                                         u194_20 0720  
                                       u186_21 055D                                         u194_21 071F  
                                       u178_25 014F                                         u195_20 072E  
                                       u187_20 0564                                         u179_20 0161  
                                       u195_21 072D                                         u187_21 0563  
                                       u179_21 0160                                         u196_20 061F  
                                       u196_21 061E                                         _OSCCON 0099  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                ?_S1_Interrupt 0070                                         _WDTCON 0097  
                              _TMR4_StartTimer 0FAA                                ?i1_updateMatrix 0070  
                                 _CCPTMRS0bits 029E                                  ?_S2_Interrupt 0070  
                                       ___wmul 04C7                           TMR0_Interrupt@i_1680 005A  
                                    ??___lldiv 0078                                      ??___lwdiv 0074  
                                 i1_sendMatrix 05C5                               ?_TMR0_Initialize 0070  
                                       _matrix 0039                        __end_of_TMR4_Initialize 0677  
                                _CCP4_CallBack 002C                                  ?_S3_Interrupt 0070  
                      __end_of_DATAEE_ReadByte 0741           __end_of_TMR4_DefaultInterruptHandler 0003  
                 _TMR4_DefaultInterruptHandler 0002                                _TMR4_WriteTimer 0FBD  
                              ?_WDT_Initialize 0070                       ADC_GetConversion@channel 0073  
                                ?_S4_Interrupt 0070                                      ?_CMP1_ISR 0070  
                                    ?_CMP2_ISR 0070       CMP1_SetInterruptHandler@InterruptHandler 00B0  
     TMR4_SetInterruptHandler@InterruptHandler 00B0       TMR6_SetInterruptHandler@InterruptHandler 00B0  
     CMP2_SetInterruptHandler@InterruptHandler 00B0       TMR0_SetInterruptHandler@InterruptHandler 00B0  
   IOCBF3_SetInterruptHandler@InterruptHandler 00B0     IOCBF0_SetInterruptHandler@InterruptHandler 00B0  
                             ?_PIN_MANAGER_IOC 0070                                   ??_IOCBF0_ISR 0077  
                                 ??_IOCBF3_ISR 0077                               ?_PWM3_Initialize 0070  
                             ?_TMR1_Initialize 0070                                 ??_S1_Interrupt 0077  
                            _SYSTEM_Initialize 0348                        __end_of__initialization 0088  
                             ?_CCP4_Initialize 0070                                _CMP1_Initialize 0773  
                           ?_SYSTEM_Initialize 0070                                _TMR6_StartTimer 0F9E  
                                 ?_updateMotor 0070                                 ??_S2_Interrupt 0077  
                     __end_of_CCP4_SetCallBack 07F9               __end_of_CMP2_SetInterruptHandler 1000  
                               __pcstackCOMMON 0070                          __end_of_TMR4_CallBack 075B  
                                 __pidataBANK0 0FAD                            ??_SYSTEM_Initialize 00B2  
                                    ?_TMR0_ISR 0070                                      ?_TMR4_ISR 0070  
                                    ?_TMR6_ISR 0070                              ??_SPI1_Initialize 00B0  
       __end_of_IOCBF0_DefaultInterruptHandler 0F9C                 _IOCBF0_DefaultInterruptHandler 0F9B  
                             ?_TMR2_Initialize 0070                        __end_of_TMR6_Initialize 0664  
                               ??_S3_Interrupt 0077                             __end_of_IOCBF0_ISR 0718  
                           __end_of_IOCBF3_ISR 0709                          __end_of_TMR6_CallBack 074E  
                              _CMP2_Initialize 0767                             _spi1_configuration 0800  
                               _OPTION_REGbits 0095                                _TMR6_WriteTimer 0FC2  
                        TMR6_ISR@CountCallBack 0047                  ?_TMR4_DefaultInterruptHandler 0070  
                               ??_S4_Interrupt 0077                ??_EUSART_SetOverrunErrorHandler 00B2  
       __end_of_IOCBF3_DefaultInterruptHandler 0F9D                 _IOCBF3_DefaultInterruptHandler 0F9C  
                                   ??_CMP1_ISR 0077                                     ??_CMP2_ISR 0077  
                      __end_of_TMR4_StartTimer 0FAD                      __end_of_SYSTEM_Initialize 0379  
                                   __pbssBANK0 0039                                     __pbssBANK1 00A0  
                         __end_of_EUSART_Write 079F                                 _SPI1_WriteByte 0FD2  
                        _TMR4_InterruptHandler 0022                     ??_CMP1_SetInterruptHandler 00B2  
                                   __pmaintext 0180                  i1PWM3_LoadDutyValue@dutyValue 0070  
                  CCP4_Interrupt@capturedValue 0070               __end_of_TMR0_SetInterruptHandler 07BA  
                                      ?___wmul 0070                                     ??_TMR0_ISR 007E  
             __end_of_TMR6_SetInterruptHandler 07A8                                     ??_TMR4_ISR 0077  
                                  sendMatrix@i 00B4                                     ??_TMR6_ISR 0077  
                                   __pintentry 0004                        __end_of_TMR4_WriteTimer 0FC2  
                                      _DACCON0 0118                                        _DACCON1 0119  
                                      _CM1CON0 0111                                        _CM1CON1 0112  
                                      _CM2CON0 0113                                        _CM2CON1 0114  
                                      _CCP3CON 0313                                        _CCP4CON 031A  
                                      _BAUDCON 019F                               ?_TMR4_Initialize 0070  
                                      _APFCON0 011D                                        _APFCON1 011E  
                                 ?i1_txMAX7219 0071                               ?_DATAEE_ReadByte 0070  
                                      _OSCTUNE 0098                                        _SSP1ADD 0212  
                                      _SSP1BUF 0211                        __end_of_CMP1_Initialize 077F  
                     ??_EUSART_SetErrorHandler 00B2                                   ?i1_setMatrix 0071  
                                 ?i1_sendMotor 0070                        __end_of_TMR6_StartTimer 0FA1  
                       __end_of_SPI1_WriteByte 0FD8                   __end_ofi1_PWM3_LoadDutyValue 0610  
                         _ADC_InterruptHandler 0049                        __end_of_CMP2_Initialize 0773  
                                      ___lldiv 01FA                                        ___lwdiv 02D9  
                      __end_of_TMR6_WriteTimer 0FC7                       _CMP2_SetInterruptHandler 0FF7  
                                      _data_tx 0041                               ?_TMR6_Initialize 0070  
                         __end_of_S1_Interrupt 05C5                                        __ptext1 0379  
                                      __ptext2 0254                                        __ptext3 0503  
                                      __ptext4 0FAA                                        __ptext5 042F  
                                      __ptext6 0406                                        __ptext7 0734  
                                      __ptext8 051F                                        __ptext9 04E6  
                            __end_of_txMAX7219 0503                                      _T1CONbits 0018  
                        _OSCILLATOR_Initialize 07F9                                      _T2CONbits 001C  
                                    _CMOUTbits 0115                                      _T4CONbits 0417  
                     ??_PIN_MANAGER_Initialize 00B2                                      _IOCBFbits 0396  
                    ?_TMR4_SetInterruptHandler 00B0                                      _IOCBNbits 0395  
                                    _T6CONbits 041E                                      _IOCBPbits 0394  
                         __end_of_S2_Interrupt 0557                                        clrloop0 0FD9  
                             ?_TMR4_StartTimer 0070                           end_of_initialization 0088  
                                   _sendMatrix 051F                              __end_of_setMatrix 042F  
                            __end_of_sendMotor 0298                                   i1setMatrix@i 0075  
               ??_TMR4_DefaultInterruptHandler 0070                               ??i1_updateMatrix 0076  
        __end_of_EUSART_SetOverrunErrorHandler 07DE                  _EUSART_SetOverrunErrorHandler 07D5  
                              ?_SPI1_WriteByte 0070                           __end_of_S3_Interrupt 058F  
                            _EUSART_Initialize 047E                                ___lldiv@divisor 0070  
                              ___lldiv@counter 007D                             ?_EUSART_Initialize 0070  
                         __end_of_S4_Interrupt 0573                                      _RCSTAbits 019D  
                           _EUSART_is_rx_ready 0FC7                             _EUSART_is_tx_ready 06EB  
                                   _motorState 004F                               ?_TMR4_WriteTimer 0070  
                        _CMP1_InterruptHandler 0020                            ??_EUSART_Initialize 00B2  
                             ??_WDT_Initialize 00B0                       _TMR0_SetInterruptHandler 07B1  
                                    _PORTAbits 000C                            ?_EUSART_is_rx_ready 0070  
                     _TMR6_SetInterruptHandler 079F                                 _TMR0_Interrupt 008C  
                          ?_EUSART_is_tx_ready 0070                                 txMAX7219@addr0 00B2  
                                    _TRISBbits 008D                   ??_IOCBF0_SetInterruptHandler 00B2  
                 ??_IOCBF3_SetInterruptHandler 00B2                               ?_CMP1_Initialize 0070  
                             ?_TMR6_StartTimer 0070                                 _CCP4_Interrupt 0315  
                    __end_of_EUSART_Initialize 04A3                           ??_EUSART_is_rx_ready 00B0  
                              _SPI1_Initialize 078B                           ??_EUSART_is_tx_ready 0070  
                                    _TXSTAbits 019E              CCP4_DefaultCallBack@capturedValue 0070  
                                ?_updateMatrix 0070                     __end_of_PWM3_LoadDutyValue 051F  
                                i1_updateMotor 03D7                              ?_CCP4_SetCallBack 00B0  
                             ?_CMP2_Initialize 0070                             ??_CCP4_SetCallBack 00B2  
                   _EUSART_DefaultErrorHandler 0000                               ?_TMR6_WriteTimer 0070  
                               __end_of___wmul 04E6                         __end_of_TMR0_Interrupt 0180  
                                 _EUSART_Write 0795                                 _ADC_Initialize 0FDE  
                       ?_OSCILLATOR_Initialize 0070                           i1_PWM3_LoadDutyValue 05F9  
                     ?_TMR1_HasOverflowOccured 0070                                 _TMR4_Interrupt 06BC  
                          start_initialization 006C                         __end_of_CCP4_Interrupt 0348  
                                ??_EUSART_Read 00B0                         _EUSART_is_tx_ready$323 0070  
                                  ?_sendMatrix 0070                        i1updateMatrix@direction 0076  
                             main@receivedData 00B7                                 ??_updateMatrix 00B6  
                          DATAEE_ReadByte@bAdd 00B0                                 _TMR6_Interrupt 06AC  
               ?_EUSART_SetOverrunErrorHandler 00B0                                 ?i1_updateMotor 0070  
                               _TMR4_StopTimer 0FA4                     _EUSART_FramingErrorHandler 0036  
                                     ??___wmul 0074                         _EUSART_SetErrorHandler 07E7  
                       __end_of_ADC_Initialize 0FE6                                    __pdataBANK0 0062  
                              ?_TMR0_Interrupt 0070                         __end_of_TMR4_Interrupt 06CC  
                        ?i1_PWM3_LoadDutyValue 0070                               i1_SPI1_WriteByte 0FB8  
                        CCP4_CaptureISR@module 0073                          TMR4_ISR@CountCallBack 0045  
                                    ___latbits 0001                                  __pcstackBANK0 0050  
                                __pcstackBANK1 00B0                                ?_CCP4_Interrupt 0070  
                               _TMR6_StopTimer 0FA7                        __end_of_SPI1_Initialize 0795  
                        _CMP2_InterruptHandler 0026                         __end_of_TMR6_Interrupt 06BC  
                                 _currentFloor 0064                                   _S1_Interrupt 05AA  
                          __end_of_EUSART_Read 06EB                          _TMR0_InterruptHandler 0028  
                        _TMR6_InterruptHandler 0024                                      __pnvBANK0 0020  
                       __end_of_TMR4_StopTimer 0FA7                        _IOCBF3_InterruptHandler 002E  
                   ??_CMP2_SetInterruptHandler 00B2                               ___lwdiv@dividend 0072  
                       _PIN_MANAGER_Initialize 03A8                                   _S2_Interrupt 053B  
             __end_of_TMR4_SetInterruptHandler 07B1                              ??_CCP4_CaptureISR 0073  
                                     ?___lldiv 0070                                       ?___lwdiv 0070  
                                   setMatrix@i 00B5                __end_of_TMR1_HasOverflowOccured 0FB4  
                              ?_ADC_Initialize 0070                                ?_TMR4_Interrupt 0070  
                 ??_INTERRUPT_InterruptManager 007E                                   _S3_Interrupt 0573  
                                    _floorFlag 004D                      ?_CMP1_SetInterruptHandler 00B0  
                            i1_DATAEE_ReadByte 077F                         __end_of_TMR6_StopTimer 0FAA  
           __end_of_IOCBF0_SetInterruptHandler 07D5                     _IOCBF0_SetInterruptHandler 07CC  
           __end_of_IOCBF3_SetInterruptHandler 07CC                     _IOCBF3_SetInterruptHandler 07C3  
                             ??_SPI1_WriteByte 00B0                                      _txMAX7219 04E6  
                           ?i1_DATAEE_ReadByte 0070                                       _CMP1_ISR 0726  
                                     _CMP2_ISR 0718                                   _S4_Interrupt 0557  
                             ___lwdiv@quotient 0075                                   setMatrix@val 00B1  
                                 setMatrix@pos 00B3                                ?_TMR6_Interrupt 0070  
                            ??_TMR0_Initialize 00B2                          updateMatrix@direction 00B6  
                          ??i1_DATAEE_ReadByte 0070                                 ___wmul@product 0074  
                                     _LATAbits 010C         EUSART_SetErrorHandler@interruptHandler 00B0  
                                     _LATBbits 010D                                      _setMatrix 0406  
                                    _sendMotor 0254                                      clear_ram0 0FD8  
                 __end_of_CCP4_DefaultCallBack 0F9B                                ??i1_updateMotor 0076  
                                     _PIE2bits 0092                                       _PIE3bits 0093  
                            _eusartRxLastError 004E                                ?_TMR4_StopTimer 0070  
                   ??_TMR0_SetInterruptHandler 00B2                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 00B2                                       _PIR2bits 0012  
                                     _PIR3bits 0013                     ??_TMR6_SetInterruptHandler 00B2  
                         i1SPI1_WriteByte@byte 0070                                       _SSP1CON1 0215  
                                     _SSP1CON2 0216                                       _TMR0_ISR 06CC  
            _EUSART_DefaultOverrunErrorHandler 0000                                       _TMR4_ISR 0626  
                                _TMR4_CallBack 074E                                       _TMR6_ISR 0610  
                                     _SSP1STAT 0214                              ??_PIN_MANAGER_IOC 0077  
                                ?i1_sendMatrix 0070                         ??i1_PWM3_LoadDutyValue 0072  
                                txMAX7219@dat0 00B1                              ??_PWM3_Initialize 00B0  
                            ??_TMR1_Initialize 00B0                                     _ADCON0bits 009D  
                    __end_ofi1_DATAEE_ReadByte 078B                              ___wmul@multiplier 0070  
                               _DAC_Initialize 0FCC                                  _TMR6_CallBack 0741  
                            ??_CCP4_Initialize 00B2                           __end_of_updateMatrix 0457  
                              ?_TMR6_StopTimer 0070                                     ?_txMAX7219 00B1  
                                  _EUSART_Read 06DC                               ?_SPI1_Initialize 0070  
                            i1_TMR4_StartTimer 0FA1                                 i1setMatrix@val 0071  
                               i1setMatrix@pos 0073                              ??_TMR2_Initialize 00B0  
                           ?i1_TMR4_StartTimer 0070                                     ?_setMatrix 00B1  
                                   ?_sendMotor 0070                                     _EECON1bits 0195  
                             i1txMAX7219@addr0 0072                                  ??_updateMotor 00B6  
                            _ADC_GetConversion 058F                                 ?_TMR4_CallBack 0070  
                          ??i1_TMR4_StartTimer 0070                                 ??i1_sendMatrix 0073  
                      ??_OSCILLATOR_Initialize 00B0                            _EUSART_ErrorHandler 0032  
                           ?_ADC_GetConversion 0070                         __end_of_DAC_Initialize 0FD2  
                     _TMR4_SetInterruptHandler 07A8                             _PWM3_LoadDutyValue 0503  
                               ?_TMR6_CallBack 0070                            ??_ADC_GetConversion 0072  
                               setMatrix@eeAdd 00B4                                ___lwdiv@divisor 0070  
                              ___lwdiv@counter 0077                                       __ptext10 0FD2  
                                     __ptext11 0348                                       __ptext20 07B1  
                                     __ptext12 0FB4                                       __ptext21 078B  
                                     __ptext13 0651                                     _T1GCONbits 0019  
                                     __ptext30 07E7                                       __ptext22 07BA  
                                     __ptext14 079F                                       __ptext31 0FCC  
                                     __ptext23 03A8                                       __ptext15 0664  
                                     __ptext40 0FEE                                       __ptext32 0767  
                                     __ptext24 07C3                                       __ptext16 07A8  
                                     __ptext33 0773                                       __ptext25 07CC  
                                     __ptext17 0FE6                                       __ptext50 0002  
                                     __ptext42 0610                                       __ptext34 0677  
                                     __ptext26 07F9                                       __ptext18 075B  
                                     __ptext51 06BC                                       __ptext43 0741  
                                     __ptext35 07F0                                       __ptext27 047E  
                                     __ptext19 063C                                       __ptext60 06EB  
                                     __ptext52 0FBD                                       __ptext44 0003  
                                     __ptext36 0FDE                                       __ptext28 07D5  
                                     __ptext61 0795                                       __ptext53 0FA4  
                                     __ptext45 06AC                                       __ptext37 0FC7  
                                     __ptext29 07DE                                       __ptext70 0718  
                                     __ptext62 058F                                       __ptext54 06CC  
                                     __ptext46 0FC2                                       __ptext38 06DC  
                                     __ptext71 0557                                       __ptext63 069B  
                                     __ptext55 0F9D                                       __ptext47 0FA7  
                                     __ptext39 0FF7                                       __ptext80 077F  
                                     __ptext72 0726                                       __ptext64 06FA  
                                     __ptext56 008C                                       __ptext48 0626  
                                     __ptext81 05C5                                       __ptext73 0573  
                                     __ptext65 0F9C                                       __ptext57 04C7  
                                     __ptext49 074E                                       __ptext82 05DF  
                                     __ptext74 03D7                                       __ptext66 053B  
                                     __ptext58 02D9                            ?_PWM3_LoadDutyValue 00B0  
                                     __ptext83 0FB8                                       __ptext75 0298  
                                     __ptext67 0709                                       __ptext59 01FA  
                                     __ptext84 0F9E                                       __ptext76 05F9  
                                     __ptext68 0F9B                                       __ptext85 0689  
                                     __ptext77 0FA1                                       __ptext69 05AA  
                                     __ptext86 0F9A                                       __ptext78 04A3  
                                     __ptext87 0315                                       __ptext79 0457  
                                     __ptext88 0FB0                                   _SSP1CON1bits 0215  
                    __end_ofi1_TMR4_StartTimer 0FA4                                   ??_sendMatrix 00B3  
                                   _IOCBF0_ISR 0709                                     _IOCBF3_ISR 06FA  
                      TMR6_WriteTimer@timerVal 0070                              ??_TMR4_Initialize 00B2  
                     __end_ofi1_SPI1_WriteByte 0FBD           __end_of_TMR0_DefaultInterruptHandler 0F9E  
                 _TMR0_DefaultInterruptHandler 0F9D                              ??_DATAEE_ReadByte 00B0  
                    __end_of_ADC_GetConversion 05AA                                  _directionFlag 004C  
                      ?_EUSART_SetErrorHandler 00B0                               ??_TMR0_Interrupt 0050  
EUSART_SetOverrunErrorHandler@interruptHandler 00B0                           ??_PWM3_LoadDutyValue 00B2  
                                     _velocity 00A0                                       int$flags 007E  
                                     _position 0062             __end_of_INTERRUPT_InterruptManager 006A  
                   _INTERRUPT_InterruptManager 0004                                  i1sendMatrix@i 0074  
        __end_of_EUSART_SetFramingErrorHandler 07E7                  _EUSART_SetFramingErrorHandler 07DE  
                              ?_DAC_Initialize 0070                            __end_of_updateMotor 03A8  
                                ??i1_txMAX7219 0072                             __end_of_sendMatrix 053B  
                             ??_CCP4_Interrupt 0072                                     _INTCONbits 000B  
                         _CCP4_DefaultCallBack 0F9A                                i1txMAX7219@dat0 0071  
                                  ??_txMAX7219 00B2                                  ??i1_setMatrix 0072  
                                ??i1_sendMotor 0074           __end_of_TMR6_DefaultInterruptHandler 0004  
                 _TMR6_DefaultInterruptHandler 0003                                       intlevel1 0000  
                                  _targetFloor 0063                                _CCP4_CaptureISR 0689  
                             ___lldiv@dividend 0074                        ?_PIN_MANAGER_Initialize 0070  
                            ??_TMR6_Initialize 00B2                 __end_of_EUSART_SetErrorHandler 07F0  
                                  ??_setMatrix 00B2                                    ??_sendMotor 00B4  
                             ??_ADC_Initialize 00B0                                ??_TMR4_CallBack 0077  
                ?_TMR0_DefaultInterruptHandler 0070               __end_of_CMP1_SetInterruptHandler 0FF7  
                             ??_TMR4_Interrupt 0077  EUSART_SetFramingErrorHandler@interruptHandler 00B0  
                  PWM3_LoadDutyValue@dutyValue 00B0                              ??_TMR4_StartTimer 00B0  
                              ??_TMR6_CallBack 0077                                  __pstringtext1 0800  
                                   _OPTION_REG 0095                          ?_CCP4_DefaultCallBack 0070  
                             ___lldiv@quotient 0079                                   _velocity_idx 004B  
                              _TMR0_Initialize 063C                    ?_IOCBF0_SetInterruptHandler 00B0  
                  ?_IOCBF3_SetInterruptHandler 00B0                               ??_TMR6_Interrupt 0077  
                          __end_ofi1_txMAX7219 05F9                           __end_ofi1_sendMatrix 05DF  
                                  ?_IOCBF0_ISR 0070                             EUSART_Write@txData 0070  
                                  ?_IOCBF3_ISR 0070                 __end_of_PIN_MANAGER_Initialize 03D7  
                             ??_TMR4_StopTimer 0070                  ?_TMR6_DefaultInterruptHandler 0070  
                            ??_TMR4_WriteTimer 0070               ??_IOCBF0_DefaultInterruptHandler 0070  
              ?_IOCBF0_DefaultInterruptHandler 0070                                _PIN_MANAGER_IOC 069B  
                          __end_ofi1_setMatrix 047E                            __end_ofi1_sendMotor 02D9  
                                 _updateMatrix 042F                                _TMR1_Initialize 075B  
                              _PWM3_Initialize 07BA                     __end_of_spi1_configuration 0804  
                                  _updateMotor 0379  
