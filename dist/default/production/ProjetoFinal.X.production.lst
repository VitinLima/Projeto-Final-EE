

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Oct 02 21:25:22 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	eeprom_data,global,class=EEDATA,space=3,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2
    52                           	psect	text36,local,class=CODE,merge=1,delta=2
    53                           	psect	text37,local,class=CODE,merge=1,delta=2
    54                           	psect	text38,local,class=CODE,merge=1,delta=2
    55                           	psect	text39,local,class=CODE,merge=1,delta=2
    56                           	psect	text40,local,class=CODE,merge=1,delta=2
    57                           	psect	text41,local,class=CODE,merge=1,delta=2
    58                           	psect	text42,local,class=CODE,merge=1,delta=2
    59                           	psect	intentry,global,class=CODE,delta=2
    60                           	psect	text44,local,class=CODE,merge=1,delta=2
    61                           	psect	text45,local,class=CODE,merge=1,delta=2
    62                           	psect	text46,local,class=CODE,merge=1,delta=2
    63                           	psect	text47,local,class=CODE,merge=1,delta=2
    64                           	psect	text48,local,class=CODE,merge=1,delta=2
    65                           	psect	text49,local,class=CODE,merge=1,delta=2
    66                           	psect	text50,local,class=CODE,merge=1,delta=2
    67                           	psect	text51,local,class=CODE,merge=1,delta=2
    68                           	psect	text52,local,class=CODE,merge=1,delta=2
    69                           	psect	text53,local,class=CODE,merge=1,delta=2
    70                           	psect	text54,local,class=CODE,merge=1,delta=2
    71                           	psect	text55,local,class=CODE,merge=1,delta=2
    72                           	psect	text56,local,class=CODE,merge=1,delta=2
    73                           	psect	text57,local,class=CODE,merge=1,delta=2
    74                           	psect	text58,local,class=CODE,merge=1,delta=2
    75                           	psect	text59,local,class=CODE,merge=1,delta=2
    76                           	psect	text60,local,class=CODE,merge=1,delta=2,group=1
    77                           	psect	text61,local,class=CODE,merge=1,delta=2,group=1
    78                           	psect	text62,local,class=CODE,merge=1,delta=2,group=1
    79                           	psect	text63,local,class=CODE,merge=1,delta=2
    80                           	psect	text64,local,class=CODE,merge=1,delta=2
    81                           	psect	text65,local,class=CODE,merge=1,delta=2
    82                           	psect	text66,local,class=CODE,merge=1,delta=2
    83                           	psect	text67,local,class=CODE,merge=1,delta=2
    84                           	psect	text68,local,class=CODE,merge=1,delta=2
    85                           	psect	text69,local,class=CODE,merge=1,delta=2
    86                           	psect	text70,local,class=CODE,merge=1,delta=2
    87                           	psect	text71,local,class=CODE,merge=1,delta=2
    88                           	psect	text72,local,class=CODE,merge=1,delta=2
    89                           	psect	text73,local,class=CODE,merge=1,delta=2
    90                           	psect	text74,local,class=CODE,merge=1,delta=2
    91                           	psect	text75,local,class=CODE,merge=1,delta=2
    92                           	psect	text76,local,class=CODE,merge=1,delta=2
    93                           	psect	text77,local,class=CODE,merge=1,delta=2
    94                           	psect	text78,local,class=CODE,merge=1,delta=2
    95                           	psect	text79,local,class=CODE,merge=1,delta=2
    96                           	psect	text80,local,class=CODE,merge=1,delta=2
    97                           	psect	text81,local,class=CODE,merge=1,delta=2
    98                           	psect	text82,local,class=CODE,merge=1,delta=2
    99                           	psect	text83,local,class=CODE,merge=1,delta=2
   100                           	psect	text84,local,class=CODE,merge=1,delta=2
   101                           	psect	text85,local,class=CODE,merge=1,delta=2
   102                           	psect	text86,local,class=CODE,merge=1,delta=2
   103                           	psect	text87,local,class=CODE,merge=1,delta=2
   104                           	psect	text88,local,class=CODE,merge=1,delta=2
   105                           	psect	text89,local,class=CODE,merge=1,delta=2
   106                           	psect	text90,local,class=CODE,merge=1,delta=2
   107                           	psect	text91,local,class=CODE,merge=1,delta=2
   108                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
   109                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   110                           	dabs	1,0x7E,2
   111     0000                     
   112                           ; Version 2.40
   113                           ; Generated 17/11/2021 GMT
   114                           ; 
   115                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   116                           ; All rights reserved.
   117                           ; 
   118                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   119                           ; 
   120                           ; Redistribution and use in source and binary forms, with or without modification, are
   121                           ; permitted provided that the following conditions are met:
   122                           ; 
   123                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   124                           ;        conditions and the following disclaimer.
   125                           ; 
   126                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   127                           ;        of conditions and the following disclaimer in the documentation and/or other
   128                           ;        materials provided with the distribution. Publication is not required when
   129                           ;        this file is used in an embedded application.
   130                           ; 
   131                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   132                           ;        software without specific prior written permission.
   133                           ; 
   134                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   135                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   136                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   137                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   138                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   139                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   140                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   141                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   142                           ; 
   143                           ; 
   144                           ; Code-generator required, PIC16F1827 Definitions
   145                           ; 
   146                           ; SFR Addresses
   147     0000                     	;# 
   148     0001                     	;# 
   149     0002                     	;# 
   150     0003                     	;# 
   151     0004                     	;# 
   152     0005                     	;# 
   153     0006                     	;# 
   154     0007                     	;# 
   155     0008                     	;# 
   156     0009                     	;# 
   157     000A                     	;# 
   158     000B                     	;# 
   159     000C                     	;# 
   160     000D                     	;# 
   161     0011                     	;# 
   162     0012                     	;# 
   163     0013                     	;# 
   164     0014                     	;# 
   165     0015                     	;# 
   166     0016                     	;# 
   167     0016                     	;# 
   168     0017                     	;# 
   169     0018                     	;# 
   170     0019                     	;# 
   171     001A                     	;# 
   172     001B                     	;# 
   173     001C                     	;# 
   174     001E                     	;# 
   175     001F                     	;# 
   176     008C                     	;# 
   177     008D                     	;# 
   178     0091                     	;# 
   179     0092                     	;# 
   180     0093                     	;# 
   181     0094                     	;# 
   182     0095                     	;# 
   183     0096                     	;# 
   184     0097                     	;# 
   185     0098                     	;# 
   186     0099                     	;# 
   187     009A                     	;# 
   188     009B                     	;# 
   189     009B                     	;# 
   190     009C                     	;# 
   191     009D                     	;# 
   192     009E                     	;# 
   193     010C                     	;# 
   194     010D                     	;# 
   195     0111                     	;# 
   196     0112                     	;# 
   197     0113                     	;# 
   198     0114                     	;# 
   199     0115                     	;# 
   200     0116                     	;# 
   201     0117                     	;# 
   202     0118                     	;# 
   203     0119                     	;# 
   204     011A                     	;# 
   205     011B                     	;# 
   206     011D                     	;# 
   207     011E                     	;# 
   208     018C                     	;# 
   209     018D                     	;# 
   210     0191                     	;# 
   211     0191                     	;# 
   212     0192                     	;# 
   213     0193                     	;# 
   214     0193                     	;# 
   215     0193                     	;# 
   216     0194                     	;# 
   217     0195                     	;# 
   218     0196                     	;# 
   219     0199                     	;# 
   220     019A                     	;# 
   221     019B                     	;# 
   222     019B                     	;# 
   223     019B                     	;# 
   224     019B                     	;# 
   225     019C                     	;# 
   226     019C                     	;# 
   227     019D                     	;# 
   228     019E                     	;# 
   229     019F                     	;# 
   230     020C                     	;# 
   231     020D                     	;# 
   232     0211                     	;# 
   233     0211                     	;# 
   234     0212                     	;# 
   235     0212                     	;# 
   236     0213                     	;# 
   237     0213                     	;# 
   238     0214                     	;# 
   239     0214                     	;# 
   240     0215                     	;# 
   241     0215                     	;# 
   242     0215                     	;# 
   243     0216                     	;# 
   244     0216                     	;# 
   245     0217                     	;# 
   246     0217                     	;# 
   247     0219                     	;# 
   248     021A                     	;# 
   249     021B                     	;# 
   250     021C                     	;# 
   251     021D                     	;# 
   252     021E                     	;# 
   253     021F                     	;# 
   254     0291                     	;# 
   255     0291                     	;# 
   256     0292                     	;# 
   257     0293                     	;# 
   258     0294                     	;# 
   259     0295                     	;# 
   260     0295                     	;# 
   261     0296                     	;# 
   262     0298                     	;# 
   263     0298                     	;# 
   264     0299                     	;# 
   265     029A                     	;# 
   266     029B                     	;# 
   267     029C                     	;# 
   268     029C                     	;# 
   269     029D                     	;# 
   270     029E                     	;# 
   271     029E                     	;# 
   272     0311                     	;# 
   273     0311                     	;# 
   274     0312                     	;# 
   275     0313                     	;# 
   276     0318                     	;# 
   277     0318                     	;# 
   278     0319                     	;# 
   279     031A                     	;# 
   280     0394                     	;# 
   281     0395                     	;# 
   282     0396                     	;# 
   283     039A                     	;# 
   284     039C                     	;# 
   285     039D                     	;# 
   286     039E                     	;# 
   287     039F                     	;# 
   288     0415                     	;# 
   289     0416                     	;# 
   290     0417                     	;# 
   291     041C                     	;# 
   292     041D                     	;# 
   293     041E                     	;# 
   294     0FE4                     	;# 
   295     0FE5                     	;# 
   296     0FE6                     	;# 
   297     0FE7                     	;# 
   298     0FE8                     	;# 
   299     0FE9                     	;# 
   300     0FEA                     	;# 
   301     0FEB                     	;# 
   302     0FED                     	;# 
   303     0FEE                     	;# 
   304     0FEF                     	;# 
   305     0000                     	;# 
   306     0001                     	;# 
   307     0002                     	;# 
   308     0003                     	;# 
   309     0004                     	;# 
   310     0005                     	;# 
   311     0006                     	;# 
   312     0007                     	;# 
   313     0008                     	;# 
   314     0009                     	;# 
   315     000A                     	;# 
   316     000B                     	;# 
   317     000C                     	;# 
   318     000D                     	;# 
   319     0011                     	;# 
   320     0012                     	;# 
   321     0013                     	;# 
   322     0014                     	;# 
   323     0015                     	;# 
   324     0016                     	;# 
   325     0016                     	;# 
   326     0017                     	;# 
   327     0018                     	;# 
   328     0019                     	;# 
   329     001A                     	;# 
   330     001B                     	;# 
   331     001C                     	;# 
   332     001E                     	;# 
   333     001F                     	;# 
   334     008C                     	;# 
   335     008D                     	;# 
   336     0091                     	;# 
   337     0092                     	;# 
   338     0093                     	;# 
   339     0094                     	;# 
   340     0095                     	;# 
   341     0096                     	;# 
   342     0097                     	;# 
   343     0098                     	;# 
   344     0099                     	;# 
   345     009A                     	;# 
   346     009B                     	;# 
   347     009B                     	;# 
   348     009C                     	;# 
   349     009D                     	;# 
   350     009E                     	;# 
   351     010C                     	;# 
   352     010D                     	;# 
   353     0111                     	;# 
   354     0112                     	;# 
   355     0113                     	;# 
   356     0114                     	;# 
   357     0115                     	;# 
   358     0116                     	;# 
   359     0117                     	;# 
   360     0118                     	;# 
   361     0119                     	;# 
   362     011A                     	;# 
   363     011B                     	;# 
   364     011D                     	;# 
   365     011E                     	;# 
   366     018C                     	;# 
   367     018D                     	;# 
   368     0191                     	;# 
   369     0191                     	;# 
   370     0192                     	;# 
   371     0193                     	;# 
   372     0193                     	;# 
   373     0193                     	;# 
   374     0194                     	;# 
   375     0195                     	;# 
   376     0196                     	;# 
   377     0199                     	;# 
   378     019A                     	;# 
   379     019B                     	;# 
   380     019B                     	;# 
   381     019B                     	;# 
   382     019B                     	;# 
   383     019C                     	;# 
   384     019C                     	;# 
   385     019D                     	;# 
   386     019E                     	;# 
   387     019F                     	;# 
   388     020C                     	;# 
   389     020D                     	;# 
   390     0211                     	;# 
   391     0211                     	;# 
   392     0212                     	;# 
   393     0212                     	;# 
   394     0213                     	;# 
   395     0213                     	;# 
   396     0214                     	;# 
   397     0214                     	;# 
   398     0215                     	;# 
   399     0215                     	;# 
   400     0215                     	;# 
   401     0216                     	;# 
   402     0216                     	;# 
   403     0217                     	;# 
   404     0217                     	;# 
   405     0219                     	;# 
   406     021A                     	;# 
   407     021B                     	;# 
   408     021C                     	;# 
   409     021D                     	;# 
   410     021E                     	;# 
   411     021F                     	;# 
   412     0291                     	;# 
   413     0291                     	;# 
   414     0292                     	;# 
   415     0293                     	;# 
   416     0294                     	;# 
   417     0295                     	;# 
   418     0295                     	;# 
   419     0296                     	;# 
   420     0298                     	;# 
   421     0298                     	;# 
   422     0299                     	;# 
   423     029A                     	;# 
   424     029B                     	;# 
   425     029C                     	;# 
   426     029C                     	;# 
   427     029D                     	;# 
   428     029E                     	;# 
   429     029E                     	;# 
   430     0311                     	;# 
   431     0311                     	;# 
   432     0312                     	;# 
   433     0313                     	;# 
   434     0318                     	;# 
   435     0318                     	;# 
   436     0319                     	;# 
   437     031A                     	;# 
   438     0394                     	;# 
   439     0395                     	;# 
   440     0396                     	;# 
   441     039A                     	;# 
   442     039C                     	;# 
   443     039D                     	;# 
   444     039E                     	;# 
   445     039F                     	;# 
   446     0415                     	;# 
   447     0416                     	;# 
   448     0417                     	;# 
   449     041C                     	;# 
   450     041D                     	;# 
   451     041E                     	;# 
   452     0FE4                     	;# 
   453     0FE5                     	;# 
   454     0FE6                     	;# 
   455     0FE7                     	;# 
   456     0FE8                     	;# 
   457     0FE9                     	;# 
   458     0FEA                     	;# 
   459     0FEB                     	;# 
   460     0FED                     	;# 
   461     0FEE                     	;# 
   462     0FEF                     	;# 
   463     0000                     	;# 
   464     0001                     	;# 
   465     0002                     	;# 
   466     0003                     	;# 
   467     0004                     	;# 
   468     0005                     	;# 
   469     0006                     	;# 
   470     0007                     	;# 
   471     0008                     	;# 
   472     0009                     	;# 
   473     000A                     	;# 
   474     000B                     	;# 
   475     000C                     	;# 
   476     000D                     	;# 
   477     0011                     	;# 
   478     0012                     	;# 
   479     0013                     	;# 
   480     0014                     	;# 
   481     0015                     	;# 
   482     0016                     	;# 
   483     0016                     	;# 
   484     0017                     	;# 
   485     0018                     	;# 
   486     0019                     	;# 
   487     001A                     	;# 
   488     001B                     	;# 
   489     001C                     	;# 
   490     001E                     	;# 
   491     001F                     	;# 
   492     008C                     	;# 
   493     008D                     	;# 
   494     0091                     	;# 
   495     0092                     	;# 
   496     0093                     	;# 
   497     0094                     	;# 
   498     0095                     	;# 
   499     0096                     	;# 
   500     0097                     	;# 
   501     0098                     	;# 
   502     0099                     	;# 
   503     009A                     	;# 
   504     009B                     	;# 
   505     009B                     	;# 
   506     009C                     	;# 
   507     009D                     	;# 
   508     009E                     	;# 
   509     010C                     	;# 
   510     010D                     	;# 
   511     0111                     	;# 
   512     0112                     	;# 
   513     0113                     	;# 
   514     0114                     	;# 
   515     0115                     	;# 
   516     0116                     	;# 
   517     0117                     	;# 
   518     0118                     	;# 
   519     0119                     	;# 
   520     011A                     	;# 
   521     011B                     	;# 
   522     011D                     	;# 
   523     011E                     	;# 
   524     018C                     	;# 
   525     018D                     	;# 
   526     0191                     	;# 
   527     0191                     	;# 
   528     0192                     	;# 
   529     0193                     	;# 
   530     0193                     	;# 
   531     0193                     	;# 
   532     0194                     	;# 
   533     0195                     	;# 
   534     0196                     	;# 
   535     0199                     	;# 
   536     019A                     	;# 
   537     019B                     	;# 
   538     019B                     	;# 
   539     019B                     	;# 
   540     019B                     	;# 
   541     019C                     	;# 
   542     019C                     	;# 
   543     019D                     	;# 
   544     019E                     	;# 
   545     019F                     	;# 
   546     020C                     	;# 
   547     020D                     	;# 
   548     0211                     	;# 
   549     0211                     	;# 
   550     0212                     	;# 
   551     0212                     	;# 
   552     0213                     	;# 
   553     0213                     	;# 
   554     0214                     	;# 
   555     0214                     	;# 
   556     0215                     	;# 
   557     0215                     	;# 
   558     0215                     	;# 
   559     0216                     	;# 
   560     0216                     	;# 
   561     0217                     	;# 
   562     0217                     	;# 
   563     0219                     	;# 
   564     021A                     	;# 
   565     021B                     	;# 
   566     021C                     	;# 
   567     021D                     	;# 
   568     021E                     	;# 
   569     021F                     	;# 
   570     0291                     	;# 
   571     0291                     	;# 
   572     0292                     	;# 
   573     0293                     	;# 
   574     0294                     	;# 
   575     0295                     	;# 
   576     0295                     	;# 
   577     0296                     	;# 
   578     0298                     	;# 
   579     0298                     	;# 
   580     0299                     	;# 
   581     029A                     	;# 
   582     029B                     	;# 
   583     029C                     	;# 
   584     029C                     	;# 
   585     029D                     	;# 
   586     029E                     	;# 
   587     029E                     	;# 
   588     0311                     	;# 
   589     0311                     	;# 
   590     0312                     	;# 
   591     0313                     	;# 
   592     0318                     	;# 
   593     0318                     	;# 
   594     0319                     	;# 
   595     031A                     	;# 
   596     0394                     	;# 
   597     0395                     	;# 
   598     0396                     	;# 
   599     039A                     	;# 
   600     039C                     	;# 
   601     039D                     	;# 
   602     039E                     	;# 
   603     039F                     	;# 
   604     0415                     	;# 
   605     0416                     	;# 
   606     0417                     	;# 
   607     041C                     	;# 
   608     041D                     	;# 
   609     041E                     	;# 
   610     0FE4                     	;# 
   611     0FE5                     	;# 
   612     0FE6                     	;# 
   613     0FE7                     	;# 
   614     0FE8                     	;# 
   615     0FE9                     	;# 
   616     0FEA                     	;# 
   617     0FEB                     	;# 
   618     0FED                     	;# 
   619     0FEE                     	;# 
   620     0FEF                     	;# 
   621     0000                     	;# 
   622     0001                     	;# 
   623     0002                     	;# 
   624     0003                     	;# 
   625     0004                     	;# 
   626     0005                     	;# 
   627     0006                     	;# 
   628     0007                     	;# 
   629     0008                     	;# 
   630     0009                     	;# 
   631     000A                     	;# 
   632     000B                     	;# 
   633     000C                     	;# 
   634     000D                     	;# 
   635     0011                     	;# 
   636     0012                     	;# 
   637     0013                     	;# 
   638     0014                     	;# 
   639     0015                     	;# 
   640     0016                     	;# 
   641     0016                     	;# 
   642     0017                     	;# 
   643     0018                     	;# 
   644     0019                     	;# 
   645     001A                     	;# 
   646     001B                     	;# 
   647     001C                     	;# 
   648     001E                     	;# 
   649     001F                     	;# 
   650     008C                     	;# 
   651     008D                     	;# 
   652     0091                     	;# 
   653     0092                     	;# 
   654     0093                     	;# 
   655     0094                     	;# 
   656     0095                     	;# 
   657     0096                     	;# 
   658     0097                     	;# 
   659     0098                     	;# 
   660     0099                     	;# 
   661     009A                     	;# 
   662     009B                     	;# 
   663     009B                     	;# 
   664     009C                     	;# 
   665     009D                     	;# 
   666     009E                     	;# 
   667     010C                     	;# 
   668     010D                     	;# 
   669     0111                     	;# 
   670     0112                     	;# 
   671     0113                     	;# 
   672     0114                     	;# 
   673     0115                     	;# 
   674     0116                     	;# 
   675     0117                     	;# 
   676     0118                     	;# 
   677     0119                     	;# 
   678     011A                     	;# 
   679     011B                     	;# 
   680     011D                     	;# 
   681     011E                     	;# 
   682     018C                     	;# 
   683     018D                     	;# 
   684     0191                     	;# 
   685     0191                     	;# 
   686     0192                     	;# 
   687     0193                     	;# 
   688     0193                     	;# 
   689     0193                     	;# 
   690     0194                     	;# 
   691     0195                     	;# 
   692     0196                     	;# 
   693     0199                     	;# 
   694     019A                     	;# 
   695     019B                     	;# 
   696     019B                     	;# 
   697     019B                     	;# 
   698     019B                     	;# 
   699     019C                     	;# 
   700     019C                     	;# 
   701     019D                     	;# 
   702     019E                     	;# 
   703     019F                     	;# 
   704     020C                     	;# 
   705     020D                     	;# 
   706     0211                     	;# 
   707     0211                     	;# 
   708     0212                     	;# 
   709     0212                     	;# 
   710     0213                     	;# 
   711     0213                     	;# 
   712     0214                     	;# 
   713     0214                     	;# 
   714     0215                     	;# 
   715     0215                     	;# 
   716     0215                     	;# 
   717     0216                     	;# 
   718     0216                     	;# 
   719     0217                     	;# 
   720     0217                     	;# 
   721     0219                     	;# 
   722     021A                     	;# 
   723     021B                     	;# 
   724     021C                     	;# 
   725     021D                     	;# 
   726     021E                     	;# 
   727     021F                     	;# 
   728     0291                     	;# 
   729     0291                     	;# 
   730     0292                     	;# 
   731     0293                     	;# 
   732     0294                     	;# 
   733     0295                     	;# 
   734     0295                     	;# 
   735     0296                     	;# 
   736     0298                     	;# 
   737     0298                     	;# 
   738     0299                     	;# 
   739     029A                     	;# 
   740     029B                     	;# 
   741     029C                     	;# 
   742     029C                     	;# 
   743     029D                     	;# 
   744     029E                     	;# 
   745     029E                     	;# 
   746     0311                     	;# 
   747     0311                     	;# 
   748     0312                     	;# 
   749     0313                     	;# 
   750     0318                     	;# 
   751     0318                     	;# 
   752     0319                     	;# 
   753     031A                     	;# 
   754     0394                     	;# 
   755     0395                     	;# 
   756     0396                     	;# 
   757     039A                     	;# 
   758     039C                     	;# 
   759     039D                     	;# 
   760     039E                     	;# 
   761     039F                     	;# 
   762     0415                     	;# 
   763     0416                     	;# 
   764     0417                     	;# 
   765     041C                     	;# 
   766     041D                     	;# 
   767     041E                     	;# 
   768     0FE4                     	;# 
   769     0FE5                     	;# 
   770     0FE6                     	;# 
   771     0FE7                     	;# 
   772     0FE8                     	;# 
   773     0FE9                     	;# 
   774     0FEA                     	;# 
   775     0FEB                     	;# 
   776     0FED                     	;# 
   777     0FEE                     	;# 
   778     0FEF                     	;# 
   779     0000                     	;# 
   780     0001                     	;# 
   781     0002                     	;# 
   782     0003                     	;# 
   783     0004                     	;# 
   784     0005                     	;# 
   785     0006                     	;# 
   786     0007                     	;# 
   787     0008                     	;# 
   788     0009                     	;# 
   789     000A                     	;# 
   790     000B                     	;# 
   791     000C                     	;# 
   792     000D                     	;# 
   793     0011                     	;# 
   794     0012                     	;# 
   795     0013                     	;# 
   796     0014                     	;# 
   797     0015                     	;# 
   798     0016                     	;# 
   799     0016                     	;# 
   800     0017                     	;# 
   801     0018                     	;# 
   802     0019                     	;# 
   803     001A                     	;# 
   804     001B                     	;# 
   805     001C                     	;# 
   806     001E                     	;# 
   807     001F                     	;# 
   808     008C                     	;# 
   809     008D                     	;# 
   810     0091                     	;# 
   811     0092                     	;# 
   812     0093                     	;# 
   813     0094                     	;# 
   814     0095                     	;# 
   815     0096                     	;# 
   816     0097                     	;# 
   817     0098                     	;# 
   818     0099                     	;# 
   819     009A                     	;# 
   820     009B                     	;# 
   821     009B                     	;# 
   822     009C                     	;# 
   823     009D                     	;# 
   824     009E                     	;# 
   825     010C                     	;# 
   826     010D                     	;# 
   827     0111                     	;# 
   828     0112                     	;# 
   829     0113                     	;# 
   830     0114                     	;# 
   831     0115                     	;# 
   832     0116                     	;# 
   833     0117                     	;# 
   834     0118                     	;# 
   835     0119                     	;# 
   836     011A                     	;# 
   837     011B                     	;# 
   838     011D                     	;# 
   839     011E                     	;# 
   840     018C                     	;# 
   841     018D                     	;# 
   842     0191                     	;# 
   843     0191                     	;# 
   844     0192                     	;# 
   845     0193                     	;# 
   846     0193                     	;# 
   847     0193                     	;# 
   848     0194                     	;# 
   849     0195                     	;# 
   850     0196                     	;# 
   851     0199                     	;# 
   852     019A                     	;# 
   853     019B                     	;# 
   854     019B                     	;# 
   855     019B                     	;# 
   856     019B                     	;# 
   857     019C                     	;# 
   858     019C                     	;# 
   859     019D                     	;# 
   860     019E                     	;# 
   861     019F                     	;# 
   862     020C                     	;# 
   863     020D                     	;# 
   864     0211                     	;# 
   865     0211                     	;# 
   866     0212                     	;# 
   867     0212                     	;# 
   868     0213                     	;# 
   869     0213                     	;# 
   870     0214                     	;# 
   871     0214                     	;# 
   872     0215                     	;# 
   873     0215                     	;# 
   874     0215                     	;# 
   875     0216                     	;# 
   876     0216                     	;# 
   877     0217                     	;# 
   878     0217                     	;# 
   879     0219                     	;# 
   880     021A                     	;# 
   881     021B                     	;# 
   882     021C                     	;# 
   883     021D                     	;# 
   884     021E                     	;# 
   885     021F                     	;# 
   886     0291                     	;# 
   887     0291                     	;# 
   888     0292                     	;# 
   889     0293                     	;# 
   890     0294                     	;# 
   891     0295                     	;# 
   892     0295                     	;# 
   893     0296                     	;# 
   894     0298                     	;# 
   895     0298                     	;# 
   896     0299                     	;# 
   897     029A                     	;# 
   898     029B                     	;# 
   899     029C                     	;# 
   900     029C                     	;# 
   901     029D                     	;# 
   902     029E                     	;# 
   903     029E                     	;# 
   904     0311                     	;# 
   905     0311                     	;# 
   906     0312                     	;# 
   907     0313                     	;# 
   908     0318                     	;# 
   909     0318                     	;# 
   910     0319                     	;# 
   911     031A                     	;# 
   912     0394                     	;# 
   913     0395                     	;# 
   914     0396                     	;# 
   915     039A                     	;# 
   916     039C                     	;# 
   917     039D                     	;# 
   918     039E                     	;# 
   919     039F                     	;# 
   920     0415                     	;# 
   921     0416                     	;# 
   922     0417                     	;# 
   923     041C                     	;# 
   924     041D                     	;# 
   925     041E                     	;# 
   926     0FE4                     	;# 
   927     0FE5                     	;# 
   928     0FE6                     	;# 
   929     0FE7                     	;# 
   930     0FE8                     	;# 
   931     0FE9                     	;# 
   932     0FEA                     	;# 
   933     0FEB                     	;# 
   934     0FED                     	;# 
   935     0FEE                     	;# 
   936     0FEF                     	;# 
   937     0000                     	;# 
   938     0001                     	;# 
   939     0002                     	;# 
   940     0003                     	;# 
   941     0004                     	;# 
   942     0005                     	;# 
   943     0006                     	;# 
   944     0007                     	;# 
   945     0008                     	;# 
   946     0009                     	;# 
   947     000A                     	;# 
   948     000B                     	;# 
   949     000C                     	;# 
   950     000D                     	;# 
   951     0011                     	;# 
   952     0012                     	;# 
   953     0013                     	;# 
   954     0014                     	;# 
   955     0015                     	;# 
   956     0016                     	;# 
   957     0016                     	;# 
   958     0017                     	;# 
   959     0018                     	;# 
   960     0019                     	;# 
   961     001A                     	;# 
   962     001B                     	;# 
   963     001C                     	;# 
   964     001E                     	;# 
   965     001F                     	;# 
   966     008C                     	;# 
   967     008D                     	;# 
   968     0091                     	;# 
   969     0092                     	;# 
   970     0093                     	;# 
   971     0094                     	;# 
   972     0095                     	;# 
   973     0096                     	;# 
   974     0097                     	;# 
   975     0098                     	;# 
   976     0099                     	;# 
   977     009A                     	;# 
   978     009B                     	;# 
   979     009B                     	;# 
   980     009C                     	;# 
   981     009D                     	;# 
   982     009E                     	;# 
   983     010C                     	;# 
   984     010D                     	;# 
   985     0111                     	;# 
   986     0112                     	;# 
   987     0113                     	;# 
   988     0114                     	;# 
   989     0115                     	;# 
   990     0116                     	;# 
   991     0117                     	;# 
   992     0118                     	;# 
   993     0119                     	;# 
   994     011A                     	;# 
   995     011B                     	;# 
   996     011D                     	;# 
   997     011E                     	;# 
   998     018C                     	;# 
   999     018D                     	;# 
  1000     0191                     	;# 
  1001     0191                     	;# 
  1002     0192                     	;# 
  1003     0193                     	;# 
  1004     0193                     	;# 
  1005     0193                     	;# 
  1006     0194                     	;# 
  1007     0195                     	;# 
  1008     0196                     	;# 
  1009     0199                     	;# 
  1010     019A                     	;# 
  1011     019B                     	;# 
  1012     019B                     	;# 
  1013     019B                     	;# 
  1014     019B                     	;# 
  1015     019C                     	;# 
  1016     019C                     	;# 
  1017     019D                     	;# 
  1018     019E                     	;# 
  1019     019F                     	;# 
  1020     020C                     	;# 
  1021     020D                     	;# 
  1022     0211                     	;# 
  1023     0211                     	;# 
  1024     0212                     	;# 
  1025     0212                     	;# 
  1026     0213                     	;# 
  1027     0213                     	;# 
  1028     0214                     	;# 
  1029     0214                     	;# 
  1030     0215                     	;# 
  1031     0215                     	;# 
  1032     0215                     	;# 
  1033     0216                     	;# 
  1034     0216                     	;# 
  1035     0217                     	;# 
  1036     0217                     	;# 
  1037     0219                     	;# 
  1038     021A                     	;# 
  1039     021B                     	;# 
  1040     021C                     	;# 
  1041     021D                     	;# 
  1042     021E                     	;# 
  1043     021F                     	;# 
  1044     0291                     	;# 
  1045     0291                     	;# 
  1046     0292                     	;# 
  1047     0293                     	;# 
  1048     0294                     	;# 
  1049     0295                     	;# 
  1050     0295                     	;# 
  1051     0296                     	;# 
  1052     0298                     	;# 
  1053     0298                     	;# 
  1054     0299                     	;# 
  1055     029A                     	;# 
  1056     029B                     	;# 
  1057     029C                     	;# 
  1058     029C                     	;# 
  1059     029D                     	;# 
  1060     029E                     	;# 
  1061     029E                     	;# 
  1062     0311                     	;# 
  1063     0311                     	;# 
  1064     0312                     	;# 
  1065     0313                     	;# 
  1066     0318                     	;# 
  1067     0318                     	;# 
  1068     0319                     	;# 
  1069     031A                     	;# 
  1070     0394                     	;# 
  1071     0395                     	;# 
  1072     0396                     	;# 
  1073     039A                     	;# 
  1074     039C                     	;# 
  1075     039D                     	;# 
  1076     039E                     	;# 
  1077     039F                     	;# 
  1078     0415                     	;# 
  1079     0416                     	;# 
  1080     0417                     	;# 
  1081     041C                     	;# 
  1082     041D                     	;# 
  1083     041E                     	;# 
  1084     0FE4                     	;# 
  1085     0FE5                     	;# 
  1086     0FE6                     	;# 
  1087     0FE7                     	;# 
  1088     0FE8                     	;# 
  1089     0FE9                     	;# 
  1090     0FEA                     	;# 
  1091     0FEB                     	;# 
  1092     0FED                     	;# 
  1093     0FEE                     	;# 
  1094     0FEF                     	;# 
  1095     0000                     	;# 
  1096     0001                     	;# 
  1097     0002                     	;# 
  1098     0003                     	;# 
  1099     0004                     	;# 
  1100     0005                     	;# 
  1101     0006                     	;# 
  1102     0007                     	;# 
  1103     0008                     	;# 
  1104     0009                     	;# 
  1105     000A                     	;# 
  1106     000B                     	;# 
  1107     000C                     	;# 
  1108     000D                     	;# 
  1109     0011                     	;# 
  1110     0012                     	;# 
  1111     0013                     	;# 
  1112     0014                     	;# 
  1113     0015                     	;# 
  1114     0016                     	;# 
  1115     0016                     	;# 
  1116     0017                     	;# 
  1117     0018                     	;# 
  1118     0019                     	;# 
  1119     001A                     	;# 
  1120     001B                     	;# 
  1121     001C                     	;# 
  1122     001E                     	;# 
  1123     001F                     	;# 
  1124     008C                     	;# 
  1125     008D                     	;# 
  1126     0091                     	;# 
  1127     0092                     	;# 
  1128     0093                     	;# 
  1129     0094                     	;# 
  1130     0095                     	;# 
  1131     0096                     	;# 
  1132     0097                     	;# 
  1133     0098                     	;# 
  1134     0099                     	;# 
  1135     009A                     	;# 
  1136     009B                     	;# 
  1137     009B                     	;# 
  1138     009C                     	;# 
  1139     009D                     	;# 
  1140     009E                     	;# 
  1141     010C                     	;# 
  1142     010D                     	;# 
  1143     0111                     	;# 
  1144     0112                     	;# 
  1145     0113                     	;# 
  1146     0114                     	;# 
  1147     0115                     	;# 
  1148     0116                     	;# 
  1149     0117                     	;# 
  1150     0118                     	;# 
  1151     0119                     	;# 
  1152     011A                     	;# 
  1153     011B                     	;# 
  1154     011D                     	;# 
  1155     011E                     	;# 
  1156     018C                     	;# 
  1157     018D                     	;# 
  1158     0191                     	;# 
  1159     0191                     	;# 
  1160     0192                     	;# 
  1161     0193                     	;# 
  1162     0193                     	;# 
  1163     0193                     	;# 
  1164     0194                     	;# 
  1165     0195                     	;# 
  1166     0196                     	;# 
  1167     0199                     	;# 
  1168     019A                     	;# 
  1169     019B                     	;# 
  1170     019B                     	;# 
  1171     019B                     	;# 
  1172     019B                     	;# 
  1173     019C                     	;# 
  1174     019C                     	;# 
  1175     019D                     	;# 
  1176     019E                     	;# 
  1177     019F                     	;# 
  1178     020C                     	;# 
  1179     020D                     	;# 
  1180     0211                     	;# 
  1181     0211                     	;# 
  1182     0212                     	;# 
  1183     0212                     	;# 
  1184     0213                     	;# 
  1185     0213                     	;# 
  1186     0214                     	;# 
  1187     0214                     	;# 
  1188     0215                     	;# 
  1189     0215                     	;# 
  1190     0215                     	;# 
  1191     0216                     	;# 
  1192     0216                     	;# 
  1193     0217                     	;# 
  1194     0217                     	;# 
  1195     0219                     	;# 
  1196     021A                     	;# 
  1197     021B                     	;# 
  1198     021C                     	;# 
  1199     021D                     	;# 
  1200     021E                     	;# 
  1201     021F                     	;# 
  1202     0291                     	;# 
  1203     0291                     	;# 
  1204     0292                     	;# 
  1205     0293                     	;# 
  1206     0294                     	;# 
  1207     0295                     	;# 
  1208     0295                     	;# 
  1209     0296                     	;# 
  1210     0298                     	;# 
  1211     0298                     	;# 
  1212     0299                     	;# 
  1213     029A                     	;# 
  1214     029B                     	;# 
  1215     029C                     	;# 
  1216     029C                     	;# 
  1217     029D                     	;# 
  1218     029E                     	;# 
  1219     029E                     	;# 
  1220     0311                     	;# 
  1221     0311                     	;# 
  1222     0312                     	;# 
  1223     0313                     	;# 
  1224     0318                     	;# 
  1225     0318                     	;# 
  1226     0319                     	;# 
  1227     031A                     	;# 
  1228     0394                     	;# 
  1229     0395                     	;# 
  1230     0396                     	;# 
  1231     039A                     	;# 
  1232     039C                     	;# 
  1233     039D                     	;# 
  1234     039E                     	;# 
  1235     039F                     	;# 
  1236     0415                     	;# 
  1237     0416                     	;# 
  1238     0417                     	;# 
  1239     041C                     	;# 
  1240     041D                     	;# 
  1241     041E                     	;# 
  1242     0FE4                     	;# 
  1243     0FE5                     	;# 
  1244     0FE6                     	;# 
  1245     0FE7                     	;# 
  1246     0FE8                     	;# 
  1247     0FE9                     	;# 
  1248     0FEA                     	;# 
  1249     0FEB                     	;# 
  1250     0FED                     	;# 
  1251     0FEE                     	;# 
  1252     0FEF                     	;# 
  1253     0000                     	;# 
  1254     0001                     	;# 
  1255     0002                     	;# 
  1256     0003                     	;# 
  1257     0004                     	;# 
  1258     0005                     	;# 
  1259     0006                     	;# 
  1260     0007                     	;# 
  1261     0008                     	;# 
  1262     0009                     	;# 
  1263     000A                     	;# 
  1264     000B                     	;# 
  1265     000C                     	;# 
  1266     000D                     	;# 
  1267     0011                     	;# 
  1268     0012                     	;# 
  1269     0013                     	;# 
  1270     0014                     	;# 
  1271     0015                     	;# 
  1272     0016                     	;# 
  1273     0016                     	;# 
  1274     0017                     	;# 
  1275     0018                     	;# 
  1276     0019                     	;# 
  1277     001A                     	;# 
  1278     001B                     	;# 
  1279     001C                     	;# 
  1280     001E                     	;# 
  1281     001F                     	;# 
  1282     008C                     	;# 
  1283     008D                     	;# 
  1284     0091                     	;# 
  1285     0092                     	;# 
  1286     0093                     	;# 
  1287     0094                     	;# 
  1288     0095                     	;# 
  1289     0096                     	;# 
  1290     0097                     	;# 
  1291     0098                     	;# 
  1292     0099                     	;# 
  1293     009A                     	;# 
  1294     009B                     	;# 
  1295     009B                     	;# 
  1296     009C                     	;# 
  1297     009D                     	;# 
  1298     009E                     	;# 
  1299     010C                     	;# 
  1300     010D                     	;# 
  1301     0111                     	;# 
  1302     0112                     	;# 
  1303     0113                     	;# 
  1304     0114                     	;# 
  1305     0115                     	;# 
  1306     0116                     	;# 
  1307     0117                     	;# 
  1308     0118                     	;# 
  1309     0119                     	;# 
  1310     011A                     	;# 
  1311     011B                     	;# 
  1312     011D                     	;# 
  1313     011E                     	;# 
  1314     018C                     	;# 
  1315     018D                     	;# 
  1316     0191                     	;# 
  1317     0191                     	;# 
  1318     0192                     	;# 
  1319     0193                     	;# 
  1320     0193                     	;# 
  1321     0193                     	;# 
  1322     0194                     	;# 
  1323     0195                     	;# 
  1324     0196                     	;# 
  1325     0199                     	;# 
  1326     019A                     	;# 
  1327     019B                     	;# 
  1328     019B                     	;# 
  1329     019B                     	;# 
  1330     019B                     	;# 
  1331     019C                     	;# 
  1332     019C                     	;# 
  1333     019D                     	;# 
  1334     019E                     	;# 
  1335     019F                     	;# 
  1336     020C                     	;# 
  1337     020D                     	;# 
  1338     0211                     	;# 
  1339     0211                     	;# 
  1340     0212                     	;# 
  1341     0212                     	;# 
  1342     0213                     	;# 
  1343     0213                     	;# 
  1344     0214                     	;# 
  1345     0214                     	;# 
  1346     0215                     	;# 
  1347     0215                     	;# 
  1348     0215                     	;# 
  1349     0216                     	;# 
  1350     0216                     	;# 
  1351     0217                     	;# 
  1352     0217                     	;# 
  1353     0219                     	;# 
  1354     021A                     	;# 
  1355     021B                     	;# 
  1356     021C                     	;# 
  1357     021D                     	;# 
  1358     021E                     	;# 
  1359     021F                     	;# 
  1360     0291                     	;# 
  1361     0291                     	;# 
  1362     0292                     	;# 
  1363     0293                     	;# 
  1364     0294                     	;# 
  1365     0295                     	;# 
  1366     0295                     	;# 
  1367     0296                     	;# 
  1368     0298                     	;# 
  1369     0298                     	;# 
  1370     0299                     	;# 
  1371     029A                     	;# 
  1372     029B                     	;# 
  1373     029C                     	;# 
  1374     029C                     	;# 
  1375     029D                     	;# 
  1376     029E                     	;# 
  1377     029E                     	;# 
  1378     0311                     	;# 
  1379     0311                     	;# 
  1380     0312                     	;# 
  1381     0313                     	;# 
  1382     0318                     	;# 
  1383     0318                     	;# 
  1384     0319                     	;# 
  1385     031A                     	;# 
  1386     0394                     	;# 
  1387     0395                     	;# 
  1388     0396                     	;# 
  1389     039A                     	;# 
  1390     039C                     	;# 
  1391     039D                     	;# 
  1392     039E                     	;# 
  1393     039F                     	;# 
  1394     0415                     	;# 
  1395     0416                     	;# 
  1396     0417                     	;# 
  1397     041C                     	;# 
  1398     041D                     	;# 
  1399     041E                     	;# 
  1400     0FE4                     	;# 
  1401     0FE5                     	;# 
  1402     0FE6                     	;# 
  1403     0FE7                     	;# 
  1404     0FE8                     	;# 
  1405     0FE9                     	;# 
  1406     0FEA                     	;# 
  1407     0FEB                     	;# 
  1408     0FED                     	;# 
  1409     0FEE                     	;# 
  1410     0FEF                     	;# 
  1411     0000                     	;# 
  1412     0001                     	;# 
  1413     0002                     	;# 
  1414     0003                     	;# 
  1415     0004                     	;# 
  1416     0005                     	;# 
  1417     0006                     	;# 
  1418     0007                     	;# 
  1419     0008                     	;# 
  1420     0009                     	;# 
  1421     000A                     	;# 
  1422     000B                     	;# 
  1423     000C                     	;# 
  1424     000D                     	;# 
  1425     0011                     	;# 
  1426     0012                     	;# 
  1427     0013                     	;# 
  1428     0014                     	;# 
  1429     0015                     	;# 
  1430     0016                     	;# 
  1431     0016                     	;# 
  1432     0017                     	;# 
  1433     0018                     	;# 
  1434     0019                     	;# 
  1435     001A                     	;# 
  1436     001B                     	;# 
  1437     001C                     	;# 
  1438     001E                     	;# 
  1439     001F                     	;# 
  1440     008C                     	;# 
  1441     008D                     	;# 
  1442     0091                     	;# 
  1443     0092                     	;# 
  1444     0093                     	;# 
  1445     0094                     	;# 
  1446     0095                     	;# 
  1447     0096                     	;# 
  1448     0097                     	;# 
  1449     0098                     	;# 
  1450     0099                     	;# 
  1451     009A                     	;# 
  1452     009B                     	;# 
  1453     009B                     	;# 
  1454     009C                     	;# 
  1455     009D                     	;# 
  1456     009E                     	;# 
  1457     010C                     	;# 
  1458     010D                     	;# 
  1459     0111                     	;# 
  1460     0112                     	;# 
  1461     0113                     	;# 
  1462     0114                     	;# 
  1463     0115                     	;# 
  1464     0116                     	;# 
  1465     0117                     	;# 
  1466     0118                     	;# 
  1467     0119                     	;# 
  1468     011A                     	;# 
  1469     011B                     	;# 
  1470     011D                     	;# 
  1471     011E                     	;# 
  1472     018C                     	;# 
  1473     018D                     	;# 
  1474     0191                     	;# 
  1475     0191                     	;# 
  1476     0192                     	;# 
  1477     0193                     	;# 
  1478     0193                     	;# 
  1479     0193                     	;# 
  1480     0194                     	;# 
  1481     0195                     	;# 
  1482     0196                     	;# 
  1483     0199                     	;# 
  1484     019A                     	;# 
  1485     019B                     	;# 
  1486     019B                     	;# 
  1487     019B                     	;# 
  1488     019B                     	;# 
  1489     019C                     	;# 
  1490     019C                     	;# 
  1491     019D                     	;# 
  1492     019E                     	;# 
  1493     019F                     	;# 
  1494     020C                     	;# 
  1495     020D                     	;# 
  1496     0211                     	;# 
  1497     0211                     	;# 
  1498     0212                     	;# 
  1499     0212                     	;# 
  1500     0213                     	;# 
  1501     0213                     	;# 
  1502     0214                     	;# 
  1503     0214                     	;# 
  1504     0215                     	;# 
  1505     0215                     	;# 
  1506     0215                     	;# 
  1507     0216                     	;# 
  1508     0216                     	;# 
  1509     0217                     	;# 
  1510     0217                     	;# 
  1511     0219                     	;# 
  1512     021A                     	;# 
  1513     021B                     	;# 
  1514     021C                     	;# 
  1515     021D                     	;# 
  1516     021E                     	;# 
  1517     021F                     	;# 
  1518     0291                     	;# 
  1519     0291                     	;# 
  1520     0292                     	;# 
  1521     0293                     	;# 
  1522     0294                     	;# 
  1523     0295                     	;# 
  1524     0295                     	;# 
  1525     0296                     	;# 
  1526     0298                     	;# 
  1527     0298                     	;# 
  1528     0299                     	;# 
  1529     029A                     	;# 
  1530     029B                     	;# 
  1531     029C                     	;# 
  1532     029C                     	;# 
  1533     029D                     	;# 
  1534     029E                     	;# 
  1535     029E                     	;# 
  1536     0311                     	;# 
  1537     0311                     	;# 
  1538     0312                     	;# 
  1539     0313                     	;# 
  1540     0318                     	;# 
  1541     0318                     	;# 
  1542     0319                     	;# 
  1543     031A                     	;# 
  1544     0394                     	;# 
  1545     0395                     	;# 
  1546     0396                     	;# 
  1547     039A                     	;# 
  1548     039C                     	;# 
  1549     039D                     	;# 
  1550     039E                     	;# 
  1551     039F                     	;# 
  1552     0415                     	;# 
  1553     0416                     	;# 
  1554     0417                     	;# 
  1555     041C                     	;# 
  1556     041D                     	;# 
  1557     041E                     	;# 
  1558     0FE4                     	;# 
  1559     0FE5                     	;# 
  1560     0FE6                     	;# 
  1561     0FE7                     	;# 
  1562     0FE8                     	;# 
  1563     0FE9                     	;# 
  1564     0FEA                     	;# 
  1565     0FEB                     	;# 
  1566     0FED                     	;# 
  1567     0FEE                     	;# 
  1568     0FEF                     	;# 
  1569     0000                     	;# 
  1570     0001                     	;# 
  1571     0002                     	;# 
  1572     0003                     	;# 
  1573     0004                     	;# 
  1574     0005                     	;# 
  1575     0006                     	;# 
  1576     0007                     	;# 
  1577     0008                     	;# 
  1578     0009                     	;# 
  1579     000A                     	;# 
  1580     000B                     	;# 
  1581     000C                     	;# 
  1582     000D                     	;# 
  1583     0011                     	;# 
  1584     0012                     	;# 
  1585     0013                     	;# 
  1586     0014                     	;# 
  1587     0015                     	;# 
  1588     0016                     	;# 
  1589     0016                     	;# 
  1590     0017                     	;# 
  1591     0018                     	;# 
  1592     0019                     	;# 
  1593     001A                     	;# 
  1594     001B                     	;# 
  1595     001C                     	;# 
  1596     001E                     	;# 
  1597     001F                     	;# 
  1598     008C                     	;# 
  1599     008D                     	;# 
  1600     0091                     	;# 
  1601     0092                     	;# 
  1602     0093                     	;# 
  1603     0094                     	;# 
  1604     0095                     	;# 
  1605     0096                     	;# 
  1606     0097                     	;# 
  1607     0098                     	;# 
  1608     0099                     	;# 
  1609     009A                     	;# 
  1610     009B                     	;# 
  1611     009B                     	;# 
  1612     009C                     	;# 
  1613     009D                     	;# 
  1614     009E                     	;# 
  1615     010C                     	;# 
  1616     010D                     	;# 
  1617     0111                     	;# 
  1618     0112                     	;# 
  1619     0113                     	;# 
  1620     0114                     	;# 
  1621     0115                     	;# 
  1622     0116                     	;# 
  1623     0117                     	;# 
  1624     0118                     	;# 
  1625     0119                     	;# 
  1626     011A                     	;# 
  1627     011B                     	;# 
  1628     011D                     	;# 
  1629     011E                     	;# 
  1630     018C                     	;# 
  1631     018D                     	;# 
  1632     0191                     	;# 
  1633     0191                     	;# 
  1634     0192                     	;# 
  1635     0193                     	;# 
  1636     0193                     	;# 
  1637     0193                     	;# 
  1638     0194                     	;# 
  1639     0195                     	;# 
  1640     0196                     	;# 
  1641     0199                     	;# 
  1642     019A                     	;# 
  1643     019B                     	;# 
  1644     019B                     	;# 
  1645     019B                     	;# 
  1646     019B                     	;# 
  1647     019C                     	;# 
  1648     019C                     	;# 
  1649     019D                     	;# 
  1650     019E                     	;# 
  1651     019F                     	;# 
  1652     020C                     	;# 
  1653     020D                     	;# 
  1654     0211                     	;# 
  1655     0211                     	;# 
  1656     0212                     	;# 
  1657     0212                     	;# 
  1658     0213                     	;# 
  1659     0213                     	;# 
  1660     0214                     	;# 
  1661     0214                     	;# 
  1662     0215                     	;# 
  1663     0215                     	;# 
  1664     0215                     	;# 
  1665     0216                     	;# 
  1666     0216                     	;# 
  1667     0217                     	;# 
  1668     0217                     	;# 
  1669     0219                     	;# 
  1670     021A                     	;# 
  1671     021B                     	;# 
  1672     021C                     	;# 
  1673     021D                     	;# 
  1674     021E                     	;# 
  1675     021F                     	;# 
  1676     0291                     	;# 
  1677     0291                     	;# 
  1678     0292                     	;# 
  1679     0293                     	;# 
  1680     0294                     	;# 
  1681     0295                     	;# 
  1682     0295                     	;# 
  1683     0296                     	;# 
  1684     0298                     	;# 
  1685     0298                     	;# 
  1686     0299                     	;# 
  1687     029A                     	;# 
  1688     029B                     	;# 
  1689     029C                     	;# 
  1690     029C                     	;# 
  1691     029D                     	;# 
  1692     029E                     	;# 
  1693     029E                     	;# 
  1694     0311                     	;# 
  1695     0311                     	;# 
  1696     0312                     	;# 
  1697     0313                     	;# 
  1698     0318                     	;# 
  1699     0318                     	;# 
  1700     0319                     	;# 
  1701     031A                     	;# 
  1702     0394                     	;# 
  1703     0395                     	;# 
  1704     0396                     	;# 
  1705     039A                     	;# 
  1706     039C                     	;# 
  1707     039D                     	;# 
  1708     039E                     	;# 
  1709     039F                     	;# 
  1710     0415                     	;# 
  1711     0416                     	;# 
  1712     0417                     	;# 
  1713     041C                     	;# 
  1714     041D                     	;# 
  1715     041E                     	;# 
  1716     0FE4                     	;# 
  1717     0FE5                     	;# 
  1718     0FE6                     	;# 
  1719     0FE7                     	;# 
  1720     0FE8                     	;# 
  1721     0FE9                     	;# 
  1722     0FEA                     	;# 
  1723     0FEB                     	;# 
  1724     0FED                     	;# 
  1725     0FEE                     	;# 
  1726     0FEF                     	;# 
  1727     0000                     	;# 
  1728     0001                     	;# 
  1729     0002                     	;# 
  1730     0003                     	;# 
  1731     0004                     	;# 
  1732     0005                     	;# 
  1733     0006                     	;# 
  1734     0007                     	;# 
  1735     0008                     	;# 
  1736     0009                     	;# 
  1737     000A                     	;# 
  1738     000B                     	;# 
  1739     000C                     	;# 
  1740     000D                     	;# 
  1741     0011                     	;# 
  1742     0012                     	;# 
  1743     0013                     	;# 
  1744     0014                     	;# 
  1745     0015                     	;# 
  1746     0016                     	;# 
  1747     0016                     	;# 
  1748     0017                     	;# 
  1749     0018                     	;# 
  1750     0019                     	;# 
  1751     001A                     	;# 
  1752     001B                     	;# 
  1753     001C                     	;# 
  1754     001E                     	;# 
  1755     001F                     	;# 
  1756     008C                     	;# 
  1757     008D                     	;# 
  1758     0091                     	;# 
  1759     0092                     	;# 
  1760     0093                     	;# 
  1761     0094                     	;# 
  1762     0095                     	;# 
  1763     0096                     	;# 
  1764     0097                     	;# 
  1765     0098                     	;# 
  1766     0099                     	;# 
  1767     009A                     	;# 
  1768     009B                     	;# 
  1769     009B                     	;# 
  1770     009C                     	;# 
  1771     009D                     	;# 
  1772     009E                     	;# 
  1773     010C                     	;# 
  1774     010D                     	;# 
  1775     0111                     	;# 
  1776     0112                     	;# 
  1777     0113                     	;# 
  1778     0114                     	;# 
  1779     0115                     	;# 
  1780     0116                     	;# 
  1781     0117                     	;# 
  1782     0118                     	;# 
  1783     0119                     	;# 
  1784     011A                     	;# 
  1785     011B                     	;# 
  1786     011D                     	;# 
  1787     011E                     	;# 
  1788     018C                     	;# 
  1789     018D                     	;# 
  1790     0191                     	;# 
  1791     0191                     	;# 
  1792     0192                     	;# 
  1793     0193                     	;# 
  1794     0193                     	;# 
  1795     0193                     	;# 
  1796     0194                     	;# 
  1797     0195                     	;# 
  1798     0196                     	;# 
  1799     0199                     	;# 
  1800     019A                     	;# 
  1801     019B                     	;# 
  1802     019B                     	;# 
  1803     019B                     	;# 
  1804     019B                     	;# 
  1805     019C                     	;# 
  1806     019C                     	;# 
  1807     019D                     	;# 
  1808     019E                     	;# 
  1809     019F                     	;# 
  1810     020C                     	;# 
  1811     020D                     	;# 
  1812     0211                     	;# 
  1813     0211                     	;# 
  1814     0212                     	;# 
  1815     0212                     	;# 
  1816     0213                     	;# 
  1817     0213                     	;# 
  1818     0214                     	;# 
  1819     0214                     	;# 
  1820     0215                     	;# 
  1821     0215                     	;# 
  1822     0215                     	;# 
  1823     0216                     	;# 
  1824     0216                     	;# 
  1825     0217                     	;# 
  1826     0217                     	;# 
  1827     0219                     	;# 
  1828     021A                     	;# 
  1829     021B                     	;# 
  1830     021C                     	;# 
  1831     021D                     	;# 
  1832     021E                     	;# 
  1833     021F                     	;# 
  1834     0291                     	;# 
  1835     0291                     	;# 
  1836     0292                     	;# 
  1837     0293                     	;# 
  1838     0294                     	;# 
  1839     0295                     	;# 
  1840     0295                     	;# 
  1841     0296                     	;# 
  1842     0298                     	;# 
  1843     0298                     	;# 
  1844     0299                     	;# 
  1845     029A                     	;# 
  1846     029B                     	;# 
  1847     029C                     	;# 
  1848     029C                     	;# 
  1849     029D                     	;# 
  1850     029E                     	;# 
  1851     029E                     	;# 
  1852     0311                     	;# 
  1853     0311                     	;# 
  1854     0312                     	;# 
  1855     0313                     	;# 
  1856     0318                     	;# 
  1857     0318                     	;# 
  1858     0319                     	;# 
  1859     031A                     	;# 
  1860     0394                     	;# 
  1861     0395                     	;# 
  1862     0396                     	;# 
  1863     039A                     	;# 
  1864     039C                     	;# 
  1865     039D                     	;# 
  1866     039E                     	;# 
  1867     039F                     	;# 
  1868     0415                     	;# 
  1869     0416                     	;# 
  1870     0417                     	;# 
  1871     041C                     	;# 
  1872     041D                     	;# 
  1873     041E                     	;# 
  1874     0FE4                     	;# 
  1875     0FE5                     	;# 
  1876     0FE6                     	;# 
  1877     0FE7                     	;# 
  1878     0FE8                     	;# 
  1879     0FE9                     	;# 
  1880     0FEA                     	;# 
  1881     0FEB                     	;# 
  1882     0FED                     	;# 
  1883     0FEE                     	;# 
  1884     0FEF                     	;# 
  1885     0000                     	;# 
  1886     0001                     	;# 
  1887     0002                     	;# 
  1888     0003                     	;# 
  1889     0004                     	;# 
  1890     0005                     	;# 
  1891     0006                     	;# 
  1892     0007                     	;# 
  1893     0008                     	;# 
  1894     0009                     	;# 
  1895     000A                     	;# 
  1896     000B                     	;# 
  1897     000C                     	;# 
  1898     000D                     	;# 
  1899     0011                     	;# 
  1900     0012                     	;# 
  1901     0013                     	;# 
  1902     0014                     	;# 
  1903     0015                     	;# 
  1904     0016                     	;# 
  1905     0016                     	;# 
  1906     0017                     	;# 
  1907     0018                     	;# 
  1908     0019                     	;# 
  1909     001A                     	;# 
  1910     001B                     	;# 
  1911     001C                     	;# 
  1912     001E                     	;# 
  1913     001F                     	;# 
  1914     008C                     	;# 
  1915     008D                     	;# 
  1916     0091                     	;# 
  1917     0092                     	;# 
  1918     0093                     	;# 
  1919     0094                     	;# 
  1920     0095                     	;# 
  1921     0096                     	;# 
  1922     0097                     	;# 
  1923     0098                     	;# 
  1924     0099                     	;# 
  1925     009A                     	;# 
  1926     009B                     	;# 
  1927     009B                     	;# 
  1928     009C                     	;# 
  1929     009D                     	;# 
  1930     009E                     	;# 
  1931     010C                     	;# 
  1932     010D                     	;# 
  1933     0111                     	;# 
  1934     0112                     	;# 
  1935     0113                     	;# 
  1936     0114                     	;# 
  1937     0115                     	;# 
  1938     0116                     	;# 
  1939     0117                     	;# 
  1940     0118                     	;# 
  1941     0119                     	;# 
  1942     011A                     	;# 
  1943     011B                     	;# 
  1944     011D                     	;# 
  1945     011E                     	;# 
  1946     018C                     	;# 
  1947     018D                     	;# 
  1948     0191                     	;# 
  1949     0191                     	;# 
  1950     0192                     	;# 
  1951     0193                     	;# 
  1952     0193                     	;# 
  1953     0193                     	;# 
  1954     0194                     	;# 
  1955     0195                     	;# 
  1956     0196                     	;# 
  1957     0199                     	;# 
  1958     019A                     	;# 
  1959     019B                     	;# 
  1960     019B                     	;# 
  1961     019B                     	;# 
  1962     019B                     	;# 
  1963     019C                     	;# 
  1964     019C                     	;# 
  1965     019D                     	;# 
  1966     019E                     	;# 
  1967     019F                     	;# 
  1968     020C                     	;# 
  1969     020D                     	;# 
  1970     0211                     	;# 
  1971     0211                     	;# 
  1972     0212                     	;# 
  1973     0212                     	;# 
  1974     0213                     	;# 
  1975     0213                     	;# 
  1976     0214                     	;# 
  1977     0214                     	;# 
  1978     0215                     	;# 
  1979     0215                     	;# 
  1980     0215                     	;# 
  1981     0216                     	;# 
  1982     0216                     	;# 
  1983     0217                     	;# 
  1984     0217                     	;# 
  1985     0219                     	;# 
  1986     021A                     	;# 
  1987     021B                     	;# 
  1988     021C                     	;# 
  1989     021D                     	;# 
  1990     021E                     	;# 
  1991     021F                     	;# 
  1992     0291                     	;# 
  1993     0291                     	;# 
  1994     0292                     	;# 
  1995     0293                     	;# 
  1996     0294                     	;# 
  1997     0295                     	;# 
  1998     0295                     	;# 
  1999     0296                     	;# 
  2000     0298                     	;# 
  2001     0298                     	;# 
  2002     0299                     	;# 
  2003     029A                     	;# 
  2004     029B                     	;# 
  2005     029C                     	;# 
  2006     029C                     	;# 
  2007     029D                     	;# 
  2008     029E                     	;# 
  2009     029E                     	;# 
  2010     0311                     	;# 
  2011     0311                     	;# 
  2012     0312                     	;# 
  2013     0313                     	;# 
  2014     0318                     	;# 
  2015     0318                     	;# 
  2016     0319                     	;# 
  2017     031A                     	;# 
  2018     0394                     	;# 
  2019     0395                     	;# 
  2020     0396                     	;# 
  2021     039A                     	;# 
  2022     039C                     	;# 
  2023     039D                     	;# 
  2024     039E                     	;# 
  2025     039F                     	;# 
  2026     0415                     	;# 
  2027     0416                     	;# 
  2028     0417                     	;# 
  2029     041C                     	;# 
  2030     041D                     	;# 
  2031     041E                     	;# 
  2032     0FE4                     	;# 
  2033     0FE5                     	;# 
  2034     0FE6                     	;# 
  2035     0FE7                     	;# 
  2036     0FE8                     	;# 
  2037     0FE9                     	;# 
  2038     0FEA                     	;# 
  2039     0FEB                     	;# 
  2040     0FED                     	;# 
  2041     0FEE                     	;# 
  2042     0FEF                     	;# 
  2043     0000                     	;# 
  2044     0001                     	;# 
  2045     0002                     	;# 
  2046     0003                     	;# 
  2047     0004                     	;# 
  2048     0005                     	;# 
  2049     0006                     	;# 
  2050     0007                     	;# 
  2051     0008                     	;# 
  2052     0009                     	;# 
  2053     000A                     	;# 
  2054     000B                     	;# 
  2055     000C                     	;# 
  2056     000D                     	;# 
  2057     0011                     	;# 
  2058     0012                     	;# 
  2059     0013                     	;# 
  2060     0014                     	;# 
  2061     0015                     	;# 
  2062     0016                     	;# 
  2063     0016                     	;# 
  2064     0017                     	;# 
  2065     0018                     	;# 
  2066     0019                     	;# 
  2067     001A                     	;# 
  2068     001B                     	;# 
  2069     001C                     	;# 
  2070     001E                     	;# 
  2071     001F                     	;# 
  2072     008C                     	;# 
  2073     008D                     	;# 
  2074     0091                     	;# 
  2075     0092                     	;# 
  2076     0093                     	;# 
  2077     0094                     	;# 
  2078     0095                     	;# 
  2079     0096                     	;# 
  2080     0097                     	;# 
  2081     0098                     	;# 
  2082     0099                     	;# 
  2083     009A                     	;# 
  2084     009B                     	;# 
  2085     009B                     	;# 
  2086     009C                     	;# 
  2087     009D                     	;# 
  2088     009E                     	;# 
  2089     010C                     	;# 
  2090     010D                     	;# 
  2091     0111                     	;# 
  2092     0112                     	;# 
  2093     0113                     	;# 
  2094     0114                     	;# 
  2095     0115                     	;# 
  2096     0116                     	;# 
  2097     0117                     	;# 
  2098     0118                     	;# 
  2099     0119                     	;# 
  2100     011A                     	;# 
  2101     011B                     	;# 
  2102     011D                     	;# 
  2103     011E                     	;# 
  2104     018C                     	;# 
  2105     018D                     	;# 
  2106     0191                     	;# 
  2107     0191                     	;# 
  2108     0192                     	;# 
  2109     0193                     	;# 
  2110     0193                     	;# 
  2111     0193                     	;# 
  2112     0194                     	;# 
  2113     0195                     	;# 
  2114     0196                     	;# 
  2115     0199                     	;# 
  2116     019A                     	;# 
  2117     019B                     	;# 
  2118     019B                     	;# 
  2119     019B                     	;# 
  2120     019B                     	;# 
  2121     019C                     	;# 
  2122     019C                     	;# 
  2123     019D                     	;# 
  2124     019E                     	;# 
  2125     019F                     	;# 
  2126     020C                     	;# 
  2127     020D                     	;# 
  2128     0211                     	;# 
  2129     0211                     	;# 
  2130     0212                     	;# 
  2131     0212                     	;# 
  2132     0213                     	;# 
  2133     0213                     	;# 
  2134     0214                     	;# 
  2135     0214                     	;# 
  2136     0215                     	;# 
  2137     0215                     	;# 
  2138     0215                     	;# 
  2139     0216                     	;# 
  2140     0216                     	;# 
  2141     0217                     	;# 
  2142     0217                     	;# 
  2143     0219                     	;# 
  2144     021A                     	;# 
  2145     021B                     	;# 
  2146     021C                     	;# 
  2147     021D                     	;# 
  2148     021E                     	;# 
  2149     021F                     	;# 
  2150     0291                     	;# 
  2151     0291                     	;# 
  2152     0292                     	;# 
  2153     0293                     	;# 
  2154     0294                     	;# 
  2155     0295                     	;# 
  2156     0295                     	;# 
  2157     0296                     	;# 
  2158     0298                     	;# 
  2159     0298                     	;# 
  2160     0299                     	;# 
  2161     029A                     	;# 
  2162     029B                     	;# 
  2163     029C                     	;# 
  2164     029C                     	;# 
  2165     029D                     	;# 
  2166     029E                     	;# 
  2167     029E                     	;# 
  2168     0311                     	;# 
  2169     0311                     	;# 
  2170     0312                     	;# 
  2171     0313                     	;# 
  2172     0318                     	;# 
  2173     0318                     	;# 
  2174     0319                     	;# 
  2175     031A                     	;# 
  2176     0394                     	;# 
  2177     0395                     	;# 
  2178     0396                     	;# 
  2179     039A                     	;# 
  2180     039C                     	;# 
  2181     039D                     	;# 
  2182     039E                     	;# 
  2183     039F                     	;# 
  2184     0415                     	;# 
  2185     0416                     	;# 
  2186     0417                     	;# 
  2187     041C                     	;# 
  2188     041D                     	;# 
  2189     041E                     	;# 
  2190     0FE4                     	;# 
  2191     0FE5                     	;# 
  2192     0FE6                     	;# 
  2193     0FE7                     	;# 
  2194     0FE8                     	;# 
  2195     0FE9                     	;# 
  2196     0FEA                     	;# 
  2197     0FEB                     	;# 
  2198     0FED                     	;# 
  2199     0FEE                     	;# 
  2200     0FEF                     	;# 
  2201     0000                     	;# 
  2202     0001                     	;# 
  2203     0002                     	;# 
  2204     0003                     	;# 
  2205     0004                     	;# 
  2206     0005                     	;# 
  2207     0006                     	;# 
  2208     0007                     	;# 
  2209     0008                     	;# 
  2210     0009                     	;# 
  2211     000A                     	;# 
  2212     000B                     	;# 
  2213     000C                     	;# 
  2214     000D                     	;# 
  2215     0011                     	;# 
  2216     0012                     	;# 
  2217     0013                     	;# 
  2218     0014                     	;# 
  2219     0015                     	;# 
  2220     0016                     	;# 
  2221     0016                     	;# 
  2222     0017                     	;# 
  2223     0018                     	;# 
  2224     0019                     	;# 
  2225     001A                     	;# 
  2226     001B                     	;# 
  2227     001C                     	;# 
  2228     001E                     	;# 
  2229     001F                     	;# 
  2230     008C                     	;# 
  2231     008D                     	;# 
  2232     0091                     	;# 
  2233     0092                     	;# 
  2234     0093                     	;# 
  2235     0094                     	;# 
  2236     0095                     	;# 
  2237     0096                     	;# 
  2238     0097                     	;# 
  2239     0098                     	;# 
  2240     0099                     	;# 
  2241     009A                     	;# 
  2242     009B                     	;# 
  2243     009B                     	;# 
  2244     009C                     	;# 
  2245     009D                     	;# 
  2246     009E                     	;# 
  2247     010C                     	;# 
  2248     010D                     	;# 
  2249     0111                     	;# 
  2250     0112                     	;# 
  2251     0113                     	;# 
  2252     0114                     	;# 
  2253     0115                     	;# 
  2254     0116                     	;# 
  2255     0117                     	;# 
  2256     0118                     	;# 
  2257     0119                     	;# 
  2258     011A                     	;# 
  2259     011B                     	;# 
  2260     011D                     	;# 
  2261     011E                     	;# 
  2262     018C                     	;# 
  2263     018D                     	;# 
  2264     0191                     	;# 
  2265     0191                     	;# 
  2266     0192                     	;# 
  2267     0193                     	;# 
  2268     0193                     	;# 
  2269     0193                     	;# 
  2270     0194                     	;# 
  2271     0195                     	;# 
  2272     0196                     	;# 
  2273     0199                     	;# 
  2274     019A                     	;# 
  2275     019B                     	;# 
  2276     019B                     	;# 
  2277     019B                     	;# 
  2278     019B                     	;# 
  2279     019C                     	;# 
  2280     019C                     	;# 
  2281     019D                     	;# 
  2282     019E                     	;# 
  2283     019F                     	;# 
  2284     020C                     	;# 
  2285     020D                     	;# 
  2286     0211                     	;# 
  2287     0211                     	;# 
  2288     0212                     	;# 
  2289     0212                     	;# 
  2290     0213                     	;# 
  2291     0213                     	;# 
  2292     0214                     	;# 
  2293     0214                     	;# 
  2294     0215                     	;# 
  2295     0215                     	;# 
  2296     0215                     	;# 
  2297     0216                     	;# 
  2298     0216                     	;# 
  2299     0217                     	;# 
  2300     0217                     	;# 
  2301     0219                     	;# 
  2302     021A                     	;# 
  2303     021B                     	;# 
  2304     021C                     	;# 
  2305     021D                     	;# 
  2306     021E                     	;# 
  2307     021F                     	;# 
  2308     0291                     	;# 
  2309     0291                     	;# 
  2310     0292                     	;# 
  2311     0293                     	;# 
  2312     0294                     	;# 
  2313     0295                     	;# 
  2314     0295                     	;# 
  2315     0296                     	;# 
  2316     0298                     	;# 
  2317     0298                     	;# 
  2318     0299                     	;# 
  2319     029A                     	;# 
  2320     029B                     	;# 
  2321     029C                     	;# 
  2322     029C                     	;# 
  2323     029D                     	;# 
  2324     029E                     	;# 
  2325     029E                     	;# 
  2326     0311                     	;# 
  2327     0311                     	;# 
  2328     0312                     	;# 
  2329     0313                     	;# 
  2330     0318                     	;# 
  2331     0318                     	;# 
  2332     0319                     	;# 
  2333     031A                     	;# 
  2334     0394                     	;# 
  2335     0395                     	;# 
  2336     0396                     	;# 
  2337     039A                     	;# 
  2338     039C                     	;# 
  2339     039D                     	;# 
  2340     039E                     	;# 
  2341     039F                     	;# 
  2342     0415                     	;# 
  2343     0416                     	;# 
  2344     0417                     	;# 
  2345     041C                     	;# 
  2346     041D                     	;# 
  2347     041E                     	;# 
  2348     0FE4                     	;# 
  2349     0FE5                     	;# 
  2350     0FE6                     	;# 
  2351     0FE7                     	;# 
  2352     0FE8                     	;# 
  2353     0FE9                     	;# 
  2354     0FEA                     	;# 
  2355     0FEB                     	;# 
  2356     0FED                     	;# 
  2357     0FEE                     	;# 
  2358     0FEF                     	;# 
  2359     0000                     	;# 
  2360     0001                     	;# 
  2361     0002                     	;# 
  2362     0003                     	;# 
  2363     0004                     	;# 
  2364     0005                     	;# 
  2365     0006                     	;# 
  2366     0007                     	;# 
  2367     0008                     	;# 
  2368     0009                     	;# 
  2369     000A                     	;# 
  2370     000B                     	;# 
  2371     000C                     	;# 
  2372     000D                     	;# 
  2373     0011                     	;# 
  2374     0012                     	;# 
  2375     0013                     	;# 
  2376     0014                     	;# 
  2377     0015                     	;# 
  2378     0016                     	;# 
  2379     0016                     	;# 
  2380     0017                     	;# 
  2381     0018                     	;# 
  2382     0019                     	;# 
  2383     001A                     	;# 
  2384     001B                     	;# 
  2385     001C                     	;# 
  2386     001E                     	;# 
  2387     001F                     	;# 
  2388     008C                     	;# 
  2389     008D                     	;# 
  2390     0091                     	;# 
  2391     0092                     	;# 
  2392     0093                     	;# 
  2393     0094                     	;# 
  2394     0095                     	;# 
  2395     0096                     	;# 
  2396     0097                     	;# 
  2397     0098                     	;# 
  2398     0099                     	;# 
  2399     009A                     	;# 
  2400     009B                     	;# 
  2401     009B                     	;# 
  2402     009C                     	;# 
  2403     009D                     	;# 
  2404     009E                     	;# 
  2405     010C                     	;# 
  2406     010D                     	;# 
  2407     0111                     	;# 
  2408     0112                     	;# 
  2409     0113                     	;# 
  2410     0114                     	;# 
  2411     0115                     	;# 
  2412     0116                     	;# 
  2413     0117                     	;# 
  2414     0118                     	;# 
  2415     0119                     	;# 
  2416     011A                     	;# 
  2417     011B                     	;# 
  2418     011D                     	;# 
  2419     011E                     	;# 
  2420     018C                     	;# 
  2421     018D                     	;# 
  2422     0191                     	;# 
  2423     0191                     	;# 
  2424     0192                     	;# 
  2425     0193                     	;# 
  2426     0193                     	;# 
  2427     0193                     	;# 
  2428     0194                     	;# 
  2429     0195                     	;# 
  2430     0196                     	;# 
  2431     0199                     	;# 
  2432     019A                     	;# 
  2433     019B                     	;# 
  2434     019B                     	;# 
  2435     019B                     	;# 
  2436     019B                     	;# 
  2437     019C                     	;# 
  2438     019C                     	;# 
  2439     019D                     	;# 
  2440     019E                     	;# 
  2441     019F                     	;# 
  2442     020C                     	;# 
  2443     020D                     	;# 
  2444     0211                     	;# 
  2445     0211                     	;# 
  2446     0212                     	;# 
  2447     0212                     	;# 
  2448     0213                     	;# 
  2449     0213                     	;# 
  2450     0214                     	;# 
  2451     0214                     	;# 
  2452     0215                     	;# 
  2453     0215                     	;# 
  2454     0215                     	;# 
  2455     0216                     	;# 
  2456     0216                     	;# 
  2457     0217                     	;# 
  2458     0217                     	;# 
  2459     0219                     	;# 
  2460     021A                     	;# 
  2461     021B                     	;# 
  2462     021C                     	;# 
  2463     021D                     	;# 
  2464     021E                     	;# 
  2465     021F                     	;# 
  2466     0291                     	;# 
  2467     0291                     	;# 
  2468     0292                     	;# 
  2469     0293                     	;# 
  2470     0294                     	;# 
  2471     0295                     	;# 
  2472     0295                     	;# 
  2473     0296                     	;# 
  2474     0298                     	;# 
  2475     0298                     	;# 
  2476     0299                     	;# 
  2477     029A                     	;# 
  2478     029B                     	;# 
  2479     029C                     	;# 
  2480     029C                     	;# 
  2481     029D                     	;# 
  2482     029E                     	;# 
  2483     029E                     	;# 
  2484     0311                     	;# 
  2485     0311                     	;# 
  2486     0312                     	;# 
  2487     0313                     	;# 
  2488     0318                     	;# 
  2489     0318                     	;# 
  2490     0319                     	;# 
  2491     031A                     	;# 
  2492     0394                     	;# 
  2493     0395                     	;# 
  2494     0396                     	;# 
  2495     039A                     	;# 
  2496     039C                     	;# 
  2497     039D                     	;# 
  2498     039E                     	;# 
  2499     039F                     	;# 
  2500     0415                     	;# 
  2501     0416                     	;# 
  2502     0417                     	;# 
  2503     041C                     	;# 
  2504     041D                     	;# 
  2505     041E                     	;# 
  2506     0FE4                     	;# 
  2507     0FE5                     	;# 
  2508     0FE6                     	;# 
  2509     0FE7                     	;# 
  2510     0FE8                     	;# 
  2511     0FE9                     	;# 
  2512     0FEA                     	;# 
  2513     0FEB                     	;# 
  2514     0FED                     	;# 
  2515     0FEE                     	;# 
  2516     0FEF                     	;# 
  2517     0000                     	;# 
  2518     0001                     	;# 
  2519     0002                     	;# 
  2520     0003                     	;# 
  2521     0004                     	;# 
  2522     0005                     	;# 
  2523     0006                     	;# 
  2524     0007                     	;# 
  2525     0008                     	;# 
  2526     0009                     	;# 
  2527     000A                     	;# 
  2528     000B                     	;# 
  2529     000C                     	;# 
  2530     000D                     	;# 
  2531     0011                     	;# 
  2532     0012                     	;# 
  2533     0013                     	;# 
  2534     0014                     	;# 
  2535     0015                     	;# 
  2536     0016                     	;# 
  2537     0016                     	;# 
  2538     0017                     	;# 
  2539     0018                     	;# 
  2540     0019                     	;# 
  2541     001A                     	;# 
  2542     001B                     	;# 
  2543     001C                     	;# 
  2544     001E                     	;# 
  2545     001F                     	;# 
  2546     008C                     	;# 
  2547     008D                     	;# 
  2548     0091                     	;# 
  2549     0092                     	;# 
  2550     0093                     	;# 
  2551     0094                     	;# 
  2552     0095                     	;# 
  2553     0096                     	;# 
  2554     0097                     	;# 
  2555     0098                     	;# 
  2556     0099                     	;# 
  2557     009A                     	;# 
  2558     009B                     	;# 
  2559     009B                     	;# 
  2560     009C                     	;# 
  2561     009D                     	;# 
  2562     009E                     	;# 
  2563     010C                     	;# 
  2564     010D                     	;# 
  2565     0111                     	;# 
  2566     0112                     	;# 
  2567     0113                     	;# 
  2568     0114                     	;# 
  2569     0115                     	;# 
  2570     0116                     	;# 
  2571     0117                     	;# 
  2572     0118                     	;# 
  2573     0119                     	;# 
  2574     011A                     	;# 
  2575     011B                     	;# 
  2576     011D                     	;# 
  2577     011E                     	;# 
  2578     018C                     	;# 
  2579     018D                     	;# 
  2580     0191                     	;# 
  2581     0191                     	;# 
  2582     0192                     	;# 
  2583     0193                     	;# 
  2584     0193                     	;# 
  2585     0193                     	;# 
  2586     0194                     	;# 
  2587     0195                     	;# 
  2588     0196                     	;# 
  2589     0199                     	;# 
  2590     019A                     	;# 
  2591     019B                     	;# 
  2592     019B                     	;# 
  2593     019B                     	;# 
  2594     019B                     	;# 
  2595     019C                     	;# 
  2596     019C                     	;# 
  2597     019D                     	;# 
  2598     019E                     	;# 
  2599     019F                     	;# 
  2600     020C                     	;# 
  2601     020D                     	;# 
  2602     0211                     	;# 
  2603     0211                     	;# 
  2604     0212                     	;# 
  2605     0212                     	;# 
  2606     0213                     	;# 
  2607     0213                     	;# 
  2608     0214                     	;# 
  2609     0214                     	;# 
  2610     0215                     	;# 
  2611     0215                     	;# 
  2612     0215                     	;# 
  2613     0216                     	;# 
  2614     0216                     	;# 
  2615     0217                     	;# 
  2616     0217                     	;# 
  2617     0219                     	;# 
  2618     021A                     	;# 
  2619     021B                     	;# 
  2620     021C                     	;# 
  2621     021D                     	;# 
  2622     021E                     	;# 
  2623     021F                     	;# 
  2624     0291                     	;# 
  2625     0291                     	;# 
  2626     0292                     	;# 
  2627     0293                     	;# 
  2628     0294                     	;# 
  2629     0295                     	;# 
  2630     0295                     	;# 
  2631     0296                     	;# 
  2632     0298                     	;# 
  2633     0298                     	;# 
  2634     0299                     	;# 
  2635     029A                     	;# 
  2636     029B                     	;# 
  2637     029C                     	;# 
  2638     029C                     	;# 
  2639     029D                     	;# 
  2640     029E                     	;# 
  2641     029E                     	;# 
  2642     0311                     	;# 
  2643     0311                     	;# 
  2644     0312                     	;# 
  2645     0313                     	;# 
  2646     0318                     	;# 
  2647     0318                     	;# 
  2648     0319                     	;# 
  2649     031A                     	;# 
  2650     0394                     	;# 
  2651     0395                     	;# 
  2652     0396                     	;# 
  2653     039A                     	;# 
  2654     039C                     	;# 
  2655     039D                     	;# 
  2656     039E                     	;# 
  2657     039F                     	;# 
  2658     0415                     	;# 
  2659     0416                     	;# 
  2660     0417                     	;# 
  2661     041C                     	;# 
  2662     041D                     	;# 
  2663     041E                     	;# 
  2664     0FE4                     	;# 
  2665     0FE5                     	;# 
  2666     0FE6                     	;# 
  2667     0FE7                     	;# 
  2668     0FE8                     	;# 
  2669     0FE9                     	;# 
  2670     0FEA                     	;# 
  2671     0FEB                     	;# 
  2672     0FED                     	;# 
  2673     0FEE                     	;# 
  2674     0FEF                     	;# 
  2675     0000                     	;# 
  2676     0001                     	;# 
  2677     0002                     	;# 
  2678     0003                     	;# 
  2679     0004                     	;# 
  2680     0005                     	;# 
  2681     0006                     	;# 
  2682     0007                     	;# 
  2683     0008                     	;# 
  2684     0009                     	;# 
  2685     000A                     	;# 
  2686     000B                     	;# 
  2687     000C                     	;# 
  2688     000D                     	;# 
  2689     0011                     	;# 
  2690     0012                     	;# 
  2691     0013                     	;# 
  2692     0014                     	;# 
  2693     0015                     	;# 
  2694     0016                     	;# 
  2695     0016                     	;# 
  2696     0017                     	;# 
  2697     0018                     	;# 
  2698     0019                     	;# 
  2699     001A                     	;# 
  2700     001B                     	;# 
  2701     001C                     	;# 
  2702     001E                     	;# 
  2703     001F                     	;# 
  2704     008C                     	;# 
  2705     008D                     	;# 
  2706     0091                     	;# 
  2707     0092                     	;# 
  2708     0093                     	;# 
  2709     0094                     	;# 
  2710     0095                     	;# 
  2711     0096                     	;# 
  2712     0097                     	;# 
  2713     0098                     	;# 
  2714     0099                     	;# 
  2715     009A                     	;# 
  2716     009B                     	;# 
  2717     009B                     	;# 
  2718     009C                     	;# 
  2719     009D                     	;# 
  2720     009E                     	;# 
  2721     010C                     	;# 
  2722     010D                     	;# 
  2723     0111                     	;# 
  2724     0112                     	;# 
  2725     0113                     	;# 
  2726     0114                     	;# 
  2727     0115                     	;# 
  2728     0116                     	;# 
  2729     0117                     	;# 
  2730     0118                     	;# 
  2731     0119                     	;# 
  2732     011A                     	;# 
  2733     011B                     	;# 
  2734     011D                     	;# 
  2735     011E                     	;# 
  2736     018C                     	;# 
  2737     018D                     	;# 
  2738     0191                     	;# 
  2739     0191                     	;# 
  2740     0192                     	;# 
  2741     0193                     	;# 
  2742     0193                     	;# 
  2743     0193                     	;# 
  2744     0194                     	;# 
  2745     0195                     	;# 
  2746     0196                     	;# 
  2747     0199                     	;# 
  2748     019A                     	;# 
  2749     019B                     	;# 
  2750     019B                     	;# 
  2751     019B                     	;# 
  2752     019B                     	;# 
  2753     019C                     	;# 
  2754     019C                     	;# 
  2755     019D                     	;# 
  2756     019E                     	;# 
  2757     019F                     	;# 
  2758     020C                     	;# 
  2759     020D                     	;# 
  2760     0211                     	;# 
  2761     0211                     	;# 
  2762     0212                     	;# 
  2763     0212                     	;# 
  2764     0213                     	;# 
  2765     0213                     	;# 
  2766     0214                     	;# 
  2767     0214                     	;# 
  2768     0215                     	;# 
  2769     0215                     	;# 
  2770     0215                     	;# 
  2771     0216                     	;# 
  2772     0216                     	;# 
  2773     0217                     	;# 
  2774     0217                     	;# 
  2775     0219                     	;# 
  2776     021A                     	;# 
  2777     021B                     	;# 
  2778     021C                     	;# 
  2779     021D                     	;# 
  2780     021E                     	;# 
  2781     021F                     	;# 
  2782     0291                     	;# 
  2783     0291                     	;# 
  2784     0292                     	;# 
  2785     0293                     	;# 
  2786     0294                     	;# 
  2787     0295                     	;# 
  2788     0295                     	;# 
  2789     0296                     	;# 
  2790     0298                     	;# 
  2791     0298                     	;# 
  2792     0299                     	;# 
  2793     029A                     	;# 
  2794     029B                     	;# 
  2795     029C                     	;# 
  2796     029C                     	;# 
  2797     029D                     	;# 
  2798     029E                     	;# 
  2799     029E                     	;# 
  2800     0311                     	;# 
  2801     0311                     	;# 
  2802     0312                     	;# 
  2803     0313                     	;# 
  2804     0318                     	;# 
  2805     0318                     	;# 
  2806     0319                     	;# 
  2807     031A                     	;# 
  2808     0394                     	;# 
  2809     0395                     	;# 
  2810     0396                     	;# 
  2811     039A                     	;# 
  2812     039C                     	;# 
  2813     039D                     	;# 
  2814     039E                     	;# 
  2815     039F                     	;# 
  2816     0415                     	;# 
  2817     0416                     	;# 
  2818     0417                     	;# 
  2819     041C                     	;# 
  2820     041D                     	;# 
  2821     041E                     	;# 
  2822     0FE4                     	;# 
  2823     0FE5                     	;# 
  2824     0FE6                     	;# 
  2825     0FE7                     	;# 
  2826     0FE8                     	;# 
  2827     0FE9                     	;# 
  2828     0FEA                     	;# 
  2829     0FEB                     	;# 
  2830     0FED                     	;# 
  2831     0FEE                     	;# 
  2832     0FEF                     	;# 
  2833     0000                     	;# 
  2834     0001                     	;# 
  2835     0002                     	;# 
  2836     0003                     	;# 
  2837     0004                     	;# 
  2838     0005                     	;# 
  2839     0006                     	;# 
  2840     0007                     	;# 
  2841     0008                     	;# 
  2842     0009                     	;# 
  2843     000A                     	;# 
  2844     000B                     	;# 
  2845     000C                     	;# 
  2846     000D                     	;# 
  2847     0011                     	;# 
  2848     0012                     	;# 
  2849     0013                     	;# 
  2850     0014                     	;# 
  2851     0015                     	;# 
  2852     0016                     	;# 
  2853     0016                     	;# 
  2854     0017                     	;# 
  2855     0018                     	;# 
  2856     0019                     	;# 
  2857     001A                     	;# 
  2858     001B                     	;# 
  2859     001C                     	;# 
  2860     001E                     	;# 
  2861     001F                     	;# 
  2862     008C                     	;# 
  2863     008D                     	;# 
  2864     0091                     	;# 
  2865     0092                     	;# 
  2866     0093                     	;# 
  2867     0094                     	;# 
  2868     0095                     	;# 
  2869     0096                     	;# 
  2870     0097                     	;# 
  2871     0098                     	;# 
  2872     0099                     	;# 
  2873     009A                     	;# 
  2874     009B                     	;# 
  2875     009B                     	;# 
  2876     009C                     	;# 
  2877     009D                     	;# 
  2878     009E                     	;# 
  2879     010C                     	;# 
  2880     010D                     	;# 
  2881     0111                     	;# 
  2882     0112                     	;# 
  2883     0113                     	;# 
  2884     0114                     	;# 
  2885     0115                     	;# 
  2886     0116                     	;# 
  2887     0117                     	;# 
  2888     0118                     	;# 
  2889     0119                     	;# 
  2890     011A                     	;# 
  2891     011B                     	;# 
  2892     011D                     	;# 
  2893     011E                     	;# 
  2894     018C                     	;# 
  2895     018D                     	;# 
  2896     0191                     	;# 
  2897     0191                     	;# 
  2898     0192                     	;# 
  2899     0193                     	;# 
  2900     0193                     	;# 
  2901     0193                     	;# 
  2902     0194                     	;# 
  2903     0195                     	;# 
  2904     0196                     	;# 
  2905     0199                     	;# 
  2906     019A                     	;# 
  2907     019B                     	;# 
  2908     019B                     	;# 
  2909     019B                     	;# 
  2910     019B                     	;# 
  2911     019C                     	;# 
  2912     019C                     	;# 
  2913     019D                     	;# 
  2914     019E                     	;# 
  2915     019F                     	;# 
  2916     020C                     	;# 
  2917     020D                     	;# 
  2918     0211                     	;# 
  2919     0211                     	;# 
  2920     0212                     	;# 
  2921     0212                     	;# 
  2922     0213                     	;# 
  2923     0213                     	;# 
  2924     0214                     	;# 
  2925     0214                     	;# 
  2926     0215                     	;# 
  2927     0215                     	;# 
  2928     0215                     	;# 
  2929     0216                     	;# 
  2930     0216                     	;# 
  2931     0217                     	;# 
  2932     0217                     	;# 
  2933     0219                     	;# 
  2934     021A                     	;# 
  2935     021B                     	;# 
  2936     021C                     	;# 
  2937     021D                     	;# 
  2938     021E                     	;# 
  2939     021F                     	;# 
  2940     0291                     	;# 
  2941     0291                     	;# 
  2942     0292                     	;# 
  2943     0293                     	;# 
  2944     0294                     	;# 
  2945     0295                     	;# 
  2946     0295                     	;# 
  2947     0296                     	;# 
  2948     0298                     	;# 
  2949     0298                     	;# 
  2950     0299                     	;# 
  2951     029A                     	;# 
  2952     029B                     	;# 
  2953     029C                     	;# 
  2954     029C                     	;# 
  2955     029D                     	;# 
  2956     029E                     	;# 
  2957     029E                     	;# 
  2958     0311                     	;# 
  2959     0311                     	;# 
  2960     0312                     	;# 
  2961     0313                     	;# 
  2962     0318                     	;# 
  2963     0318                     	;# 
  2964     0319                     	;# 
  2965     031A                     	;# 
  2966     0394                     	;# 
  2967     0395                     	;# 
  2968     0396                     	;# 
  2969     039A                     	;# 
  2970     039C                     	;# 
  2971     039D                     	;# 
  2972     039E                     	;# 
  2973     039F                     	;# 
  2974     0415                     	;# 
  2975     0416                     	;# 
  2976     0417                     	;# 
  2977     041C                     	;# 
  2978     041D                     	;# 
  2979     041E                     	;# 
  2980     0FE4                     	;# 
  2981     0FE5                     	;# 
  2982     0FE6                     	;# 
  2983     0FE7                     	;# 
  2984     0FE8                     	;# 
  2985     0FE9                     	;# 
  2986     0FEA                     	;# 
  2987     0FEB                     	;# 
  2988     0FED                     	;# 
  2989     0FEE                     	;# 
  2990     0FEF                     	;# 
  2991     0000                     	;# 
  2992     0001                     	;# 
  2993     0002                     	;# 
  2994     0003                     	;# 
  2995     0004                     	;# 
  2996     0005                     	;# 
  2997     0006                     	;# 
  2998     0007                     	;# 
  2999     0008                     	;# 
  3000     0009                     	;# 
  3001     000A                     	;# 
  3002     000B                     	;# 
  3003     000C                     	;# 
  3004     000D                     	;# 
  3005     0011                     	;# 
  3006     0012                     	;# 
  3007     0013                     	;# 
  3008     0014                     	;# 
  3009     0015                     	;# 
  3010     0016                     	;# 
  3011     0016                     	;# 
  3012     0017                     	;# 
  3013     0018                     	;# 
  3014     0019                     	;# 
  3015     001A                     	;# 
  3016     001B                     	;# 
  3017     001C                     	;# 
  3018     001E                     	;# 
  3019     001F                     	;# 
  3020     008C                     	;# 
  3021     008D                     	;# 
  3022     0091                     	;# 
  3023     0092                     	;# 
  3024     0093                     	;# 
  3025     0094                     	;# 
  3026     0095                     	;# 
  3027     0096                     	;# 
  3028     0097                     	;# 
  3029     0098                     	;# 
  3030     0099                     	;# 
  3031     009A                     	;# 
  3032     009B                     	;# 
  3033     009B                     	;# 
  3034     009C                     	;# 
  3035     009D                     	;# 
  3036     009E                     	;# 
  3037     010C                     	;# 
  3038     010D                     	;# 
  3039     0111                     	;# 
  3040     0112                     	;# 
  3041     0113                     	;# 
  3042     0114                     	;# 
  3043     0115                     	;# 
  3044     0116                     	;# 
  3045     0117                     	;# 
  3046     0118                     	;# 
  3047     0119                     	;# 
  3048     011A                     	;# 
  3049     011B                     	;# 
  3050     011D                     	;# 
  3051     011E                     	;# 
  3052     018C                     	;# 
  3053     018D                     	;# 
  3054     0191                     	;# 
  3055     0191                     	;# 
  3056     0192                     	;# 
  3057     0193                     	;# 
  3058     0193                     	;# 
  3059     0193                     	;# 
  3060     0194                     	;# 
  3061     0195                     	;# 
  3062     0196                     	;# 
  3063     0199                     	;# 
  3064     019A                     	;# 
  3065     019B                     	;# 
  3066     019B                     	;# 
  3067     019B                     	;# 
  3068     019B                     	;# 
  3069     019C                     	;# 
  3070     019C                     	;# 
  3071     019D                     	;# 
  3072     019E                     	;# 
  3073     019F                     	;# 
  3074     020C                     	;# 
  3075     020D                     	;# 
  3076     0211                     	;# 
  3077     0211                     	;# 
  3078     0212                     	;# 
  3079     0212                     	;# 
  3080     0213                     	;# 
  3081     0213                     	;# 
  3082     0214                     	;# 
  3083     0214                     	;# 
  3084     0215                     	;# 
  3085     0215                     	;# 
  3086     0215                     	;# 
  3087     0216                     	;# 
  3088     0216                     	;# 
  3089     0217                     	;# 
  3090     0217                     	;# 
  3091     0219                     	;# 
  3092     021A                     	;# 
  3093     021B                     	;# 
  3094     021C                     	;# 
  3095     021D                     	;# 
  3096     021E                     	;# 
  3097     021F                     	;# 
  3098     0291                     	;# 
  3099     0291                     	;# 
  3100     0292                     	;# 
  3101     0293                     	;# 
  3102     0294                     	;# 
  3103     0295                     	;# 
  3104     0295                     	;# 
  3105     0296                     	;# 
  3106     0298                     	;# 
  3107     0298                     	;# 
  3108     0299                     	;# 
  3109     029A                     	;# 
  3110     029B                     	;# 
  3111     029C                     	;# 
  3112     029C                     	;# 
  3113     029D                     	;# 
  3114     029E                     	;# 
  3115     029E                     	;# 
  3116     0311                     	;# 
  3117     0311                     	;# 
  3118     0312                     	;# 
  3119     0313                     	;# 
  3120     0318                     	;# 
  3121     0318                     	;# 
  3122     0319                     	;# 
  3123     031A                     	;# 
  3124     0394                     	;# 
  3125     0395                     	;# 
  3126     0396                     	;# 
  3127     039A                     	;# 
  3128     039C                     	;# 
  3129     039D                     	;# 
  3130     039E                     	;# 
  3131     039F                     	;# 
  3132     0415                     	;# 
  3133     0416                     	;# 
  3134     0417                     	;# 
  3135     041C                     	;# 
  3136     041D                     	;# 
  3137     041E                     	;# 
  3138     0FE4                     	;# 
  3139     0FE5                     	;# 
  3140     0FE6                     	;# 
  3141     0FE7                     	;# 
  3142     0FE8                     	;# 
  3143     0FE9                     	;# 
  3144     0FEA                     	;# 
  3145     0FEB                     	;# 
  3146     0FED                     	;# 
  3147     0FEE                     	;# 
  3148     0FEF                     	;# 
  3149                           
  3150                           	psect	eeprom_data
  3151     0000  00FF 0081 0081 00FF 0000 0000 0000 00FF 	db	255,129,129,255,0,0,0,255	;# 
  3152     0008  00C2 00A1 0091 008E 0042 0089 0089 0076 	db	194,161,145,142,66,137,137,118	;# 
  3153     0010  001F 0010 0010 00FF 008F 0089 0089 0071 	db	31,16,16,255,143,137,137,113	;# 
  3154     0018  007E 0089 0089 0072 0009 0009 0009 00FF 	db	126,137,137,114,9,9,9,255	;# 
  3155     0020  0076 0089 0089 0076 004E 0091 0091 007E 	db	118,137,137,118,78,145,145,126	;# 
  3156     0028  0000 0018 0006 0018 0000 0018 0060 0018 	db	0,24,6,24,0,24,96,24	;# 
  3157     0030  0000 0000 0000 0000 0000 0018 0066 0018 	db	0,0,0,0,0,24,102,24	;# 
  3158     0000                     	;# 
  3159     0001                     	;# 
  3160     0002                     	;# 
  3161     0003                     	;# 
  3162     0004                     	;# 
  3163     0005                     	;# 
  3164     0006                     	;# 
  3165     0007                     	;# 
  3166     0008                     	;# 
  3167     0009                     	;# 
  3168     000A                     	;# 
  3169     000B                     	;# 
  3170     000C                     	;# 
  3171     000D                     	;# 
  3172     0011                     	;# 
  3173     0012                     	;# 
  3174     0013                     	;# 
  3175     0014                     	;# 
  3176     0015                     	;# 
  3177     0016                     	;# 
  3178     0016                     	;# 
  3179     0017                     	;# 
  3180     0018                     	;# 
  3181     0019                     	;# 
  3182     001A                     	;# 
  3183     001B                     	;# 
  3184     001C                     	;# 
  3185     001E                     	;# 
  3186     001F                     	;# 
  3187     008C                     	;# 
  3188     008D                     	;# 
  3189     0091                     	;# 
  3190     0092                     	;# 
  3191     0093                     	;# 
  3192     0094                     	;# 
  3193     0095                     	;# 
  3194     0096                     	;# 
  3195     0097                     	;# 
  3196     0098                     	;# 
  3197     0099                     	;# 
  3198     009A                     	;# 
  3199     009B                     	;# 
  3200     009B                     	;# 
  3201     009C                     	;# 
  3202     009D                     	;# 
  3203     009E                     	;# 
  3204     010C                     	;# 
  3205     010D                     	;# 
  3206     0111                     	;# 
  3207     0112                     	;# 
  3208     0113                     	;# 
  3209     0114                     	;# 
  3210     0115                     	;# 
  3211     0116                     	;# 
  3212     0117                     	;# 
  3213     0118                     	;# 
  3214     0119                     	;# 
  3215     011A                     	;# 
  3216     011B                     	;# 
  3217     011D                     	;# 
  3218     011E                     	;# 
  3219     018C                     	;# 
  3220     018D                     	;# 
  3221     0191                     	;# 
  3222     0191                     	;# 
  3223     0192                     	;# 
  3224     0193                     	;# 
  3225     0193                     	;# 
  3226     0193                     	;# 
  3227     0194                     	;# 
  3228     0195                     	;# 
  3229     0196                     	;# 
  3230     0199                     	;# 
  3231     019A                     	;# 
  3232     019B                     	;# 
  3233     019B                     	;# 
  3234     019B                     	;# 
  3235     019B                     	;# 
  3236     019C                     	;# 
  3237     019C                     	;# 
  3238     019D                     	;# 
  3239     019E                     	;# 
  3240     019F                     	;# 
  3241     020C                     	;# 
  3242     020D                     	;# 
  3243     0211                     	;# 
  3244     0211                     	;# 
  3245     0212                     	;# 
  3246     0212                     	;# 
  3247     0213                     	;# 
  3248     0213                     	;# 
  3249     0214                     	;# 
  3250     0214                     	;# 
  3251     0215                     	;# 
  3252     0215                     	;# 
  3253     0215                     	;# 
  3254     0216                     	;# 
  3255     0216                     	;# 
  3256     0217                     	;# 
  3257     0217                     	;# 
  3258     0219                     	;# 
  3259     021A                     	;# 
  3260     021B                     	;# 
  3261     021C                     	;# 
  3262     021D                     	;# 
  3263     021E                     	;# 
  3264     021F                     	;# 
  3265     0291                     	;# 
  3266     0291                     	;# 
  3267     0292                     	;# 
  3268     0293                     	;# 
  3269     0294                     	;# 
  3270     0295                     	;# 
  3271     0295                     	;# 
  3272     0296                     	;# 
  3273     0298                     	;# 
  3274     0298                     	;# 
  3275     0299                     	;# 
  3276     029A                     	;# 
  3277     029B                     	;# 
  3278     029C                     	;# 
  3279     029C                     	;# 
  3280     029D                     	;# 
  3281     029E                     	;# 
  3282     029E                     	;# 
  3283     0311                     	;# 
  3284     0311                     	;# 
  3285     0312                     	;# 
  3286     0313                     	;# 
  3287     0318                     	;# 
  3288     0318                     	;# 
  3289     0319                     	;# 
  3290     031A                     	;# 
  3291     0394                     	;# 
  3292     0395                     	;# 
  3293     0396                     	;# 
  3294     039A                     	;# 
  3295     039C                     	;# 
  3296     039D                     	;# 
  3297     039E                     	;# 
  3298     039F                     	;# 
  3299     0415                     	;# 
  3300     0416                     	;# 
  3301     0417                     	;# 
  3302     041C                     	;# 
  3303     041D                     	;# 
  3304     041E                     	;# 
  3305     0FE4                     	;# 
  3306     0FE5                     	;# 
  3307     0FE6                     	;# 
  3308     0FE7                     	;# 
  3309     0FE8                     	;# 
  3310     0FE9                     	;# 
  3311     0FEA                     	;# 
  3312     0FEB                     	;# 
  3313     0FED                     	;# 
  3314     0FEE                     	;# 
  3315     0FEF                     	;# 
  3316     0000                     	;# 
  3317     0001                     	;# 
  3318     0002                     	;# 
  3319     0003                     	;# 
  3320     0004                     	;# 
  3321     0005                     	;# 
  3322     0006                     	;# 
  3323     0007                     	;# 
  3324     0008                     	;# 
  3325     0009                     	;# 
  3326     000A                     	;# 
  3327     000B                     	;# 
  3328     000C                     	;# 
  3329     000D                     	;# 
  3330     0011                     	;# 
  3331     0012                     	;# 
  3332     0013                     	;# 
  3333     0014                     	;# 
  3334     0015                     	;# 
  3335     0016                     	;# 
  3336     0016                     	;# 
  3337     0017                     	;# 
  3338     0018                     	;# 
  3339     0019                     	;# 
  3340     001A                     	;# 
  3341     001B                     	;# 
  3342     001C                     	;# 
  3343     001E                     	;# 
  3344     001F                     	;# 
  3345     008C                     	;# 
  3346     008D                     	;# 
  3347     0091                     	;# 
  3348     0092                     	;# 
  3349     0093                     	;# 
  3350     0094                     	;# 
  3351     0095                     	;# 
  3352     0096                     	;# 
  3353     0097                     	;# 
  3354     0098                     	;# 
  3355     0099                     	;# 
  3356     009A                     	;# 
  3357     009B                     	;# 
  3358     009B                     	;# 
  3359     009C                     	;# 
  3360     009D                     	;# 
  3361     009E                     	;# 
  3362     010C                     	;# 
  3363     010D                     	;# 
  3364     0111                     	;# 
  3365     0112                     	;# 
  3366     0113                     	;# 
  3367     0114                     	;# 
  3368     0115                     	;# 
  3369     0116                     	;# 
  3370     0117                     	;# 
  3371     0118                     	;# 
  3372     0119                     	;# 
  3373     011A                     	;# 
  3374     011B                     	;# 
  3375     011D                     	;# 
  3376     011E                     	;# 
  3377     018C                     	;# 
  3378     018D                     	;# 
  3379     0191                     	;# 
  3380     0191                     	;# 
  3381     0192                     	;# 
  3382     0193                     	;# 
  3383     0193                     	;# 
  3384     0193                     	;# 
  3385     0194                     	;# 
  3386     0195                     	;# 
  3387     0196                     	;# 
  3388     0199                     	;# 
  3389     019A                     	;# 
  3390     019B                     	;# 
  3391     019B                     	;# 
  3392     019B                     	;# 
  3393     019B                     	;# 
  3394     019C                     	;# 
  3395     019C                     	;# 
  3396     019D                     	;# 
  3397     019E                     	;# 
  3398     019F                     	;# 
  3399     020C                     	;# 
  3400     020D                     	;# 
  3401     0211                     	;# 
  3402     0211                     	;# 
  3403     0212                     	;# 
  3404     0212                     	;# 
  3405     0213                     	;# 
  3406     0213                     	;# 
  3407     0214                     	;# 
  3408     0214                     	;# 
  3409     0215                     	;# 
  3410     0215                     	;# 
  3411     0215                     	;# 
  3412     0216                     	;# 
  3413     0216                     	;# 
  3414     0217                     	;# 
  3415     0217                     	;# 
  3416     0219                     	;# 
  3417     021A                     	;# 
  3418     021B                     	;# 
  3419     021C                     	;# 
  3420     021D                     	;# 
  3421     021E                     	;# 
  3422     021F                     	;# 
  3423     0291                     	;# 
  3424     0291                     	;# 
  3425     0292                     	;# 
  3426     0293                     	;# 
  3427     0294                     	;# 
  3428     0295                     	;# 
  3429     0295                     	;# 
  3430     0296                     	;# 
  3431     0298                     	;# 
  3432     0298                     	;# 
  3433     0299                     	;# 
  3434     029A                     	;# 
  3435     029B                     	;# 
  3436     029C                     	;# 
  3437     029C                     	;# 
  3438     029D                     	;# 
  3439     029E                     	;# 
  3440     029E                     	;# 
  3441     0311                     	;# 
  3442     0311                     	;# 
  3443     0312                     	;# 
  3444     0313                     	;# 
  3445     0318                     	;# 
  3446     0318                     	;# 
  3447     0319                     	;# 
  3448     031A                     	;# 
  3449     0394                     	;# 
  3450     0395                     	;# 
  3451     0396                     	;# 
  3452     039A                     	;# 
  3453     039C                     	;# 
  3454     039D                     	;# 
  3455     039E                     	;# 
  3456     039F                     	;# 
  3457     0415                     	;# 
  3458     0416                     	;# 
  3459     0417                     	;# 
  3460     041C                     	;# 
  3461     041D                     	;# 
  3462     041E                     	;# 
  3463     0FE4                     	;# 
  3464     0FE5                     	;# 
  3465     0FE6                     	;# 
  3466     0FE7                     	;# 
  3467     0FE8                     	;# 
  3468     0FE9                     	;# 
  3469     0FEA                     	;# 
  3470     0FEB                     	;# 
  3471     0FED                     	;# 
  3472     0FEE                     	;# 
  3473     0FEF                     	;# 
  3474                           
  3475 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  3476     0000                     
  3477 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  3478     0000                     
  3479 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  3480     0000                     
  3481                           	psect	idataBANK0
  3482     0F51                     __pidataBANK0:
  3483                           
  3484                           ;initializer for _position
  3485     0F51  3480               	retlw	128
  3486                           
  3487                           ;initializer for _targetFloor
  3488     0F52  3401               	retlw	1
  3489                           
  3490                           ;initializer for _currentFloor
  3491     0F53  3404               	retlw	4
  3492                           
  3493                           	psect	stringtext1
  3494     0800                     __pstringtext1:
  3495     0800                     _spi1_configuration:
  3496     0800  3411               	retlw	17
  3497     0801  3400               	retlw	0
  3498     0802  3401               	retlw	1
  3499     0803  3400               	retlw	0
  3500     0804                     __end_of_spi1_configuration:
  3501                           
  3502                           	psect	nvBANK0
  3503     0020                     __pnvBANK0:
  3504     0020                     _CMP1_InterruptHandler:
  3505     0020                     	ds	2
  3506     0022                     _TMR4_InterruptHandler:
  3507     0022                     	ds	2
  3508     0024                     _TMR6_InterruptHandler:
  3509     0024                     	ds	2
  3510     0026                     _CMP2_InterruptHandler:
  3511     0026                     	ds	2
  3512     0028                     _TMR0_InterruptHandler:
  3513     0028                     	ds	2
  3514     002A                     _timer1ReloadVal:
  3515     002A                     	ds	2
  3516     002C                     _CCP4_CallBack:
  3517     002C                     	ds	2
  3518     002E                     _IOCBF3_InterruptHandler:
  3519     002E                     	ds	2
  3520     0030                     _IOCBF0_InterruptHandler:
  3521     0030                     	ds	2
  3522     0032                     _EUSART_ErrorHandler:
  3523     0032                     	ds	2
  3524     0034                     _EUSART_OverrunErrorHandler:
  3525     0034                     	ds	2
  3526     0036                     _EUSART_FramingErrorHandler:
  3527     0036                     	ds	2
  3528     0038                     _timer0ReloadVal:
  3529     0038                     	ds	1
  3530     000C                     _PORTAbits	set	12
  3531     0015                     _TMR0	set	21
  3532     0019                     _T1GCONbits	set	25
  3533     0018                     _T1CONbits	set	24
  3534     0018                     _T1CON	set	24
  3535     0016                     _TMR1L	set	22
  3536     0017                     _TMR1H	set	23
  3537     0019                     _T1GCON	set	25
  3538     001C                     _T2CONbits	set	28
  3539     001C                     _T2CON	set	28
  3540     001A                     _TMR2	set	26
  3541     001B                     _PR2	set	27
  3542     0012                     _PIR2bits	set	18
  3543     0013                     _PIR3bits	set	19
  3544     000B                     _INTCONbits	set	11
  3545     0011                     _PIR1bits	set	17
  3546     009D                     _ADCON0bits	set	157
  3547     009D                     _ADCON0	set	157
  3548     009C                     _ADRESH	set	156
  3549     009B                     _ADRESL	set	155
  3550     009E                     _ADCON1	set	158
  3551     0095                     _OPTION_REG	set	149
  3552     0097                     _WDTCON	set	151
  3553     0098                     _OSCTUNE	set	152
  3554     0099                     _OSCCON	set	153
  3555     0095                     _OPTION_REGbits	set	149
  3556     008D                     _TRISB	set	141
  3557     008C                     _TRISA	set	140
  3558     0092                     _PIE2bits	set	146
  3559     0093                     _PIE3bits	set	147
  3560     008D                     _TRISBbits	set	141
  3561     0117                     _FVRCONbits	set	279
  3562     0117                     _FVRCON	set	279
  3563     010D                     _LATBbits	set	269
  3564     010C                     _LATAbits	set	268
  3565     0112                     _CM1CON1	set	274
  3566     0111                     _CM1CON0	set	273
  3567     0119                     _DACCON1	set	281
  3568     0118                     _DACCON0	set	280
  3569     0115                     _CMOUTbits	set	277
  3570     0114                     _CM2CON1	set	276
  3571     0113                     _CM2CON0	set	275
  3572     0116                     _BORCON	set	278
  3573     011E                     _APFCON1	set	286
  3574     011D                     _APFCON0	set	285
  3575     010D                     _LATB	set	269
  3576     010C                     _LATA	set	268
  3577     0196                     _EECON2	set	406
  3578     0193                     _EEDATL	set	403
  3579     0194                     _EEDATH	set	404
  3580     0195                     _EECON1bits	set	405
  3581     0192                     _EEADRH	set	402
  3582     0191                     _EEADRL	set	401
  3583     018C                     _ANSELA	set	396
  3584     018D                     _ANSELB	set	397
  3585     019A                     _TXREG	set	410
  3586     0199                     _RCREG	set	409
  3587     019D                     _RCSTAbits	set	413
  3588     019E                     _TXSTAbits	set	414
  3589     019C                     _SPBRGH	set	412
  3590     019B                     _SPBRGL	set	411
  3591     019E                     _TXSTA	set	414
  3592     019D                     _RCSTA	set	413
  3593     019F                     _BAUDCON	set	415
  3594     020C                     _WPUA	set	524
  3595     020D                     _WPUB	set	525
  3596     0211                     _SSP1BUF	set	529
  3597     0216                     _SSP1CON2	set	534
  3598     0215                     _SSP1CON1bits	set	533
  3599     0212                     _SSP1ADD	set	530
  3600     0215                     _SSP1CON1	set	533
  3601     0214                     _SSP1STAT	set	532
  3602     029E                     _CCPTMRS0bits	set	670
  3603     0319                     _CCPR4H	set	793
  3604     0318                     _CCPR4L	set	792
  3605     031A                     _CCP4CON	set	794
  3606     0312                     _CCPR3H	set	786
  3607     0311                     _CCPR3L	set	785
  3608     0313                     _CCP3CON	set	787
  3609     0394                     _IOCBPbits	set	916
  3610     0395                     _IOCBNbits	set	917
  3611     0396                     _IOCBFbits	set	918
  3612     0417                     _T4CONbits	set	1047
  3613     0417                     _T4CON	set	1047
  3614     0415                     _TMR4	set	1045
  3615     0416                     _PR4	set	1046
  3616     041E                     _T6CONbits	set	1054
  3617     041E                     _T6CON	set	1054
  3618     041C                     _TMR6	set	1052
  3619     041D                     _PR6	set	1053
  3620                           
  3621                           	psect	cinit
  3622     006C                     start_initialization:	
  3623                           ; #config settings
  3624                           
  3625     006C                     __initialization:
  3626                           
  3627                           ; Initialize objects allocated to BANK0
  3628     006C  318F  2751  3180   	fcall	__pidataBANK0	;fetch initializer
  3629     006F  00E4               	movwf	__pdataBANK0& (0+127)
  3630     0070  318F  2752  3180   	fcall	__pidataBANK0+1	;fetch initializer
  3631     0073  00E5               	movwf	(__pdataBANK0+1)& (0+127)
  3632     0074  318F  2753  3180   	fcall	__pidataBANK0+2	;fetch initializer
  3633     0077  00E6               	movwf	(__pdataBANK0+2)& (0+127)
  3634                           
  3635                           ; Clear objects allocated to BANK0
  3636     0078  3039               	movlw	low __pbssBANK0
  3637     0079  0084               	movwf	4
  3638     007A  3000               	movlw	high __pbssBANK0
  3639     007B  0085               	movwf	5
  3640     007C  3019               	movlw	25
  3641     007D  318F  2780  3180   	fcall	clear_ram0
  3642                           
  3643                           ; Clear objects allocated to BANK1
  3644     0080  30A0               	movlw	low __pbssBANK1
  3645     0081  0084               	movwf	4
  3646     0082  3000               	movlw	high __pbssBANK1
  3647     0083  0085               	movwf	5
  3648     0084  3010               	movlw	16
  3649     0085  318F  2780  3180   	fcall	clear_ram0
  3650     0088                     end_of_initialization:	
  3651                           ;End of C runtime variable initialization code
  3652                           
  3653     0088                     __end_of__initialization:
  3654     0088  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3655     0089  0020               	movlb	0
  3656     008A  3181  2980         	ljmp	_main	;jump to C main() function
  3657                           
  3658                           	psect	bssBANK0
  3659     0039                     __pbssBANK0:
  3660     0039                     _matrix:
  3661     0039                     	ds	8
  3662     0041                     _data_tx:
  3663     0041                     	ds	4
  3664     0045                     TMR4_ISR@CountCallBack:
  3665     0045                     	ds	2
  3666     0047                     TMR6_ISR@CountCallBack:
  3667     0047                     	ds	2
  3668     0049                     _ADC_InterruptHandler:
  3669     0049                     	ds	2
  3670     004B                     TMR0_ISR@CountCallBack:
  3671     004B                     	ds	2
  3672     004D                     _velocity_idx:
  3673     004D                     	ds	1
  3674     004E                     _directionFlag:
  3675     004E                     	ds	1
  3676     004F                     _floorFlag:
  3677     004F                     	ds	1
  3678     0050                     _eusartRxLastError:
  3679     0050                     	ds	1
  3680     0051                     _motorState:
  3681     0051                     	ds	1
  3682                           
  3683                           	psect	dataBANK0
  3684     0064                     __pdataBANK0:
  3685     0064                     _position:
  3686     0064                     	ds	1
  3687     0065                     _targetFloor:
  3688     0065                     	ds	1
  3689     0066                     _currentFloor:
  3690     0066                     	ds	1
  3691                           
  3692                           	psect	bssBANK1
  3693     00A0                     __pbssBANK1:
  3694     00A0                     _velocity:
  3695     00A0                     	ds	16
  3696                           
  3697                           	psect	clrtext
  3698     0F80                     clear_ram0:	
  3699                           ;	Called with FSR0 containing the base address, and
  3700                           ;	WREG with the size to clear
  3701                           
  3702     0F80  0064               	clrwdt	;clear the watchdog before getting into this loop
  3703     0F81                     clrloop0:
  3704     0F81  0180               	clrf	0	;clear RAM location pointed to by FSR
  3705     0F82  3101               	addfsr 0,1
  3706     0F83  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3707     0F84  2F81               	goto	clrloop0	;have we reached the end yet?
  3708     0F85  3400               	retlw	0	;all done for this memory range, return
  3709                           
  3710                           	psect	cstackBANK1
  3711     00B0                     __pcstackBANK1:
  3712     00B0                     ?_EUSART_SetFramingErrorHandler:
  3713     00B0                     ?_EUSART_SetOverrunErrorHandler:	
  3714                           ; 1 bytes @ 0x0
  3715                           
  3716     00B0                     ?_EUSART_SetErrorHandler:	
  3717                           ; 1 bytes @ 0x0
  3718                           
  3719     00B0                     ?_IOCBF0_SetInterruptHandler:	
  3720                           ; 1 bytes @ 0x0
  3721                           
  3722     00B0                     ?_IOCBF3_SetInterruptHandler:	
  3723                           ; 1 bytes @ 0x0
  3724                           
  3725     00B0                     ?_CCP4_SetCallBack:	
  3726                           ; 1 bytes @ 0x0
  3727                           
  3728     00B0                     ??_OSCILLATOR_Initialize:	
  3729                           ; 1 bytes @ 0x0
  3730                           
  3731     00B0                     ??_WDT_Initialize:	
  3732                           ; 1 bytes @ 0x0
  3733                           
  3734     00B0                     ??_CMP2_Initialize:	
  3735                           ; 1 bytes @ 0x0
  3736                           
  3737     00B0                     ??_DAC_Initialize:	
  3738                           ; 1 bytes @ 0x0
  3739                           
  3740     00B0                     ??_FVR_Initialize:	
  3741                           ; 1 bytes @ 0x0
  3742                           
  3743     00B0                     ??_TMR2_Initialize:	
  3744                           ; 1 bytes @ 0x0
  3745                           
  3746     00B0                     ??_CMP1_Initialize:	
  3747                           ; 1 bytes @ 0x0
  3748                           
  3749     00B0                     ??_ADC_Initialize:	
  3750                           ; 1 bytes @ 0x0
  3751                           
  3752     00B0                     ??_TMR1_Initialize:	
  3753                           ; 1 bytes @ 0x0
  3754                           
  3755     00B0                     ?_TMR0_SetInterruptHandler:	
  3756                           ; 1 bytes @ 0x0
  3757                           
  3758     00B0                     ?_TMR6_SetInterruptHandler:	
  3759                           ; 1 bytes @ 0x0
  3760                           
  3761     00B0                     ?_TMR4_SetInterruptHandler:	
  3762                           ; 1 bytes @ 0x0
  3763                           
  3764     00B0                     ??_SPI1_Initialize:	
  3765                           ; 1 bytes @ 0x0
  3766                           
  3767     00B0                     ??_SPI1_WriteByte:	
  3768                           ; 1 bytes @ 0x0
  3769                           
  3770     00B0                     ??_PWM3_Initialize:	
  3771                           ; 1 bytes @ 0x0
  3772                           
  3773     00B0                     ?_PWM3_LoadDutyValue:	
  3774                           ; 1 bytes @ 0x0
  3775                           
  3776     00B0                     ??_EUSART_is_rx_ready:	
  3777                           ; 1 bytes @ 0x0
  3778                           
  3779     00B0                     ??_EUSART_Read:	
  3780                           ; 1 bytes @ 0x0
  3781                           
  3782     00B0                     ??_DATAEE_ReadByte:	
  3783                           ; 1 bytes @ 0x0
  3784                           
  3785     00B0                     ?_CMP2_SetInterruptHandler:	
  3786                           ; 1 bytes @ 0x0
  3787                           
  3788     00B0                     ??_TMR4_StartTimer:	
  3789                           ; 1 bytes @ 0x0
  3790                           
  3791     00B0                     ?_CMP1_SetInterruptHandler:	
  3792                           ; 1 bytes @ 0x0
  3793                           
  3794     00B0                     SPI1_WriteByte@byte:	
  3795                           ; 1 bytes @ 0x0
  3796                           
  3797     00B0                     DATAEE_ReadByte@bAdd:	
  3798                           ; 1 bytes @ 0x0
  3799                           
  3800     00B0                     PWM3_LoadDutyValue@dutyValue:	
  3801                           ; 1 bytes @ 0x0
  3802                           
  3803     00B0                     EUSART_SetFramingErrorHandler@interruptHandler:	
  3804                           ; 2 bytes @ 0x0
  3805                           
  3806     00B0                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  3807                           ; 2 bytes @ 0x0
  3808                           
  3809     00B0                     EUSART_SetErrorHandler@interruptHandler:	
  3810                           ; 2 bytes @ 0x0
  3811                           
  3812     00B0                     IOCBF0_SetInterruptHandler@InterruptHandler:	
  3813                           ; 2 bytes @ 0x0
  3814                           
  3815     00B0                     IOCBF3_SetInterruptHandler@InterruptHandler:	
  3816                           ; 2 bytes @ 0x0
  3817                           
  3818     00B0                     CCP4_SetCallBack@customCallBack:	
  3819                           ; 2 bytes @ 0x0
  3820                           
  3821     00B0                     TMR0_SetInterruptHandler@InterruptHandler:	
  3822                           ; 2 bytes @ 0x0
  3823                           
  3824     00B0                     CMP2_SetInterruptHandler@InterruptHandler:	
  3825                           ; 2 bytes @ 0x0
  3826                           
  3827     00B0                     TMR6_SetInterruptHandler@InterruptHandler:	
  3828                           ; 2 bytes @ 0x0
  3829                           
  3830     00B0                     TMR4_SetInterruptHandler@InterruptHandler:	
  3831                           ; 2 bytes @ 0x0
  3832                           
  3833     00B0                     CMP1_SetInterruptHandler@InterruptHandler:	
  3834                           ; 2 bytes @ 0x0
  3835                           
  3836                           
  3837                           ; 2 bytes @ 0x0
  3838     00B0                     	ds	1
  3839     00B1                     ?_setMatrix:
  3840     00B1                     ?_txMAX7219:	
  3841                           ; 1 bytes @ 0x1
  3842                           
  3843     00B1                     txMAX7219@dat0:	
  3844                           ; 1 bytes @ 0x1
  3845                           
  3846     00B1                     setMatrix@val:	
  3847                           ; 1 bytes @ 0x1
  3848                           
  3849                           
  3850                           ; 1 bytes @ 0x1
  3851     00B1                     	ds	1
  3852     00B2                     ??_EUSART_SetFramingErrorHandler:
  3853     00B2                     ??_EUSART_SetOverrunErrorHandler:	
  3854                           ; 1 bytes @ 0x2
  3855                           
  3856     00B2                     ??_EUSART_SetErrorHandler:	
  3857                           ; 1 bytes @ 0x2
  3858                           
  3859     00B2                     ??_IOCBF0_SetInterruptHandler:	
  3860                           ; 1 bytes @ 0x2
  3861                           
  3862     00B2                     ??_IOCBF3_SetInterruptHandler:	
  3863                           ; 1 bytes @ 0x2
  3864                           
  3865     00B2                     ??_CCP4_SetCallBack:	
  3866                           ; 1 bytes @ 0x2
  3867                           
  3868     00B2                     ??_TMR4_Initialize:	
  3869                           ; 1 bytes @ 0x2
  3870                           
  3871     00B2                     ??_TMR0_Initialize:	
  3872                           ; 1 bytes @ 0x2
  3873                           
  3874     00B2                     ??_TMR6_Initialize:	
  3875                           ; 1 bytes @ 0x2
  3876                           
  3877     00B2                     ??_TMR0_SetInterruptHandler:	
  3878                           ; 1 bytes @ 0x2
  3879                           
  3880     00B2                     ??_TMR6_SetInterruptHandler:	
  3881                           ; 1 bytes @ 0x2
  3882                           
  3883     00B2                     ??_TMR4_SetInterruptHandler:	
  3884                           ; 1 bytes @ 0x2
  3885                           
  3886     00B2                     ??_setMatrix:	
  3887                           ; 1 bytes @ 0x2
  3888                           
  3889     00B2                     ??_PWM3_LoadDutyValue:	
  3890                           ; 1 bytes @ 0x2
  3891                           
  3892     00B2                     ??_EUSART_Initialize:	
  3893                           ; 1 bytes @ 0x2
  3894                           
  3895     00B2                     ??_PIN_MANAGER_Initialize:	
  3896                           ; 1 bytes @ 0x2
  3897                           
  3898     00B2                     ??_CCP4_Initialize:	
  3899                           ; 1 bytes @ 0x2
  3900                           
  3901     00B2                     ??_SYSTEM_Initialize:	
  3902                           ; 1 bytes @ 0x2
  3903                           
  3904     00B2                     ??_CMP2_SetInterruptHandler:	
  3905                           ; 1 bytes @ 0x2
  3906                           
  3907     00B2                     ??_CMP1_SetInterruptHandler:	
  3908                           ; 1 bytes @ 0x2
  3909                           
  3910     00B2                     ??_txMAX7219:	
  3911                           ; 1 bytes @ 0x2
  3912                           
  3913     00B2                     txMAX7219@addr0:	
  3914                           ; 1 bytes @ 0x2
  3915                           
  3916                           
  3917                           ; 1 bytes @ 0x2
  3918     00B2                     	ds	1
  3919     00B3                     ??_sendMatrix:
  3920     00B3                     ??_initMAX7219:	
  3921                           ; 1 bytes @ 0x3
  3922                           
  3923     00B3                     setMatrix@pos:	
  3924                           ; 1 bytes @ 0x3
  3925                           
  3926                           
  3927                           ; 1 bytes @ 0x3
  3928     00B3                     	ds	1
  3929     00B4                     ??_sendMotor:
  3930     00B4                     setMatrix@eeAdd:	
  3931                           ; 1 bytes @ 0x4
  3932                           
  3933     00B4                     sendMatrix@i:	
  3934                           ; 1 bytes @ 0x4
  3935                           
  3936                           
  3937                           ; 1 bytes @ 0x4
  3938     00B4                     	ds	1
  3939     00B5                     setMatrix@i:
  3940                           
  3941                           ; 1 bytes @ 0x5
  3942     00B5                     	ds	1
  3943     00B6                     ??_updateMotor:
  3944     00B6                     ??_updateMatrix:	
  3945                           ; 1 bytes @ 0x6
  3946                           
  3947     00B6                     updateMatrix@direction:	
  3948                           ; 1 bytes @ 0x6
  3949                           
  3950                           
  3951                           ; 1 bytes @ 0x6
  3952     00B6                     	ds	1
  3953     00B7                     ??_main:
  3954     00B7                     main@receivedData:	
  3955                           ; 1 bytes @ 0x7
  3956                           
  3957                           
  3958                           ; 1 bytes @ 0x7
  3959     00B7                     	ds	1
  3960                           
  3961                           	psect	cstackCOMMON
  3962     0070                     __pcstackCOMMON:
  3963     0070                     ?_PIN_MANAGER_IOC:
  3964     0070                     ?_TMR0_ISR:	
  3965                           ; 1 bytes @ 0x0
  3966                           
  3967     0070                     ?_TMR4_ISR:	
  3968                           ; 1 bytes @ 0x0
  3969                           
  3970     0070                     ?_CMP2_ISR:	
  3971                           ; 1 bytes @ 0x0
  3972                           
  3973     0070                     ?_CMP1_ISR:	
  3974                           ; 1 bytes @ 0x0
  3975                           
  3976     0070                     ?_CCP4_CaptureISR:	
  3977                           ; 1 bytes @ 0x0
  3978                           
  3979     0070                     ?_TMR6_ISR:	
  3980                           ; 1 bytes @ 0x0
  3981                           
  3982     0070                     ?_IOCBF0_DefaultInterruptHandler:	
  3983                           ; 1 bytes @ 0x0
  3984                           
  3985     0070                     ??_IOCBF0_DefaultInterruptHandler:	
  3986                           ; 1 bytes @ 0x0
  3987                           
  3988     0070                     ?_IOCBF3_DefaultInterruptHandler:	
  3989                           ; 1 bytes @ 0x0
  3990                           
  3991     0070                     ??_IOCBF3_DefaultInterruptHandler:	
  3992                           ; 1 bytes @ 0x0
  3993                           
  3994     0070                     ?_IOCBF0_ISR:	
  3995                           ; 1 bytes @ 0x0
  3996                           
  3997     0070                     ?_IOCBF3_ISR:	
  3998                           ; 1 bytes @ 0x0
  3999                           
  4000     0070                     ?_OSCILLATOR_Initialize:	
  4001                           ; 1 bytes @ 0x0
  4002                           
  4003     0070                     ?_WDT_Initialize:	
  4004                           ; 1 bytes @ 0x0
  4005                           
  4006     0070                     ?_CMP2_Initialize:	
  4007                           ; 1 bytes @ 0x0
  4008                           
  4009     0070                     ?_DAC_Initialize:	
  4010                           ; 1 bytes @ 0x0
  4011                           
  4012     0070                     ?_FVR_Initialize:	
  4013                           ; 1 bytes @ 0x0
  4014                           
  4015     0070                     ?_TMR4_Initialize:	
  4016                           ; 1 bytes @ 0x0
  4017                           
  4018     0070                     ?_TMR2_Initialize:	
  4019                           ; 1 bytes @ 0x0
  4020                           
  4021     0070                     ?_TMR0_Initialize:	
  4022                           ; 1 bytes @ 0x0
  4023                           
  4024     0070                     ?_TMR6_Initialize:	
  4025                           ; 1 bytes @ 0x0
  4026                           
  4027     0070                     ?_CMP1_Initialize:	
  4028                           ; 1 bytes @ 0x0
  4029                           
  4030     0070                     ?_ADC_Initialize:	
  4031                           ; 1 bytes @ 0x0
  4032                           
  4033     0070                     ?_TMR1_Initialize:	
  4034                           ; 1 bytes @ 0x0
  4035                           
  4036     0070                     ?_TMR0_DefaultInterruptHandler:	
  4037                           ; 1 bytes @ 0x0
  4038                           
  4039     0070                     ??_TMR0_DefaultInterruptHandler:	
  4040                           ; 1 bytes @ 0x0
  4041                           
  4042     0070                     ?_TMR0_CallBack:	
  4043                           ; 1 bytes @ 0x0
  4044                           
  4045     0070                     ?_TMR6_DefaultInterruptHandler:	
  4046                           ; 1 bytes @ 0x0
  4047                           
  4048     0070                     ??_TMR6_DefaultInterruptHandler:	
  4049                           ; 1 bytes @ 0x0
  4050                           
  4051     0070                     ?_TMR6_CallBack:	
  4052                           ; 1 bytes @ 0x0
  4053                           
  4054     0070                     ?_TMR4_DefaultInterruptHandler:	
  4055                           ; 1 bytes @ 0x0
  4056                           
  4057     0070                     ??_TMR4_DefaultInterruptHandler:	
  4058                           ; 1 bytes @ 0x0
  4059                           
  4060     0070                     ?_TMR4_CallBack:	
  4061                           ; 1 bytes @ 0x0
  4062                           
  4063     0070                     ?_sendMatrix:	
  4064                           ; 1 bytes @ 0x0
  4065                           
  4066     0070                     ?_initMAX7219:	
  4067                           ; 1 bytes @ 0x0
  4068                           
  4069     0070                     ?_SPI1_Initialize:	
  4070                           ; 1 bytes @ 0x0
  4071                           
  4072     0070                     ?_SPI1_WriteByte:	
  4073                           ; 1 bytes @ 0x0
  4074                           
  4075     0070                     ?_PWM3_Initialize:	
  4076                           ; 1 bytes @ 0x0
  4077                           
  4078     0070                     ?_EUSART_Initialize:	
  4079                           ; 1 bytes @ 0x0
  4080                           
  4081     0070                     ?_EUSART_is_tx_ready:	
  4082                           ; 1 bytes @ 0x0
  4083                           
  4084     0070                     ??_EUSART_is_tx_ready:	
  4085                           ; 1 bytes @ 0x0
  4086                           
  4087     0070                     ?_EUSART_is_rx_ready:	
  4088                           ; 1 bytes @ 0x0
  4089                           
  4090     0070                     ?_EUSART_Read:	
  4091                           ; 1 bytes @ 0x0
  4092                           
  4093     0070                     ?_EUSART_Write:	
  4094                           ; 1 bytes @ 0x0
  4095                           
  4096     0070                     ??_EUSART_Write:	
  4097                           ; 1 bytes @ 0x0
  4098                           
  4099     0070                     ?_INTERRUPT_InterruptManager:	
  4100                           ; 1 bytes @ 0x0
  4101                           
  4102     0070                     ?_PIN_MANAGER_Initialize:	
  4103                           ; 1 bytes @ 0x0
  4104                           
  4105     0070                     ?_CCP4_DefaultCallBack:	
  4106                           ; 1 bytes @ 0x0
  4107                           
  4108     0070                     ?_CCP4_Initialize:	
  4109                           ; 1 bytes @ 0x0
  4110                           
  4111     0070                     ?_SYSTEM_Initialize:	
  4112                           ; 1 bytes @ 0x0
  4113                           
  4114     0070                     ?_TMR1_HasOverflowOccured:	
  4115                           ; 1 bytes @ 0x0
  4116                           
  4117     0070                     ??_TMR1_HasOverflowOccured:	
  4118                           ; 1 bytes @ 0x0
  4119                           
  4120     0070                     ?_DATAEE_ReadByte:	
  4121                           ; 1 bytes @ 0x0
  4122                           
  4123     0070                     ?_TMR6_StartTimer:	
  4124                           ; 1 bytes @ 0x0
  4125                           
  4126     0070                     ??_TMR6_StartTimer:	
  4127                           ; 1 bytes @ 0x0
  4128                           
  4129     0070                     ?_TMR6_StopTimer:	
  4130                           ; 1 bytes @ 0x0
  4131                           
  4132     0070                     ??_TMR6_StopTimer:	
  4133                           ; 1 bytes @ 0x0
  4134                           
  4135     0070                     ?_TMR6_WriteTimer:	
  4136                           ; 1 bytes @ 0x0
  4137                           
  4138     0070                     ??_TMR6_WriteTimer:	
  4139                           ; 1 bytes @ 0x0
  4140                           
  4141     0070                     ?_TMR4_StartTimer:	
  4142                           ; 1 bytes @ 0x0
  4143                           
  4144     0070                     ?_TMR4_StopTimer:	
  4145                           ; 1 bytes @ 0x0
  4146                           
  4147     0070                     ??_TMR4_StopTimer:	
  4148                           ; 1 bytes @ 0x0
  4149                           
  4150     0070                     ?_TMR4_WriteTimer:	
  4151                           ; 1 bytes @ 0x0
  4152                           
  4153     0070                     ??_TMR4_WriteTimer:	
  4154                           ; 1 bytes @ 0x0
  4155                           
  4156     0070                     ?_sendMotor:	
  4157                           ; 1 bytes @ 0x0
  4158                           
  4159     0070                     ?_updateMotor:	
  4160                           ; 1 bytes @ 0x0
  4161                           
  4162     0070                     ?_updateMatrix:	
  4163                           ; 1 bytes @ 0x0
  4164                           
  4165     0070                     ?_TMR0_Interrupt:	
  4166                           ; 1 bytes @ 0x0
  4167                           
  4168     0070                     ?_TMR4_Interrupt:	
  4169                           ; 1 bytes @ 0x0
  4170                           
  4171     0070                     ?_TMR6_Interrupt:	
  4172                           ; 1 bytes @ 0x0
  4173                           
  4174     0070                     ?_CCP4_Interrupt:	
  4175                           ; 1 bytes @ 0x0
  4176                           
  4177     0070                     ?_S1_Interrupt:	
  4178                           ; 1 bytes @ 0x0
  4179                           
  4180     0070                     ?_S2_Interrupt:	
  4181                           ; 1 bytes @ 0x0
  4182                           
  4183     0070                     ?_S3_Interrupt:	
  4184                           ; 1 bytes @ 0x0
  4185                           
  4186     0070                     ?_S4_Interrupt:	
  4187                           ; 1 bytes @ 0x0
  4188                           
  4189     0070                     ?_main:	
  4190                           ; 1 bytes @ 0x0
  4191                           
  4192     0070                     ?i1_SPI1_WriteByte:	
  4193                           ; 1 bytes @ 0x0
  4194                           
  4195     0070                     ??i1_SPI1_WriteByte:	
  4196                           ; 1 bytes @ 0x0
  4197                           
  4198     0070                     ?i1_PWM3_LoadDutyValue:	
  4199                           ; 1 bytes @ 0x0
  4200                           
  4201     0070                     ?i1_DATAEE_ReadByte:	
  4202                           ; 1 bytes @ 0x0
  4203                           
  4204     0070                     ??i1_DATAEE_ReadByte:	
  4205                           ; 1 bytes @ 0x0
  4206                           
  4207     0070                     ?i1_TMR4_StartTimer:	
  4208                           ; 1 bytes @ 0x0
  4209                           
  4210     0070                     ??i1_TMR4_StartTimer:	
  4211                           ; 1 bytes @ 0x0
  4212                           
  4213     0070                     ?i1_sendMotor:	
  4214                           ; 1 bytes @ 0x0
  4215                           
  4216     0070                     ?i1_updateMotor:	
  4217                           ; 1 bytes @ 0x0
  4218                           
  4219     0070                     ?i1_updateMatrix:	
  4220                           ; 1 bytes @ 0x0
  4221                           
  4222     0070                     ?i1_sendMatrix:	
  4223                           ; 1 bytes @ 0x0
  4224                           
  4225     0070                     ?_ADC_GetConversion:	
  4226                           ; 1 bytes @ 0x0
  4227                           
  4228     0070                     ?___wmul:	
  4229                           ; 2 bytes @ 0x0
  4230                           
  4231     0070                     ?___lwdiv:	
  4232                           ; 2 bytes @ 0x0
  4233                           
  4234     0070                     ?___lldiv:	
  4235                           ; 2 bytes @ 0x0
  4236                           
  4237     0070                     _EUSART_is_tx_ready$323:	
  4238                           ; 4 bytes @ 0x0
  4239                           
  4240     0070                     EUSART_Write@txData:	
  4241                           ; 1 bytes @ 0x0
  4242                           
  4243     0070                     TMR6_WriteTimer@timerVal:	
  4244                           ; 1 bytes @ 0x0
  4245                           
  4246     0070                     TMR4_WriteTimer@timerVal:	
  4247                           ; 1 bytes @ 0x0
  4248                           
  4249     0070                     i1SPI1_WriteByte@byte:	
  4250                           ; 1 bytes @ 0x0
  4251                           
  4252     0070                     i1DATAEE_ReadByte@bAdd:	
  4253                           ; 1 bytes @ 0x0
  4254                           
  4255     0070                     CCP4_DefaultCallBack@capturedValue:	
  4256                           ; 1 bytes @ 0x0
  4257                           
  4258     0070                     CCP4_Interrupt@capturedValue:	
  4259                           ; 2 bytes @ 0x0
  4260                           
  4261     0070                     ___wmul@multiplier:	
  4262                           ; 2 bytes @ 0x0
  4263                           
  4264     0070                     ___lwdiv@divisor:	
  4265                           ; 2 bytes @ 0x0
  4266                           
  4267     0070                     i1PWM3_LoadDutyValue@dutyValue:	
  4268                           ; 2 bytes @ 0x0
  4269                           
  4270     0070                     ___lldiv@divisor:	
  4271                           ; 2 bytes @ 0x0
  4272                           
  4273                           
  4274                           ; 4 bytes @ 0x0
  4275     0070                     	ds	1
  4276     0071                     ?i1_txMAX7219:
  4277     0071                     ?i1_setMatrix:	
  4278                           ; 1 bytes @ 0x1
  4279                           
  4280     0071                     i1txMAX7219@dat0:	
  4281                           ; 1 bytes @ 0x1
  4282                           
  4283     0071                     i1setMatrix@val:	
  4284                           ; 1 bytes @ 0x1
  4285                           
  4286                           
  4287                           ; 1 bytes @ 0x1
  4288     0071                     	ds	1
  4289     0072                     ??_CCP4_DefaultCallBack:
  4290     0072                     ??_ADC_GetConversion:	
  4291                           ; 1 bytes @ 0x2
  4292                           
  4293     0072                     ??_CCP4_Interrupt:	
  4294                           ; 1 bytes @ 0x2
  4295                           
  4296     0072                     ??i1_PWM3_LoadDutyValue:	
  4297                           ; 1 bytes @ 0x2
  4298                           
  4299     0072                     ??i1_txMAX7219:	
  4300                           ; 1 bytes @ 0x2
  4301                           
  4302     0072                     ??i1_setMatrix:	
  4303                           ; 1 bytes @ 0x2
  4304                           
  4305     0072                     i1txMAX7219@addr0:	
  4306                           ; 1 bytes @ 0x2
  4307                           
  4308     0072                     ___wmul@multiplicand:	
  4309                           ; 1 bytes @ 0x2
  4310                           
  4311     0072                     ___lwdiv@dividend:	
  4312                           ; 2 bytes @ 0x2
  4313                           
  4314                           
  4315                           ; 2 bytes @ 0x2
  4316     0072                     	ds	1
  4317     0073                     ??_CCP4_CaptureISR:
  4318     0073                     ??i1_sendMatrix:	
  4319                           ; 1 bytes @ 0x3
  4320                           
  4321     0073                     ADC_GetConversion@channel:	
  4322                           ; 1 bytes @ 0x3
  4323                           
  4324     0073                     i1setMatrix@pos:	
  4325                           ; 1 bytes @ 0x3
  4326                           
  4327     0073                     CCP4_CaptureISR@module:	
  4328                           ; 1 bytes @ 0x3
  4329                           
  4330                           
  4331                           ; 2 bytes @ 0x3
  4332     0073                     	ds	1
  4333     0074                     ??___wmul:
  4334     0074                     ??___lwdiv:	
  4335                           ; 1 bytes @ 0x4
  4336                           
  4337     0074                     ??i1_sendMotor:	
  4338                           ; 1 bytes @ 0x4
  4339                           
  4340     0074                     i1setMatrix@eeAdd:	
  4341                           ; 1 bytes @ 0x4
  4342                           
  4343     0074                     i1sendMatrix@i:	
  4344                           ; 1 bytes @ 0x4
  4345                           
  4346     0074                     ___wmul@product:	
  4347                           ; 1 bytes @ 0x4
  4348                           
  4349     0074                     ___lldiv@dividend:	
  4350                           ; 2 bytes @ 0x4
  4351                           
  4352                           
  4353                           ; 4 bytes @ 0x4
  4354     0074                     	ds	1
  4355     0075                     i1setMatrix@i:
  4356     0075                     ___lwdiv@quotient:	
  4357                           ; 1 bytes @ 0x5
  4358                           
  4359                           
  4360                           ; 2 bytes @ 0x5
  4361     0075                     	ds	1
  4362     0076                     ??i1_updateMotor:
  4363     0076                     ??i1_updateMatrix:	
  4364                           ; 1 bytes @ 0x6
  4365                           
  4366     0076                     i1updateMatrix@direction:	
  4367                           ; 1 bytes @ 0x6
  4368                           
  4369                           
  4370                           ; 1 bytes @ 0x6
  4371     0076                     	ds	1
  4372     0077                     ??_PIN_MANAGER_IOC:
  4373     0077                     ??_TMR4_ISR:	
  4374                           ; 1 bytes @ 0x7
  4375                           
  4376     0077                     ??_CMP2_ISR:	
  4377                           ; 1 bytes @ 0x7
  4378                           
  4379     0077                     ??_CMP1_ISR:	
  4380                           ; 1 bytes @ 0x7
  4381                           
  4382     0077                     ??_TMR6_ISR:	
  4383                           ; 1 bytes @ 0x7
  4384                           
  4385     0077                     ??_IOCBF0_ISR:	
  4386                           ; 1 bytes @ 0x7
  4387                           
  4388     0077                     ??_IOCBF3_ISR:	
  4389                           ; 1 bytes @ 0x7
  4390                           
  4391     0077                     ??_TMR6_CallBack:	
  4392                           ; 1 bytes @ 0x7
  4393                           
  4394     0077                     ??_TMR4_CallBack:	
  4395                           ; 1 bytes @ 0x7
  4396                           
  4397     0077                     ??_TMR4_Interrupt:	
  4398                           ; 1 bytes @ 0x7
  4399                           
  4400     0077                     ??_TMR6_Interrupt:	
  4401                           ; 1 bytes @ 0x7
  4402                           
  4403     0077                     ??_S1_Interrupt:	
  4404                           ; 1 bytes @ 0x7
  4405                           
  4406     0077                     ??_S2_Interrupt:	
  4407                           ; 1 bytes @ 0x7
  4408                           
  4409     0077                     ??_S3_Interrupt:	
  4410                           ; 1 bytes @ 0x7
  4411                           
  4412     0077                     ??_S4_Interrupt:	
  4413                           ; 1 bytes @ 0x7
  4414                           
  4415     0077                     ___lwdiv@counter:	
  4416                           ; 1 bytes @ 0x7
  4417                           
  4418                           
  4419                           ; 1 bytes @ 0x7
  4420     0077                     	ds	1
  4421     0078                     ??___lldiv:
  4422                           
  4423                           ; 1 bytes @ 0x8
  4424     0078                     	ds	1
  4425     0079                     ___lldiv@quotient:
  4426                           
  4427                           ; 4 bytes @ 0x9
  4428     0079                     	ds	4
  4429     007D                     ___lldiv@counter:
  4430                           
  4431                           ; 1 bytes @ 0xD
  4432     007D                     	ds	1
  4433     007E                     ??_TMR0_ISR:
  4434     007E                     ??_TMR0_CallBack:	
  4435                           ; 1 bytes @ 0xE
  4436                           
  4437     007E                     ??_INTERRUPT_InterruptManager:	
  4438                           ; 1 bytes @ 0xE
  4439                           
  4440                           
  4441                           	psect	cstackBANK0
  4442     0052                     __pcstackBANK0:	
  4443                           ; 1 bytes @ 0xE
  4444                           
  4445     0052                     ??_TMR0_Interrupt:
  4446                           
  4447                           ; 1 bytes @ 0x0
  4448     0052                     	ds	4
  4449     0056                     TMR0_Interrupt@v:
  4450                           
  4451                           ; 4 bytes @ 0x4
  4452     0056                     	ds	4
  4453     005A                     TMR0_Interrupt@i:
  4454                           
  4455                           ; 2 bytes @ 0x8
  4456     005A                     	ds	2
  4457     005C                     TMR0_Interrupt@i_1694:
  4458                           
  4459                           ; 2 bytes @ 0xA
  4460     005C                     	ds	2
  4461     005E                     TMR0_Interrupt@t:
  4462                           
  4463                           ; 4 bytes @ 0xC
  4464     005E                     	ds	4
  4465     0062                     TMR0_Interrupt@p:
  4466                           
  4467                           ; 2 bytes @ 0x10
  4468     0062                     	ds	2
  4469                           
  4470                           	psect	maintext
  4471     0180                     __pmaintext:	
  4472 ;;
  4473 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  4474 ;;
  4475 ;; *************** function _main *****************
  4476 ;; Defined at:
  4477 ;;		line 233 in file "main.c"
  4478 ;; Parameters:    Size  Location     Type
  4479 ;;		None
  4480 ;; Auto vars:     Size  Location     Type
  4481 ;;  receivedData    1    7[BANK1 ] unsigned char 
  4482 ;; Return value:  Size  Location     Type
  4483 ;;                  1    wreg      void 
  4484 ;; Registers used:
  4485 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4486 ;; Tracked objects:
  4487 ;;		On entry : B1F/0
  4488 ;;		On exit  : 0/0
  4489 ;;		Unchanged: 0/0
  4490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4491 ;;      Params:         0       0       0       0       0       0
  4492 ;;      Locals:         0       0       1       0       0       0
  4493 ;;      Temps:          0       0       0       0       0       0
  4494 ;;      Totals:         0       0       1       0       0       0
  4495 ;;Total ram usage:        1 bytes
  4496 ;; Hardware stack levels required when called: 12
  4497 ;; This function calls:
  4498 ;;		_CCP4_SetCallBack
  4499 ;;		_CMP1_SetInterruptHandler
  4500 ;;		_CMP2_SetInterruptHandler
  4501 ;;		_EUSART_Read
  4502 ;;		_EUSART_is_rx_ready
  4503 ;;		_IOCBF0_SetInterruptHandler
  4504 ;;		_IOCBF3_SetInterruptHandler
  4505 ;;		_SYSTEM_Initialize
  4506 ;;		_TMR0_SetInterruptHandler
  4507 ;;		_TMR4_SetInterruptHandler
  4508 ;;		_TMR6_SetInterruptHandler
  4509 ;;		_initMAX7219
  4510 ;;		_updateMatrix
  4511 ;;		_updateMotor
  4512 ;; This function is called by:
  4513 ;;		Startup code after reset
  4514 ;; This function uses a non-reentrant model
  4515 ;;
  4516                           
  4517     0180                     _main:	
  4518                           ;psect for function _main
  4519                           
  4520     0180                     l3966:	
  4521                           ;incstack = 0
  4522                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4523                           
  4524                           
  4525                           ;main.c: 236:     SYSTEM_Initialize();
  4526     0180  3183  2353  3181   	fcall	_SYSTEM_Initialize
  4527                           
  4528                           ;main.c: 238:     TMR0_SetInterruptHandler(TMR0_Interrupt);
  4529     0183  308C               	movlw	low _TMR0_Interrupt
  4530     0184  0021               	movlb	1	; select bank1
  4531     0185  00B0               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  4532     0186  3000               	movlw	high _TMR0_Interrupt
  4533     0187  00B1               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4534     0188  318F  27EE  3181   	fcall	_TMR0_SetInterruptHandler
  4535                           
  4536                           ;main.c: 239:     TMR4_SetInterruptHandler(TMR4_Interrupt);
  4537     018B  3016               	movlw	low _TMR4_Interrupt
  4538     018C  0021               	movlb	1	; select bank1
  4539     018D  00B0               	movwf	TMR4_SetInterruptHandler@InterruptHandler^(0+128)
  4540     018E  3007               	movlw	high _TMR4_Interrupt
  4541     018F  00B1               	movwf	(TMR4_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4542     0190  318F  27F7  3181   	fcall	_TMR4_SetInterruptHandler
  4543                           
  4544                           ;main.c: 240:     TMR6_SetInterruptHandler(TMR6_Interrupt);
  4545     0193  3006               	movlw	low _TMR6_Interrupt
  4546     0194  0021               	movlb	1	; select bank1
  4547     0195  00B0               	movwf	TMR6_SetInterruptHandler@InterruptHandler^(0+128)
  4548     0196  3007               	movlw	high _TMR6_Interrupt
  4549     0197  00B1               	movwf	(TMR6_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4550     0198  3187  27F7  3181   	fcall	_TMR6_SetInterruptHandler
  4551                           
  4552                           ;main.c: 241:     CCP4_SetCallBack(CCP4_Interrupt);
  4553     019B  3087               	movlw	low _CCP4_Interrupt
  4554     019C  0021               	movlb	1	; select bank1
  4555     019D  00B0               	movwf	CCP4_SetCallBack@customCallBack^(0+128)
  4556     019E  3003               	movlw	high _CCP4_Interrupt
  4557     019F  00B1               	movwf	(CCP4_SetCallBack@customCallBack^(0+128)+1)
  4558     01A0  318F  27AF  3181   	fcall	_CCP4_SetCallBack
  4559                           
  4560                           ;main.c: 242:     IOCBF0_SetInterruptHandler(S1_Interrupt);
  4561     01A3  30EC               	movlw	low _S1_Interrupt
  4562     01A4  0021               	movlb	1	; select bank1
  4563     01A5  00B0               	movwf	IOCBF0_SetInterruptHandler@InterruptHandler^(0+128)
  4564     01A6  3005               	movlw	high _S1_Interrupt
  4565     01A7  00B1               	movwf	(IOCBF0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4566     01A8  318F  27D3  3181   	fcall	_IOCBF0_SetInterruptHandler
  4567                           
  4568                           ;main.c: 243:     IOCBF3_SetInterruptHandler(S2_Interrupt);
  4569     01AB  307D               	movlw	low _S2_Interrupt
  4570     01AC  0021               	movlb	1	; select bank1
  4571     01AD  00B0               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler^(0+128)
  4572     01AE  3005               	movlw	high _S2_Interrupt
  4573     01AF  00B1               	movwf	(IOCBF3_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4574     01B0  318F  27DC  3181   	fcall	_IOCBF3_SetInterruptHandler
  4575                           
  4576                           ;main.c: 244:     CMP1_SetInterruptHandler(S3_Interrupt);
  4577     01B3  30B5               	movlw	low _S3_Interrupt
  4578     01B4  0021               	movlb	1	; select bank1
  4579     01B5  00B0               	movwf	CMP1_SetInterruptHandler@InterruptHandler^(0+128)
  4580     01B6  3005               	movlw	high _S3_Interrupt
  4581     01B7  00B1               	movwf	(CMP1_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4582     01B8  318F  279D  3181   	fcall	_CMP1_SetInterruptHandler
  4583                           
  4584                           ;main.c: 245:     CMP2_SetInterruptHandler(S4_Interrupt);
  4585     01BB  3099               	movlw	low _S4_Interrupt
  4586     01BC  0021               	movlb	1	; select bank1
  4587     01BD  00B0               	movwf	CMP2_SetInterruptHandler@InterruptHandler^(0+128)
  4588     01BE  3005               	movlw	high _S4_Interrupt
  4589     01BF  00B1               	movwf	(CMP2_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4590     01C0  318F  27A6  3181   	fcall	_CMP2_SetInterruptHandler
  4591     01C3                     l3968:
  4592                           
  4593                           ;main.c: 251:     (INTCONbits.GIE = 1);
  4594     01C3  178B               	bsf	11,7	;volatile
  4595     01C4                     l3970:
  4596                           
  4597                           ;main.c: 254:     (INTCONbits.PEIE = 1);
  4598     01C4  170B               	bsf	11,6	;volatile
  4599                           
  4600                           ;main.c: 262:     initMAX7219();
  4601     01C5  3182  2294  3181   	fcall	_initMAX7219
  4602     01C8                     l3972:
  4603                           
  4604                           ;main.c: 263:     updateMotor();
  4605     01C8  3183  23EA  3181   	fcall	_updateMotor
  4606     01CB                     l3974:
  4607                           
  4608                           ;main.c: 265:     uint8_t receivedData = 0;
  4609     01CB  0021               	movlb	1	; select bank1
  4610     01CC  01B7               	clrf	main@receivedData^(0+128)
  4611     01CD                     l3976:
  4612                           
  4613                           ;main.c: 268:     {;main.c: 269:         if(EUSART_is_rx_ready()){
  4614     01CD  318F  276F  3181   	fcall	_EUSART_is_rx_ready
  4615     01D0  3A00               	xorlw	0
  4616     01D1  1903               	skipnz
  4617     01D2  29D4               	goto	u2421
  4618     01D3  29D5               	goto	u2420
  4619     01D4                     u2421:
  4620     01D4  29CD               	goto	l3976
  4621     01D5                     u2420:
  4622     01D5  29DB               	goto	l3982
  4623     01D6                     l3980:
  4624                           
  4625                           ;main.c: 271:                 receivedData = EUSART_Read();
  4626     01D6  3187  2726  3181   	fcall	_EUSART_Read
  4627     01D9  0021               	movlb	1	; select bank1
  4628     01DA  00B7               	movwf	main@receivedData^(0+128)
  4629     01DB                     l3982:
  4630                           
  4631                           ;main.c: 270:             while(EUSART_is_rx_ready()){
  4632     01DB  318F  276F  3181   	fcall	_EUSART_is_rx_ready
  4633     01DE  3A00               	xorlw	0
  4634     01DF  1D03               	skipz
  4635     01E0  29E2               	goto	u2431
  4636     01E1  29E3               	goto	u2430
  4637     01E2                     u2431:
  4638     01E2  29D6               	goto	l3980
  4639     01E3                     u2430:
  4640     01E3                     l3984:
  4641                           
  4642                           ;main.c: 273:             targetFloor = receivedData+1;
  4643     01E3  0021               	movlb	1	; select bank1
  4644     01E4  0837               	movf	main@receivedData^(0+128),w
  4645     01E5  3E01               	addlw	1
  4646     01E6  0020               	movlb	0	; select bank0
  4647     01E7  00E5               	movwf	_targetFloor
  4648                           
  4649                           ;main.c: 274:             if(motorState==0){
  4650     01E8  0851               	movf	_motorState,w
  4651     01E9  1D03               	btfss	3,2
  4652     01EA  29EC               	goto	u2441
  4653     01EB  29ED               	goto	u2440
  4654     01EC                     u2441:
  4655     01EC  29CD               	goto	l3976
  4656     01ED                     u2440:
  4657     01ED                     l3986:
  4658                           
  4659                           ;main.c: 275:                 updateMotor();
  4660     01ED  3183  23EA  3181   	fcall	_updateMotor
  4661     01F0                     l3988:
  4662                           
  4663                           ;main.c: 276:                 updateMatrix();
  4664     01F0  3184  2471  3181   	fcall	_updateMatrix
  4665     01F3  29CD               	goto	l3976
  4666     01F4  3180  286A         	ljmp	start
  4667     01F6                     __end_of_main:
  4668                           
  4669                           	psect	text1
  4670     03EA                     __ptext1:	
  4671 ;; *************** function _updateMotor *****************
  4672 ;; Defined at:
  4673 ;;		line 85 in file "main.c"
  4674 ;; Parameters:    Size  Location     Type
  4675 ;;		None
  4676 ;; Auto vars:     Size  Location     Type
  4677 ;;		None
  4678 ;; Return value:  Size  Location     Type
  4679 ;;                  1    wreg      void 
  4680 ;; Registers used:
  4681 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4682 ;; Tracked objects:
  4683 ;;		On entry : 0/0
  4684 ;;		On exit  : 0/0
  4685 ;;		Unchanged: 0/0
  4686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4687 ;;      Params:         0       0       0       0       0       0
  4688 ;;      Locals:         0       0       0       0       0       0
  4689 ;;      Temps:          0       0       0       0       0       0
  4690 ;;      Totals:         0       0       0       0       0       0
  4691 ;;Total ram usage:        0 bytes
  4692 ;; Hardware stack levels used: 1
  4693 ;; Hardware stack levels required when called: 10
  4694 ;; This function calls:
  4695 ;;		_TMR4_StartTimer
  4696 ;;		_sendMotor
  4697 ;; This function is called by:
  4698 ;;		_main
  4699 ;; This function uses a non-reentrant model
  4700 ;;
  4701                           
  4702     03EA                     _updateMotor:	
  4703                           ;psect for function _updateMotor
  4704                           
  4705     03EA                     l3916:	
  4706                           ;incstack = 0
  4707                           ; Regs used in _updateMotor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4708                           
  4709                           
  4710                           ;main.c: 86:     if(currentFloor==targetFloor){
  4711     03EA  0020               	movlb	0	; select bank0
  4712     03EB  0866               	movf	_currentFloor,w
  4713     03EC  0665               	xorwf	_targetFloor,w
  4714     03ED  1D03               	skipz
  4715     03EE  2BF0               	goto	u2361
  4716     03EF  2BF1               	goto	u2360
  4717     03F0                     u2361:
  4718     03F0  2BF3               	goto	l3920
  4719     03F1                     u2360:
  4720     03F1                     l3918:
  4721                           
  4722                           ;main.c: 87:         motorState = 0;
  4723     03F1  01D1               	clrf	_motorState
  4724                           
  4725                           ;main.c: 88:     } else if(currentFloor < targetFloor){
  4726     03F2  2C15               	goto	l3938
  4727     03F3                     l3920:
  4728     03F3  0865               	movf	_targetFloor,w
  4729     03F4  0266               	subwf	_currentFloor,w
  4730     03F5  1803               	skipnc
  4731     03F6  2BF8               	goto	u2371
  4732     03F7  2BF9               	goto	u2370
  4733     03F8                     u2371:
  4734     03F8  2C08               	goto	l3930
  4735     03F9                     u2370:
  4736     03F9                     l3922:
  4737                           
  4738                           ;main.c: 89:         if(motorState == 2){
  4739     03F9  3002               	movlw	2
  4740     03FA  0651               	xorwf	_motorState,w
  4741     03FB  1D03               	btfss	3,2
  4742     03FC  2BFE               	goto	u2381
  4743     03FD  2BFF               	goto	u2380
  4744     03FE                     u2381:
  4745     03FE  2C04               	goto	l3928
  4746     03FF                     u2380:
  4747     03FF                     l3924:
  4748                           
  4749                           ;main.c: 90:             directionFlag = 1;
  4750     03FF  01CE               	clrf	_directionFlag
  4751     0400  0ACE               	incf	_directionFlag,f
  4752     0401                     l3926:
  4753                           
  4754                           ;main.c: 91:             TMR4_StartTimer();
  4755     0401  318F  274E  3183   	fcall	_TMR4_StartTimer
  4756     0404                     l3928:
  4757                           
  4758                           ;main.c: 93:         motorState = 1;
  4759     0404  0020               	movlb	0	; select bank0
  4760     0405  01D1               	clrf	_motorState
  4761     0406  0AD1               	incf	_motorState,f
  4762                           
  4763                           ;main.c: 94:     } else{
  4764     0407  2C15               	goto	l3938
  4765     0408                     l3930:
  4766                           
  4767                           ;main.c: 95:         if(motorState == 1){
  4768     0408  0351               	decf	_motorState,w
  4769     0409  1D03               	btfss	3,2
  4770     040A  2C0C               	goto	u2391
  4771     040B  2C0D               	goto	u2390
  4772     040C                     u2391:
  4773     040C  2C12               	goto	l3936
  4774     040D                     u2390:
  4775     040D                     l3932:
  4776                           
  4777                           ;main.c: 96:             directionFlag = 1;
  4778     040D  01CE               	clrf	_directionFlag
  4779     040E  0ACE               	incf	_directionFlag,f
  4780     040F                     l3934:
  4781                           
  4782                           ;main.c: 97:             TMR4_StartTimer();
  4783     040F  318F  274E  3183   	fcall	_TMR4_StartTimer
  4784     0412                     l3936:
  4785                           
  4786                           ;main.c: 99:         motorState = 2;
  4787     0412  3002               	movlw	2
  4788     0413  0020               	movlb	0	; select bank0
  4789     0414  00D1               	movwf	_motorState
  4790     0415                     l3938:
  4791                           
  4792                           ;main.c: 101:     sendMotor();
  4793     0415  3182  2250  3183   	fcall	_sendMotor
  4794     0418                     l846:
  4795     0418  0008               	return
  4796     0419                     __end_of_updateMotor:
  4797                           
  4798                           	psect	text2
  4799     0250                     __ptext2:	
  4800 ;; *************** function _sendMotor *****************
  4801 ;; Defined at:
  4802 ;;		line 57 in file "main.c"
  4803 ;; Parameters:    Size  Location     Type
  4804 ;;		None
  4805 ;; Auto vars:     Size  Location     Type
  4806 ;;		None
  4807 ;; Return value:  Size  Location     Type
  4808 ;;                  1    wreg      void 
  4809 ;; Registers used:
  4810 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4811 ;; Tracked objects:
  4812 ;;		On entry : 0/0
  4813 ;;		On exit  : 0/0
  4814 ;;		Unchanged: 0/0
  4815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4816 ;;      Params:         0       0       0       0       0       0
  4817 ;;      Locals:         0       0       0       0       0       0
  4818 ;;      Temps:          0       0       2       0       0       0
  4819 ;;      Totals:         0       0       2       0       0       0
  4820 ;;Total ram usage:        2 bytes
  4821 ;; Hardware stack levels used: 1
  4822 ;; Hardware stack levels required when called: 9
  4823 ;; This function calls:
  4824 ;;		_PWM3_LoadDutyValue
  4825 ;; This function is called by:
  4826 ;;		_updateMotor
  4827 ;; This function uses a non-reentrant model
  4828 ;;
  4829                           
  4830     0250                     _sendMotor:	
  4831                           ;psect for function _sendMotor
  4832                           
  4833     0250                     l3836:	
  4834                           ;incstack = 0
  4835                           ; Regs used in _sendMotor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4836                           
  4837                           
  4838                           ;main.c: 58:     if(floorFlag || directionFlag){
  4839     0250  0020               	movlb	0	; select bank0
  4840     0251  084F               	movf	_floorFlag,w
  4841     0252  1D03               	btfss	3,2
  4842     0253  2A55               	goto	u2271
  4843     0254  2A56               	goto	u2270
  4844     0255                     u2271:
  4845     0255  2A5B               	goto	l3840
  4846     0256                     u2270:
  4847     0256                     l3838:
  4848     0256  084E               	movf	_directionFlag,w
  4849     0257  1903               	btfsc	3,2
  4850     0258  2A5A               	goto	u2281
  4851     0259  2A5B               	goto	u2280
  4852     025A                     u2281:
  4853     025A  2A7F               	goto	l3858
  4854     025B                     u2280:
  4855     025B                     l3840:
  4856                           
  4857                           ;main.c: 59:         PWM3_LoadDutyValue(0);
  4858     025B  3000               	movlw	0
  4859     025C  0021               	movlb	1	; select bank1
  4860     025D  00B0               	movwf	PWM3_LoadDutyValue@dutyValue^(0+128)
  4861     025E  00B1               	movwf	(PWM3_LoadDutyValue@dutyValue+1)^(0+128)
  4862     025F  3185  2545  3182   	fcall	_PWM3_LoadDutyValue
  4863                           
  4864                           ;main.c: 60:     } else{
  4865     0262  2A93               	goto	l837
  4866     0263                     l828:	
  4867                           ;main.c: 66:                 do { LATAbits.LATA7 = 1; } while(0);
  4868                           
  4869     0263  0022               	movlb	2	; select bank2
  4870     0264  178C               	bsf	12,7	;volatile
  4871     0265                     l3844:
  4872                           
  4873                           ;main.c: 67:                 if(currentFloor == 4){
  4874     0265  3004               	movlw	4
  4875     0266  0020               	movlb	0	; select bank0
  4876     0267  0666               	xorwf	_currentFloor,w
  4877     0268  1D03               	btfss	3,2
  4878     0269  2A6B               	goto	u2291
  4879     026A  2A6C               	goto	u2290
  4880     026B                     u2291:
  4881     026B  2A6D               	goto	l3848
  4882     026C                     u2290:
  4883     026C  2A5B               	goto	l3840
  4884     026D                     l3848:
  4885                           
  4886                           ;main.c: 70:                     PWM3_LoadDutyValue(409);
  4887     026D  3099               	movlw	153
  4888     026E  0021               	movlb	1	; select bank1
  4889     026F  00B0               	movwf	PWM3_LoadDutyValue@dutyValue^(0+128)
  4890     0270  3001               	movlw	1
  4891     0271  00B1               	movwf	(PWM3_LoadDutyValue@dutyValue^(0+128)+1)
  4892     0272  3185  2545  3182   	fcall	_PWM3_LoadDutyValue
  4893     0275  2A93               	goto	l837
  4894     0276                     l833:	
  4895                           ;main.c: 74:                 do { LATAbits.LATA7 = 0; } while(0);
  4896                           
  4897     0276  0022               	movlb	2	; select bank2
  4898     0277  138C               	bcf	12,7	;volatile
  4899     0278                     l3850:
  4900                           
  4901                           ;main.c: 75:                 if(currentFloor == 1){
  4902     0278  0020               	movlb	0	; select bank0
  4903     0279  0366               	decf	_currentFloor,w
  4904     027A  1D03               	btfss	3,2
  4905     027B  2A7D               	goto	u2301
  4906     027C  2A7E               	goto	u2300
  4907     027D                     u2301:
  4908     027D  2A6D               	goto	l3848
  4909     027E                     u2300:
  4910     027E  2A5B               	goto	l3840
  4911     027F                     l3858:
  4912     027F  0851               	movf	_motorState,w
  4913     0280  0021               	movlb	1	; select bank1
  4914     0281  00B4               	movwf	??_sendMotor^(0+128)
  4915     0282  01B5               	clrf	(??_sendMotor^(0+128)+1)
  4916                           
  4917                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4918                           ; Switch size 1, requested type "simple"
  4919                           ; Number of cases is 1, Range of values is 0 to 0
  4920                           ; switch strategies available:
  4921                           ; Name         Instructions Cycles
  4922                           ; simple_byte            4     3 (average)
  4923                           ; direct_byte            8     6 (fixed)
  4924                           ; jumptable            260     6 (fixed)
  4925                           ;	Chosen strategy is simple_byte
  4926     0283  0835               	movf	(??_sendMotor+1)^(0+128),w
  4927     0284  3A00               	xorlw	0	; case 0
  4928     0285  1903               	skipnz
  4929     0286  2A88               	goto	l4030
  4930     0287  2A93               	goto	l837
  4931     0288                     l4030:
  4932                           
  4933                           ; Switch size 1, requested type "simple"
  4934                           ; Number of cases is 3, Range of values is 0 to 2
  4935                           ; switch strategies available:
  4936                           ; Name         Instructions Cycles
  4937                           ; simple_byte           10     6 (average)
  4938                           ; direct_byte           12     6 (fixed)
  4939                           ; jumptable            260     6 (fixed)
  4940                           ;	Chosen strategy is simple_byte
  4941     0288  0834               	movf	??_sendMotor^(0+128),w
  4942     0289  3A00               	xorlw	0	; case 0
  4943     028A  1903               	skipnz
  4944     028B  2A5B               	goto	l3840
  4945     028C  3A01               	xorlw	1	; case 1
  4946     028D  1903               	skipnz
  4947     028E  2A63               	goto	l828
  4948     028F  3A03               	xorlw	3	; case 2
  4949     0290  1903               	skipnz
  4950     0291  2A76               	goto	l833
  4951     0292  2A93               	goto	l837
  4952     0293                     l837:
  4953     0293  0008               	return
  4954     0294                     __end_of_sendMotor:
  4955                           
  4956                           	psect	text3
  4957     0545                     __ptext3:	
  4958 ;; *************** function _PWM3_LoadDutyValue *****************
  4959 ;; Defined at:
  4960 ;;		line 82 in file "mcc_generated_files/pwm3.c"
  4961 ;; Parameters:    Size  Location     Type
  4962 ;;  dutyValue       2    0[BANK1 ] unsigned short 
  4963 ;; Auto vars:     Size  Location     Type
  4964 ;;		None
  4965 ;; Return value:  Size  Location     Type
  4966 ;;                  1    wreg      void 
  4967 ;; Registers used:
  4968 ;;		wreg, status,2, status,0
  4969 ;; Tracked objects:
  4970 ;;		On entry : 0/0
  4971 ;;		On exit  : 0/0
  4972 ;;		Unchanged: 0/0
  4973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4974 ;;      Params:         0       0       2       0       0       0
  4975 ;;      Locals:         0       0       0       0       0       0
  4976 ;;      Temps:          0       0       2       0       0       0
  4977 ;;      Totals:         0       0       4       0       0       0
  4978 ;;Total ram usage:        4 bytes
  4979 ;; Hardware stack levels used: 1
  4980 ;; Hardware stack levels required when called: 8
  4981 ;; This function calls:
  4982 ;;		Nothing
  4983 ;; This function is called by:
  4984 ;;		_sendMotor
  4985 ;; This function uses a non-reentrant model
  4986 ;;
  4987                           
  4988     0545                     _PWM3_LoadDutyValue:	
  4989                           ;psect for function _PWM3_LoadDutyValue
  4990                           
  4991     0545                     l3634:	
  4992                           ;incstack = 0
  4993                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2+status,0]
  4994                           
  4995                           
  4996                           ;mcc_generated_files/pwm3.c: 82: void PWM3_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm3.c: 83: {;mcc_generated_files/pwm3.c: 85:     CCPR3L = ((dutyValue & 0x03FC
      +                          )>>2);
  4997     0545  0021               	movlb	1	; select bank1
  4998     0546  0831               	movf	(PWM3_LoadDutyValue@dutyValue+1)^(0+128),w
  4999     0547  00B3               	movwf	(??_PWM3_LoadDutyValue^(0+128)+1)
  5000     0548  0830               	movf	PWM3_LoadDutyValue@dutyValue^(0+128),w
  5001     0549  00B2               	movwf	??_PWM3_LoadDutyValue^(0+128)
  5002     054A  36B3               	lsrf	(??_PWM3_LoadDutyValue^(0+128)+1),f
  5003     054B  0CB2               	rrf	??_PWM3_LoadDutyValue^(0+128),f
  5004     054C  36B3               	lsrf	(??_PWM3_LoadDutyValue^(0+128)+1),f
  5005     054D  0CB2               	rrf	??_PWM3_LoadDutyValue^(0+128),f
  5006     054E  0832               	movf	??_PWM3_LoadDutyValue^(0+128),w
  5007     054F  0026               	movlb	6	; select bank6
  5008     0550  0091               	movwf	17	;volatile
  5009                           
  5010                           ;mcc_generated_files/pwm3.c: 88:     CCP3CON = ((uint8_t)(CCP3CON & 0xCF) | ((dutyValue 
      +                          & 0x0003)<<4));
  5011     0551  0021               	movlb	1	; select bank1
  5012     0552  0830               	movf	PWM3_LoadDutyValue@dutyValue^(0+128),w
  5013     0553  3903               	andlw	3
  5014     0554  00B2               	movwf	??_PWM3_LoadDutyValue^(0+128)
  5015     0555  3004               	movlw	4
  5016     0556                     u2245:
  5017     0556  35B2               	lslf	??_PWM3_LoadDutyValue^(0+128),f
  5018     0557  0B89               	decfsz	9,f
  5019     0558  2D56               	goto	u2245
  5020     0559  0026               	movlb	6	; select bank6
  5021     055A  0813               	movf	19,w	;volatile
  5022     055B  39CF               	andlw	207
  5023     055C  0021               	movlb	1	; select bank1
  5024     055D  0432               	iorwf	??_PWM3_LoadDutyValue^(0+128),w
  5025     055E  0026               	movlb	6	; select bank6
  5026     055F  0093               	movwf	19	;volatile
  5027     0560                     l75:
  5028     0560  0008               	return
  5029     0561                     __end_of_PWM3_LoadDutyValue:
  5030                           
  5031                           	psect	text4
  5032     0F4E                     __ptext4:	
  5033 ;; *************** function _TMR4_StartTimer *****************
  5034 ;; Defined at:
  5035 ;;		line 87 in file "mcc_generated_files/tmr4.c"
  5036 ;; Parameters:    Size  Location     Type
  5037 ;;		None
  5038 ;; Auto vars:     Size  Location     Type
  5039 ;;		None
  5040 ;; Return value:  Size  Location     Type
  5041 ;;                  1    wreg      void 
  5042 ;; Registers used:
  5043 ;;		None
  5044 ;; Tracked objects:
  5045 ;;		On entry : 0/0
  5046 ;;		On exit  : 0/0
  5047 ;;		Unchanged: 0/0
  5048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5049 ;;      Params:         0       0       0       0       0       0
  5050 ;;      Locals:         0       0       0       0       0       0
  5051 ;;      Temps:          0       0       0       0       0       0
  5052 ;;      Totals:         0       0       0       0       0       0
  5053 ;;Total ram usage:        0 bytes
  5054 ;; Hardware stack levels used: 1
  5055 ;; Hardware stack levels required when called: 8
  5056 ;; This function calls:
  5057 ;;		Nothing
  5058 ;; This function is called by:
  5059 ;;		_updateMotor
  5060 ;; This function uses a non-reentrant model
  5061 ;;
  5062                           
  5063     0F4E                     _TMR4_StartTimer:	
  5064                           ;psect for function _TMR4_StartTimer
  5065                           
  5066     0F4E                     l3834:	
  5067                           ;incstack = 0
  5068                           ; Regs used in _TMR4_StartTimer: []
  5069                           
  5070                           
  5071                           ;mcc_generated_files/tmr4.c: 90:     T4CONbits.TMR4ON = 1;
  5072     0F4E  0028               	movlb	8	; select bank8
  5073     0F4F  1517               	bsf	23,2	;volatile
  5074     0F50                     l686:
  5075     0F50  0008               	return
  5076     0F51                     __end_of_TMR4_StartTimer:
  5077                           
  5078                           	psect	text5
  5079     0471                     __ptext5:	
  5080 ;; *************** function _updateMatrix *****************
  5081 ;; Defined at:
  5082 ;;		line 104 in file "main.c"
  5083 ;; Parameters:    Size  Location     Type
  5084 ;;		None
  5085 ;; Auto vars:     Size  Location     Type
  5086 ;;  direction       1    6[BANK1 ] unsigned char 
  5087 ;; Return value:  Size  Location     Type
  5088 ;;                  1    wreg      void 
  5089 ;; Registers used:
  5090 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5091 ;; Tracked objects:
  5092 ;;		On entry : 0/0
  5093 ;;		On exit  : 0/0
  5094 ;;		Unchanged: 0/0
  5095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5096 ;;      Params:         0       0       0       0       0       0
  5097 ;;      Locals:         0       0       1       0       0       0
  5098 ;;      Temps:          0       0       0       0       0       0
  5099 ;;      Totals:         0       0       1       0       0       0
  5100 ;;Total ram usage:        1 bytes
  5101 ;; Hardware stack levels used: 1
  5102 ;; Hardware stack levels required when called: 11
  5103 ;; This function calls:
  5104 ;;		_sendMatrix
  5105 ;;		_setMatrix
  5106 ;; This function is called by:
  5107 ;;		_main
  5108 ;; This function uses a non-reentrant model
  5109 ;;
  5110                           
  5111     0471                     _updateMatrix:	
  5112                           ;psect for function _updateMatrix
  5113                           
  5114     0471                     l3940:	
  5115                           ;incstack = 0
  5116                           ; Regs used in _updateMatrix: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5117                           
  5118                           
  5119                           ;main.c: 105:     setMatrix(0, currentFloor);
  5120     0471  0020               	movlb	0	; select bank0
  5121     0472  0866               	movf	_currentFloor,w
  5122     0473  0021               	movlb	1	; select bank1
  5123     0474  00B1               	movwf	setMatrix@val^(0+128)
  5124     0475  3000               	movlw	0
  5125     0476  3184  2448  3184   	fcall	_setMatrix
  5126     0479                     l3942:
  5127     0479                     l3944:
  5128                           
  5129                           ;main.c: 108:     if(motorState==0){
  5130     0479  0020               	movlb	0	; select bank0
  5131     047A  0851               	movf	_motorState,w
  5132     047B  1D03               	btfss	3,2
  5133     047C  2C7E               	goto	u2401
  5134     047D  2C7F               	goto	u2400
  5135     047E                     u2401:
  5136     047E  2C83               	goto	l3948
  5137     047F                     u2400:
  5138     047F                     l3946:
  5139                           
  5140                           ;main.c: 109:         direction = 12;
  5141     047F  300C               	movlw	12
  5142     0480  0021               	movlb	1	; select bank1
  5143     0481  00B6               	movwf	updateMatrix@direction^(0+128)
  5144                           
  5145                           ;main.c: 110:     } else if(motorState==1){
  5146     0482  2C8F               	goto	l3954
  5147     0483                     l3948:
  5148     0483  0351               	decf	_motorState,w
  5149     0484  1D03               	btfss	3,2
  5150     0485  2C87               	goto	u2411
  5151     0486  2C88               	goto	u2410
  5152     0487                     u2411:
  5153     0487  2C8C               	goto	l3952
  5154     0488                     u2410:
  5155     0488                     l3950:
  5156                           
  5157                           ;main.c: 111:         direction = 10;
  5158     0488  300A               	movlw	10
  5159     0489  0021               	movlb	1	; select bank1
  5160     048A  00B6               	movwf	updateMatrix@direction^(0+128)
  5161                           
  5162                           ;main.c: 112:     } else{
  5163     048B  2C8F               	goto	l3954
  5164     048C                     l3952:
  5165                           
  5166                           ;main.c: 113:         direction = 11;
  5167     048C  300B               	movlw	11
  5168     048D  0021               	movlb	1	; select bank1
  5169     048E  00B6               	movwf	updateMatrix@direction^(0+128)
  5170     048F                     l3954:
  5171                           
  5172                           ;main.c: 116:     setMatrix(4, direction);
  5173     048F  0836               	movf	updateMatrix@direction^(0+128),w
  5174     0490  00B1               	movwf	setMatrix@val^(0+128)
  5175     0491  3004               	movlw	4
  5176     0492  3184  2448  3184   	fcall	_setMatrix
  5177     0495                     l3956:
  5178                           
  5179                           ;main.c: 117:     sendMatrix();
  5180     0495  3185  2561  3184   	fcall	_sendMatrix
  5181     0498                     l853:
  5182     0498  0008               	return
  5183     0499                     __end_of_updateMatrix:
  5184                           
  5185                           	psect	text6
  5186     0448                     __ptext6:	
  5187 ;; *************** function _setMatrix *****************
  5188 ;; Defined at:
  5189 ;;		line 105 in file "ledMatrix.c"
  5190 ;; Parameters:    Size  Location     Type
  5191 ;;  pos             1    wreg     unsigned char 
  5192 ;;  val             1    1[BANK1 ] unsigned char 
  5193 ;; Auto vars:     Size  Location     Type
  5194 ;;  pos             1    3[BANK1 ] unsigned char 
  5195 ;;  i               1    5[BANK1 ] unsigned char 
  5196 ;;  eeAdd           1    4[BANK1 ] unsigned char 
  5197 ;; Return value:  Size  Location     Type
  5198 ;;                  1    wreg      void 
  5199 ;; Registers used:
  5200 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5201 ;; Tracked objects:
  5202 ;;		On entry : 0/0
  5203 ;;		On exit  : 0/0
  5204 ;;		Unchanged: 0/0
  5205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5206 ;;      Params:         0       0       1       0       0       0
  5207 ;;      Locals:         0       0       3       0       0       0
  5208 ;;      Temps:          0       0       1       0       0       0
  5209 ;;      Totals:         0       0       5       0       0       0
  5210 ;;Total ram usage:        5 bytes
  5211 ;; Hardware stack levels used: 1
  5212 ;; Hardware stack levels required when called: 9
  5213 ;; This function calls:
  5214 ;;		_DATAEE_ReadByte
  5215 ;; This function is called by:
  5216 ;;		_updateMatrix
  5217 ;; This function uses a non-reentrant model
  5218 ;;
  5219                           
  5220     0448                     _setMatrix:	
  5221                           ;psect for function _setMatrix
  5222                           
  5223                           
  5224                           ;incstack = 0
  5225                           ; Regs used in _setMatrix: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5226                           ;setMatrix@pos stored from wreg
  5227     0448  0021               	movlb	1	; select bank1
  5228     0449  00B3               	movwf	setMatrix@pos^(0+128)
  5229     044A                     l3864:
  5230                           
  5231                           ;ledMatrix.c: 109:  uint8_t eeAdd = val<<2;
  5232     044A  0831               	movf	setMatrix@val^(0+128),w
  5233     044B  00B2               	movwf	??_setMatrix^(0+128)
  5234     044C  3001               	movlw	1
  5235     044D                     u2315:
  5236     044D  35B2               	lslf	??_setMatrix^(0+128),f
  5237     044E  3EFF               	addlw	-1
  5238     044F  1D03               	skipz
  5239     0450  2C4D               	goto	u2315
  5240     0451  3532               	lslf	??_setMatrix^(0+128),w
  5241     0452  00B4               	movwf	setMatrix@eeAdd^(0+128)
  5242     0453                     l3866:
  5243                           
  5244                           ;ledMatrix.c: 110:  for(uint8_t i=0;i<4;i++){
  5245     0453  01B5               	clrf	setMatrix@i^(0+128)
  5246     0454                     l3872:
  5247                           
  5248                           ;ledMatrix.c: 111:   matrix[pos++]=DATAEE_ReadByte(eeAdd++);
  5249     0454  0833               	movf	setMatrix@pos^(0+128),w
  5250     0455  3E39               	addlw	(low (_matrix| 0))& (0+255)
  5251     0456  0086               	movwf	6
  5252     0457  0187               	clrf	7
  5253     0458  0834               	movf	setMatrix@eeAdd^(0+128),w
  5254     0459  3187  277E  3184   	fcall	_DATAEE_ReadByte
  5255     045C  0081               	movwf	1
  5256     045D                     l3874:
  5257     045D  3001               	movlw	1
  5258     045E  0021               	movlb	1	; select bank1
  5259     045F  00B2               	movwf	??_setMatrix^(0+128)
  5260     0460  0832               	movf	??_setMatrix^(0+128),w
  5261     0461  07B4               	addwf	setMatrix@eeAdd^(0+128),f
  5262     0462                     l3876:
  5263     0462  3001               	movlw	1
  5264     0463  00B2               	movwf	??_setMatrix^(0+128)
  5265     0464  0832               	movf	??_setMatrix^(0+128),w
  5266     0465  07B3               	addwf	setMatrix@pos^(0+128),f
  5267     0466                     l3878:
  5268                           
  5269                           ;ledMatrix.c: 112:     }
  5270     0466  3001               	movlw	1
  5271     0467  00B2               	movwf	??_setMatrix^(0+128)
  5272     0468  0832               	movf	??_setMatrix^(0+128),w
  5273     0469  07B5               	addwf	setMatrix@i^(0+128),f
  5274     046A                     l3880:
  5275     046A  3004               	movlw	4
  5276     046B  0235               	subwf	setMatrix@i^(0+128),w
  5277     046C  1C03               	skipc
  5278     046D  2C6F               	goto	u2321
  5279     046E  2C70               	goto	u2320
  5280     046F                     u2321:
  5281     046F  2C54               	goto	l3872
  5282     0470                     u2320:
  5283     0470                     l937:
  5284     0470  0008               	return
  5285     0471                     __end_of_setMatrix:
  5286                           
  5287                           	psect	text7
  5288     077E                     __ptext7:	
  5289 ;; *************** function _DATAEE_ReadByte *****************
  5290 ;; Defined at:
  5291 ;;		line 211 in file "mcc_generated_files/memory.c"
  5292 ;; Parameters:    Size  Location     Type
  5293 ;;  bAdd            1    wreg     unsigned char 
  5294 ;; Auto vars:     Size  Location     Type
  5295 ;;  bAdd            1    0[BANK1 ] unsigned char 
  5296 ;; Return value:  Size  Location     Type
  5297 ;;                  1    wreg      unsigned char 
  5298 ;; Registers used:
  5299 ;;		wreg
  5300 ;; Tracked objects:
  5301 ;;		On entry : 0/0
  5302 ;;		On exit  : 0/0
  5303 ;;		Unchanged: 0/0
  5304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5305 ;;      Params:         0       0       0       0       0       0
  5306 ;;      Locals:         0       0       1       0       0       0
  5307 ;;      Temps:          0       0       0       0       0       0
  5308 ;;      Totals:         0       0       1       0       0       0
  5309 ;;Total ram usage:        1 bytes
  5310 ;; Hardware stack levels used: 1
  5311 ;; Hardware stack levels required when called: 8
  5312 ;; This function calls:
  5313 ;;		Nothing
  5314 ;; This function is called by:
  5315 ;;		_setMatrix
  5316 ;; This function uses a non-reentrant model
  5317 ;;
  5318                           
  5319     077E                     _DATAEE_ReadByte:	
  5320                           ;psect for function _DATAEE_ReadByte
  5321                           
  5322                           
  5323                           ;incstack = 0
  5324                           ; Regs used in _DATAEE_ReadByte: [wreg]
  5325                           ;DATAEE_ReadByte@bAdd stored from wreg
  5326     077E  0021               	movlb	1	; select bank1
  5327     077F  00B0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  5328     0780                     l3650:
  5329                           
  5330                           ;mcc_generated_files/memory.c: 211: uint8_t DATAEE_ReadByte(uint8_t bAdd);mcc_generated_
      +                          files/memory.c: 212: {;mcc_generated_files/memory.c: 213:     EEADRL = (uint8_t)(bAdd & 
      +                          0x0ff);
  5331     0780  0830               	movf	DATAEE_ReadByte@bAdd^(0+128),w
  5332     0781  0023               	movlb	3	; select bank3
  5333     0782  0091               	movwf	17	;volatile
  5334     0783                     l3652:
  5335                           
  5336                           ;mcc_generated_files/memory.c: 214:     EECON1bits.CFGS = 0;
  5337     0783  1315               	bcf	21,6	;volsfr
  5338     0784                     l3654:
  5339                           
  5340                           ;mcc_generated_files/memory.c: 215:     EECON1bits.EEPGD = 0;
  5341     0784  1395               	bcf	21,7	;volsfr
  5342     0785                     l3656:
  5343                           
  5344                           ;mcc_generated_files/memory.c: 216:     EECON1bits.RD = 1;
  5345     0785  1415               	bsf	21,0	;volsfr
  5346     0786                     l3658:
  5347                           
  5348                           ;mcc_generated_files/memory.c: 217:     __nop();
  5349     0786  0000               	nop
  5350     0787                     l3660:
  5351                           
  5352                           ;mcc_generated_files/memory.c: 218:     __nop();
  5353     0787  0000               	nop
  5354                           
  5355                           ;mcc_generated_files/memory.c: 220:     return (EEDATL);
  5356     0788  0023               	movlb	3	; select bank3
  5357     0789  0813               	movf	19,w	;volatile
  5358     078A                     l568:
  5359     078A  0008               	return
  5360     078B                     __end_of_DATAEE_ReadByte:
  5361                           
  5362                           	psect	text8
  5363     0561                     __ptext8:	
  5364 ;; *************** function _sendMatrix *****************
  5365 ;; Defined at:
  5366 ;;		line 115 in file "ledMatrix.c"
  5367 ;; Parameters:    Size  Location     Type
  5368 ;;		None
  5369 ;; Auto vars:     Size  Location     Type
  5370 ;;  i               1    4[BANK1 ] unsigned char 
  5371 ;; Return value:  Size  Location     Type
  5372 ;;                  1    wreg      void 
  5373 ;; Registers used:
  5374 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5375 ;; Tracked objects:
  5376 ;;		On entry : 0/0
  5377 ;;		On exit  : 0/0
  5378 ;;		Unchanged: 0/0
  5379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5380 ;;      Params:         0       0       0       0       0       0
  5381 ;;      Locals:         0       0       1       0       0       0
  5382 ;;      Temps:          0       0       1       0       0       0
  5383 ;;      Totals:         0       0       2       0       0       0
  5384 ;;Total ram usage:        2 bytes
  5385 ;; Hardware stack levels used: 1
  5386 ;; Hardware stack levels required when called: 10
  5387 ;; This function calls:
  5388 ;;		_txMAX7219
  5389 ;; This function is called by:
  5390 ;;		_updateMatrix
  5391 ;; This function uses a non-reentrant model
  5392 ;;
  5393                           
  5394     0561                     _sendMatrix:	
  5395                           ;psect for function _sendMatrix
  5396                           
  5397     0561                     l3882:	
  5398                           ;incstack = 0
  5399                           ; Regs used in _sendMatrix: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5400                           
  5401                           
  5402                           ;ledMatrix.c: 116:     for(uint8_t i=0;i<8;i++){
  5403     0561  0021               	movlb	1	; select bank1
  5404     0562  01B4               	clrf	sendMatrix@i^(0+128)
  5405     0563                     l3888:
  5406                           
  5407                           ;ledMatrix.c: 118:         txMAX7219(i+1,matrix[7-i]);
  5408     0563  3040               	movlw	(low ((_matrix| 0+7)))& (0+255)
  5409     0564  00B3               	movwf	??_sendMatrix^(0+128)
  5410     0565  0834               	movf	sendMatrix@i^(0+128),w
  5411     0566  02B3               	subwf	??_sendMatrix^(0+128),f
  5412     0567  0833               	movf	??_sendMatrix^(0+128),w
  5413     0568  0086               	movwf	6
  5414     0569  0187               	clrf	7
  5415     056A  0801               	movf	1,w
  5416     056B  00B1               	movwf	txMAX7219@dat0^(0+128)
  5417     056C  0834               	movf	sendMatrix@i^(0+128),w
  5418     056D  3E01               	addlw	1
  5419     056E  3185  2528  3185   	fcall	_txMAX7219
  5420     0571                     l3890:
  5421                           
  5422                           ;ledMatrix.c: 122:     }
  5423     0571  3001               	movlw	1
  5424     0572  0021               	movlb	1	; select bank1
  5425     0573  00B3               	movwf	??_sendMatrix^(0+128)
  5426     0574  0833               	movf	??_sendMatrix^(0+128),w
  5427     0575  07B4               	addwf	sendMatrix@i^(0+128),f
  5428     0576                     l3892:
  5429     0576  3008               	movlw	8
  5430     0577  0234               	subwf	sendMatrix@i^(0+128),w
  5431     0578  1C03               	skipc
  5432     0579  2D7B               	goto	u2331
  5433     057A  2D7C               	goto	u2330
  5434     057B                     u2331:
  5435     057B  2D63               	goto	l3888
  5436     057C                     u2330:
  5437     057C                     l942:
  5438     057C  0008               	return
  5439     057D                     __end_of_sendMatrix:
  5440                           
  5441                           	psect	text9
  5442     0294                     __ptext9:	
  5443 ;; *************** function _initMAX7219 *****************
  5444 ;; Defined at:
  5445 ;;		line 85 in file "ledMatrix.c"
  5446 ;; Parameters:    Size  Location     Type
  5447 ;;		None
  5448 ;; Auto vars:     Size  Location     Type
  5449 ;;		None
  5450 ;; Return value:  Size  Location     Type
  5451 ;;                  1    wreg      void 
  5452 ;; Registers used:
  5453 ;;		wreg, status,2, status,0, pclath, cstack
  5454 ;; Tracked objects:
  5455 ;;		On entry : 0/0
  5456 ;;		On exit  : 0/0
  5457 ;;		Unchanged: 0/0
  5458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5459 ;;      Params:         0       0       0       0       0       0
  5460 ;;      Locals:         0       0       0       0       0       0
  5461 ;;      Temps:          0       0       2       0       0       0
  5462 ;;      Totals:         0       0       2       0       0       0
  5463 ;;Total ram usage:        2 bytes
  5464 ;; Hardware stack levels used: 1
  5465 ;; Hardware stack levels required when called: 10
  5466 ;; This function calls:
  5467 ;;		_txMAX7219
  5468 ;; This function is called by:
  5469 ;;		_main
  5470 ;; This function uses a non-reentrant model
  5471 ;;
  5472                           
  5473     0294                     _initMAX7219:	
  5474                           ;psect for function _initMAX7219
  5475                           
  5476     0294                     l3958:	
  5477                           ;incstack = 0
  5478                           ; Regs used in _initMAX7219: [wreg+status,2+status,0+pclath+cstack]
  5479                           
  5480                           
  5481                           ;ledMatrix.c: 87:     txMAX7219(0x09,0x00);
  5482     0294  0021               	movlb	1	; select bank1
  5483     0295  01B1               	clrf	txMAX7219@dat0^(0+128)
  5484     0296  3009               	movlw	9
  5485     0297  3185  2528  3182   	fcall	_txMAX7219
  5486                           
  5487                           ;ledMatrix.c: 89:     txMAX7219(0x0A,0x00);
  5488     029A  0021               	movlb	1	; select bank1
  5489     029B  01B1               	clrf	txMAX7219@dat0^(0+128)
  5490     029C  300A               	movlw	10
  5491     029D  3185  2528  3182   	fcall	_txMAX7219
  5492                           
  5493                           ;ledMatrix.c: 91:     txMAX7219(0x0C,0x00);
  5494     02A0  0021               	movlb	1	; select bank1
  5495     02A1  01B1               	clrf	txMAX7219@dat0^(0+128)
  5496     02A2  300C               	movlw	12
  5497     02A3  3185  2528  3182   	fcall	_txMAX7219
  5498                           
  5499                           ;ledMatrix.c: 93:     txMAX7219(0x0B,0x07);
  5500     02A6  3007               	movlw	7
  5501     02A7  0021               	movlb	1	; select bank1
  5502     02A8  00B1               	movwf	txMAX7219@dat0^(0+128)
  5503     02A9  300B               	movlw	11
  5504     02AA  3185  2528  3182   	fcall	_txMAX7219
  5505                           
  5506                           ;ledMatrix.c: 95:     txMAX7219(0x0C,0x01);
  5507     02AD  0021               	movlb	1	; select bank1
  5508     02AE  01B1               	clrf	txMAX7219@dat0^(0+128)
  5509     02AF  0AB1               	incf	txMAX7219@dat0^(0+128),f
  5510     02B0  300C               	movlw	12
  5511     02B1  3185  2528  3182   	fcall	_txMAX7219
  5512                           
  5513                           ;ledMatrix.c: 97:     txMAX7219(0x0F,0x01);
  5514     02B4  0021               	movlb	1	; select bank1
  5515     02B5  01B1               	clrf	txMAX7219@dat0^(0+128)
  5516     02B6  0AB1               	incf	txMAX7219@dat0^(0+128),f
  5517     02B7  300F               	movlw	15
  5518     02B8  3185  2528  3182   	fcall	_txMAX7219
  5519     02BB                     l3960:
  5520                           
  5521                           ;ledMatrix.c: 98:     _delay((unsigned long)((1000)*(8000000/4000.0)));
  5522     02BB  300B               	movlw	11
  5523     02BC  0021               	movlb	1	; select bank1
  5524     02BD  00B4               	movwf	(??_initMAX7219^(0+128)+1)
  5525     02BE  3026               	movlw	38
  5526     02BF  00B3               	movwf	??_initMAX7219^(0+128)
  5527     02C0  305D               	movlw	93
  5528     02C1                     u2457:
  5529     02C1  0B89               	decfsz	9,f
  5530     02C2  2AC1               	goto	u2457
  5531     02C3  0BB3               	decfsz	??_initMAX7219^(0+128),f
  5532     02C4  2AC1               	goto	u2457
  5533     02C5  0BB4               	decfsz	(??_initMAX7219^(0+128)+1),f
  5534     02C6  2AC1               	goto	u2457
  5535     02C7  3200               	nop2
  5536     02C8                     l3962:
  5537                           
  5538                           ;ledMatrix.c: 100:     txMAX7219(0x0F,0x00);
  5539     02C8  0021               	movlb	1	; select bank1
  5540     02C9  01B1               	clrf	txMAX7219@dat0^(0+128)
  5541     02CA  300F               	movlw	15
  5542     02CB  3185  2528  3182   	fcall	_txMAX7219
  5543     02CE                     l3964:
  5544                           
  5545                           ;ledMatrix.c: 102:     txMAX7219(0x0C,0x01);
  5546     02CE  0021               	movlb	1	; select bank1
  5547     02CF  01B1               	clrf	txMAX7219@dat0^(0+128)
  5548     02D0  0AB1               	incf	txMAX7219@dat0^(0+128),f
  5549     02D1  300C               	movlw	12
  5550     02D2  3185  2528  3182   	fcall	_txMAX7219
  5551     02D5                     l932:
  5552     02D5  0008               	return
  5553     02D6                     __end_of_initMAX7219:
  5554                           
  5555                           	psect	text10
  5556     0528                     __ptext10:	
  5557 ;; *************** function _txMAX7219 *****************
  5558 ;; Defined at:
  5559 ;;		line 74 in file "ledMatrix.c"
  5560 ;; Parameters:    Size  Location     Type
  5561 ;;  addr0           1    wreg     unsigned char 
  5562 ;;  dat0            1    1[BANK1 ] unsigned char 
  5563 ;; Auto vars:     Size  Location     Type
  5564 ;;  addr0           1    2[BANK1 ] unsigned char 
  5565 ;; Return value:  Size  Location     Type
  5566 ;;                  1    wreg      void 
  5567 ;; Registers used:
  5568 ;;		wreg, status,2, status,0, pclath, cstack
  5569 ;; Tracked objects:
  5570 ;;		On entry : 0/0
  5571 ;;		On exit  : 0/0
  5572 ;;		Unchanged: 0/0
  5573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5574 ;;      Params:         0       0       1       0       0       0
  5575 ;;      Locals:         0       0       1       0       0       0
  5576 ;;      Temps:          0       0       0       0       0       0
  5577 ;;      Totals:         0       0       2       0       0       0
  5578 ;;Total ram usage:        2 bytes
  5579 ;; Hardware stack levels used: 1
  5580 ;; Hardware stack levels required when called: 9
  5581 ;; This function calls:
  5582 ;;		_SPI1_WriteByte
  5583 ;; This function is called by:
  5584 ;;		_initMAX7219
  5585 ;;		_sendMatrix
  5586 ;; This function uses a non-reentrant model
  5587 ;;
  5588                           
  5589     0528                     _txMAX7219:	
  5590                           ;psect for function _txMAX7219
  5591                           
  5592                           
  5593                           ;incstack = 0
  5594                           ; Regs used in _txMAX7219: [wreg+status,2+status,0+pclath+cstack]
  5595                           ;txMAX7219@addr0 stored from wreg
  5596     0528  0021               	movlb	1	; select bank1
  5597     0529  00B2               	movwf	txMAX7219@addr0^(0+128)
  5598     052A                     l919:	
  5599                           ;ledMatrix.c: 75:     do { LATBbits.LATB1 = 0; } while(0);
  5600                           
  5601     052A  0022               	movlb	2	; select bank2
  5602     052B  108D               	bcf	13,1	;volatile
  5603     052C                     l3668:
  5604                           
  5605                           ;ledMatrix.c: 76:     SPI1_WriteByte(addr0);
  5606     052C  0021               	movlb	1	; select bank1
  5607     052D  0832               	movf	txMAX7219@addr0^(0+128),w
  5608     052E  318F  277A  3185   	fcall	_SPI1_WriteByte
  5609     0531                     l921:	
  5610                           ;ledMatrix.c: 77:     while(!PIR1bits.SSP1IF);
  5611                           
  5612     0531  0020               	movlb	0	; select bank0
  5613     0532  1D91               	btfss	17,3	;volatile
  5614     0533  2D35               	goto	u2251
  5615     0534  2D36               	goto	u2250
  5616     0535                     u2251:
  5617     0535  2D31               	goto	l921
  5618     0536                     u2250:
  5619     0536                     l923:
  5620                           
  5621                           ;ledMatrix.c: 78:     PIR1bits.SSP1IF = 0;
  5622     0536  1191               	bcf	17,3	;volatile
  5623     0537                     l3670:
  5624                           
  5625                           ;ledMatrix.c: 79:     SPI1_WriteByte(dat0);
  5626     0537  0021               	movlb	1	; select bank1
  5627     0538  0831               	movf	txMAX7219@dat0^(0+128),w
  5628     0539  318F  277A  3185   	fcall	_SPI1_WriteByte
  5629     053C                     l924:	
  5630                           ;ledMatrix.c: 80:     while(!PIR1bits.SSP1IF);
  5631                           
  5632     053C  0020               	movlb	0	; select bank0
  5633     053D  1D91               	btfss	17,3	;volatile
  5634     053E  2D40               	goto	u2261
  5635     053F  2D41               	goto	u2260
  5636     0540                     u2261:
  5637     0540  2D3C               	goto	l924
  5638     0541                     u2260:
  5639     0541                     l926:
  5640                           
  5641                           ;ledMatrix.c: 81:     PIR1bits.SSP1IF = 0;
  5642     0541  1191               	bcf	17,3	;volatile
  5643     0542                     l927:	
  5644                           ;ledMatrix.c: 82:     do { LATBbits.LATB1 = 1; } while(0);
  5645                           
  5646     0542  0022               	movlb	2	; select bank2
  5647     0543  148D               	bsf	13,1	;volatile
  5648     0544                     l929:
  5649     0544  0008               	return
  5650     0545                     __end_of_txMAX7219:
  5651                           
  5652                           	psect	text11
  5653     0F7A                     __ptext11:	
  5654 ;; *************** function _SPI1_WriteByte *****************
  5655 ;; Defined at:
  5656 ;;		line 131 in file "mcc_generated_files/spi1.c"
  5657 ;; Parameters:    Size  Location     Type
  5658 ;;  byte            1    wreg     unsigned char 
  5659 ;; Auto vars:     Size  Location     Type
  5660 ;;  byte            1    0[BANK1 ] unsigned char 
  5661 ;; Return value:  Size  Location     Type
  5662 ;;                  1    wreg      void 
  5663 ;; Registers used:
  5664 ;;		wreg
  5665 ;; Tracked objects:
  5666 ;;		On entry : 0/0
  5667 ;;		On exit  : 0/0
  5668 ;;		Unchanged: 0/0
  5669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5670 ;;      Params:         0       0       0       0       0       0
  5671 ;;      Locals:         0       0       1       0       0       0
  5672 ;;      Temps:          0       0       0       0       0       0
  5673 ;;      Totals:         0       0       1       0       0       0
  5674 ;;Total ram usage:        1 bytes
  5675 ;; Hardware stack levels used: 1
  5676 ;; Hardware stack levels required when called: 8
  5677 ;; This function calls:
  5678 ;;		Nothing
  5679 ;; This function is called by:
  5680 ;;		_txMAX7219
  5681 ;; This function uses a non-reentrant model
  5682 ;;
  5683                           
  5684     0F7A                     _SPI1_WriteByte:	
  5685                           ;psect for function _SPI1_WriteByte
  5686                           
  5687                           
  5688                           ;incstack = 0
  5689                           ; Regs used in _SPI1_WriteByte: [wreg]
  5690                           ;SPI1_WriteByte@byte stored from wreg
  5691     0F7A  0021               	movlb	1	; select bank1
  5692     0F7B  00B0               	movwf	SPI1_WriteByte@byte^(0+128)
  5693     0F7C                     l3632:
  5694                           
  5695                           ;mcc_generated_files/spi1.c: 131: void SPI1_WriteByte(uint8_t byte);mcc_generated_files/
      +                          spi1.c: 132: {;mcc_generated_files/spi1.c: 133:     SSP1BUF = byte;
  5696     0F7C  0830               	movf	SPI1_WriteByte@byte^(0+128),w
  5697     0F7D  0024               	movlb	4	; select bank4
  5698     0F7E  0091               	movwf	17	;volatile
  5699     0F7F                     l58:
  5700     0F7F  0008               	return
  5701     0F80                     __end_of_SPI1_WriteByte:
  5702                           
  5703                           	psect	text12
  5704     0353                     __ptext12:	
  5705 ;; *************** function _SYSTEM_Initialize *****************
  5706 ;; Defined at:
  5707 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5708 ;; Parameters:    Size  Location     Type
  5709 ;;		None
  5710 ;; Auto vars:     Size  Location     Type
  5711 ;;		None
  5712 ;; Return value:  Size  Location     Type
  5713 ;;                  1    wreg      void 
  5714 ;; Registers used:
  5715 ;;		wreg, status,2, status,0, pclath, cstack
  5716 ;; Tracked objects:
  5717 ;;		On entry : 0/0
  5718 ;;		On exit  : 0/0
  5719 ;;		Unchanged: 0/0
  5720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5721 ;;      Params:         0       0       0       0       0       0
  5722 ;;      Locals:         0       0       0       0       0       0
  5723 ;;      Temps:          0       0       0       0       0       0
  5724 ;;      Totals:         0       0       0       0       0       0
  5725 ;;Total ram usage:        0 bytes
  5726 ;; Hardware stack levels used: 1
  5727 ;; Hardware stack levels required when called: 10
  5728 ;; This function calls:
  5729 ;;		_ADC_Initialize
  5730 ;;		_CCP4_Initialize
  5731 ;;		_CMP1_Initialize
  5732 ;;		_CMP2_Initialize
  5733 ;;		_DAC_Initialize
  5734 ;;		_EUSART_Initialize
  5735 ;;		_FVR_Initialize
  5736 ;;		_OSCILLATOR_Initialize
  5737 ;;		_PIN_MANAGER_Initialize
  5738 ;;		_PWM3_Initialize
  5739 ;;		_SPI1_Initialize
  5740 ;;		_TMR0_Initialize
  5741 ;;		_TMR1_Initialize
  5742 ;;		_TMR2_Initialize
  5743 ;;		_TMR4_Initialize
  5744 ;;		_TMR6_Initialize
  5745 ;;		_WDT_Initialize
  5746 ;; This function is called by:
  5747 ;;		_main
  5748 ;; This function uses a non-reentrant model
  5749 ;;
  5750                           
  5751     0353                     _SYSTEM_Initialize:	
  5752                           ;psect for function _SYSTEM_Initialize
  5753                           
  5754     0353                     l3910:	
  5755                           ;incstack = 0
  5756                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5757                           
  5758                           
  5759                           ;mcc_generated_files/mcc.c: 53:     SPI1_Initialize();
  5760     0353  3187  27E2  3183   	fcall	_SPI1_Initialize
  5761                           
  5762                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  5763     0356  3183  23BA  3183   	fcall	_PIN_MANAGER_Initialize
  5764                           
  5765                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  5766     0359  318F  2786  3183   	fcall	_OSCILLATOR_Initialize
  5767                           
  5768                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  5769     035C  318F  275C  3183   	fcall	_WDT_Initialize
  5770                           
  5771                           ;mcc_generated_files/mcc.c: 57:     CMP2_Initialize();
  5772     035F  3187  27BE  3183   	fcall	_CMP2_Initialize
  5773                           
  5774                           ;mcc_generated_files/mcc.c: 58:     DAC_Initialize();
  5775     0362  318F  2774  3183   	fcall	_DAC_Initialize
  5776                           
  5777                           ;mcc_generated_files/mcc.c: 59:     FVR_Initialize();
  5778     0365  318F  2758  3183   	fcall	_FVR_Initialize
  5779                           
  5780                           ;mcc_generated_files/mcc.c: 60:     TMR4_Initialize();
  5781     0368  3186  26BE  3183   	fcall	_TMR4_Initialize
  5782                           
  5783                           ;mcc_generated_files/mcc.c: 61:     TMR2_Initialize();
  5784     036B  318F  2795  3183   	fcall	_TMR2_Initialize
  5785                           
  5786                           ;mcc_generated_files/mcc.c: 62:     TMR0_Initialize();
  5787     036E  3186  2696  3183   	fcall	_TMR0_Initialize
  5788                           
  5789                           ;mcc_generated_files/mcc.c: 63:     TMR6_Initialize();
  5790     0371  3186  26AB  3183   	fcall	_TMR6_Initialize
  5791                           
  5792                           ;mcc_generated_files/mcc.c: 64:     CMP1_Initialize();
  5793     0374  3187  27CA  3183   	fcall	_CMP1_Initialize
  5794                           
  5795                           ;mcc_generated_files/mcc.c: 65:     CCP4_Initialize();
  5796     0377  3186  26D1  3183   	fcall	_CCP4_Initialize
  5797                           
  5798                           ;mcc_generated_files/mcc.c: 66:     ADC_Initialize();
  5799     037A  318F  278D  3183   	fcall	_ADC_Initialize
  5800                           
  5801                           ;mcc_generated_files/mcc.c: 67:     PWM3_Initialize();
  5802     037D  318F  27E5  3183   	fcall	_PWM3_Initialize
  5803                           
  5804                           ;mcc_generated_files/mcc.c: 68:     TMR1_Initialize();
  5805     0380  3187  27B2  3183   	fcall	_TMR1_Initialize
  5806                           
  5807                           ;mcc_generated_files/mcc.c: 69:     EUSART_Initialize();
  5808     0383  3184  24C0  3183   	fcall	_EUSART_Initialize
  5809     0386                     l353:
  5810     0386  0008               	return
  5811     0387                     __end_of_SYSTEM_Initialize:
  5812                           
  5813                           	psect	text13
  5814     0F5C                     __ptext13:	
  5815 ;; *************** function _WDT_Initialize *****************
  5816 ;; Defined at:
  5817 ;;		line 82 in file "mcc_generated_files/mcc.c"
  5818 ;; Parameters:    Size  Location     Type
  5819 ;;		None
  5820 ;; Auto vars:     Size  Location     Type
  5821 ;;		None
  5822 ;; Return value:  Size  Location     Type
  5823 ;;                  1    wreg      void 
  5824 ;; Registers used:
  5825 ;;		wreg
  5826 ;; Tracked objects:
  5827 ;;		On entry : 0/0
  5828 ;;		On exit  : 0/0
  5829 ;;		Unchanged: 0/0
  5830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5831 ;;      Params:         0       0       0       0       0       0
  5832 ;;      Locals:         0       0       0       0       0       0
  5833 ;;      Temps:          0       0       0       0       0       0
  5834 ;;      Totals:         0       0       0       0       0       0
  5835 ;;Total ram usage:        0 bytes
  5836 ;; Hardware stack levels used: 1
  5837 ;; Hardware stack levels required when called: 8
  5838 ;; This function calls:
  5839 ;;		Nothing
  5840 ;; This function is called by:
  5841 ;;		_SYSTEM_Initialize
  5842 ;; This function uses a non-reentrant model
  5843 ;;
  5844                           
  5845     0F5C                     _WDT_Initialize:	
  5846                           ;psect for function _WDT_Initialize
  5847                           
  5848     0F5C                     l3754:	
  5849                           ;incstack = 0
  5850                           ; Regs used in _WDT_Initialize: [wreg]
  5851                           
  5852                           
  5853                           ;mcc_generated_files/mcc.c: 85:     WDTCON = 0x16;
  5854     0F5C  3016               	movlw	22
  5855     0F5D  0021               	movlb	1	; select bank1
  5856     0F5E  0097               	movwf	23	;volatile
  5857     0F5F                     l359:
  5858     0F5F  0008               	return
  5859     0F60                     __end_of_WDT_Initialize:
  5860                           
  5861                           	psect	text14
  5862     06AB                     __ptext14:	
  5863 ;; *************** function _TMR6_Initialize *****************
  5864 ;; Defined at:
  5865 ;;		line 64 in file "mcc_generated_files/tmr6.c"
  5866 ;; Parameters:    Size  Location     Type
  5867 ;;		None
  5868 ;; Auto vars:     Size  Location     Type
  5869 ;;		None
  5870 ;; Return value:  Size  Location     Type
  5871 ;;                  1    wreg      void 
  5872 ;; Registers used:
  5873 ;;		wreg, status,2, status,0, pclath, cstack
  5874 ;; Tracked objects:
  5875 ;;		On entry : 0/0
  5876 ;;		On exit  : 0/0
  5877 ;;		Unchanged: 0/0
  5878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5879 ;;      Params:         0       0       0       0       0       0
  5880 ;;      Locals:         0       0       0       0       0       0
  5881 ;;      Temps:          0       0       0       0       0       0
  5882 ;;      Totals:         0       0       0       0       0       0
  5883 ;;Total ram usage:        0 bytes
  5884 ;; Hardware stack levels used: 1
  5885 ;; Hardware stack levels required when called: 9
  5886 ;; This function calls:
  5887 ;;		_TMR6_SetInterruptHandler
  5888 ;; This function is called by:
  5889 ;;		_SYSTEM_Initialize
  5890 ;; This function uses a non-reentrant model
  5891 ;;
  5892                           
  5893     06AB                     _TMR6_Initialize:	
  5894                           ;psect for function _TMR6_Initialize
  5895                           
  5896     06AB                     l3800:	
  5897                           ;incstack = 0
  5898                           ; Regs used in _TMR6_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5899                           
  5900                           
  5901                           ;mcc_generated_files/tmr6.c: 69:     PR6 = 0xF9;
  5902     06AB  30F9               	movlw	249
  5903     06AC  0028               	movlb	8	; select bank8
  5904     06AD  009D               	movwf	29	;volatile
  5905     06AE                     l3802:
  5906                           
  5907                           ;mcc_generated_files/tmr6.c: 72:     TMR6 = 0x00;
  5908     06AE  019C               	clrf	28	;volatile
  5909     06AF                     l3804:
  5910                           
  5911                           ;mcc_generated_files/tmr6.c: 75:     PIR3bits.TMR6IF = 0;
  5912     06AF  0020               	movlb	0	; select bank0
  5913     06B0  1193               	bcf	19,3	;volatile
  5914     06B1                     l3806:
  5915                           
  5916                           ;mcc_generated_files/tmr6.c: 78:     PIE3bits.TMR6IE = 1;
  5917     06B1  0021               	movlb	1	; select bank1
  5918     06B2  1593               	bsf	19,3	;volatile
  5919     06B3                     l3808:
  5920                           
  5921                           ;mcc_generated_files/tmr6.c: 81:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
  5922     06B3  3003               	movlw	low _TMR6_DefaultInterruptHandler
  5923     06B4  00B0               	movwf	TMR6_SetInterruptHandler@InterruptHandler^(0+128)
  5924     06B5  3000               	movlw	high _TMR6_DefaultInterruptHandler
  5925     06B6  00B1               	movwf	(TMR6_SetInterruptHandler@InterruptHandler^(0+128)+1)
  5926     06B7  3187  27F7  3186   	fcall	_TMR6_SetInterruptHandler
  5927     06BA                     l3810:
  5928                           
  5929                           ;mcc_generated_files/tmr6.c: 84:     T6CON = 0x49;
  5930     06BA  3049               	movlw	73
  5931     06BB  0028               	movlb	8	; select bank8
  5932     06BC  009E               	movwf	30	;volatile
  5933     06BD                     l629:
  5934     06BD  0008               	return
  5935     06BE                     __end_of_TMR6_Initialize:
  5936                           
  5937                           	psect	text15
  5938     07F7                     __ptext15:	
  5939 ;; *************** function _TMR6_SetInterruptHandler *****************
  5940 ;; Defined at:
  5941 ;;		line 147 in file "mcc_generated_files/tmr6.c"
  5942 ;; Parameters:    Size  Location     Type
  5943 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  5944 ;;		 -> TMR6_Interrupt(1), TMR6_DefaultInterruptHandler(1), 
  5945 ;; Auto vars:     Size  Location     Type
  5946 ;;		None
  5947 ;; Return value:  Size  Location     Type
  5948 ;;                  1    wreg      void 
  5949 ;; Registers used:
  5950 ;;		wreg
  5951 ;; Tracked objects:
  5952 ;;		On entry : 0/0
  5953 ;;		On exit  : 0/0
  5954 ;;		Unchanged: 0/0
  5955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5956 ;;      Params:         0       0       2       0       0       0
  5957 ;;      Locals:         0       0       0       0       0       0
  5958 ;;      Temps:          0       0       0       0       0       0
  5959 ;;      Totals:         0       0       2       0       0       0
  5960 ;;Total ram usage:        2 bytes
  5961 ;; Hardware stack levels used: 1
  5962 ;; Hardware stack levels required when called: 8
  5963 ;; This function calls:
  5964 ;;		Nothing
  5965 ;; This function is called by:
  5966 ;;		_TMR6_Initialize
  5967 ;;		_main
  5968 ;; This function uses a non-reentrant model
  5969 ;;
  5970                           
  5971     07F7                     _TMR6_SetInterruptHandler:	
  5972                           ;psect for function _TMR6_SetInterruptHandler
  5973                           
  5974     07F7                     l3664:	
  5975                           ;incstack = 0
  5976                           ; Regs used in _TMR6_SetInterruptHandler: [wreg]
  5977                           
  5978                           
  5979                           ;mcc_generated_files/tmr6.c: 148:     TMR6_InterruptHandler = InterruptHandler;
  5980     07F7  0021               	movlb	1	; select bank1
  5981     07F8  0831               	movf	(TMR6_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  5982     07F9  0020               	movlb	0	; select bank0
  5983     07FA  00A5               	movwf	_TMR6_InterruptHandler+1
  5984     07FB  0021               	movlb	1	; select bank1
  5985     07FC  0830               	movf	TMR6_SetInterruptHandler@InterruptHandler^(0+128),w
  5986     07FD  0020               	movlb	0	; select bank0
  5987     07FE  00A4               	movwf	_TMR6_InterruptHandler
  5988     07FF                     l657:
  5989     07FF  0008               	return
  5990     0800                     __end_of_TMR6_SetInterruptHandler:
  5991                           
  5992                           	psect	text16
  5993     06BE                     __ptext16:	
  5994 ;; *************** function _TMR4_Initialize *****************
  5995 ;; Defined at:
  5996 ;;		line 64 in file "mcc_generated_files/tmr4.c"
  5997 ;; Parameters:    Size  Location     Type
  5998 ;;		None
  5999 ;; Auto vars:     Size  Location     Type
  6000 ;;		None
  6001 ;; Return value:  Size  Location     Type
  6002 ;;                  1    wreg      void 
  6003 ;; Registers used:
  6004 ;;		wreg, status,2, status,0, pclath, cstack
  6005 ;; Tracked objects:
  6006 ;;		On entry : 0/0
  6007 ;;		On exit  : 0/0
  6008 ;;		Unchanged: 0/0
  6009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6010 ;;      Params:         0       0       0       0       0       0
  6011 ;;      Locals:         0       0       0       0       0       0
  6012 ;;      Temps:          0       0       0       0       0       0
  6013 ;;      Totals:         0       0       0       0       0       0
  6014 ;;Total ram usage:        0 bytes
  6015 ;; Hardware stack levels used: 1
  6016 ;; Hardware stack levels required when called: 9
  6017 ;; This function calls:
  6018 ;;		_TMR4_SetInterruptHandler
  6019 ;; This function is called by:
  6020 ;;		_SYSTEM_Initialize
  6021 ;; This function uses a non-reentrant model
  6022 ;;
  6023                           
  6024     06BE                     _TMR4_Initialize:	
  6025                           ;psect for function _TMR4_Initialize
  6026                           
  6027     06BE                     l3768:	
  6028                           ;incstack = 0
  6029                           ; Regs used in _TMR4_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6030                           
  6031                           
  6032                           ;mcc_generated_files/tmr4.c: 69:     PR4 = 0xF9;
  6033     06BE  30F9               	movlw	249
  6034     06BF  0028               	movlb	8	; select bank8
  6035     06C0  0096               	movwf	22	;volatile
  6036     06C1                     l3770:
  6037                           
  6038                           ;mcc_generated_files/tmr4.c: 72:     TMR4 = 0x00;
  6039     06C1  0195               	clrf	21	;volatile
  6040     06C2                     l3772:
  6041                           
  6042                           ;mcc_generated_files/tmr4.c: 75:     PIR3bits.TMR4IF = 0;
  6043     06C2  0020               	movlb	0	; select bank0
  6044     06C3  1093               	bcf	19,1	;volatile
  6045     06C4                     l3774:
  6046                           
  6047                           ;mcc_generated_files/tmr4.c: 78:     PIE3bits.TMR4IE = 1;
  6048     06C4  0021               	movlb	1	; select bank1
  6049     06C5  1493               	bsf	19,1	;volatile
  6050     06C6                     l3776:
  6051                           
  6052                           ;mcc_generated_files/tmr4.c: 81:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
  6053     06C6  3002               	movlw	low _TMR4_DefaultInterruptHandler
  6054     06C7  00B0               	movwf	TMR4_SetInterruptHandler@InterruptHandler^(0+128)
  6055     06C8  3000               	movlw	high _TMR4_DefaultInterruptHandler
  6056     06C9  00B1               	movwf	(TMR4_SetInterruptHandler@InterruptHandler^(0+128)+1)
  6057     06CA  318F  27F7  3186   	fcall	_TMR4_SetInterruptHandler
  6058     06CD                     l3778:
  6059                           
  6060                           ;mcc_generated_files/tmr4.c: 84:     T4CON = 0x49;
  6061     06CD  3049               	movlw	73
  6062     06CE  0028               	movlb	8	; select bank8
  6063     06CF  0097               	movwf	23	;volatile
  6064     06D0                     l683:
  6065     06D0  0008               	return
  6066     06D1                     __end_of_TMR4_Initialize:
  6067                           
  6068                           	psect	text17
  6069     0FF7                     __ptext17:	
  6070 ;; *************** function _TMR4_SetInterruptHandler *****************
  6071 ;; Defined at:
  6072 ;;		line 147 in file "mcc_generated_files/tmr4.c"
  6073 ;; Parameters:    Size  Location     Type
  6074 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  6075 ;;		 -> TMR4_Interrupt(1), TMR4_DefaultInterruptHandler(1), 
  6076 ;; Auto vars:     Size  Location     Type
  6077 ;;		None
  6078 ;; Return value:  Size  Location     Type
  6079 ;;                  1    wreg      void 
  6080 ;; Registers used:
  6081 ;;		wreg
  6082 ;; Tracked objects:
  6083 ;;		On entry : 0/0
  6084 ;;		On exit  : 0/0
  6085 ;;		Unchanged: 0/0
  6086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6087 ;;      Params:         0       0       2       0       0       0
  6088 ;;      Locals:         0       0       0       0       0       0
  6089 ;;      Temps:          0       0       0       0       0       0
  6090 ;;      Totals:         0       0       2       0       0       0
  6091 ;;Total ram usage:        2 bytes
  6092 ;; Hardware stack levels used: 1
  6093 ;; Hardware stack levels required when called: 8
  6094 ;; This function calls:
  6095 ;;		Nothing
  6096 ;; This function is called by:
  6097 ;;		_TMR4_Initialize
  6098 ;;		_main
  6099 ;; This function uses a non-reentrant model
  6100 ;;
  6101                           
  6102     0FF7                     _TMR4_SetInterruptHandler:	
  6103                           ;psect for function _TMR4_SetInterruptHandler
  6104                           
  6105     0FF7                     l3666:	
  6106                           ;incstack = 0
  6107                           ; Regs used in _TMR4_SetInterruptHandler: [wreg]
  6108                           
  6109                           
  6110                           ;mcc_generated_files/tmr4.c: 148:     TMR4_InterruptHandler = InterruptHandler;
  6111     0FF7  0021               	movlb	1	; select bank1
  6112     0FF8  0831               	movf	(TMR4_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  6113     0FF9  0020               	movlb	0	; select bank0
  6114     0FFA  00A3               	movwf	_TMR4_InterruptHandler+1
  6115     0FFB  0021               	movlb	1	; select bank1
  6116     0FFC  0830               	movf	TMR4_SetInterruptHandler@InterruptHandler^(0+128),w
  6117     0FFD  0020               	movlb	0	; select bank0
  6118     0FFE  00A2               	movwf	_TMR4_InterruptHandler
  6119     0FFF                     l711:
  6120     0FFF  0008               	return
  6121     1000                     __end_of_TMR4_SetInterruptHandler:
  6122                           
  6123                           	psect	text18
  6124     0F95                     __ptext18:	
  6125 ;; *************** function _TMR2_Initialize *****************
  6126 ;; Defined at:
  6127 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  6128 ;; Parameters:    Size  Location     Type
  6129 ;;		None
  6130 ;; Auto vars:     Size  Location     Type
  6131 ;;		None
  6132 ;; Return value:  Size  Location     Type
  6133 ;;                  1    wreg      void 
  6134 ;; Registers used:
  6135 ;;		wreg, status,2
  6136 ;; Tracked objects:
  6137 ;;		On entry : 0/0
  6138 ;;		On exit  : 0/0
  6139 ;;		Unchanged: 0/0
  6140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6141 ;;      Params:         0       0       0       0       0       0
  6142 ;;      Locals:         0       0       0       0       0       0
  6143 ;;      Temps:          0       0       0       0       0       0
  6144 ;;      Totals:         0       0       0       0       0       0
  6145 ;;Total ram usage:        0 bytes
  6146 ;; Hardware stack levels used: 1
  6147 ;; Hardware stack levels required when called: 8
  6148 ;; This function calls:
  6149 ;;		Nothing
  6150 ;; This function is called by:
  6151 ;;		_SYSTEM_Initialize
  6152 ;; This function uses a non-reentrant model
  6153 ;;
  6154                           
  6155     0F95                     _TMR2_Initialize:	
  6156                           ;psect for function _TMR2_Initialize
  6157                           
  6158     0F95                     l3780:	
  6159                           ;incstack = 0
  6160                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  6161                           
  6162                           
  6163                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xFF;
  6164     0F95  30FF               	movlw	255
  6165     0F96  0020               	movlb	0	; select bank0
  6166     0F97  009B               	movwf	27	;volatile
  6167     0F98                     l3782:
  6168                           
  6169                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  6170     0F98  019A               	clrf	26	;volatile
  6171     0F99                     l3784:
  6172                           
  6173                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  6174     0F99  1091               	bcf	17,1	;volatile
  6175     0F9A                     l3786:
  6176                           
  6177                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x04;
  6178     0F9A  3004               	movlw	4
  6179     0F9B  009C               	movwf	28	;volatile
  6180     0F9C                     l372:
  6181     0F9C  0008               	return
  6182     0F9D                     __end_of_TMR2_Initialize:
  6183                           
  6184                           	psect	text19
  6185     07B2                     __ptext19:	
  6186 ;; *************** function _TMR1_Initialize *****************
  6187 ;; Defined at:
  6188 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  6189 ;; Parameters:    Size  Location     Type
  6190 ;;		None
  6191 ;; Auto vars:     Size  Location     Type
  6192 ;;		None
  6193 ;; Return value:  Size  Location     Type
  6194 ;;                  1    wreg      void 
  6195 ;; Registers used:
  6196 ;;		wreg, status,2
  6197 ;; Tracked objects:
  6198 ;;		On entry : 0/0
  6199 ;;		On exit  : 0/0
  6200 ;;		Unchanged: 0/0
  6201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6202 ;;      Params:         0       0       0       0       0       0
  6203 ;;      Locals:         0       0       0       0       0       0
  6204 ;;      Temps:          0       0       0       0       0       0
  6205 ;;      Totals:         0       0       0       0       0       0
  6206 ;;Total ram usage:        0 bytes
  6207 ;; Hardware stack levels used: 1
  6208 ;; Hardware stack levels required when called: 8
  6209 ;; This function calls:
  6210 ;;		Nothing
  6211 ;; This function is called by:
  6212 ;;		_SYSTEM_Initialize
  6213 ;; This function uses a non-reentrant model
  6214 ;;
  6215                           
  6216     07B2                     _TMR1_Initialize:	
  6217                           ;psect for function _TMR1_Initialize
  6218                           
  6219     07B2                     l3826:	
  6220                           ;incstack = 0
  6221                           ; Regs used in _TMR1_Initialize: [wreg+status,2]
  6222                           
  6223                           
  6224                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
  6225     07B2  0020               	movlb	0	; select bank0
  6226     07B3  0199               	clrf	25	;volatile
  6227                           
  6228                           ;mcc_generated_files/tmr1.c: 71:     TMR1H = 0x00;
  6229     07B4  0197               	clrf	23	;volatile
  6230                           
  6231                           ;mcc_generated_files/tmr1.c: 74:     TMR1L = 0x00;
  6232     07B5  0196               	clrf	22	;volatile
  6233     07B6                     l3828:
  6234                           
  6235                           ;mcc_generated_files/tmr1.c: 77:     PIR1bits.TMR1IF = 0;
  6236     07B6  1011               	bcf	17,0	;volatile
  6237     07B7                     l3830:
  6238                           
  6239                           ;mcc_generated_files/tmr1.c: 80:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  6240     07B7  0817               	movf	23,w	;volatile
  6241     07B8  00AB               	movwf	_timer1ReloadVal+1	;volatile
  6242     07B9  0816               	movf	22,w	;volatile
  6243     07BA  00AA               	movwf	_timer1ReloadVal	;volatile
  6244     07BB                     l3832:
  6245                           
  6246                           ;mcc_generated_files/tmr1.c: 83:     T1CON = 0x35;
  6247     07BB  3035               	movlw	53
  6248     07BC  0098               	movwf	24	;volatile
  6249     07BD                     l410:
  6250     07BD  0008               	return
  6251     07BE                     __end_of_TMR1_Initialize:
  6252                           
  6253                           	psect	text20
  6254     0696                     __ptext20:	
  6255 ;; *************** function _TMR0_Initialize *****************
  6256 ;; Defined at:
  6257 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  6258 ;; Parameters:    Size  Location     Type
  6259 ;;		None
  6260 ;; Auto vars:     Size  Location     Type
  6261 ;;		None
  6262 ;; Return value:  Size  Location     Type
  6263 ;;                  1    wreg      void 
  6264 ;; Registers used:
  6265 ;;		wreg, status,2, status,0, pclath, cstack
  6266 ;; Tracked objects:
  6267 ;;		On entry : 0/0
  6268 ;;		On exit  : 0/0
  6269 ;;		Unchanged: 0/0
  6270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6271 ;;      Params:         0       0       0       0       0       0
  6272 ;;      Locals:         0       0       0       0       0       0
  6273 ;;      Temps:          0       0       0       0       0       0
  6274 ;;      Totals:         0       0       0       0       0       0
  6275 ;;Total ram usage:        0 bytes
  6276 ;; Hardware stack levels used: 1
  6277 ;; Hardware stack levels required when called: 9
  6278 ;; This function calls:
  6279 ;;		_TMR0_SetInterruptHandler
  6280 ;; This function is called by:
  6281 ;;		_SYSTEM_Initialize
  6282 ;; This function uses a non-reentrant model
  6283 ;;
  6284                           
  6285     0696                     _TMR0_Initialize:	
  6286                           ;psect for function _TMR0_Initialize
  6287                           
  6288     0696                     l3788:	
  6289                           ;incstack = 0
  6290                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6291                           
  6292                           
  6293                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD1 
      +                          & 0x3F));
  6294     0696  0021               	movlb	1	; select bank1
  6295     0697  0815               	movf	21,w	;volatile
  6296     0698  39C0               	andlw	192
  6297     0699  3811               	iorlw	17
  6298     069A  0095               	movwf	21	;volatile
  6299     069B                     l3790:
  6300                           
  6301                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0x06;
  6302     069B  3006               	movlw	6
  6303     069C  0020               	movlb	0	; select bank0
  6304     069D  0095               	movwf	21	;volatile
  6305     069E                     l3792:
  6306                           
  6307                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 6;
  6308     069E  3006               	movlw	6
  6309     069F  00B8               	movwf	_timer0ReloadVal	;volatile
  6310     06A0                     l3794:
  6311                           
  6312                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
  6313     06A0  110B               	bcf	11,2	;volatile
  6314     06A1                     l3796:
  6315                           
  6316                           ;mcc_generated_files/tmr0.c: 81:     INTCONbits.TMR0IE = 1;
  6317     06A1  168B               	bsf	11,5	;volatile
  6318     06A2                     l3798:
  6319                           
  6320                           ;mcc_generated_files/tmr0.c: 84:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  6321     06A2  3041               	movlw	low _TMR0_DefaultInterruptHandler
  6322     06A3  0021               	movlb	1	; select bank1
  6323     06A4  00B0               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  6324     06A5  300F               	movlw	high _TMR0_DefaultInterruptHandler
  6325     06A6  00B1               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  6326     06A7  318F  27EE  3186   	fcall	_TMR0_SetInterruptHandler
  6327     06AA                     l455:
  6328     06AA  0008               	return
  6329     06AB                     __end_of_TMR0_Initialize:
  6330                           
  6331                           	psect	text21
  6332     0FEE                     __ptext21:	
  6333 ;; *************** function _TMR0_SetInterruptHandler *****************
  6334 ;; Defined at:
  6335 ;;		line 140 in file "mcc_generated_files/tmr0.c"
  6336 ;; Parameters:    Size  Location     Type
  6337 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  6338 ;;		 -> TMR0_Interrupt(1), TMR0_DefaultInterruptHandler(1), 
  6339 ;; Auto vars:     Size  Location     Type
  6340 ;;		None
  6341 ;; Return value:  Size  Location     Type
  6342 ;;                  1    wreg      void 
  6343 ;; Registers used:
  6344 ;;		wreg
  6345 ;; Tracked objects:
  6346 ;;		On entry : 0/0
  6347 ;;		On exit  : 0/0
  6348 ;;		Unchanged: 0/0
  6349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6350 ;;      Params:         0       0       2       0       0       0
  6351 ;;      Locals:         0       0       0       0       0       0
  6352 ;;      Temps:          0       0       0       0       0       0
  6353 ;;      Totals:         0       0       2       0       0       0
  6354 ;;Total ram usage:        2 bytes
  6355 ;; Hardware stack levels used: 1
  6356 ;; Hardware stack levels required when called: 8
  6357 ;; This function calls:
  6358 ;;		Nothing
  6359 ;; This function is called by:
  6360 ;;		_TMR0_Initialize
  6361 ;;		_main
  6362 ;; This function uses a non-reentrant model
  6363 ;;
  6364                           
  6365     0FEE                     _TMR0_SetInterruptHandler:	
  6366                           ;psect for function _TMR0_SetInterruptHandler
  6367                           
  6368     0FEE                     l3648:	
  6369                           ;incstack = 0
  6370                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  6371                           
  6372                           
  6373                           ;mcc_generated_files/tmr0.c: 141:     TMR0_InterruptHandler = InterruptHandler;
  6374     0FEE  0021               	movlb	1	; select bank1
  6375     0FEF  0831               	movf	(TMR0_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  6376     0FF0  0020               	movlb	0	; select bank0
  6377     0FF1  00A9               	movwf	_TMR0_InterruptHandler+1
  6378     0FF2  0021               	movlb	1	; select bank1
  6379     0FF3  0830               	movf	TMR0_SetInterruptHandler@InterruptHandler^(0+128),w
  6380     0FF4  0020               	movlb	0	; select bank0
  6381     0FF5  00A8               	movwf	_TMR0_InterruptHandler
  6382     0FF6                     l477:
  6383     0FF6  0008               	return
  6384     0FF7                     __end_of_TMR0_SetInterruptHandler:
  6385                           
  6386                           	psect	text22
  6387     07E2                     __ptext22:	
  6388 ;; *************** function _SPI1_Initialize *****************
  6389 ;; Defined at:
  6390 ;;		line 62 in file "mcc_generated_files/spi1.c"
  6391 ;; Parameters:    Size  Location     Type
  6392 ;;		None
  6393 ;; Auto vars:     Size  Location     Type
  6394 ;;		None
  6395 ;; Return value:  Size  Location     Type
  6396 ;;                  1    wreg      void 
  6397 ;; Registers used:
  6398 ;;		wreg, status,2
  6399 ;; Tracked objects:
  6400 ;;		On entry : 0/0
  6401 ;;		On exit  : 0/0
  6402 ;;		Unchanged: 0/0
  6403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6404 ;;      Params:         0       0       0       0       0       0
  6405 ;;      Locals:         0       0       0       0       0       0
  6406 ;;      Temps:          0       0       0       0       0       0
  6407 ;;      Totals:         0       0       0       0       0       0
  6408 ;;Total ram usage:        0 bytes
  6409 ;; Hardware stack levels used: 1
  6410 ;; Hardware stack levels required when called: 8
  6411 ;; This function calls:
  6412 ;;		Nothing
  6413 ;; This function is called by:
  6414 ;;		_SYSTEM_Initialize
  6415 ;; This function uses a non-reentrant model
  6416 ;;
  6417                           
  6418     07E2                     _SPI1_Initialize:	
  6419                           ;psect for function _SPI1_Initialize
  6420                           
  6421     07E2                     l3672:	
  6422                           ;incstack = 0
  6423                           ; Regs used in _SPI1_Initialize: [wreg+status,2]
  6424                           
  6425                           
  6426                           ;mcc_generated_files/spi1.c: 65:     SSP1STAT = 0x00;
  6427     07E2  0024               	movlb	4	; select bank4
  6428     07E3  0194               	clrf	20	;volatile
  6429     07E4                     l3674:
  6430                           
  6431                           ;mcc_generated_files/spi1.c: 66:     SSP1CON1 = 0x11;
  6432     07E4  3011               	movlw	17
  6433     07E5  0095               	movwf	21	;volatile
  6434     07E6                     l3676:
  6435                           
  6436                           ;mcc_generated_files/spi1.c: 67:     SSP1ADD = 0x01;
  6437     07E6  3001               	movlw	1
  6438     07E7  0092               	movwf	18	;volatile
  6439     07E8                     l3678:
  6440                           
  6441                           ;mcc_generated_files/spi1.c: 68:     TRISBbits.TRISB4 = 0;
  6442     07E8  0021               	movlb	1	; select bank1
  6443     07E9  120D               	bcf	13,4	;volatile
  6444     07EA                     l3680:
  6445                           
  6446                           ;mcc_generated_files/spi1.c: 69:     SSP1CON1bits.SSPEN = 0;
  6447     07EA  0024               	movlb	4	; select bank4
  6448     07EB  1295               	bcf	21,5	;volatile
  6449     07EC                     l21:
  6450     07EC  0008               	return
  6451     07ED                     __end_of_SPI1_Initialize:
  6452                           
  6453                           	psect	text23
  6454     0FE5                     __ptext23:	
  6455 ;; *************** function _PWM3_Initialize *****************
  6456 ;; Defined at:
  6457 ;;		line 64 in file "mcc_generated_files/pwm3.c"
  6458 ;; Parameters:    Size  Location     Type
  6459 ;;		None
  6460 ;; Auto vars:     Size  Location     Type
  6461 ;;		None
  6462 ;; Return value:  Size  Location     Type
  6463 ;;                  1    wreg      void 
  6464 ;; Registers used:
  6465 ;;		wreg, status,2, status,0
  6466 ;; Tracked objects:
  6467 ;;		On entry : 0/0
  6468 ;;		On exit  : 0/0
  6469 ;;		Unchanged: 0/0
  6470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6471 ;;      Params:         0       0       0       0       0       0
  6472 ;;      Locals:         0       0       0       0       0       0
  6473 ;;      Temps:          0       0       0       0       0       0
  6474 ;;      Totals:         0       0       0       0       0       0
  6475 ;;Total ram usage:        0 bytes
  6476 ;; Hardware stack levels used: 1
  6477 ;; Hardware stack levels required when called: 8
  6478 ;; This function calls:
  6479 ;;		Nothing
  6480 ;; This function is called by:
  6481 ;;		_SYSTEM_Initialize
  6482 ;; This function uses a non-reentrant model
  6483 ;;
  6484                           
  6485     0FE5                     _PWM3_Initialize:	
  6486                           ;psect for function _PWM3_Initialize
  6487                           
  6488     0FE5                     l3682:	
  6489                           ;incstack = 0
  6490                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
  6491                           
  6492                           
  6493                           ;mcc_generated_files/pwm3.c: 69:  CCP3CON = 0x0C;
  6494     0FE5  300C               	movlw	12
  6495     0FE6  0026               	movlb	6	; select bank6
  6496     0FE7  0093               	movwf	19	;volatile
  6497     0FE8                     l3684:
  6498                           
  6499                           ;mcc_generated_files/pwm3.c: 72:  CCPR3L = 0x00;
  6500     0FE8  0191               	clrf	17	;volatile
  6501     0FE9                     l3686:
  6502                           
  6503                           ;mcc_generated_files/pwm3.c: 75:  CCPR3H = 0x00;
  6504     0FE9  0192               	clrf	18	;volatile
  6505     0FEA                     l3688:
  6506                           
  6507                           ;mcc_generated_files/pwm3.c: 78:  CCPTMRS0bits.C3TSEL = 0x0;
  6508     0FEA  30CF               	movlw	-49
  6509     0FEB  0025               	movlb	5	; select bank5
  6510     0FEC  059E               	andwf	30,f	;volatile
  6511     0FED                     l72:
  6512     0FED  0008               	return
  6513     0FEE                     __end_of_PWM3_Initialize:
  6514                           
  6515                           	psect	text24
  6516     03BA                     __ptext24:	
  6517 ;; *************** function _PIN_MANAGER_Initialize *****************
  6518 ;; Defined at:
  6519 ;;		line 58 in file "mcc_generated_files/pin_manager.c"
  6520 ;; Parameters:    Size  Location     Type
  6521 ;;		None
  6522 ;; Auto vars:     Size  Location     Type
  6523 ;;		None
  6524 ;; Return value:  Size  Location     Type
  6525 ;;                  1    wreg      void 
  6526 ;; Registers used:
  6527 ;;		wreg, status,2, status,0, pclath, cstack
  6528 ;; Tracked objects:
  6529 ;;		On entry : 0/0
  6530 ;;		On exit  : 0/0
  6531 ;;		Unchanged: 0/0
  6532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6533 ;;      Params:         0       0       0       0       0       0
  6534 ;;      Locals:         0       0       0       0       0       0
  6535 ;;      Temps:          0       0       0       0       0       0
  6536 ;;      Totals:         0       0       0       0       0       0
  6537 ;;Total ram usage:        0 bytes
  6538 ;; Hardware stack levels used: 1
  6539 ;; Hardware stack levels required when called: 9
  6540 ;; This function calls:
  6541 ;;		_IOCBF0_SetInterruptHandler
  6542 ;;		_IOCBF3_SetInterruptHandler
  6543 ;; This function is called by:
  6544 ;;		_SYSTEM_Initialize
  6545 ;; This function uses a non-reentrant model
  6546 ;;
  6547                           
  6548     03BA                     _PIN_MANAGER_Initialize:	
  6549                           ;psect for function _PIN_MANAGER_Initialize
  6550                           
  6551     03BA                     l3702:	
  6552                           ;incstack = 0
  6553                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6554                           
  6555                           
  6556                           ;mcc_generated_files/pin_manager.c: 63:     LATA = 0x00;
  6557     03BA  0022               	movlb	2	; select bank2
  6558     03BB  018C               	clrf	12	;volatile
  6559     03BC                     l3704:
  6560                           
  6561                           ;mcc_generated_files/pin_manager.c: 64:     LATB = 0x02;
  6562     03BC  3002               	movlw	2
  6563     03BD  008D               	movwf	13	;volatile
  6564     03BE                     l3706:
  6565                           
  6566                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0x37;
  6567     03BE  3037               	movlw	55
  6568     03BF  0021               	movlb	1	; select bank1
  6569     03C0  008C               	movwf	12	;volatile
  6570     03C1                     l3708:
  6571                           
  6572                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0xED;
  6573     03C1  30ED               	movlw	237
  6574     03C2  008D               	movwf	13	;volatile
  6575     03C3                     l3710:
  6576                           
  6577                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x00;
  6578     03C3  0023               	movlb	3	; select bank3
  6579     03C4  018D               	clrf	13	;volatile
  6580                           
  6581                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x07;
  6582     03C5  3007               	movlw	7
  6583     03C6  008C               	movwf	12	;volatile
  6584     03C7                     l3712:
  6585                           
  6586                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  6587     03C7  0024               	movlb	4	; select bank4
  6588     03C8  018D               	clrf	13	;volatile
  6589     03C9                     l3714:
  6590                           
  6591                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  6592     03C9  018C               	clrf	12	;volatile
  6593     03CA                     l3716:
  6594                           
  6595                           ;mcc_generated_files/pin_manager.c: 83:     OPTION_REGbits.nWPUEN = 1;
  6596     03CA  0021               	movlb	1	; select bank1
  6597     03CB  1795               	bsf	21,7	;volatile
  6598                           
  6599                           ;mcc_generated_files/pin_manager.c: 89:     APFCON0 = 0xC0;
  6600     03CC  30C0               	movlw	192
  6601     03CD  0022               	movlb	2	; select bank2
  6602     03CE  009D               	movwf	29	;volatile
  6603                           
  6604                           ;mcc_generated_files/pin_manager.c: 90:     APFCON1 = 0x01;
  6605     03CF  3001               	movlw	1
  6606     03D0  009E               	movwf	30	;volatile
  6607     03D1                     l3718:
  6608                           
  6609                           ;mcc_generated_files/pin_manager.c: 96:     IOCBFbits.IOCBF0 = 0;
  6610     03D1  0027               	movlb	7	; select bank7
  6611     03D2  1016               	bcf	22,0	;volatile
  6612     03D3                     l3720:
  6613                           
  6614                           ;mcc_generated_files/pin_manager.c: 98:     IOCBFbits.IOCBF3 = 0;
  6615     03D3  1196               	bcf	22,3	;volatile
  6616     03D4                     l3722:
  6617                           
  6618                           ;mcc_generated_files/pin_manager.c: 100:     IOCBNbits.IOCBN0 = 1;
  6619     03D4  1415               	bsf	21,0	;volatile
  6620     03D5                     l3724:
  6621                           
  6622                           ;mcc_generated_files/pin_manager.c: 102:     IOCBNbits.IOCBN3 = 1;
  6623     03D5  1595               	bsf	21,3	;volatile
  6624     03D6                     l3726:
  6625                           
  6626                           ;mcc_generated_files/pin_manager.c: 104:     IOCBPbits.IOCBP0 = 1;
  6627     03D6  1414               	bsf	20,0	;volatile
  6628     03D7                     l3728:
  6629                           
  6630                           ;mcc_generated_files/pin_manager.c: 106:     IOCBPbits.IOCBP3 = 1;
  6631     03D7  1594               	bsf	20,3	;volatile
  6632     03D8                     l3730:
  6633                           
  6634                           ;mcc_generated_files/pin_manager.c: 111:     IOCBF0_SetInterruptHandler(IOCBF0_DefaultIn
      +                          terruptHandler);
  6635     03D8  303F               	movlw	low _IOCBF0_DefaultInterruptHandler
  6636     03D9  0021               	movlb	1	; select bank1
  6637     03DA  00B0               	movwf	IOCBF0_SetInterruptHandler@InterruptHandler^(0+128)
  6638     03DB  300F               	movlw	high _IOCBF0_DefaultInterruptHandler
  6639     03DC  00B1               	movwf	(IOCBF0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  6640     03DD  318F  27D3  3183   	fcall	_IOCBF0_SetInterruptHandler
  6641     03E0                     l3732:
  6642                           
  6643                           ;mcc_generated_files/pin_manager.c: 112:     IOCBF3_SetInterruptHandler(IOCBF3_DefaultIn
      +                          terruptHandler);
  6644     03E0  3040               	movlw	low _IOCBF3_DefaultInterruptHandler
  6645     03E1  0021               	movlb	1	; select bank1
  6646     03E2  00B0               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler^(0+128)
  6647     03E3  300F               	movlw	high _IOCBF3_DefaultInterruptHandler
  6648     03E4  00B1               	movwf	(IOCBF3_SetInterruptHandler@InterruptHandler^(0+128)+1)
  6649     03E5  318F  27DC  3183   	fcall	_IOCBF3_SetInterruptHandler
  6650     03E8                     l3734:
  6651                           
  6652                           ;mcc_generated_files/pin_manager.c: 115:     INTCONbits.IOCIE = 1;
  6653     03E8  158B               	bsf	11,3	;volatile
  6654     03E9                     l257:
  6655     03E9  0008               	return
  6656     03EA                     __end_of_PIN_MANAGER_Initialize:
  6657                           
  6658                           	psect	text25
  6659     0FDC                     __ptext25:	
  6660 ;; *************** function _IOCBF3_SetInterruptHandler *****************
  6661 ;; Defined at:
  6662 ;;		line 181 in file "mcc_generated_files/pin_manager.c"
  6663 ;; Parameters:    Size  Location     Type
  6664 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  6665 ;;		 -> S2_Interrupt(1), IOCBF3_DefaultInterruptHandler(1), 
  6666 ;; Auto vars:     Size  Location     Type
  6667 ;;		None
  6668 ;; Return value:  Size  Location     Type
  6669 ;;                  1    wreg      void 
  6670 ;; Registers used:
  6671 ;;		wreg
  6672 ;; Tracked objects:
  6673 ;;		On entry : 0/0
  6674 ;;		On exit  : 0/0
  6675 ;;		Unchanged: 0/0
  6676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6677 ;;      Params:         0       0       2       0       0       0
  6678 ;;      Locals:         0       0       0       0       0       0
  6679 ;;      Temps:          0       0       0       0       0       0
  6680 ;;      Totals:         0       0       2       0       0       0
  6681 ;;Total ram usage:        2 bytes
  6682 ;; Hardware stack levels used: 1
  6683 ;; Hardware stack levels required when called: 8
  6684 ;; This function calls:
  6685 ;;		Nothing
  6686 ;; This function is called by:
  6687 ;;		_PIN_MANAGER_Initialize
  6688 ;;		_main
  6689 ;; This function uses a non-reentrant model
  6690 ;;
  6691                           
  6692     0FDC                     _IOCBF3_SetInterruptHandler:	
  6693                           ;psect for function _IOCBF3_SetInterruptHandler
  6694                           
  6695     0FDC                     l3644:	
  6696                           ;incstack = 0
  6697                           ; Regs used in _IOCBF3_SetInterruptHandler: [wreg]
  6698                           
  6699                           
  6700                           ;mcc_generated_files/pin_manager.c: 182:     IOCBF3_InterruptHandler = InterruptHandler;
  6701     0FDC  0021               	movlb	1	; select bank1
  6702     0FDD  0831               	movf	(IOCBF3_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  6703     0FDE  0020               	movlb	0	; select bank0
  6704     0FDF  00AF               	movwf	_IOCBF3_InterruptHandler+1
  6705     0FE0  0021               	movlb	1	; select bank1
  6706     0FE1  0830               	movf	IOCBF3_SetInterruptHandler@InterruptHandler^(0+128),w
  6707     0FE2  0020               	movlb	0	; select bank0
  6708     0FE3  00AE               	movwf	_IOCBF3_InterruptHandler
  6709     0FE4                     l279:
  6710     0FE4  0008               	return
  6711     0FE5                     __end_of_IOCBF3_SetInterruptHandler:
  6712                           
  6713                           	psect	text26
  6714     0FD3                     __ptext26:	
  6715 ;; *************** function _IOCBF0_SetInterruptHandler *****************
  6716 ;; Defined at:
  6717 ;;		line 151 in file "mcc_generated_files/pin_manager.c"
  6718 ;; Parameters:    Size  Location     Type
  6719 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  6720 ;;		 -> S1_Interrupt(1), IOCBF0_DefaultInterruptHandler(1), 
  6721 ;; Auto vars:     Size  Location     Type
  6722 ;;		None
  6723 ;; Return value:  Size  Location     Type
  6724 ;;                  1    wreg      void 
  6725 ;; Registers used:
  6726 ;;		wreg
  6727 ;; Tracked objects:
  6728 ;;		On entry : 0/0
  6729 ;;		On exit  : 0/0
  6730 ;;		Unchanged: 0/0
  6731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6732 ;;      Params:         0       0       2       0       0       0
  6733 ;;      Locals:         0       0       0       0       0       0
  6734 ;;      Temps:          0       0       0       0       0       0
  6735 ;;      Totals:         0       0       2       0       0       0
  6736 ;;Total ram usage:        2 bytes
  6737 ;; Hardware stack levels used: 1
  6738 ;; Hardware stack levels required when called: 8
  6739 ;; This function calls:
  6740 ;;		Nothing
  6741 ;; This function is called by:
  6742 ;;		_PIN_MANAGER_Initialize
  6743 ;;		_main
  6744 ;; This function uses a non-reentrant model
  6745 ;;
  6746                           
  6747     0FD3                     _IOCBF0_SetInterruptHandler:	
  6748                           ;psect for function _IOCBF0_SetInterruptHandler
  6749                           
  6750     0FD3                     l3642:	
  6751                           ;incstack = 0
  6752                           ; Regs used in _IOCBF0_SetInterruptHandler: [wreg]
  6753                           
  6754                           
  6755                           ;mcc_generated_files/pin_manager.c: 152:     IOCBF0_InterruptHandler = InterruptHandler;
  6756     0FD3  0021               	movlb	1	; select bank1
  6757     0FD4  0831               	movf	(IOCBF0_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  6758     0FD5  0020               	movlb	0	; select bank0
  6759     0FD6  00B1               	movwf	_IOCBF0_InterruptHandler+1
  6760     0FD7  0021               	movlb	1	; select bank1
  6761     0FD8  0830               	movf	IOCBF0_SetInterruptHandler@InterruptHandler^(0+128),w
  6762     0FD9  0020               	movlb	0	; select bank0
  6763     0FDA  00B0               	movwf	_IOCBF0_InterruptHandler
  6764     0FDB                     l269:
  6765     0FDB  0008               	return
  6766     0FDC                     __end_of_IOCBF0_SetInterruptHandler:
  6767                           
  6768                           	psect	text27
  6769     0F86                     __ptext27:	
  6770 ;; *************** function _OSCILLATOR_Initialize *****************
  6771 ;; Defined at:
  6772 ;;		line 72 in file "mcc_generated_files/mcc.c"
  6773 ;; Parameters:    Size  Location     Type
  6774 ;;		None
  6775 ;; Auto vars:     Size  Location     Type
  6776 ;;		None
  6777 ;; Return value:  Size  Location     Type
  6778 ;;                  1    wreg      void 
  6779 ;; Registers used:
  6780 ;;		wreg, status,2
  6781 ;; Tracked objects:
  6782 ;;		On entry : 0/0
  6783 ;;		On exit  : 0/0
  6784 ;;		Unchanged: 0/0
  6785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6786 ;;      Params:         0       0       0       0       0       0
  6787 ;;      Locals:         0       0       0       0       0       0
  6788 ;;      Temps:          0       0       0       0       0       0
  6789 ;;      Totals:         0       0       0       0       0       0
  6790 ;;Total ram usage:        0 bytes
  6791 ;; Hardware stack levels used: 1
  6792 ;; Hardware stack levels required when called: 8
  6793 ;; This function calls:
  6794 ;;		Nothing
  6795 ;; This function is called by:
  6796 ;;		_SYSTEM_Initialize
  6797 ;; This function uses a non-reentrant model
  6798 ;;
  6799                           
  6800     0F86                     _OSCILLATOR_Initialize:	
  6801                           ;psect for function _OSCILLATOR_Initialize
  6802                           
  6803     0F86                     l3748:	
  6804                           ;incstack = 0
  6805                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  6806                           
  6807                           
  6808                           ;mcc_generated_files/mcc.c: 75:     OSCCON = 0x70;
  6809     0F86  3070               	movlw	112
  6810     0F87  0021               	movlb	1	; select bank1
  6811     0F88  0099               	movwf	25	;volatile
  6812     0F89                     l3750:
  6813                           
  6814                           ;mcc_generated_files/mcc.c: 77:     OSCTUNE = 0x00;
  6815     0F89  0198               	clrf	24	;volatile
  6816     0F8A                     l3752:
  6817                           
  6818                           ;mcc_generated_files/mcc.c: 79:     BORCON = 0x00;
  6819     0F8A  0022               	movlb	2	; select bank2
  6820     0F8B  0196               	clrf	22	;volatile
  6821     0F8C                     l356:
  6822     0F8C  0008               	return
  6823     0F8D                     __end_of_OSCILLATOR_Initialize:
  6824                           
  6825                           	psect	text28
  6826     0F58                     __ptext28:	
  6827 ;; *************** function _FVR_Initialize *****************
  6828 ;; Defined at:
  6829 ;;		line 58 in file "mcc_generated_files/fvr.c"
  6830 ;; Parameters:    Size  Location     Type
  6831 ;;		None
  6832 ;; Auto vars:     Size  Location     Type
  6833 ;;		None
  6834 ;; Return value:  Size  Location     Type
  6835 ;;                  1    wreg      void 
  6836 ;; Registers used:
  6837 ;;		wreg
  6838 ;; Tracked objects:
  6839 ;;		On entry : 0/0
  6840 ;;		On exit  : 0/0
  6841 ;;		Unchanged: 0/0
  6842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6843 ;;      Params:         0       0       0       0       0       0
  6844 ;;      Locals:         0       0       0       0       0       0
  6845 ;;      Temps:          0       0       0       0       0       0
  6846 ;;      Totals:         0       0       0       0       0       0
  6847 ;;Total ram usage:        0 bytes
  6848 ;; Hardware stack levels used: 1
  6849 ;; Hardware stack levels required when called: 8
  6850 ;; This function calls:
  6851 ;;		Nothing
  6852 ;; This function is called by:
  6853 ;;		_SYSTEM_Initialize
  6854 ;; This function uses a non-reentrant model
  6855 ;;
  6856                           
  6857     0F58                     _FVR_Initialize:	
  6858                           ;psect for function _FVR_Initialize
  6859                           
  6860     0F58                     l3766:	
  6861                           ;incstack = 0
  6862                           ; Regs used in _FVR_Initialize: [wreg]
  6863                           
  6864                           
  6865                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x82;
  6866     0F58  3082               	movlw	130
  6867     0F59  0022               	movlb	2	; select bank2
  6868     0F5A  0097               	movwf	23	;volatile
  6869     0F5B                     l949:
  6870     0F5B  0008               	return
  6871     0F5C                     __end_of_FVR_Initialize:
  6872                           
  6873                           	psect	text29
  6874     04C0                     __ptext29:	
  6875 ;; *************** function _EUSART_Initialize *****************
  6876 ;; Defined at:
  6877 ;;		line 66 in file "mcc_generated_files/eusart.c"
  6878 ;; Parameters:    Size  Location     Type
  6879 ;;		None
  6880 ;; Auto vars:     Size  Location     Type
  6881 ;;		None
  6882 ;; Return value:  Size  Location     Type
  6883 ;;                  1    wreg      void 
  6884 ;; Registers used:
  6885 ;;		wreg, status,2, status,0, pclath, cstack
  6886 ;; Tracked objects:
  6887 ;;		On entry : 0/0
  6888 ;;		On exit  : 0/0
  6889 ;;		Unchanged: 0/0
  6890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6891 ;;      Params:         0       0       0       0       0       0
  6892 ;;      Locals:         0       0       0       0       0       0
  6893 ;;      Temps:          0       0       0       0       0       0
  6894 ;;      Totals:         0       0       0       0       0       0
  6895 ;;Total ram usage:        0 bytes
  6896 ;; Hardware stack levels used: 1
  6897 ;; Hardware stack levels required when called: 9
  6898 ;; This function calls:
  6899 ;;		_EUSART_SetErrorHandler
  6900 ;;		_EUSART_SetFramingErrorHandler
  6901 ;;		_EUSART_SetOverrunErrorHandler
  6902 ;; This function is called by:
  6903 ;;		_SYSTEM_Initialize
  6904 ;; This function uses a non-reentrant model
  6905 ;;
  6906                           
  6907     04C0                     _EUSART_Initialize:	
  6908                           ;psect for function _EUSART_Initialize
  6909                           
  6910     04C0                     l3690:	
  6911                           ;incstack = 0
  6912                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6913                           
  6914                           
  6915                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  6916     04C0  3008               	movlw	8
  6917     04C1  0023               	movlb	3	; select bank3
  6918     04C2  009F               	movwf	31	;volatile
  6919                           
  6920                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  6921     04C3  3090               	movlw	144
  6922     04C4  009D               	movwf	29	;volatile
  6923                           
  6924                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0xA4;
  6925     04C5  30A4               	movlw	164
  6926     04C6  009E               	movwf	30	;volatile
  6927                           
  6928                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x67;
  6929     04C7  3067               	movlw	103
  6930     04C8  009B               	movwf	27	;volatile
  6931     04C9                     l3692:
  6932                           
  6933                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  6934     04C9  019C               	clrf	28	;volatile
  6935     04CA                     l3694:
  6936                           
  6937                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  6938     04CA  3000               	movlw	0
  6939     04CB  0021               	movlb	1	; select bank1
  6940     04CC  00B0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128)
  6941     04CD  3000               	movlw	0
  6942     04CE  00B1               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler^(0+128)+1)
  6943     04CF  318F  27C1  3184   	fcall	_EUSART_SetFramingErrorHandler
  6944     04D2                     l3696:
  6945                           
  6946                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  6947     04D2  3000               	movlw	0
  6948     04D3  0021               	movlb	1	; select bank1
  6949     04D4  00B0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)
  6950     04D5  3000               	movlw	0
  6951     04D6  00B1               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)+1)
  6952     04D7  318F  27CA  3184   	fcall	_EUSART_SetOverrunErrorHandler
  6953     04DA                     l3698:
  6954                           
  6955                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  6956     04DA  3000               	movlw	0
  6957     04DB  0021               	movlb	1	; select bank1
  6958     04DC  00B0               	movwf	EUSART_SetErrorHandler@interruptHandler^(0+128)
  6959     04DD  3000               	movlw	0
  6960     04DE  00B1               	movwf	(EUSART_SetErrorHandler@interruptHandler^(0+128)+1)
  6961     04DF  318F  27B8  3184   	fcall	_EUSART_SetErrorHandler
  6962     04E2                     l3700:
  6963                           
  6964                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  6965     04E2  0020               	movlb	0	; select bank0
  6966     04E3  01D0               	clrf	_eusartRxLastError	;volatile
  6967     04E4                     l118:
  6968     04E4  0008               	return
  6969     04E5                     __end_of_EUSART_Initialize:
  6970                           
  6971                           	psect	text30
  6972     0FCA                     __ptext30:	
  6973 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  6974 ;; Defined at:
  6975 ;;		line 161 in file "mcc_generated_files/eusart.c"
  6976 ;; Parameters:    Size  Location     Type
  6977 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  6978 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  6979 ;; Auto vars:     Size  Location     Type
  6980 ;;		None
  6981 ;; Return value:  Size  Location     Type
  6982 ;;                  1    wreg      void 
  6983 ;; Registers used:
  6984 ;;		wreg
  6985 ;; Tracked objects:
  6986 ;;		On entry : 0/0
  6987 ;;		On exit  : 0/0
  6988 ;;		Unchanged: 0/0
  6989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6990 ;;      Params:         0       0       2       0       0       0
  6991 ;;      Locals:         0       0       0       0       0       0
  6992 ;;      Temps:          0       0       0       0       0       0
  6993 ;;      Totals:         0       0       2       0       0       0
  6994 ;;Total ram usage:        2 bytes
  6995 ;; Hardware stack levels used: 1
  6996 ;; Hardware stack levels required when called: 8
  6997 ;; This function calls:
  6998 ;;		Nothing
  6999 ;; This function is called by:
  7000 ;;		_EUSART_Initialize
  7001 ;; This function uses a non-reentrant model
  7002 ;;
  7003                           
  7004     0FCA                     _EUSART_SetOverrunErrorHandler:	
  7005                           ;psect for function _EUSART_SetOverrunErrorHandler
  7006                           
  7007     0FCA                     l3638:	
  7008                           ;incstack = 0
  7009                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  7010                           
  7011                           
  7012                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  7013     0FCA  0021               	movlb	1	; select bank1
  7014     0FCB  0831               	movf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^(0+128),w
  7015     0FCC  0020               	movlb	0	; select bank0
  7016     0FCD  00B5               	movwf	_EUSART_OverrunErrorHandler+1
  7017     0FCE  0021               	movlb	1	; select bank1
  7018     0FCF  0830               	movf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128),w
  7019     0FD0  0020               	movlb	0	; select bank0
  7020     0FD1  00B4               	movwf	_EUSART_OverrunErrorHandler
  7021     0FD2                     l160:
  7022     0FD2  0008               	return
  7023     0FD3                     __end_of_EUSART_SetOverrunErrorHandler:
  7024                           
  7025                           	psect	text31
  7026     0FC1                     __ptext31:	
  7027 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  7028 ;; Defined at:
  7029 ;;		line 157 in file "mcc_generated_files/eusart.c"
  7030 ;; Parameters:    Size  Location     Type
  7031 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  7032 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  7033 ;; Auto vars:     Size  Location     Type
  7034 ;;		None
  7035 ;; Return value:  Size  Location     Type
  7036 ;;                  1    wreg      void 
  7037 ;; Registers used:
  7038 ;;		wreg
  7039 ;; Tracked objects:
  7040 ;;		On entry : 0/0
  7041 ;;		On exit  : 0/0
  7042 ;;		Unchanged: 0/0
  7043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7044 ;;      Params:         0       0       2       0       0       0
  7045 ;;      Locals:         0       0       0       0       0       0
  7046 ;;      Temps:          0       0       0       0       0       0
  7047 ;;      Totals:         0       0       2       0       0       0
  7048 ;;Total ram usage:        2 bytes
  7049 ;; Hardware stack levels used: 1
  7050 ;; Hardware stack levels required when called: 8
  7051 ;; This function calls:
  7052 ;;		Nothing
  7053 ;; This function is called by:
  7054 ;;		_EUSART_Initialize
  7055 ;; This function uses a non-reentrant model
  7056 ;;
  7057                           
  7058     0FC1                     _EUSART_SetFramingErrorHandler:	
  7059                           ;psect for function _EUSART_SetFramingErrorHandler
  7060                           
  7061     0FC1                     l3636:	
  7062                           ;incstack = 0
  7063                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  7064                           
  7065                           
  7066                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  7067     0FC1  0021               	movlb	1	; select bank1
  7068     0FC2  0831               	movf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^(0+128),w
  7069     0FC3  0020               	movlb	0	; select bank0
  7070     0FC4  00B7               	movwf	_EUSART_FramingErrorHandler+1
  7071     0FC5  0021               	movlb	1	; select bank1
  7072     0FC6  0830               	movf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128),w
  7073     0FC7  0020               	movlb	0	; select bank0
  7074     0FC8  00B6               	movwf	_EUSART_FramingErrorHandler
  7075     0FC9                     l157:
  7076     0FC9  0008               	return
  7077     0FCA                     __end_of_EUSART_SetFramingErrorHandler:
  7078                           
  7079                           	psect	text32
  7080     0FB8                     __ptext32:	
  7081 ;; *************** function _EUSART_SetErrorHandler *****************
  7082 ;; Defined at:
  7083 ;;		line 165 in file "mcc_generated_files/eusart.c"
  7084 ;; Parameters:    Size  Location     Type
  7085 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  7086 ;;		 -> EUSART_DefaultErrorHandler(1), 
  7087 ;; Auto vars:     Size  Location     Type
  7088 ;;		None
  7089 ;; Return value:  Size  Location     Type
  7090 ;;                  1    wreg      void 
  7091 ;; Registers used:
  7092 ;;		wreg
  7093 ;; Tracked objects:
  7094 ;;		On entry : 0/0
  7095 ;;		On exit  : 0/0
  7096 ;;		Unchanged: 0/0
  7097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7098 ;;      Params:         0       0       2       0       0       0
  7099 ;;      Locals:         0       0       0       0       0       0
  7100 ;;      Temps:          0       0       0       0       0       0
  7101 ;;      Totals:         0       0       2       0       0       0
  7102 ;;Total ram usage:        2 bytes
  7103 ;; Hardware stack levels used: 1
  7104 ;; Hardware stack levels required when called: 8
  7105 ;; This function calls:
  7106 ;;		Nothing
  7107 ;; This function is called by:
  7108 ;;		_EUSART_Initialize
  7109 ;; This function uses a non-reentrant model
  7110 ;;
  7111                           
  7112     0FB8                     _EUSART_SetErrorHandler:	
  7113                           ;psect for function _EUSART_SetErrorHandler
  7114                           
  7115     0FB8                     l3640:	
  7116                           ;incstack = 0
  7117                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  7118                           
  7119                           
  7120                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  7121     0FB8  0021               	movlb	1	; select bank1
  7122     0FB9  0831               	movf	(EUSART_SetErrorHandler@interruptHandler+1)^(0+128),w
  7123     0FBA  0020               	movlb	0	; select bank0
  7124     0FBB  00B3               	movwf	_EUSART_ErrorHandler+1
  7125     0FBC  0021               	movlb	1	; select bank1
  7126     0FBD  0830               	movf	EUSART_SetErrorHandler@interruptHandler^(0+128),w
  7127     0FBE  0020               	movlb	0	; select bank0
  7128     0FBF  00B2               	movwf	_EUSART_ErrorHandler
  7129     0FC0                     l163:
  7130     0FC0  0008               	return
  7131     0FC1                     __end_of_EUSART_SetErrorHandler:
  7132                           
  7133                           	psect	text33
  7134     0F74                     __ptext33:	
  7135 ;; *************** function _DAC_Initialize *****************
  7136 ;; Defined at:
  7137 ;;		line 58 in file "mcc_generated_files/dac.c"
  7138 ;; Parameters:    Size  Location     Type
  7139 ;;		None
  7140 ;; Auto vars:     Size  Location     Type
  7141 ;;		None
  7142 ;; Return value:  Size  Location     Type
  7143 ;;                  1    wreg      void 
  7144 ;; Registers used:
  7145 ;;		wreg
  7146 ;; Tracked objects:
  7147 ;;		On entry : 0/0
  7148 ;;		On exit  : 0/0
  7149 ;;		Unchanged: 0/0
  7150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7151 ;;      Params:         0       0       0       0       0       0
  7152 ;;      Locals:         0       0       0       0       0       0
  7153 ;;      Temps:          0       0       0       0       0       0
  7154 ;;      Totals:         0       0       0       0       0       0
  7155 ;;Total ram usage:        0 bytes
  7156 ;; Hardware stack levels used: 1
  7157 ;; Hardware stack levels required when called: 8
  7158 ;; This function calls:
  7159 ;;		Nothing
  7160 ;; This function is called by:
  7161 ;;		_SYSTEM_Initialize
  7162 ;; This function uses a non-reentrant model
  7163 ;;
  7164                           
  7165     0F74                     _DAC_Initialize:	
  7166                           ;psect for function _DAC_Initialize
  7167                           
  7168     0F74                     l3764:	
  7169                           ;incstack = 0
  7170                           ; Regs used in _DAC_Initialize: [wreg]
  7171                           
  7172                           
  7173                           ;mcc_generated_files/dac.c: 61:     DACCON0 = 0x80;
  7174     0F74  3080               	movlw	128
  7175     0F75  0022               	movlb	2	; select bank2
  7176     0F76  0098               	movwf	24	;volatile
  7177                           
  7178                           ;mcc_generated_files/dac.c: 63:     DACCON1 = 0x10;
  7179     0F77  3010               	movlw	16
  7180     0F78  0099               	movwf	25	;volatile
  7181     0F79                     l600:
  7182     0F79  0008               	return
  7183     0F7A                     __end_of_DAC_Initialize:
  7184                           
  7185                           	psect	text34
  7186     07BE                     __ptext34:	
  7187 ;; *************** function _CMP2_Initialize *****************
  7188 ;; Defined at:
  7189 ;;		line 64 in file "mcc_generated_files/cmp2.c"
  7190 ;; Parameters:    Size  Location     Type
  7191 ;;		None
  7192 ;; Auto vars:     Size  Location     Type
  7193 ;;		None
  7194 ;; Return value:  Size  Location     Type
  7195 ;;                  1    wreg      void 
  7196 ;; Registers used:
  7197 ;;		wreg
  7198 ;; Tracked objects:
  7199 ;;		On entry : 0/0
  7200 ;;		On exit  : 0/0
  7201 ;;		Unchanged: 0/0
  7202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7203 ;;      Params:         0       0       0       0       0       0
  7204 ;;      Locals:         0       0       0       0       0       0
  7205 ;;      Temps:          0       0       0       0       0       0
  7206 ;;      Totals:         0       0       0       0       0       0
  7207 ;;Total ram usage:        0 bytes
  7208 ;; Hardware stack levels used: 1
  7209 ;; Hardware stack levels required when called: 8
  7210 ;; This function calls:
  7211 ;;		Nothing
  7212 ;; This function is called by:
  7213 ;;		_SYSTEM_Initialize
  7214 ;; This function uses a non-reentrant model
  7215 ;;
  7216                           
  7217     07BE                     _CMP2_Initialize:	
  7218                           ;psect for function _CMP2_Initialize
  7219                           
  7220     07BE                     l3756:	
  7221                           ;incstack = 0
  7222                           ; Regs used in _CMP2_Initialize: [wreg]
  7223                           
  7224                           
  7225                           ;mcc_generated_files/cmp2.c: 71:     PIE2bits.C2IE = 0;
  7226     07BE  0021               	movlb	1	; select bank1
  7227     07BF  1312               	bcf	18,6	;volatile
  7228     07C0                     l3758:
  7229                           
  7230                           ;mcc_generated_files/cmp2.c: 74:     CM2CON0 = 0x84;
  7231     07C0  3084               	movlw	132
  7232     07C1  0022               	movlb	2	; select bank2
  7233     07C2  0093               	movwf	19	;volatile
  7234                           
  7235                           ;mcc_generated_files/cmp2.c: 77:     CM2CON1 = 0x91;
  7236     07C3  3091               	movlw	145
  7237     07C4  0094               	movwf	20	;volatile
  7238     07C5                     l3760:
  7239                           
  7240                           ;mcc_generated_files/cmp2.c: 80:     PIR2bits.C2IF = 0;
  7241     07C5  0020               	movlb	0	; select bank0
  7242     07C6  1312               	bcf	18,6	;volatile
  7243     07C7                     l3762:
  7244                           
  7245                           ;mcc_generated_files/cmp2.c: 83:     PIE2bits.C2IE = 1;
  7246     07C7  0021               	movlb	1	; select bank1
  7247     07C8  1712               	bsf	18,6	;volatile
  7248     07C9                     l583:
  7249     07C9  0008               	return
  7250     07CA                     __end_of_CMP2_Initialize:
  7251                           
  7252                           	psect	text35
  7253     07CA                     __ptext35:	
  7254 ;; *************** function _CMP1_Initialize *****************
  7255 ;; Defined at:
  7256 ;;		line 64 in file "mcc_generated_files/cmp1.c"
  7257 ;; Parameters:    Size  Location     Type
  7258 ;;		None
  7259 ;; Auto vars:     Size  Location     Type
  7260 ;;		None
  7261 ;; Return value:  Size  Location     Type
  7262 ;;                  1    wreg      void 
  7263 ;; Registers used:
  7264 ;;		wreg
  7265 ;; Tracked objects:
  7266 ;;		On entry : 0/0
  7267 ;;		On exit  : 0/0
  7268 ;;		Unchanged: 0/0
  7269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7270 ;;      Params:         0       0       0       0       0       0
  7271 ;;      Locals:         0       0       0       0       0       0
  7272 ;;      Temps:          0       0       0       0       0       0
  7273 ;;      Totals:         0       0       0       0       0       0
  7274 ;;Total ram usage:        0 bytes
  7275 ;; Hardware stack levels used: 1
  7276 ;; Hardware stack levels required when called: 8
  7277 ;; This function calls:
  7278 ;;		Nothing
  7279 ;; This function is called by:
  7280 ;;		_SYSTEM_Initialize
  7281 ;; This function uses a non-reentrant model
  7282 ;;
  7283                           
  7284     07CA                     _CMP1_Initialize:	
  7285                           ;psect for function _CMP1_Initialize
  7286                           
  7287     07CA                     l3812:	
  7288                           ;incstack = 0
  7289                           ; Regs used in _CMP1_Initialize: [wreg]
  7290                           
  7291                           
  7292                           ;mcc_generated_files/cmp1.c: 71:     PIE2bits.C1IE = 0;
  7293     07CA  0021               	movlb	1	; select bank1
  7294     07CB  1292               	bcf	18,5	;volatile
  7295     07CC                     l3814:
  7296                           
  7297                           ;mcc_generated_files/cmp1.c: 74:     CM1CON0 = 0x84;
  7298     07CC  3084               	movlw	132
  7299     07CD  0022               	movlb	2	; select bank2
  7300     07CE  0091               	movwf	17	;volatile
  7301                           
  7302                           ;mcc_generated_files/cmp1.c: 77:     CM1CON1 = 0x90;
  7303     07CF  3090               	movlw	144
  7304     07D0  0092               	movwf	18	;volatile
  7305     07D1                     l3816:
  7306                           
  7307                           ;mcc_generated_files/cmp1.c: 80:     PIR2bits.C1IF = 0;
  7308     07D1  0020               	movlb	0	; select bank0
  7309     07D2  1292               	bcf	18,5	;volatile
  7310     07D3                     l3818:
  7311                           
  7312                           ;mcc_generated_files/cmp1.c: 83:     PIE2bits.C1IE = 1;
  7313     07D3  0021               	movlb	1	; select bank1
  7314     07D4  1692               	bsf	18,5	;volatile
  7315     07D5                     l729:
  7316     07D5  0008               	return
  7317     07D6                     __end_of_CMP1_Initialize:
  7318                           
  7319                           	psect	text36
  7320     06D1                     __ptext36:	
  7321 ;; *************** function _CCP4_Initialize *****************
  7322 ;; Defined at:
  7323 ;;		line 65 in file "mcc_generated_files/ccp4.c"
  7324 ;; Parameters:    Size  Location     Type
  7325 ;;		None
  7326 ;; Auto vars:     Size  Location     Type
  7327 ;;		None
  7328 ;; Return value:  Size  Location     Type
  7329 ;;                  1    wreg      void 
  7330 ;; Registers used:
  7331 ;;		wreg, status,2, status,0, pclath, cstack
  7332 ;; Tracked objects:
  7333 ;;		On entry : 0/0
  7334 ;;		On exit  : 0/0
  7335 ;;		Unchanged: 0/0
  7336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7337 ;;      Params:         0       0       0       0       0       0
  7338 ;;      Locals:         0       0       0       0       0       0
  7339 ;;      Temps:          0       0       0       0       0       0
  7340 ;;      Totals:         0       0       0       0       0       0
  7341 ;;Total ram usage:        0 bytes
  7342 ;; Hardware stack levels used: 1
  7343 ;; Hardware stack levels required when called: 9
  7344 ;; This function calls:
  7345 ;;		_CCP4_SetCallBack
  7346 ;; This function is called by:
  7347 ;;		_SYSTEM_Initialize
  7348 ;; This function uses a non-reentrant model
  7349 ;;
  7350                           
  7351     06D1                     _CCP4_Initialize:	
  7352                           ;psect for function _CCP4_Initialize
  7353                           
  7354     06D1                     l3736:	
  7355                           ;incstack = 0
  7356                           ; Regs used in _CCP4_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7357                           
  7358                           
  7359                           ;mcc_generated_files/ccp4.c: 70:  CCP4CON = 0x04;
  7360     06D1  3004               	movlw	4
  7361     06D2  0026               	movlb	6	; select bank6
  7362     06D3  009A               	movwf	26	;volatile
  7363     06D4                     l3738:
  7364                           
  7365                           ;mcc_generated_files/ccp4.c: 73:  CCPR4L = 0x00;
  7366     06D4  0198               	clrf	24	;volatile
  7367     06D5                     l3740:
  7368                           
  7369                           ;mcc_generated_files/ccp4.c: 76:  CCPR4H = 0x00;
  7370     06D5  0199               	clrf	25	;volatile
  7371     06D6                     l3742:
  7372                           
  7373                           ;mcc_generated_files/ccp4.c: 79:     CCP4_SetCallBack(CCP4_DefaultCallBack);
  7374     06D6  303E               	movlw	low _CCP4_DefaultCallBack
  7375     06D7  0021               	movlb	1	; select bank1
  7376     06D8  00B0               	movwf	CCP4_SetCallBack@customCallBack^(0+128)
  7377     06D9  300F               	movlw	high _CCP4_DefaultCallBack
  7378     06DA  00B1               	movwf	(CCP4_SetCallBack@customCallBack^(0+128)+1)
  7379     06DB  318F  27AF  3186   	fcall	_CCP4_SetCallBack
  7380     06DE                     l3744:
  7381                           
  7382                           ;mcc_generated_files/ccp4.c: 83:     PIR3bits.CCP4IF = 0;
  7383     06DE  0020               	movlb	0	; select bank0
  7384     06DF  1293               	bcf	19,5	;volatile
  7385     06E0                     l3746:
  7386                           
  7387                           ;mcc_generated_files/ccp4.c: 86:     PIE3bits.CCP4IE = 1;
  7388     06E0  0021               	movlb	1	; select bank1
  7389     06E1  1693               	bsf	19,5	;volatile
  7390     06E2                     l302:
  7391     06E2  0008               	return
  7392     06E3                     __end_of_CCP4_Initialize:
  7393                           
  7394                           	psect	text37
  7395     0FAF                     __ptext37:	
  7396 ;; *************** function _CCP4_SetCallBack *****************
  7397 ;; Defined at:
  7398 ;;		line 104 in file "mcc_generated_files/ccp4.c"
  7399 ;; Parameters:    Size  Location     Type
  7400 ;;  customCallBa    2    0[BANK1 ] PTR FTN(unsigned short ,
  7401 ;;		 -> CCP4_Interrupt(1), CCP4_DefaultCallBack(1), 
  7402 ;; Auto vars:     Size  Location     Type
  7403 ;;		None
  7404 ;; Return value:  Size  Location     Type
  7405 ;;                  1    wreg      void 
  7406 ;; Registers used:
  7407 ;;		wreg
  7408 ;; Tracked objects:
  7409 ;;		On entry : 0/0
  7410 ;;		On exit  : 0/0
  7411 ;;		Unchanged: 0/0
  7412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7413 ;;      Params:         0       0       2       0       0       0
  7414 ;;      Locals:         0       0       0       0       0       0
  7415 ;;      Temps:          0       0       0       0       0       0
  7416 ;;      Totals:         0       0       2       0       0       0
  7417 ;;Total ram usage:        2 bytes
  7418 ;; Hardware stack levels used: 1
  7419 ;; Hardware stack levels required when called: 8
  7420 ;; This function calls:
  7421 ;;		Nothing
  7422 ;; This function is called by:
  7423 ;;		_CCP4_Initialize
  7424 ;;		_main
  7425 ;; This function uses a non-reentrant model
  7426 ;;
  7427                           
  7428     0FAF                     _CCP4_SetCallBack:	
  7429                           ;psect for function _CCP4_SetCallBack
  7430                           
  7431     0FAF                     l3646:	
  7432                           ;incstack = 0
  7433                           ; Regs used in _CCP4_SetCallBack: [wreg]
  7434                           
  7435                           
  7436                           ;mcc_generated_files/ccp4.c: 105:     CCP4_CallBack = customCallBack;
  7437     0FAF  0021               	movlb	1	; select bank1
  7438     0FB0  0831               	movf	(CCP4_SetCallBack@customCallBack+1)^(0+128),w
  7439     0FB1  0020               	movlb	0	; select bank0
  7440     0FB2  00AD               	movwf	_CCP4_CallBack+1
  7441     0FB3  0021               	movlb	1	; select bank1
  7442     0FB4  0830               	movf	CCP4_SetCallBack@customCallBack^(0+128),w
  7443     0FB5  0020               	movlb	0	; select bank0
  7444     0FB6  00AC               	movwf	_CCP4_CallBack
  7445     0FB7                     l308:
  7446     0FB7  0008               	return
  7447     0FB8                     __end_of_CCP4_SetCallBack:
  7448                           
  7449                           	psect	text38
  7450     0F8D                     __ptext38:	
  7451 ;; *************** function _ADC_Initialize *****************
  7452 ;; Defined at:
  7453 ;;		line 67 in file "mcc_generated_files/adc.c"
  7454 ;; Parameters:    Size  Location     Type
  7455 ;;		None
  7456 ;; Auto vars:     Size  Location     Type
  7457 ;;		None
  7458 ;; Return value:  Size  Location     Type
  7459 ;;                  1    wreg      void 
  7460 ;; Registers used:
  7461 ;;		wreg, status,2
  7462 ;; Tracked objects:
  7463 ;;		On entry : 0/0
  7464 ;;		On exit  : 0/0
  7465 ;;		Unchanged: 0/0
  7466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7467 ;;      Params:         0       0       0       0       0       0
  7468 ;;      Locals:         0       0       0       0       0       0
  7469 ;;      Temps:          0       0       0       0       0       0
  7470 ;;      Totals:         0       0       0       0       0       0
  7471 ;;Total ram usage:        0 bytes
  7472 ;; Hardware stack levels used: 1
  7473 ;; Hardware stack levels required when called: 8
  7474 ;; This function calls:
  7475 ;;		Nothing
  7476 ;; This function is called by:
  7477 ;;		_SYSTEM_Initialize
  7478 ;; This function uses a non-reentrant model
  7479 ;;
  7480                           
  7481     0F8D                     _ADC_Initialize:	
  7482                           ;psect for function _ADC_Initialize
  7483                           
  7484     0F8D                     l3820:	
  7485                           ;incstack = 0
  7486                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  7487                           
  7488                           
  7489                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0x93;
  7490     0F8D  3093               	movlw	147
  7491     0F8E  0021               	movlb	1	; select bank1
  7492     0F8F  009E               	movwf	30	;volatile
  7493     0F90                     l3822:
  7494                           
  7495                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  7496     0F90  019B               	clrf	27	;volatile
  7497     0F91                     l3824:
  7498                           
  7499                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  7500     0F91  019C               	clrf	28	;volatile
  7501                           
  7502                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x01;
  7503     0F92  3001               	movlw	1
  7504     0F93  009D               	movwf	29	;volatile
  7505     0F94                     l497:
  7506     0F94  0008               	return
  7507     0F95                     __end_of_ADC_Initialize:
  7508                           
  7509                           	psect	text39
  7510     0F6F                     __ptext39:	
  7511 ;; *************** function _EUSART_is_rx_ready *****************
  7512 ;; Defined at:
  7513 ;;		line 99 in file "mcc_generated_files/eusart.c"
  7514 ;; Parameters:    Size  Location     Type
  7515 ;;		None
  7516 ;; Auto vars:     Size  Location     Type
  7517 ;;		None
  7518 ;; Return value:  Size  Location     Type
  7519 ;;                  1    wreg      _Bool 
  7520 ;; Registers used:
  7521 ;;		wreg, status,2, status,0
  7522 ;; Tracked objects:
  7523 ;;		On entry : 0/0
  7524 ;;		On exit  : 0/0
  7525 ;;		Unchanged: 0/0
  7526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7527 ;;      Params:         0       0       0       0       0       0
  7528 ;;      Locals:         0       0       0       0       0       0
  7529 ;;      Temps:          0       0       0       0       0       0
  7530 ;;      Totals:         0       0       0       0       0       0
  7531 ;;Total ram usage:        0 bytes
  7532 ;; Hardware stack levels used: 1
  7533 ;; Hardware stack levels required when called: 8
  7534 ;; This function calls:
  7535 ;;		Nothing
  7536 ;; This function is called by:
  7537 ;;		_main
  7538 ;; This function uses a non-reentrant model
  7539 ;;
  7540                           
  7541     0F6F                     _EUSART_is_rx_ready:	
  7542                           ;psect for function _EUSART_is_rx_ready
  7543                           
  7544     0F6F                     l3894:	
  7545                           ;incstack = 0
  7546                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
  7547                           
  7548                           
  7549                           ;mcc_generated_files/eusart.c: 101:     return (_Bool)(PIR1bits.RCIF);
  7550     0F6F  0020               	movlb	0	; select bank0
  7551     0F70  0E11               	swapf	17,w	;volatile
  7552     0F71  0C89               	rrf	9,f
  7553     0F72  3901               	andlw	1
  7554     0F73                     l126:
  7555     0F73  0008               	return
  7556     0F74                     __end_of_EUSART_is_rx_ready:
  7557                           
  7558                           	psect	text40
  7559     0726                     __ptext40:	
  7560 ;; *************** function _EUSART_Read *****************
  7561 ;; Defined at:
  7562 ;;		line 113 in file "mcc_generated_files/eusart.c"
  7563 ;; Parameters:    Size  Location     Type
  7564 ;;		None
  7565 ;; Auto vars:     Size  Location     Type
  7566 ;;		None
  7567 ;; Return value:  Size  Location     Type
  7568 ;;                  1    wreg      unsigned char 
  7569 ;; Registers used:
  7570 ;;		wreg, status,2
  7571 ;; Tracked objects:
  7572 ;;		On entry : 0/0
  7573 ;;		On exit  : 0/0
  7574 ;;		Unchanged: 0/0
  7575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7576 ;;      Params:         0       0       0       0       0       0
  7577 ;;      Locals:         0       0       0       0       0       0
  7578 ;;      Temps:          0       0       0       0       0       0
  7579 ;;      Totals:         0       0       0       0       0       0
  7580 ;;Total ram usage:        0 bytes
  7581 ;; Hardware stack levels used: 1
  7582 ;; Hardware stack levels required when called: 8
  7583 ;; This function calls:
  7584 ;;		Nothing
  7585 ;; This function is called by:
  7586 ;;		_main
  7587 ;; This function uses a non-reentrant model
  7588 ;;
  7589                           
  7590     0726                     _EUSART_Read:	
  7591                           ;psect for function _EUSART_Read
  7592                           
  7593     0726                     l3898:	
  7594                           ;incstack = 0
  7595                           ; Regs used in _EUSART_Read: [wreg+status,2]
  7596                           
  7597     0726                     l135:	
  7598                           ;mcc_generated_files/eusart.c: 116:     {;mcc_generated_files/eusart.c: 117:     }
  7599                           
  7600                           
  7601                           ;mcc_generated_files/eusart.c: 115:     while(!PIR1bits.RCIF)
  7602     0726  0020               	movlb	0	; select bank0
  7603     0727  1E91               	btfss	17,5	;volatile
  7604     0728  2F2A               	goto	u2341
  7605     0729  2F2B               	goto	u2340
  7606     072A                     u2341:
  7607     072A  2F26               	goto	l135
  7608     072B                     u2340:
  7609     072B                     l3900:
  7610                           
  7611                           ;mcc_generated_files/eusart.c: 119:     eusartRxLastError.status = 0;
  7612     072B  01D0               	clrf	_eusartRxLastError	;volatile
  7613     072C                     l3902:
  7614                           
  7615                           ;mcc_generated_files/eusart.c: 121:     if(1 == RCSTAbits.OERR)
  7616     072C  0023               	movlb	3	; select bank3
  7617     072D  1C9D               	btfss	29,1	;volatile
  7618     072E  2F30               	goto	u2351
  7619     072F  2F31               	goto	u2350
  7620     0730                     u2351:
  7621     0730  2F33               	goto	l3906
  7622     0731                     u2350:
  7623     0731                     l3904:
  7624                           
  7625                           ;mcc_generated_files/eusart.c: 122:     {;mcc_generated_files/eusart.c: 125:         RCS
      +                          TAbits.CREN = 0;
  7626     0731  121D               	bcf	29,4	;volatile
  7627                           
  7628                           ;mcc_generated_files/eusart.c: 126:         RCSTAbits.CREN = 1;
  7629     0732  161D               	bsf	29,4	;volatile
  7630     0733                     l3906:
  7631                           
  7632                           ;mcc_generated_files/eusart.c: 129:     return RCREG;
  7633     0733  0819               	movf	25,w	;volatile
  7634     0734                     l139:
  7635     0734  0008               	return
  7636     0735                     __end_of_EUSART_Read:
  7637                           
  7638                           	psect	text41
  7639     0FA6                     __ptext41:	
  7640 ;; *************** function _CMP2_SetInterruptHandler *****************
  7641 ;; Defined at:
  7642 ;;		line 105 in file "mcc_generated_files/cmp2.c"
  7643 ;; Parameters:    Size  Location     Type
  7644 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  7645 ;;		 -> S4_Interrupt(1), 
  7646 ;; Auto vars:     Size  Location     Type
  7647 ;;		None
  7648 ;; Return value:  Size  Location     Type
  7649 ;;                  1    wreg      void 
  7650 ;; Registers used:
  7651 ;;		wreg
  7652 ;; Tracked objects:
  7653 ;;		On entry : 0/0
  7654 ;;		On exit  : 0/0
  7655 ;;		Unchanged: 0/0
  7656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7657 ;;      Params:         0       0       2       0       0       0
  7658 ;;      Locals:         0       0       0       0       0       0
  7659 ;;      Temps:          0       0       0       0       0       0
  7660 ;;      Totals:         0       0       2       0       0       0
  7661 ;;Total ram usage:        2 bytes
  7662 ;; Hardware stack levels used: 1
  7663 ;; Hardware stack levels required when called: 8
  7664 ;; This function calls:
  7665 ;;		Nothing
  7666 ;; This function is called by:
  7667 ;;		_main
  7668 ;; This function uses a non-reentrant model
  7669 ;;
  7670                           
  7671     0FA6                     _CMP2_SetInterruptHandler:	
  7672                           ;psect for function _CMP2_SetInterruptHandler
  7673                           
  7674     0FA6                     l3912:	
  7675                           ;incstack = 0
  7676                           ; Regs used in _CMP2_SetInterruptHandler: [wreg]
  7677                           
  7678                           
  7679                           ;mcc_generated_files/cmp2.c: 106:     CMP2_InterruptHandler = InterruptHandler;
  7680     0FA6  0021               	movlb	1	; select bank1
  7681     0FA7  0831               	movf	(CMP2_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  7682     0FA8  0020               	movlb	0	; select bank0
  7683     0FA9  00A7               	movwf	_CMP2_InterruptHandler+1
  7684     0FAA  0021               	movlb	1	; select bank1
  7685     0FAB  0830               	movf	CMP2_SetInterruptHandler@InterruptHandler^(0+128),w
  7686     0FAC  0020               	movlb	0	; select bank0
  7687     0FAD  00A6               	movwf	_CMP2_InterruptHandler
  7688     0FAE                     l593:
  7689     0FAE  0008               	return
  7690     0FAF                     __end_of_CMP2_SetInterruptHandler:
  7691                           
  7692                           	psect	text42
  7693     0F9D                     __ptext42:	
  7694 ;; *************** function _CMP1_SetInterruptHandler *****************
  7695 ;; Defined at:
  7696 ;;		line 105 in file "mcc_generated_files/cmp1.c"
  7697 ;; Parameters:    Size  Location     Type
  7698 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  7699 ;;		 -> S3_Interrupt(1), 
  7700 ;; Auto vars:     Size  Location     Type
  7701 ;;		None
  7702 ;; Return value:  Size  Location     Type
  7703 ;;                  1    wreg      void 
  7704 ;; Registers used:
  7705 ;;		wreg
  7706 ;; Tracked objects:
  7707 ;;		On entry : 0/0
  7708 ;;		On exit  : 0/0
  7709 ;;		Unchanged: 0/0
  7710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7711 ;;      Params:         0       0       2       0       0       0
  7712 ;;      Locals:         0       0       0       0       0       0
  7713 ;;      Temps:          0       0       0       0       0       0
  7714 ;;      Totals:         0       0       2       0       0       0
  7715 ;;Total ram usage:        2 bytes
  7716 ;; Hardware stack levels used: 1
  7717 ;; Hardware stack levels required when called: 8
  7718 ;; This function calls:
  7719 ;;		Nothing
  7720 ;; This function is called by:
  7721 ;;		_main
  7722 ;; This function uses a non-reentrant model
  7723 ;;
  7724                           
  7725     0F9D                     _CMP1_SetInterruptHandler:	
  7726                           ;psect for function _CMP1_SetInterruptHandler
  7727                           
  7728     0F9D                     l3914:	
  7729                           ;incstack = 0
  7730                           ; Regs used in _CMP1_SetInterruptHandler: [wreg]
  7731                           
  7732                           
  7733                           ;mcc_generated_files/cmp1.c: 106:     CMP1_InterruptHandler = InterruptHandler;
  7734     0F9D  0021               	movlb	1	; select bank1
  7735     0F9E  0831               	movf	(CMP1_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  7736     0F9F  0020               	movlb	0	; select bank0
  7737     0FA0  00A1               	movwf	_CMP1_InterruptHandler+1
  7738     0FA1  0021               	movlb	1	; select bank1
  7739     0FA2  0830               	movf	CMP1_SetInterruptHandler@InterruptHandler^(0+128),w
  7740     0FA3  0020               	movlb	0	; select bank0
  7741     0FA4  00A0               	movwf	_CMP1_InterruptHandler
  7742     0FA5                     l739:
  7743     0FA5  0008               	return
  7744     0FA6                     __end_of_CMP1_SetInterruptHandler:
  7745                           
  7746                           	psect	intentry
  7747     0004                     __pintentry:	
  7748 ;; *************** function _INTERRUPT_InterruptManager *****************
  7749 ;; Defined at:
  7750 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  7751 ;; Parameters:    Size  Location     Type
  7752 ;;		None
  7753 ;; Auto vars:     Size  Location     Type
  7754 ;;		None
  7755 ;; Return value:  Size  Location     Type
  7756 ;;                  1    wreg      void 
  7757 ;; Registers used:
  7758 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7759 ;; Tracked objects:
  7760 ;;		On entry : 0/0
  7761 ;;		On exit  : 0/0
  7762 ;;		Unchanged: 0/0
  7763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7764 ;;      Params:         0       0       0       0       0       0
  7765 ;;      Locals:         0       0       0       0       0       0
  7766 ;;      Temps:          0       0       0       0       0       0
  7767 ;;      Totals:         0       0       0       0       0       0
  7768 ;;Total ram usage:        0 bytes
  7769 ;; Hardware stack levels used: 1
  7770 ;; Hardware stack levels required when called: 7
  7771 ;; This function calls:
  7772 ;;		_CCP4_CaptureISR
  7773 ;;		_CMP1_ISR
  7774 ;;		_CMP2_ISR
  7775 ;;		_PIN_MANAGER_IOC
  7776 ;;		_TMR0_ISR
  7777 ;;		_TMR4_ISR
  7778 ;;		_TMR6_ISR
  7779 ;; This function is called by:
  7780 ;;		Interrupt level 1
  7781 ;; This function uses a non-reentrant model
  7782 ;;
  7783                           
  7784     0004                     _INTERRUPT_InterruptManager:
  7785                           
  7786                           ;incstack = 0
  7787     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  7788                           
  7789                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7790     0005  3180               	pagesel	$
  7791     0006                     i1l3532:
  7792                           
  7793                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.IOCIE == 1 && INTCONbits
      +                          .IOCIF == 1)
  7794     0006  1D8B               	btfss	11,3	;volatile
  7795     0007  2809               	goto	u206_21
  7796     0008  280A               	goto	u206_20
  7797     0009                     u206_21:
  7798     0009  2812               	goto	i1l192
  7799     000A                     u206_20:
  7800     000A                     i1l3534:
  7801     000A  1C0B               	btfss	11,0	;volatile
  7802     000B  280D               	goto	u207_21
  7803     000C  280E               	goto	u207_20
  7804     000D                     u207_21:
  7805     000D  2812               	goto	i1l192
  7806     000E                     u207_20:
  7807     000E                     i1l3536:
  7808                           
  7809                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
  7810     000E  3186  26F5  3180   	fcall	_PIN_MANAGER_IOC
  7811                           
  7812                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  7813     0011  2868               	goto	i1l208
  7814     0012                     i1l192:	
  7815                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.TMR0IE == 1 && INTC
      +                          ONbits.TMR0IF == 1)
  7816                           
  7817     0012  1E8B               	btfss	11,5	;volatile
  7818     0013  2815               	goto	u208_21
  7819     0014  2816               	goto	u208_20
  7820     0015                     u208_21:
  7821     0015  281E               	goto	i1l194
  7822     0016                     u208_20:
  7823     0016                     i1l3538:
  7824     0016  1D0B               	btfss	11,2	;volatile
  7825     0017  2819               	goto	u209_21
  7826     0018  281A               	goto	u209_20
  7827     0019                     u209_21:
  7828     0019  281E               	goto	i1l194
  7829     001A                     u209_20:
  7830     001A                     i1l3540:
  7831                           
  7832                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         TMR0_ISR();
  7833     001A  3186  263B  3180   	fcall	_TMR0_ISR
  7834                           
  7835                           ;mcc_generated_files/interrupt_manager.c: 62:     }
  7836     001D  2868               	goto	i1l208
  7837     001E                     i1l194:	
  7838                           ;mcc_generated_files/interrupt_manager.c: 63:     else if(INTCONbits.PEIE == 1)
  7839                           
  7840     001E  1F0B               	btfss	11,6	;volatile
  7841     001F  2821               	goto	u210_21
  7842     0020  2822               	goto	u210_20
  7843     0021                     u210_21:
  7844     0021  2868               	goto	i1l202
  7845     0022                     u210_20:
  7846     0022                     i1l3542:
  7847                           
  7848                           ;mcc_generated_files/interrupt_manager.c: 64:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 65:         if(PIE3bits.TMR4IE == 1 && PIR3bits.TMR4IF == 1)
  7849     0022  0021               	movlb	1	; select bank1
  7850     0023  1C93               	btfss	19,1	;volatile
  7851     0024  2826               	goto	u211_21
  7852     0025  2827               	goto	u211_20
  7853     0026                     u211_21:
  7854     0026  2830               	goto	i1l197
  7855     0027                     u211_20:
  7856     0027                     i1l3544:
  7857     0027  0020               	movlb	0	; select bank0
  7858     0028  1C93               	btfss	19,1	;volatile
  7859     0029  282B               	goto	u212_21
  7860     002A  282C               	goto	u212_20
  7861     002B                     u212_21:
  7862     002B  2830               	goto	i1l197
  7863     002C                     u212_20:
  7864     002C                     i1l3546:
  7865                           
  7866                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             TMR4_ISR();
  7867     002C  3186  2680  3180   	fcall	_TMR4_ISR
  7868                           
  7869                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  7870     002F  2868               	goto	i1l208
  7871     0030                     i1l197:	
  7872                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE2bits.C2IE == 1 && PIR2
      +                          bits.C2IF == 1)
  7873                           
  7874     0030  0021               	movlb	1	; select bank1
  7875     0031  1F12               	btfss	18,6	;volatile
  7876     0032  2834               	goto	u213_21
  7877     0033  2835               	goto	u213_20
  7878     0034                     u213_21:
  7879     0034  283E               	goto	i1l199
  7880     0035                     u213_20:
  7881     0035                     i1l3548:
  7882     0035  0020               	movlb	0	; select bank0
  7883     0036  1F12               	btfss	18,6	;volatile
  7884     0037  2839               	goto	u214_21
  7885     0038  283A               	goto	u214_20
  7886     0039                     u214_21:
  7887     0039  283E               	goto	i1l199
  7888     003A                     u214_20:
  7889     003A                     i1l3550:
  7890                           
  7891                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             CMP2_ISR();
  7892     003A  3187  2762  3180   	fcall	_CMP2_ISR
  7893                           
  7894                           ;mcc_generated_files/interrupt_manager.c: 72:         }
  7895     003D  2868               	goto	i1l208
  7896     003E                     i1l199:	
  7897                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE2bits.C1IE == 1 && PIR2
      +                          bits.C1IF == 1)
  7898                           
  7899     003E  0021               	movlb	1	; select bank1
  7900     003F  1E92               	btfss	18,5	;volatile
  7901     0040  2842               	goto	u215_21
  7902     0041  2843               	goto	u215_20
  7903     0042                     u215_21:
  7904     0042  284C               	goto	i1l201
  7905     0043                     u215_20:
  7906     0043                     i1l3552:
  7907     0043  0020               	movlb	0	; select bank0
  7908     0044  1E92               	btfss	18,5	;volatile
  7909     0045  2847               	goto	u216_21
  7910     0046  2848               	goto	u216_20
  7911     0047                     u216_21:
  7912     0047  284C               	goto	i1l201
  7913     0048                     u216_20:
  7914     0048                     i1l3554:
  7915                           
  7916                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             CMP1_ISR();
  7917     0048  3187  2770  3180   	fcall	_CMP1_ISR
  7918                           
  7919                           ;mcc_generated_files/interrupt_manager.c: 76:         }
  7920     004B  2868               	goto	i1l208
  7921     004C                     i1l201:	
  7922                           ;mcc_generated_files/interrupt_manager.c: 77:         else if(PIE3bits.CCP4IE == 1 && PI
      +                          R3bits.CCP4IF == 1)
  7923                           
  7924     004C  0021               	movlb	1	; select bank1
  7925     004D  1E93               	btfss	19,5	;volatile
  7926     004E  2850               	goto	u217_21
  7927     004F  2851               	goto	u217_20
  7928     0050                     u217_21:
  7929     0050  285A               	goto	i1l203
  7930     0051                     u217_20:
  7931     0051                     i1l3556:
  7932     0051  0020               	movlb	0	; select bank0
  7933     0052  1E93               	btfss	19,5	;volatile
  7934     0053  2855               	goto	u218_21
  7935     0054  2856               	goto	u218_20
  7936     0055                     u218_21:
  7937     0055  285A               	goto	i1l203
  7938     0056                     u218_20:
  7939     0056                     i1l3558:
  7940                           
  7941                           ;mcc_generated_files/interrupt_manager.c: 78:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 79:             CCP4_CaptureISR();
  7942     0056  3186  26E3  3180   	fcall	_CCP4_CaptureISR
  7943                           
  7944                           ;mcc_generated_files/interrupt_manager.c: 80:         }
  7945     0059  2868               	goto	i1l208
  7946     005A                     i1l203:	
  7947                           ;mcc_generated_files/interrupt_manager.c: 81:         else if(PIE3bits.TMR6IE == 1 && PI
      +                          R3bits.TMR6IF == 1)
  7948                           
  7949     005A  0021               	movlb	1	; select bank1
  7950     005B  1D93               	btfss	19,3	;volatile
  7951     005C  285E               	goto	u219_21
  7952     005D  285F               	goto	u219_20
  7953     005E                     u219_21:
  7954     005E  2868               	goto	i1l202
  7955     005F                     u219_20:
  7956     005F                     i1l3560:
  7957     005F  0020               	movlb	0	; select bank0
  7958     0060  1D93               	btfss	19,3	;volatile
  7959     0061  2863               	goto	u220_21
  7960     0062  2864               	goto	u220_20
  7961     0063                     u220_21:
  7962     0063  2868               	goto	i1l202
  7963     0064                     u220_20:
  7964     0064                     i1l3562:
  7965                           
  7966                           ;mcc_generated_files/interrupt_manager.c: 82:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 83:             TMR6_ISR();
  7967     0064  3186  266A  3180   	fcall	_TMR6_ISR
  7968                           
  7969                           ;mcc_generated_files/interrupt_manager.c: 84:         }
  7970     0067  2868               	goto	i1l208
  7971     0068                     i1l202:
  7972     0068                     i1l208:
  7973     0068  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  7974     0069  0009               	retfie
  7975     006A                     __end_of_INTERRUPT_InterruptManager:
  7976                           
  7977                           	psect	text44
  7978     066A                     __ptext44:	
  7979 ;; *************** function _TMR6_ISR *****************
  7980 ;; Defined at:
  7981 ;;		line 119 in file "mcc_generated_files/tmr6.c"
  7982 ;; Parameters:    Size  Location     Type
  7983 ;;		None
  7984 ;; Auto vars:     Size  Location     Type
  7985 ;;		None
  7986 ;; Return value:  Size  Location     Type
  7987 ;;                  1    wreg      void 
  7988 ;; Registers used:
  7989 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7990 ;; Tracked objects:
  7991 ;;		On entry : 0/0
  7992 ;;		On exit  : 0/0
  7993 ;;		Unchanged: 0/0
  7994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7995 ;;      Params:         0       0       0       0       0       0
  7996 ;;      Locals:         0       0       0       0       0       0
  7997 ;;      Temps:          0       0       0       0       0       0
  7998 ;;      Totals:         0       0       0       0       0       0
  7999 ;;Total ram usage:        0 bytes
  8000 ;; Hardware stack levels used: 1
  8001 ;; Hardware stack levels required when called: 6
  8002 ;; This function calls:
  8003 ;;		_TMR6_CallBack
  8004 ;; This function is called by:
  8005 ;;		_INTERRUPT_InterruptManager
  8006 ;; This function uses a non-reentrant model
  8007 ;;
  8008                           
  8009     066A                     _TMR6_ISR:	
  8010                           ;psect for function _TMR6_ISR
  8011                           
  8012     066A                     i1l3454:	
  8013                           ;incstack = 0
  8014                           ; Regs used in _TMR6_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8015                           
  8016                           
  8017                           ;mcc_generated_files/tmr6.c: 121:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr6.c: 124:     PIR3bits.TMR6IF = 0;
  8018     066A  0020               	movlb	0	; select bank0
  8019     066B  1193               	bcf	19,3	;volatile
  8020     066C                     i1l3456:
  8021                           
  8022                           ;mcc_generated_files/tmr6.c: 127:     if (++CountCallBack >= 400)
  8023     066C  3001               	movlw	1
  8024     066D  07C7               	addwf	TMR6_ISR@CountCallBack,f	;volatile
  8025     066E  3000               	movlw	0
  8026     066F  3DC8               	addwfc	TMR6_ISR@CountCallBack+1,f	;volatile
  8027     0670  3001               	movlw	1
  8028     0671  0248               	subwf	TMR6_ISR@CountCallBack+1,w	;volatile
  8029     0672  3090               	movlw	144
  8030     0673  1903               	skipnz
  8031     0674  0247               	subwf	TMR6_ISR@CountCallBack,w	;volatile
  8032     0675  1C03               	skipc
  8033     0676  2E78               	goto	u198_21
  8034     0677  2E79               	goto	u198_20
  8035     0678                     u198_21:
  8036     0678  2E7F               	goto	i1l650
  8037     0679                     u198_20:
  8038     0679                     i1l3458:
  8039                           
  8040                           ;mcc_generated_files/tmr6.c: 128:     {;mcc_generated_files/tmr6.c: 130:         TMR6_Ca
      +                          llBack();
  8041     0679  3187  278B  3186   	fcall	_TMR6_CallBack
  8042     067C                     i1l3460:
  8043                           
  8044                           ;mcc_generated_files/tmr6.c: 133:         CountCallBack = 0;
  8045     067C  0020               	movlb	0	; select bank0
  8046     067D  01C7               	clrf	TMR6_ISR@CountCallBack	;volatile
  8047     067E  01C8               	clrf	TMR6_ISR@CountCallBack+1	;volatile
  8048     067F                     i1l650:
  8049     067F  0008               	return
  8050     0680                     __end_of_TMR6_ISR:
  8051                           
  8052                           	psect	text45
  8053     078B                     __ptext45:	
  8054 ;; *************** function _TMR6_CallBack *****************
  8055 ;; Defined at:
  8056 ;;		line 137 in file "mcc_generated_files/tmr6.c"
  8057 ;; Parameters:    Size  Location     Type
  8058 ;;		None
  8059 ;; Auto vars:     Size  Location     Type
  8060 ;;		None
  8061 ;; Return value:  Size  Location     Type
  8062 ;;                  1    wreg      void 
  8063 ;; Registers used:
  8064 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8065 ;; Tracked objects:
  8066 ;;		On entry : 0/0
  8067 ;;		On exit  : 0/0
  8068 ;;		Unchanged: 0/0
  8069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8070 ;;      Params:         0       0       0       0       0       0
  8071 ;;      Locals:         0       0       0       0       0       0
  8072 ;;      Temps:          0       0       0       0       0       0
  8073 ;;      Totals:         0       0       0       0       0       0
  8074 ;;Total ram usage:        0 bytes
  8075 ;; Hardware stack levels used: 1
  8076 ;; Hardware stack levels required when called: 5
  8077 ;; This function calls:
  8078 ;;		Absolute function
  8079 ;;		_TMR6_DefaultInterruptHandler
  8080 ;;		_TMR6_Interrupt
  8081 ;; This function is called by:
  8082 ;;		_TMR6_ISR
  8083 ;; This function uses a non-reentrant model
  8084 ;;
  8085                           
  8086     078B                     _TMR6_CallBack:	
  8087                           ;psect for function _TMR6_CallBack
  8088                           
  8089     078B                     i1l3282:	
  8090                           ;incstack = 0
  8091                           ; Regs used in _TMR6_CallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8092                           
  8093                           
  8094                           ;mcc_generated_files/tmr6.c: 141:     if(TMR6_InterruptHandler)
  8095     078B  0020               	movlb	0	; select bank0
  8096     078C  0824               	movf	_TMR6_InterruptHandler,w
  8097     078D  0425               	iorwf	_TMR6_InterruptHandler+1,w
  8098     078E  1903               	btfsc	3,2
  8099     078F  2F91               	goto	u174_21
  8100     0790  2F92               	goto	u174_20
  8101     0791                     u174_21:
  8102     0791  2F97               	goto	i1l654
  8103     0792                     u174_20:
  8104     0792                     i1l3284:
  8105                           
  8106                           ;mcc_generated_files/tmr6.c: 142:     {;mcc_generated_files/tmr6.c: 143:         TMR6_In
      +                          terruptHandler();
  8107     0792  0825               	movf	_TMR6_InterruptHandler+1,w
  8108     0793  008A               	movwf	10
  8109     0794  0824               	movf	_TMR6_InterruptHandler,w
  8110     0795  000A               	callw
  8111     0796  3187               	pagesel	$
  8112     0797                     i1l654:
  8113     0797  0008               	return
  8114     0798                     __end_of_TMR6_CallBack:
  8115                           
  8116                           	psect	text46
  8117     0003                     __ptext46:	
  8118 ;; *************** function _TMR6_DefaultInterruptHandler *****************
  8119 ;; Defined at:
  8120 ;;		line 151 in file "mcc_generated_files/tmr6.c"
  8121 ;; Parameters:    Size  Location     Type
  8122 ;;		None
  8123 ;; Auto vars:     Size  Location     Type
  8124 ;;		None
  8125 ;; Return value:  Size  Location     Type
  8126 ;;                  1    wreg      void 
  8127 ;; Registers used:
  8128 ;;		None
  8129 ;; Tracked objects:
  8130 ;;		On entry : 0/0
  8131 ;;		On exit  : 0/0
  8132 ;;		Unchanged: 0/0
  8133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8134 ;;      Params:         0       0       0       0       0       0
  8135 ;;      Locals:         0       0       0       0       0       0
  8136 ;;      Temps:          0       0       0       0       0       0
  8137 ;;      Totals:         0       0       0       0       0       0
  8138 ;;Total ram usage:        0 bytes
  8139 ;; Hardware stack levels used: 1
  8140 ;; This function calls:
  8141 ;;		Nothing
  8142 ;; This function is called by:
  8143 ;;		_TMR6_Initialize
  8144 ;;		_TMR6_CallBack
  8145 ;; This function uses a non-reentrant model
  8146 ;;
  8147                           
  8148     0003                     _TMR6_DefaultInterruptHandler:	
  8149                           ;psect for function _TMR6_DefaultInterruptHandler
  8150                           
  8151     0003                     i1l660:	
  8152                           ;incstack = 0
  8153                           ; Regs used in _TMR6_DefaultInterruptHandler: []
  8154                           
  8155     0003  0008               	return
  8156     0004                     __end_of_TMR6_DefaultInterruptHandler:
  8157                           
  8158                           	psect	text47
  8159     0706                     __ptext47:	
  8160 ;; *************** function _TMR6_Interrupt *****************
  8161 ;; Defined at:
  8162 ;;		line 161 in file "main.c"
  8163 ;; Parameters:    Size  Location     Type
  8164 ;;		None
  8165 ;; Auto vars:     Size  Location     Type
  8166 ;;		None
  8167 ;; Return value:  Size  Location     Type
  8168 ;;                  1    wreg      void 
  8169 ;; Registers used:
  8170 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8171 ;; Tracked objects:
  8172 ;;		On entry : 0/0
  8173 ;;		On exit  : 0/0
  8174 ;;		Unchanged: 0/0
  8175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8176 ;;      Params:         0       0       0       0       0       0
  8177 ;;      Locals:         0       0       0       0       0       0
  8178 ;;      Temps:          0       0       0       0       0       0
  8179 ;;      Totals:         0       0       0       0       0       0
  8180 ;;Total ram usage:        0 bytes
  8181 ;; Hardware stack levels used: 1
  8182 ;; Hardware stack levels required when called: 4
  8183 ;; This function calls:
  8184 ;;		_TMR6_StopTimer
  8185 ;;		_TMR6_WriteTimer
  8186 ;;		i1_updateMatrix
  8187 ;;		i1_updateMotor
  8188 ;; This function is called by:
  8189 ;;		_main
  8190 ;;		_TMR6_CallBack
  8191 ;; This function uses a non-reentrant model
  8192 ;;
  8193                           
  8194     0706                     _TMR6_Interrupt:	
  8195                           ;psect for function _TMR6_Interrupt
  8196                           
  8197     0706                     i1l3060:	
  8198                           ;incstack = 0
  8199                           ; Regs used in _TMR6_Interrupt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8200                           
  8201                           
  8202                           ;main.c: 162:     TMR6_StopTimer();
  8203     0706  318F  274B  3187   	fcall	_TMR6_StopTimer
  8204     0709                     i1l3062:
  8205                           
  8206                           ;main.c: 163:     TMR6_WriteTimer(0);
  8207     0709  3000               	movlw	0
  8208     070A  318F  276A  3187   	fcall	_TMR6_WriteTimer
  8209     070D                     i1l3064:
  8210                           
  8211                           ;main.c: 164:     floorFlag = 0;
  8212     070D  0020               	movlb	0	; select bank0
  8213     070E  01CF               	clrf	_floorFlag
  8214     070F                     i1l3066:
  8215                           
  8216                           ;main.c: 165:     updateMotor();
  8217     070F  3184  2419  3187   	fcall	i1_updateMotor
  8218     0712                     i1l3068:
  8219                           
  8220                           ;main.c: 166:     updateMatrix();
  8221     0712  3184  24E5  3187   	fcall	i1_updateMatrix
  8222     0715                     i1l867:
  8223     0715  0008               	return
  8224     0716                     __end_of_TMR6_Interrupt:
  8225                           
  8226                           	psect	text48
  8227     0F6A                     __ptext48:	
  8228 ;; *************** function _TMR6_WriteTimer *****************
  8229 ;; Defined at:
  8230 ;;		line 108 in file "mcc_generated_files/tmr6.c"
  8231 ;; Parameters:    Size  Location     Type
  8232 ;;  timerVal        1    wreg     unsigned char 
  8233 ;; Auto vars:     Size  Location     Type
  8234 ;;  timerVal        1    0[COMMON] unsigned char 
  8235 ;; Return value:  Size  Location     Type
  8236 ;;                  1    wreg      void 
  8237 ;; Registers used:
  8238 ;;		wreg
  8239 ;; Tracked objects:
  8240 ;;		On entry : 0/0
  8241 ;;		On exit  : 0/0
  8242 ;;		Unchanged: 0/0
  8243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8244 ;;      Params:         0       0       0       0       0       0
  8245 ;;      Locals:         1       0       0       0       0       0
  8246 ;;      Temps:          0       0       0       0       0       0
  8247 ;;      Totals:         1       0       0       0       0       0
  8248 ;;Total ram usage:        1 bytes
  8249 ;; Hardware stack levels used: 1
  8250 ;; This function calls:
  8251 ;;		Nothing
  8252 ;; This function is called by:
  8253 ;;		_TMR6_Interrupt
  8254 ;; This function uses a non-reentrant model
  8255 ;;
  8256                           
  8257     0F6A                     _TMR6_WriteTimer:	
  8258                           ;psect for function _TMR6_WriteTimer
  8259                           
  8260                           
  8261                           ;incstack = 0
  8262                           ; Regs used in _TMR6_WriteTimer: [wreg]
  8263                           ;TMR6_WriteTimer@timerVal stored from wreg
  8264     0F6A  00F0               	movwf	TMR6_WriteTimer@timerVal
  8265     0F6B                     i1l2854:
  8266                           
  8267                           ;mcc_generated_files/tmr6.c: 108: void TMR6_WriteTimer(uint8_t timerVal);mcc_generated_f
      +                          iles/tmr6.c: 109: {;mcc_generated_files/tmr6.c: 111:     TMR6 = timerVal;
  8268     0F6B  0870               	movf	TMR6_WriteTimer@timerVal,w
  8269     0F6C  0028               	movlb	8	; select bank8
  8270     0F6D  009C               	movwf	28	;volatile
  8271     0F6E                     i1l641:
  8272     0F6E  0008               	return
  8273     0F6F                     __end_of_TMR6_WriteTimer:
  8274                           
  8275                           	psect	text49
  8276     0F4B                     __ptext49:	
  8277 ;; *************** function _TMR6_StopTimer *****************
  8278 ;; Defined at:
  8279 ;;		line 93 in file "mcc_generated_files/tmr6.c"
  8280 ;; Parameters:    Size  Location     Type
  8281 ;;		None
  8282 ;; Auto vars:     Size  Location     Type
  8283 ;;		None
  8284 ;; Return value:  Size  Location     Type
  8285 ;;                  1    wreg      void 
  8286 ;; Registers used:
  8287 ;;		None
  8288 ;; Tracked objects:
  8289 ;;		On entry : 0/0
  8290 ;;		On exit  : 0/0
  8291 ;;		Unchanged: 0/0
  8292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8293 ;;      Params:         0       0       0       0       0       0
  8294 ;;      Locals:         0       0       0       0       0       0
  8295 ;;      Temps:          0       0       0       0       0       0
  8296 ;;      Totals:         0       0       0       0       0       0
  8297 ;;Total ram usage:        0 bytes
  8298 ;; Hardware stack levels used: 1
  8299 ;; This function calls:
  8300 ;;		Nothing
  8301 ;; This function is called by:
  8302 ;;		_TMR6_Interrupt
  8303 ;; This function uses a non-reentrant model
  8304 ;;
  8305                           
  8306     0F4B                     _TMR6_StopTimer:	
  8307                           ;psect for function _TMR6_StopTimer
  8308                           
  8309     0F4B                     i1l2852:	
  8310                           ;incstack = 0
  8311                           ; Regs used in _TMR6_StopTimer: []
  8312                           
  8313                           
  8314                           ;mcc_generated_files/tmr6.c: 96:     T6CONbits.TMR6ON = 0;
  8315     0F4B  0028               	movlb	8	; select bank8
  8316     0F4C  111E               	bcf	30,2	;volatile
  8317     0F4D                     i1l635:
  8318     0F4D  0008               	return
  8319     0F4E                     __end_of_TMR6_StopTimer:
  8320                           
  8321                           	psect	text50
  8322     0680                     __ptext50:	
  8323 ;; *************** function _TMR4_ISR *****************
  8324 ;; Defined at:
  8325 ;;		line 119 in file "mcc_generated_files/tmr4.c"
  8326 ;; Parameters:    Size  Location     Type
  8327 ;;		None
  8328 ;; Auto vars:     Size  Location     Type
  8329 ;;		None
  8330 ;; Return value:  Size  Location     Type
  8331 ;;                  1    wreg      void 
  8332 ;; Registers used:
  8333 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8334 ;; Tracked objects:
  8335 ;;		On entry : 0/0
  8336 ;;		On exit  : 0/0
  8337 ;;		Unchanged: 0/0
  8338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8339 ;;      Params:         0       0       0       0       0       0
  8340 ;;      Locals:         0       0       0       0       0       0
  8341 ;;      Temps:          0       0       0       0       0       0
  8342 ;;      Totals:         0       0       0       0       0       0
  8343 ;;Total ram usage:        0 bytes
  8344 ;; Hardware stack levels used: 1
  8345 ;; Hardware stack levels required when called: 6
  8346 ;; This function calls:
  8347 ;;		_TMR4_CallBack
  8348 ;; This function is called by:
  8349 ;;		_INTERRUPT_InterruptManager
  8350 ;; This function uses a non-reentrant model
  8351 ;;
  8352                           
  8353     0680                     _TMR4_ISR:	
  8354                           ;psect for function _TMR4_ISR
  8355                           
  8356     0680                     i1l3428:	
  8357                           ;incstack = 0
  8358                           ; Regs used in _TMR4_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8359                           
  8360                           
  8361                           ;mcc_generated_files/tmr4.c: 121:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr4.c: 124:     PIR3bits.TMR4IF = 0;
  8362     0680  0020               	movlb	0	; select bank0
  8363     0681  1093               	bcf	19,1	;volatile
  8364     0682                     i1l3430:
  8365                           
  8366                           ;mcc_generated_files/tmr4.c: 127:     if (++CountCallBack >= 100)
  8367     0682  3001               	movlw	1
  8368     0683  07C5               	addwf	TMR4_ISR@CountCallBack,f	;volatile
  8369     0684  3000               	movlw	0
  8370     0685  3DC6               	addwfc	TMR4_ISR@CountCallBack+1,f	;volatile
  8371     0686  3000               	movlw	0
  8372     0687  0246               	subwf	TMR4_ISR@CountCallBack+1,w	;volatile
  8373     0688  3064               	movlw	100
  8374     0689  1903               	skipnz
  8375     068A  0245               	subwf	TMR4_ISR@CountCallBack,w	;volatile
  8376     068B  1C03               	skipc
  8377     068C  2E8E               	goto	u195_21
  8378     068D  2E8F               	goto	u195_20
  8379     068E                     u195_21:
  8380     068E  2E95               	goto	i1l704
  8381     068F                     u195_20:
  8382     068F                     i1l3432:
  8383                           
  8384                           ;mcc_generated_files/tmr4.c: 128:     {;mcc_generated_files/tmr4.c: 130:         TMR4_Ca
      +                          llBack();
  8385     068F  3187  2798  3186   	fcall	_TMR4_CallBack
  8386     0692                     i1l3434:
  8387                           
  8388                           ;mcc_generated_files/tmr4.c: 133:         CountCallBack = 0;
  8389     0692  0020               	movlb	0	; select bank0
  8390     0693  01C5               	clrf	TMR4_ISR@CountCallBack	;volatile
  8391     0694  01C6               	clrf	TMR4_ISR@CountCallBack+1	;volatile
  8392     0695                     i1l704:
  8393     0695  0008               	return
  8394     0696                     __end_of_TMR4_ISR:
  8395                           
  8396                           	psect	text51
  8397     0798                     __ptext51:	
  8398 ;; *************** function _TMR4_CallBack *****************
  8399 ;; Defined at:
  8400 ;;		line 137 in file "mcc_generated_files/tmr4.c"
  8401 ;; Parameters:    Size  Location     Type
  8402 ;;		None
  8403 ;; Auto vars:     Size  Location     Type
  8404 ;;		None
  8405 ;; Return value:  Size  Location     Type
  8406 ;;                  1    wreg      void 
  8407 ;; Registers used:
  8408 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8409 ;; Tracked objects:
  8410 ;;		On entry : 0/0
  8411 ;;		On exit  : 0/0
  8412 ;;		Unchanged: 0/0
  8413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8414 ;;      Params:         0       0       0       0       0       0
  8415 ;;      Locals:         0       0       0       0       0       0
  8416 ;;      Temps:          0       0       0       0       0       0
  8417 ;;      Totals:         0       0       0       0       0       0
  8418 ;;Total ram usage:        0 bytes
  8419 ;; Hardware stack levels used: 1
  8420 ;; Hardware stack levels required when called: 5
  8421 ;; This function calls:
  8422 ;;		Absolute function
  8423 ;;		_TMR4_DefaultInterruptHandler
  8424 ;;		_TMR4_Interrupt
  8425 ;; This function is called by:
  8426 ;;		_TMR4_ISR
  8427 ;; This function uses a non-reentrant model
  8428 ;;
  8429                           
  8430     0798                     _TMR4_CallBack:	
  8431                           ;psect for function _TMR4_CallBack
  8432                           
  8433     0798                     i1l3288:	
  8434                           ;incstack = 0
  8435                           ; Regs used in _TMR4_CallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8436                           
  8437                           
  8438                           ;mcc_generated_files/tmr4.c: 141:     if(TMR4_InterruptHandler)
  8439     0798  0020               	movlb	0	; select bank0
  8440     0799  0822               	movf	_TMR4_InterruptHandler,w
  8441     079A  0423               	iorwf	_TMR4_InterruptHandler+1,w
  8442     079B  1903               	btfsc	3,2
  8443     079C  2F9E               	goto	u175_21
  8444     079D  2F9F               	goto	u175_20
  8445     079E                     u175_21:
  8446     079E  2FA4               	goto	i1l708
  8447     079F                     u175_20:
  8448     079F                     i1l3290:
  8449                           
  8450                           ;mcc_generated_files/tmr4.c: 142:     {;mcc_generated_files/tmr4.c: 143:         TMR4_In
      +                          terruptHandler();
  8451     079F  0823               	movf	_TMR4_InterruptHandler+1,w
  8452     07A0  008A               	movwf	10
  8453     07A1  0822               	movf	_TMR4_InterruptHandler,w
  8454     07A2  000A               	callw
  8455     07A3  3187               	pagesel	$
  8456     07A4                     i1l708:
  8457     07A4  0008               	return
  8458     07A5                     __end_of_TMR4_CallBack:
  8459                           
  8460                           	psect	text52
  8461     0002                     __ptext52:	
  8462 ;; *************** function _TMR4_DefaultInterruptHandler *****************
  8463 ;; Defined at:
  8464 ;;		line 151 in file "mcc_generated_files/tmr4.c"
  8465 ;; Parameters:    Size  Location     Type
  8466 ;;		None
  8467 ;; Auto vars:     Size  Location     Type
  8468 ;;		None
  8469 ;; Return value:  Size  Location     Type
  8470 ;;                  1    wreg      void 
  8471 ;; Registers used:
  8472 ;;		None
  8473 ;; Tracked objects:
  8474 ;;		On entry : 0/0
  8475 ;;		On exit  : 0/0
  8476 ;;		Unchanged: 0/0
  8477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8478 ;;      Params:         0       0       0       0       0       0
  8479 ;;      Locals:         0       0       0       0       0       0
  8480 ;;      Temps:          0       0       0       0       0       0
  8481 ;;      Totals:         0       0       0       0       0       0
  8482 ;;Total ram usage:        0 bytes
  8483 ;; Hardware stack levels used: 1
  8484 ;; This function calls:
  8485 ;;		Nothing
  8486 ;; This function is called by:
  8487 ;;		_TMR4_Initialize
  8488 ;;		_TMR4_CallBack
  8489 ;; This function uses a non-reentrant model
  8490 ;;
  8491                           
  8492     0002                     _TMR4_DefaultInterruptHandler:	
  8493                           ;psect for function _TMR4_DefaultInterruptHandler
  8494                           
  8495     0002                     i1l714:	
  8496                           ;incstack = 0
  8497                           ; Regs used in _TMR4_DefaultInterruptHandler: []
  8498                           
  8499     0002  0008               	return
  8500     0003                     __end_of_TMR4_DefaultInterruptHandler:
  8501                           
  8502                           	psect	text53
  8503     0716                     __ptext53:	
  8504 ;; *************** function _TMR4_Interrupt *****************
  8505 ;; Defined at:
  8506 ;;		line 153 in file "main.c"
  8507 ;; Parameters:    Size  Location     Type
  8508 ;;		None
  8509 ;; Auto vars:     Size  Location     Type
  8510 ;;		None
  8511 ;; Return value:  Size  Location     Type
  8512 ;;                  1    wreg      void 
  8513 ;; Registers used:
  8514 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8515 ;; Tracked objects:
  8516 ;;		On entry : 0/0
  8517 ;;		On exit  : 0/0
  8518 ;;		Unchanged: 0/0
  8519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8520 ;;      Params:         0       0       0       0       0       0
  8521 ;;      Locals:         0       0       0       0       0       0
  8522 ;;      Temps:          0       0       0       0       0       0
  8523 ;;      Totals:         0       0       0       0       0       0
  8524 ;;Total ram usage:        0 bytes
  8525 ;; Hardware stack levels used: 1
  8526 ;; Hardware stack levels required when called: 4
  8527 ;; This function calls:
  8528 ;;		_TMR4_StopTimer
  8529 ;;		_TMR4_WriteTimer
  8530 ;;		i1_updateMatrix
  8531 ;;		i1_updateMotor
  8532 ;; This function is called by:
  8533 ;;		_main
  8534 ;;		_TMR4_CallBack
  8535 ;; This function uses a non-reentrant model
  8536 ;;
  8537                           
  8538     0716                     _TMR4_Interrupt:	
  8539                           ;psect for function _TMR4_Interrupt
  8540                           
  8541     0716                     i1l3050:	
  8542                           ;incstack = 0
  8543                           ; Regs used in _TMR4_Interrupt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8544                           
  8545                           
  8546                           ;main.c: 154:     TMR4_StopTimer();
  8547     0716  318F  2748  3187   	fcall	_TMR4_StopTimer
  8548     0719                     i1l3052:
  8549                           
  8550                           ;main.c: 155:     TMR4_WriteTimer(0);
  8551     0719  3000               	movlw	0
  8552     071A  318F  2765  3187   	fcall	_TMR4_WriteTimer
  8553     071D                     i1l3054:
  8554                           
  8555                           ;main.c: 156:     directionFlag = 0;
  8556     071D  0020               	movlb	0	; select bank0
  8557     071E  01CE               	clrf	_directionFlag
  8558     071F                     i1l3056:
  8559                           
  8560                           ;main.c: 157:     updateMotor();
  8561     071F  3184  2419  3187   	fcall	i1_updateMotor
  8562     0722                     i1l3058:
  8563                           
  8564                           ;main.c: 158:     updateMatrix();
  8565     0722  3184  24E5  3187   	fcall	i1_updateMatrix
  8566     0725                     i1l864:
  8567     0725  0008               	return
  8568     0726                     __end_of_TMR4_Interrupt:
  8569                           
  8570                           	psect	text54
  8571     0F65                     __ptext54:	
  8572 ;; *************** function _TMR4_WriteTimer *****************
  8573 ;; Defined at:
  8574 ;;		line 108 in file "mcc_generated_files/tmr4.c"
  8575 ;; Parameters:    Size  Location     Type
  8576 ;;  timerVal        1    wreg     unsigned char 
  8577 ;; Auto vars:     Size  Location     Type
  8578 ;;  timerVal        1    0[COMMON] unsigned char 
  8579 ;; Return value:  Size  Location     Type
  8580 ;;                  1    wreg      void 
  8581 ;; Registers used:
  8582 ;;		wreg
  8583 ;; Tracked objects:
  8584 ;;		On entry : 0/0
  8585 ;;		On exit  : 0/0
  8586 ;;		Unchanged: 0/0
  8587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8588 ;;      Params:         0       0       0       0       0       0
  8589 ;;      Locals:         1       0       0       0       0       0
  8590 ;;      Temps:          0       0       0       0       0       0
  8591 ;;      Totals:         1       0       0       0       0       0
  8592 ;;Total ram usage:        1 bytes
  8593 ;; Hardware stack levels used: 1
  8594 ;; This function calls:
  8595 ;;		Nothing
  8596 ;; This function is called by:
  8597 ;;		_TMR4_Interrupt
  8598 ;; This function uses a non-reentrant model
  8599 ;;
  8600                           
  8601     0F65                     _TMR4_WriteTimer:	
  8602                           ;psect for function _TMR4_WriteTimer
  8603                           
  8604                           
  8605                           ;incstack = 0
  8606                           ; Regs used in _TMR4_WriteTimer: [wreg]
  8607                           ;TMR4_WriteTimer@timerVal stored from wreg
  8608     0F65  00F0               	movwf	TMR4_WriteTimer@timerVal
  8609     0F66                     i1l2858:
  8610                           
  8611                           ;mcc_generated_files/tmr4.c: 108: void TMR4_WriteTimer(uint8_t timerVal);mcc_generated_f
      +                          iles/tmr4.c: 109: {;mcc_generated_files/tmr4.c: 111:     TMR4 = timerVal;
  8612     0F66  0870               	movf	TMR4_WriteTimer@timerVal,w
  8613     0F67  0028               	movlb	8	; select bank8
  8614     0F68  0095               	movwf	21	;volatile
  8615     0F69                     i1l695:
  8616     0F69  0008               	return
  8617     0F6A                     __end_of_TMR4_WriteTimer:
  8618                           
  8619                           	psect	text55
  8620     0F48                     __ptext55:	
  8621 ;; *************** function _TMR4_StopTimer *****************
  8622 ;; Defined at:
  8623 ;;		line 93 in file "mcc_generated_files/tmr4.c"
  8624 ;; Parameters:    Size  Location     Type
  8625 ;;		None
  8626 ;; Auto vars:     Size  Location     Type
  8627 ;;		None
  8628 ;; Return value:  Size  Location     Type
  8629 ;;                  1    wreg      void 
  8630 ;; Registers used:
  8631 ;;		None
  8632 ;; Tracked objects:
  8633 ;;		On entry : 0/0
  8634 ;;		On exit  : 0/0
  8635 ;;		Unchanged: 0/0
  8636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8637 ;;      Params:         0       0       0       0       0       0
  8638 ;;      Locals:         0       0       0       0       0       0
  8639 ;;      Temps:          0       0       0       0       0       0
  8640 ;;      Totals:         0       0       0       0       0       0
  8641 ;;Total ram usage:        0 bytes
  8642 ;; Hardware stack levels used: 1
  8643 ;; This function calls:
  8644 ;;		Nothing
  8645 ;; This function is called by:
  8646 ;;		_TMR4_Interrupt
  8647 ;; This function uses a non-reentrant model
  8648 ;;
  8649                           
  8650     0F48                     _TMR4_StopTimer:	
  8651                           ;psect for function _TMR4_StopTimer
  8652                           
  8653     0F48                     i1l2856:	
  8654                           ;incstack = 0
  8655                           ; Regs used in _TMR4_StopTimer: []
  8656                           
  8657                           
  8658                           ;mcc_generated_files/tmr4.c: 96:     T4CONbits.TMR4ON = 0;
  8659     0F48  0028               	movlb	8	; select bank8
  8660     0F49  1117               	bcf	23,2	;volatile
  8661     0F4A                     i1l689:
  8662     0F4A  0008               	return
  8663     0F4B                     __end_of_TMR4_StopTimer:
  8664                           
  8665                           	psect	text56
  8666     063B                     __ptext56:	
  8667 ;; *************** function _TMR0_ISR *****************
  8668 ;; Defined at:
  8669 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  8670 ;; Parameters:    Size  Location     Type
  8671 ;;		None
  8672 ;; Auto vars:     Size  Location     Type
  8673 ;;		None
  8674 ;; Return value:  Size  Location     Type
  8675 ;;                  1    wreg      void 
  8676 ;; Registers used:
  8677 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8678 ;; Tracked objects:
  8679 ;;		On entry : 0/0
  8680 ;;		On exit  : 0/0
  8681 ;;		Unchanged: 0/0
  8682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8683 ;;      Params:         0       0       0       0       0       0
  8684 ;;      Locals:         0       0       0       0       0       0
  8685 ;;      Temps:          0       0       0       0       0       0
  8686 ;;      Totals:         0       0       0       0       0       0
  8687 ;;Total ram usage:        0 bytes
  8688 ;; Hardware stack levels used: 1
  8689 ;; Hardware stack levels required when called: 3
  8690 ;; This function calls:
  8691 ;;		_TMR0_CallBack
  8692 ;; This function is called by:
  8693 ;;		_INTERRUPT_InterruptManager
  8694 ;; This function uses a non-reentrant model
  8695 ;;
  8696                           
  8697     063B                     _TMR0_ISR:	
  8698                           ;psect for function _TMR0_ISR
  8699                           
  8700     063B                     i1l3420:	
  8701                           ;incstack = 0
  8702                           ; Regs used in _TMR0_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8703                           
  8704                           
  8705                           ;mcc_generated_files/tmr0.c: 110:     static volatile uint16_t CountCallBack = 0;;mcc_ge
      +                          nerated_files/tmr0.c: 113:     INTCONbits.TMR0IF = 0;
  8706     063B  110B               	bcf	11,2	;volatile
  8707     063C                     i1l3422:
  8708                           
  8709                           ;mcc_generated_files/tmr0.c: 115:     TMR0 = timer0ReloadVal;
  8710     063C  0020               	movlb	0	; select bank0
  8711     063D  0838               	movf	_timer0ReloadVal,w	;volatile
  8712     063E  0095               	movwf	21	;volatile
  8713                           
  8714                           ;mcc_generated_files/tmr0.c: 118:     if (++CountCallBack >= 200)
  8715     063F  3001               	movlw	1
  8716     0640  07CB               	addwf	TMR0_ISR@CountCallBack,f	;volatile
  8717     0641  3000               	movlw	0
  8718     0642  3DCC               	addwfc	TMR0_ISR@CountCallBack+1,f	;volatile
  8719     0643  3000               	movlw	0
  8720     0644  024C               	subwf	TMR0_ISR@CountCallBack+1,w	;volatile
  8721     0645  30C8               	movlw	200
  8722     0646  1903               	skipnz
  8723     0647  024B               	subwf	TMR0_ISR@CountCallBack,w	;volatile
  8724     0648  1C03               	skipc
  8725     0649  2E4B               	goto	u194_21
  8726     064A  2E4C               	goto	u194_20
  8727     064B                     u194_21:
  8728     064B  2E52               	goto	i1l470
  8729     064C                     u194_20:
  8730     064C                     i1l3424:
  8731                           
  8732                           ;mcc_generated_files/tmr0.c: 119:     {;mcc_generated_files/tmr0.c: 121:         TMR0_Ca
      +                          llBack();
  8733     064C  3187  27A5  3186   	fcall	_TMR0_CallBack
  8734     064F                     i1l3426:
  8735                           
  8736                           ;mcc_generated_files/tmr0.c: 124:         CountCallBack = 0;
  8737     064F  0020               	movlb	0	; select bank0
  8738     0650  01CB               	clrf	TMR0_ISR@CountCallBack	;volatile
  8739     0651  01CC               	clrf	TMR0_ISR@CountCallBack+1	;volatile
  8740     0652                     i1l470:
  8741     0652  0008               	return
  8742     0653                     __end_of_TMR0_ISR:
  8743                           
  8744                           	psect	text57
  8745     07A5                     __ptext57:	
  8746 ;; *************** function _TMR0_CallBack *****************
  8747 ;; Defined at:
  8748 ;;		line 130 in file "mcc_generated_files/tmr0.c"
  8749 ;; Parameters:    Size  Location     Type
  8750 ;;		None
  8751 ;; Auto vars:     Size  Location     Type
  8752 ;;		None
  8753 ;; Return value:  Size  Location     Type
  8754 ;;                  1    wreg      void 
  8755 ;; Registers used:
  8756 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8757 ;; Tracked objects:
  8758 ;;		On entry : 0/0
  8759 ;;		On exit  : 0/0
  8760 ;;		Unchanged: 0/0
  8761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8762 ;;      Params:         0       0       0       0       0       0
  8763 ;;      Locals:         0       0       0       0       0       0
  8764 ;;      Temps:          0       0       0       0       0       0
  8765 ;;      Totals:         0       0       0       0       0       0
  8766 ;;Total ram usage:        0 bytes
  8767 ;; Hardware stack levels used: 1
  8768 ;; Hardware stack levels required when called: 2
  8769 ;; This function calls:
  8770 ;;		Absolute function
  8771 ;;		_TMR0_DefaultInterruptHandler
  8772 ;;		_TMR0_Interrupt
  8773 ;; This function is called by:
  8774 ;;		_TMR0_ISR
  8775 ;; This function uses a non-reentrant model
  8776 ;;
  8777                           
  8778     07A5                     _TMR0_CallBack:	
  8779                           ;psect for function _TMR0_CallBack
  8780                           
  8781     07A5                     i1l3278:	
  8782                           ;incstack = 0
  8783                           ; Regs used in _TMR0_CallBack: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8784                           
  8785                           
  8786                           ;mcc_generated_files/tmr0.c: 134:     if(TMR0_InterruptHandler)
  8787     07A5  0020               	movlb	0	; select bank0
  8788     07A6  0828               	movf	_TMR0_InterruptHandler,w
  8789     07A7  0429               	iorwf	_TMR0_InterruptHandler+1,w
  8790     07A8  1903               	btfsc	3,2
  8791     07A9  2FAB               	goto	u173_21
  8792     07AA  2FAC               	goto	u173_20
  8793     07AB                     u173_21:
  8794     07AB  2FB1               	goto	i1l474
  8795     07AC                     u173_20:
  8796     07AC                     i1l3280:
  8797                           
  8798                           ;mcc_generated_files/tmr0.c: 135:     {;mcc_generated_files/tmr0.c: 136:         TMR0_In
      +                          terruptHandler();
  8799     07AC  0829               	movf	_TMR0_InterruptHandler+1,w
  8800     07AD  008A               	movwf	10
  8801     07AE  0828               	movf	_TMR0_InterruptHandler,w
  8802     07AF  000A               	callw
  8803     07B0  3187               	pagesel	$
  8804     07B1                     i1l474:
  8805     07B1  0008               	return
  8806     07B2                     __end_of_TMR0_CallBack:
  8807                           
  8808                           	psect	text58
  8809     0F41                     __ptext58:	
  8810 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  8811 ;; Defined at:
  8812 ;;		line 144 in file "mcc_generated_files/tmr0.c"
  8813 ;; Parameters:    Size  Location     Type
  8814 ;;		None
  8815 ;; Auto vars:     Size  Location     Type
  8816 ;;		None
  8817 ;; Return value:  Size  Location     Type
  8818 ;;                  1    wreg      void 
  8819 ;; Registers used:
  8820 ;;		None
  8821 ;; Tracked objects:
  8822 ;;		On entry : 0/0
  8823 ;;		On exit  : 0/0
  8824 ;;		Unchanged: 0/0
  8825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8826 ;;      Params:         0       0       0       0       0       0
  8827 ;;      Locals:         0       0       0       0       0       0
  8828 ;;      Temps:          0       0       0       0       0       0
  8829 ;;      Totals:         0       0       0       0       0       0
  8830 ;;Total ram usage:        0 bytes
  8831 ;; Hardware stack levels used: 1
  8832 ;; This function calls:
  8833 ;;		Nothing
  8834 ;; This function is called by:
  8835 ;;		_TMR0_Initialize
  8836 ;;		_TMR0_CallBack
  8837 ;; This function uses a non-reentrant model
  8838 ;;
  8839                           
  8840     0F41                     _TMR0_DefaultInterruptHandler:	
  8841                           ;psect for function _TMR0_DefaultInterruptHandler
  8842                           
  8843     0F41                     i1l480:	
  8844                           ;incstack = 0
  8845                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  8846                           
  8847     0F41  0008               	return
  8848     0F42                     __end_of_TMR0_DefaultInterruptHandler:
  8849                           
  8850                           	psect	text59
  8851     008C                     __ptext59:	
  8852 ;; *************** function _TMR0_Interrupt *****************
  8853 ;; Defined at:
  8854 ;;		line 120 in file "main.c"
  8855 ;; Parameters:    Size  Location     Type
  8856 ;;		None
  8857 ;; Auto vars:     Size  Location     Type
  8858 ;;  i               2   10[BANK0 ] int 
  8859 ;;  i               2    8[BANK0 ] int 
  8860 ;;  t               4   12[BANK0 ] unsigned long 
  8861 ;;  v               4    4[BANK0 ] unsigned long 
  8862 ;;  p               2   16[BANK0 ] unsigned short 
  8863 ;; Return value:  Size  Location     Type
  8864 ;;                  1    wreg      void 
  8865 ;; Registers used:
  8866 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8867 ;; Tracked objects:
  8868 ;;		On entry : 0/0
  8869 ;;		On exit  : 0/0
  8870 ;;		Unchanged: 0/0
  8871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8872 ;;      Params:         0       0       0       0       0       0
  8873 ;;      Locals:         0      14       0       0       0       0
  8874 ;;      Temps:          0       4       0       0       0       0
  8875 ;;      Totals:         0      18       0       0       0       0
  8876 ;;Total ram usage:       18 bytes
  8877 ;; Hardware stack levels used: 1
  8878 ;; Hardware stack levels required when called: 1
  8879 ;; This function calls:
  8880 ;;		_ADC_GetConversion
  8881 ;;		_EUSART_Write
  8882 ;;		_EUSART_is_tx_ready
  8883 ;;		___lldiv
  8884 ;;		___lwdiv
  8885 ;;		___wmul
  8886 ;; This function is called by:
  8887 ;;		_main
  8888 ;;		_TMR0_CallBack
  8889 ;; This function uses a non-reentrant model
  8890 ;;
  8891                           
  8892     008C                     _TMR0_Interrupt:	
  8893                           ;psect for function _TMR0_Interrupt
  8894                           
  8895     008C                     i1l3004:	
  8896                           ;incstack = 0
  8897                           ; Regs used in _TMR0_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8898                           
  8899                           
  8900                           ;main.c: 123:     uint16_t p = position;
  8901     008C  0020               	movlb	0	; select bank0
  8902     008D  0864               	movf	_position,w
  8903     008E  00D2               	movwf	??_TMR0_Interrupt
  8904     008F  01D3               	clrf	??_TMR0_Interrupt+1
  8905     0090  0852               	movf	??_TMR0_Interrupt,w
  8906     0091  00E2               	movwf	TMR0_Interrupt@p
  8907     0092  0853               	movf	??_TMR0_Interrupt+1,w
  8908     0093  00E3               	movwf	TMR0_Interrupt@p+1
  8909     0094                     i1l3006:
  8910                           
  8911                           ;main.c: 124:     p *= 180;
  8912     0094  30B4               	movlw	180
  8913     0095  00F0               	movwf	___wmul@multiplier
  8914     0096  3000               	movlw	0
  8915     0097  00F1               	movwf	___wmul@multiplier+1
  8916     0098  0863               	movf	TMR0_Interrupt@p+1,w
  8917     0099  00F3               	movwf	___wmul@multiplicand+1
  8918     009A  0862               	movf	TMR0_Interrupt@p,w
  8919     009B  00F2               	movwf	___wmul@multiplicand
  8920     009C  3185  2509  3180   	fcall	___wmul
  8921     009F  0871               	movf	?___wmul+1,w
  8922     00A0  0020               	movlb	0	; select bank0
  8923     00A1  00E3               	movwf	TMR0_Interrupt@p+1
  8924     00A2  0870               	movf	?___wmul,w
  8925     00A3  00E2               	movwf	TMR0_Interrupt@p
  8926     00A4                     i1l3008:
  8927                           
  8928                           ;main.c: 125:     p /= 215;
  8929     00A4  30D7               	movlw	215
  8930     00A5  00F0               	movwf	___lwdiv@divisor
  8931     00A6  3000               	movlw	0
  8932     00A7  00F1               	movwf	___lwdiv@divisor+1
  8933     00A8  0863               	movf	TMR0_Interrupt@p+1,w
  8934     00A9  00F3               	movwf	___lwdiv@dividend+1
  8935     00AA  0862               	movf	TMR0_Interrupt@p,w
  8936     00AB  00F2               	movwf	___lwdiv@dividend
  8937     00AC  3183  2317  3180   	fcall	___lwdiv
  8938     00AF  0871               	movf	?___lwdiv+1,w
  8939     00B0  0020               	movlb	0	; select bank0
  8940     00B1  00E3               	movwf	TMR0_Interrupt@p+1
  8941     00B2  0870               	movf	?___lwdiv,w
  8942     00B3  00E2               	movwf	TMR0_Interrupt@p
  8943                           
  8944                           ;main.c: 129:     uint32_t v = 0;
  8945     00B4  3000               	movlw	0
  8946     00B5  00D9               	movwf	TMR0_Interrupt@v+3
  8947     00B6  3000               	movlw	0
  8948     00B7  00D8               	movwf	TMR0_Interrupt@v+2
  8949     00B8  3000               	movlw	0
  8950     00B9  00D7               	movwf	TMR0_Interrupt@v+1
  8951     00BA  3000               	movlw	0
  8952     00BB  00D6               	movwf	TMR0_Interrupt@v
  8953     00BC                     i1l3010:
  8954                           
  8955                           ;main.c: 130:     for(int i = 0; i < 16; i++){
  8956     00BC  01DA               	clrf	TMR0_Interrupt@i
  8957     00BD  01DB               	clrf	TMR0_Interrupt@i+1
  8958     00BE                     i1l3016:
  8959                           
  8960                           ;main.c: 131:         v += velocity[i];
  8961     00BE  0020               	movlb	0	; select bank0
  8962     00BF  085A               	movf	TMR0_Interrupt@i,w
  8963     00C0  3EA0               	addlw	(low (_velocity| 0))& (0+255)
  8964     00C1  0086               	movwf	6
  8965     00C2  0187               	clrf	7
  8966     00C3  0801               	movf	1,w
  8967     00C4  00D2               	movwf	??_TMR0_Interrupt
  8968     00C5  01D3               	clrf	??_TMR0_Interrupt+1
  8969     00C6  01D4               	clrf	??_TMR0_Interrupt+2
  8970     00C7  01D5               	clrf	??_TMR0_Interrupt+3
  8971     00C8  0852               	movf	??_TMR0_Interrupt,w
  8972     00C9  07D6               	addwf	TMR0_Interrupt@v,f
  8973     00CA  0853               	movf	??_TMR0_Interrupt+1,w
  8974     00CB  3DD7               	addwfc	TMR0_Interrupt@v+1,f
  8975     00CC  0854               	movf	??_TMR0_Interrupt+2,w
  8976     00CD  3DD8               	addwfc	TMR0_Interrupt@v+2,f
  8977     00CE  0855               	movf	??_TMR0_Interrupt+3,w
  8978     00CF  3DD9               	addwfc	TMR0_Interrupt@v+3,f
  8979     00D0                     i1l3018:
  8980                           
  8981                           ;main.c: 132:     }
  8982     00D0  3001               	movlw	1
  8983     00D1  07DA               	addwf	TMR0_Interrupt@i,f
  8984     00D2  3000               	movlw	0
  8985     00D3  3DDB               	addwfc	TMR0_Interrupt@i+1,f
  8986     00D4                     i1l3020:
  8987     00D4  085B               	movf	TMR0_Interrupt@i+1,w
  8988     00D5  3A80               	xorlw	128
  8989     00D6  00D2               	movwf	??_TMR0_Interrupt
  8990     00D7  3080               	movlw	128
  8991     00D8  0252               	subwf	??_TMR0_Interrupt,w
  8992     00D9  1D03               	skipz
  8993     00DA  28DD               	goto	u158_25
  8994     00DB  3010               	movlw	16
  8995     00DC  025A               	subwf	TMR0_Interrupt@i,w
  8996     00DD                     u158_25:
  8997     00DD  1C03               	skipc
  8998     00DE  28E0               	goto	u158_21
  8999     00DF  28E1               	goto	u158_20
  9000     00E0                     u158_21:
  9001     00E0  28BE               	goto	i1l3016
  9002     00E1                     u158_20:
  9003     00E1                     i1l3022:
  9004                           
  9005                           ;main.c: 133:     v = v>>4;
  9006     00E1  0020               	movlb	0	; select bank0
  9007     00E2  0856               	movf	TMR0_Interrupt@v,w
  9008     00E3  00D2               	movwf	??_TMR0_Interrupt
  9009     00E4  0857               	movf	TMR0_Interrupt@v+1,w
  9010     00E5  00D3               	movwf	??_TMR0_Interrupt+1
  9011     00E6  0858               	movf	TMR0_Interrupt@v+2,w
  9012     00E7  00D4               	movwf	??_TMR0_Interrupt+2
  9013     00E8  0859               	movf	TMR0_Interrupt@v+3,w
  9014     00E9  00D5               	movwf	??_TMR0_Interrupt+3
  9015     00EA  3004               	movlw	4
  9016     00EB                     u159_25:
  9017     00EB  36D5               	lsrf	??_TMR0_Interrupt+3,f
  9018     00EC  0CD4               	rrf	??_TMR0_Interrupt+2,f
  9019     00ED  0CD3               	rrf	??_TMR0_Interrupt+1,f
  9020     00EE  0CD2               	rrf	??_TMR0_Interrupt,f
  9021     00EF                     u159_20:
  9022     00EF  0B89               	decfsz	9,f
  9023     00F0  28EB               	goto	u159_25
  9024     00F1  0855               	movf	??_TMR0_Interrupt+3,w
  9025     00F2  00D9               	movwf	TMR0_Interrupt@v+3
  9026     00F3  0854               	movf	??_TMR0_Interrupt+2,w
  9027     00F4  00D8               	movwf	TMR0_Interrupt@v+2
  9028     00F5  0853               	movf	??_TMR0_Interrupt+1,w
  9029     00F6  00D7               	movwf	TMR0_Interrupt@v+1
  9030     00F7  0852               	movf	??_TMR0_Interrupt,w
  9031     00F8  00D6               	movwf	TMR0_Interrupt@v
  9032     00F9                     i1l3024:
  9033                           
  9034                           ;main.c: 137:     uint32_t t = ADC_GetConversion(channel_AN2);
  9035     00F9  3002               	movlw	2
  9036     00FA  3185  25D1  3180   	fcall	_ADC_GetConversion
  9037     00FD  0870               	movf	?_ADC_GetConversion,w
  9038     00FE  0020               	movlb	0	; select bank0
  9039     00FF  00DE               	movwf	TMR0_Interrupt@t
  9040     0100  0871               	movf	?_ADC_GetConversion+1,w
  9041     0101  00DF               	movwf	TMR0_Interrupt@t+1
  9042     0102  01E0               	clrf	TMR0_Interrupt@t+2
  9043     0103  01E1               	clrf	TMR0_Interrupt@t+3
  9044     0104                     i1l3026:
  9045                           
  9046                           ;main.c: 138:     t = t<<12;
  9047     0104  085E               	movf	TMR0_Interrupt@t,w
  9048     0105  00D2               	movwf	??_TMR0_Interrupt
  9049     0106  085F               	movf	TMR0_Interrupt@t+1,w
  9050     0107  00D3               	movwf	??_TMR0_Interrupt+1
  9051     0108  0860               	movf	TMR0_Interrupt@t+2,w
  9052     0109  00D4               	movwf	??_TMR0_Interrupt+2
  9053     010A  0861               	movf	TMR0_Interrupt@t+3,w
  9054     010B  00D5               	movwf	??_TMR0_Interrupt+3
  9055     010C  300C               	movlw	12
  9056     010D                     u160_25:
  9057     010D  35D2               	lslf	??_TMR0_Interrupt,f
  9058     010E  0DD3               	rlf	??_TMR0_Interrupt+1,f
  9059     010F  0DD4               	rlf	??_TMR0_Interrupt+2,f
  9060     0110  0DD5               	rlf	??_TMR0_Interrupt+3,f
  9061     0111                     u160_20:
  9062     0111  0B89               	decfsz	9,f
  9063     0112  290D               	goto	u160_25
  9064     0113  0855               	movf	??_TMR0_Interrupt+3,w
  9065     0114  00E1               	movwf	TMR0_Interrupt@t+3
  9066     0115  0854               	movf	??_TMR0_Interrupt+2,w
  9067     0116  00E0               	movwf	TMR0_Interrupt@t+2
  9068     0117  0853               	movf	??_TMR0_Interrupt+1,w
  9069     0118  00DF               	movwf	TMR0_Interrupt@t+1
  9070     0119  0852               	movf	??_TMR0_Interrupt,w
  9071     011A  00DE               	movwf	TMR0_Interrupt@t
  9072                           
  9073                           ;main.c: 139:     t /= 10230;
  9074     011B  3000               	movlw	0
  9075     011C  00F3               	movwf	___lldiv@divisor+3
  9076     011D  3000               	movlw	0
  9077     011E  00F2               	movwf	___lldiv@divisor+2
  9078     011F  3027               	movlw	39
  9079     0120  00F1               	movwf	___lldiv@divisor+1
  9080     0121  30F6               	movlw	246
  9081     0122  00F0               	movwf	___lldiv@divisor
  9082     0123  0861               	movf	TMR0_Interrupt@t+3,w
  9083     0124  00F7               	movwf	___lldiv@dividend+3
  9084     0125  0860               	movf	TMR0_Interrupt@t+2,w
  9085     0126  00F6               	movwf	___lldiv@dividend+2
  9086     0127  085F               	movf	TMR0_Interrupt@t+1,w
  9087     0128  00F5               	movwf	___lldiv@dividend+1
  9088     0129  085E               	movf	TMR0_Interrupt@t,w
  9089     012A  00F4               	movwf	___lldiv@dividend
  9090     012B  3181  21F6  3180   	fcall	___lldiv
  9091     012E  0873               	movf	?___lldiv+3,w
  9092     012F  0020               	movlb	0	; select bank0
  9093     0130  00E1               	movwf	TMR0_Interrupt@t+3
  9094     0131  0872               	movf	?___lldiv+2,w
  9095     0132  00E0               	movwf	TMR0_Interrupt@t+2
  9096     0133  0871               	movf	?___lldiv+1,w
  9097     0134  00DF               	movwf	TMR0_Interrupt@t+1
  9098     0135  0870               	movf	?___lldiv,w
  9099     0136  00DE               	movwf	TMR0_Interrupt@t
  9100     0137                     i1l3028:
  9101                           
  9102                           ;main.c: 141:     data_tx[0] = (0x80 | ((motorState<<4) | (currentFloor-1))) & 0xB3;
  9103     0137  0851               	movf	_motorState,w
  9104     0138  00D2               	movwf	??_TMR0_Interrupt
  9105     0139  3004               	movlw	4
  9106     013A                     u161_25:
  9107     013A  35D2               	lslf	??_TMR0_Interrupt,f
  9108     013B  0B89               	decfsz	9,f
  9109     013C  293A               	goto	u161_25
  9110     013D  0866               	movf	_currentFloor,w
  9111     013E  3EFF               	addlw	255
  9112     013F  0452               	iorwf	??_TMR0_Interrupt,w
  9113     0140  3880               	iorlw	128
  9114     0141  39B3               	andlw	179
  9115     0142  00C1               	movwf	_data_tx
  9116     0143                     i1l3030:
  9117                           
  9118                           ;main.c: 142:     data_tx[1] = (p>>1) & 0x7F;
  9119     0143  0863               	movf	TMR0_Interrupt@p+1,w
  9120     0144  00D3               	movwf	??_TMR0_Interrupt+1
  9121     0145  0862               	movf	TMR0_Interrupt@p,w
  9122     0146  00D2               	movwf	??_TMR0_Interrupt
  9123     0147  36D3               	lsrf	??_TMR0_Interrupt+1,f
  9124     0148  0CD2               	rrf	??_TMR0_Interrupt,f
  9125     0149  0852               	movf	??_TMR0_Interrupt,w
  9126     014A  397F               	andlw	127
  9127     014B  00C2               	movwf	_data_tx+1
  9128     014C                     i1l3032:
  9129                           
  9130                           ;main.c: 143:     data_tx[2] = (v<<2) & 0x7F;
  9131     014C  0856               	movf	TMR0_Interrupt@v,w
  9132     014D  00D2               	movwf	??_TMR0_Interrupt
  9133     014E  3001               	movlw	1
  9134     014F                     u162_25:
  9135     014F  35D2               	lslf	??_TMR0_Interrupt,f
  9136     0150  3EFF               	addlw	-1
  9137     0151  1D03               	skipz
  9138     0152  294F               	goto	u162_25
  9139     0153  3552               	lslf	??_TMR0_Interrupt,w
  9140     0154  397F               	andlw	127
  9141     0155  00C3               	movwf	_data_tx+2
  9142     0156                     i1l3034:
  9143                           
  9144                           ;main.c: 144:     data_tx[3] = t<<1 & 0x7F;
  9145     0156  355E               	lslf	TMR0_Interrupt@t,w
  9146     0157  397F               	andlw	127
  9147     0158  00C4               	movwf	_data_tx+3
  9148     0159                     i1l3036:
  9149                           
  9150                           ;main.c: 146:     if(EUSART_is_tx_ready()){
  9151     0159  3187  2735  3180   	fcall	_EUSART_is_tx_ready
  9152     015C  3A00               	xorlw	0
  9153     015D  1903               	skipnz
  9154     015E  2960               	goto	u163_21
  9155     015F  2961               	goto	u163_20
  9156     0160                     u163_21:
  9157     0160  297F               	goto	i1l861
  9158     0161                     u163_20:
  9159     0161                     i1l3038:
  9160                           
  9161                           ;main.c: 147:         for(int i = 0; i<4; i++){
  9162     0161  0020               	movlb	0	; select bank0
  9163     0162  01DC               	clrf	TMR0_Interrupt@i_1694
  9164     0163  01DD               	clrf	TMR0_Interrupt@i_1694+1
  9165     0164                     i1l3044:
  9166                           
  9167                           ;main.c: 148:             EUSART_Write(data_tx[i]);
  9168     0164  0020               	movlb	0	; select bank0
  9169     0165  085C               	movf	TMR0_Interrupt@i_1694,w
  9170     0166  3E41               	addlw	(low (_data_tx| 0))& (0+255)
  9171     0167  0086               	movwf	6
  9172     0168  0187               	clrf	7
  9173     0169  0801               	movf	1,w
  9174     016A  3187  27ED  3180   	fcall	_EUSART_Write
  9175     016D                     i1l3046:
  9176                           
  9177                           ;main.c: 149:         }
  9178     016D  3001               	movlw	1
  9179     016E  0020               	movlb	0	; select bank0
  9180     016F  07DC               	addwf	TMR0_Interrupt@i_1694,f
  9181     0170  3000               	movlw	0
  9182     0171  3DDD               	addwfc	TMR0_Interrupt@i_1694+1,f
  9183     0172                     i1l3048:
  9184     0172  085D               	movf	TMR0_Interrupt@i_1694+1,w
  9185     0173  3A80               	xorlw	128
  9186     0174  00D2               	movwf	??_TMR0_Interrupt
  9187     0175  3080               	movlw	128
  9188     0176  0252               	subwf	??_TMR0_Interrupt,w
  9189     0177  1D03               	skipz
  9190     0178  297B               	goto	u164_25
  9191     0179  3004               	movlw	4
  9192     017A  025C               	subwf	TMR0_Interrupt@i_1694,w
  9193     017B                     u164_25:
  9194     017B  1C03               	skipc
  9195     017C  297E               	goto	u164_21
  9196     017D  297F               	goto	u164_20
  9197     017E                     u164_21:
  9198     017E  2964               	goto	i1l3044
  9199     017F                     u164_20:
  9200     017F                     i1l861:
  9201     017F  0008               	return
  9202     0180                     __end_of_TMR0_Interrupt:
  9203                           
  9204                           	psect	text60
  9205     0509                     __ptext60:	
  9206 ;; *************** function ___wmul *****************
  9207 ;; Defined at:
  9208 ;;		line 15 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  9209 ;; Parameters:    Size  Location     Type
  9210 ;;  multiplier      2    0[COMMON] unsigned int 
  9211 ;;  multiplicand    2    2[COMMON] unsigned int 
  9212 ;; Auto vars:     Size  Location     Type
  9213 ;;  product         2    4[COMMON] unsigned int 
  9214 ;; Return value:  Size  Location     Type
  9215 ;;                  2    0[COMMON] unsigned int 
  9216 ;; Registers used:
  9217 ;;		wreg, status,2, status,0
  9218 ;; Tracked objects:
  9219 ;;		On entry : 0/0
  9220 ;;		On exit  : 0/0
  9221 ;;		Unchanged: 0/0
  9222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9223 ;;      Params:         4       0       0       0       0       0
  9224 ;;      Locals:         2       0       0       0       0       0
  9225 ;;      Temps:          0       0       0       0       0       0
  9226 ;;      Totals:         6       0       0       0       0       0
  9227 ;;Total ram usage:        6 bytes
  9228 ;; Hardware stack levels used: 1
  9229 ;; This function calls:
  9230 ;;		Nothing
  9231 ;; This function is called by:
  9232 ;;		_TMR0_Interrupt
  9233 ;; This function uses a non-reentrant model
  9234 ;;
  9235                           
  9236     0509                     ___wmul:	
  9237                           ;psect for function ___wmul
  9238                           
  9239     0509                     i1l2860:	
  9240                           ;incstack = 0
  9241                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  9242                           
  9243     0509  01F4               	clrf	___wmul@product
  9244     050A  01F5               	clrf	___wmul@product+1
  9245     050B                     i1l2862:
  9246     050B  1C70               	btfss	___wmul@multiplier,0
  9247     050C  2D0E               	goto	u133_21
  9248     050D  2D0F               	goto	u133_20
  9249     050E                     u133_21:
  9250     050E  2D13               	goto	i1l1102
  9251     050F                     u133_20:
  9252     050F                     i1l2864:
  9253     050F  0872               	movf	___wmul@multiplicand,w
  9254     0510  07F4               	addwf	___wmul@product,f
  9255     0511  0873               	movf	___wmul@multiplicand+1,w
  9256     0512  3DF5               	addwfc	___wmul@product+1,f
  9257     0513                     i1l1102:
  9258     0513  3001               	movlw	1
  9259     0514                     u134_25:
  9260     0514  35F2               	lslf	___wmul@multiplicand,f
  9261     0515  0DF3               	rlf	___wmul@multiplicand+1,f
  9262     0516  0B89               	decfsz	9,f
  9263     0517  2D14               	goto	u134_25
  9264     0518                     i1l2866:
  9265     0518  3001               	movlw	1
  9266     0519                     u135_25:
  9267     0519  36F1               	lsrf	___wmul@multiplier+1,f
  9268     051A  0CF0               	rrf	___wmul@multiplier,f
  9269     051B  0B89               	decfsz	9,f
  9270     051C  2D19               	goto	u135_25
  9271     051D                     i1l2868:
  9272     051D  0870               	movf	___wmul@multiplier,w
  9273     051E  0471               	iorwf	___wmul@multiplier+1,w
  9274     051F  1D03               	btfss	3,2
  9275     0520  2D22               	goto	u136_21
  9276     0521  2D23               	goto	u136_20
  9277     0522                     u136_21:
  9278     0522  2D0B               	goto	i1l2862
  9279     0523                     u136_20:
  9280     0523                     i1l2870:
  9281     0523  0875               	movf	___wmul@product+1,w
  9282     0524  00F1               	movwf	?___wmul+1
  9283     0525  0874               	movf	___wmul@product,w
  9284     0526  00F0               	movwf	?___wmul
  9285     0527                     i1l1104:
  9286     0527  0008               	return
  9287     0528                     __end_of___wmul:
  9288                           
  9289                           	psect	text61
  9290     0317                     __ptext61:	
  9291 ;; *************** function ___lwdiv *****************
  9292 ;; Defined at:
  9293 ;;		line 5 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  9294 ;; Parameters:    Size  Location     Type
  9295 ;;  divisor         2    0[COMMON] unsigned int 
  9296 ;;  dividend        2    2[COMMON] unsigned int 
  9297 ;; Auto vars:     Size  Location     Type
  9298 ;;  quotient        2    5[COMMON] unsigned int 
  9299 ;;  counter         1    7[COMMON] unsigned char 
  9300 ;; Return value:  Size  Location     Type
  9301 ;;                  2    0[COMMON] unsigned int 
  9302 ;; Registers used:
  9303 ;;		wreg, status,2, status,0
  9304 ;; Tracked objects:
  9305 ;;		On entry : 0/0
  9306 ;;		On exit  : 0/0
  9307 ;;		Unchanged: 0/0
  9308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9309 ;;      Params:         4       0       0       0       0       0
  9310 ;;      Locals:         3       0       0       0       0       0
  9311 ;;      Temps:          1       0       0       0       0       0
  9312 ;;      Totals:         8       0       0       0       0       0
  9313 ;;Total ram usage:        8 bytes
  9314 ;; Hardware stack levels used: 1
  9315 ;; This function calls:
  9316 ;;		Nothing
  9317 ;; This function is called by:
  9318 ;;		_TMR0_Interrupt
  9319 ;; This function uses a non-reentrant model
  9320 ;;
  9321                           
  9322     0317                     ___lwdiv:	
  9323                           ;psect for function ___lwdiv
  9324                           
  9325     0317                     i1l2898:	
  9326                           ;incstack = 0
  9327                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  9328                           
  9329     0317  01F5               	clrf	___lwdiv@quotient
  9330     0318  01F6               	clrf	___lwdiv@quotient+1
  9331     0319                     i1l2900:
  9332     0319  0870               	movf	___lwdiv@divisor,w
  9333     031A  0471               	iorwf	___lwdiv@divisor+1,w
  9334     031B  1903               	btfsc	3,2
  9335     031C  2B1E               	goto	u144_21
  9336     031D  2B1F               	goto	u144_20
  9337     031E                     u144_21:
  9338     031E  2B4E               	goto	i1l2920
  9339     031F                     u144_20:
  9340     031F                     i1l2902:
  9341     031F  01F7               	clrf	___lwdiv@counter
  9342     0320  0AF7               	incf	___lwdiv@counter,f
  9343     0321  2B2B               	goto	i1l2908
  9344     0322                     i1l2904:
  9345     0322  3001               	movlw	1
  9346     0323                     u145_25:
  9347     0323  35F0               	lslf	___lwdiv@divisor,f
  9348     0324  0DF1               	rlf	___lwdiv@divisor+1,f
  9349     0325  0B89               	decfsz	9,f
  9350     0326  2B23               	goto	u145_25
  9351     0327                     i1l2906:
  9352     0327  3001               	movlw	1
  9353     0328  00F4               	movwf	??___lwdiv
  9354     0329  0874               	movf	??___lwdiv,w
  9355     032A  07F7               	addwf	___lwdiv@counter,f
  9356     032B                     i1l2908:
  9357     032B  1FF1               	btfss	___lwdiv@divisor+1,7
  9358     032C  2B2E               	goto	u146_21
  9359     032D  2B2F               	goto	u146_20
  9360     032E                     u146_21:
  9361     032E  2B22               	goto	i1l2904
  9362     032F                     u146_20:
  9363     032F                     i1l2910:
  9364     032F  3001               	movlw	1
  9365     0330                     u147_25:
  9366     0330  35F5               	lslf	___lwdiv@quotient,f
  9367     0331  0DF6               	rlf	___lwdiv@quotient+1,f
  9368     0332  0B89               	decfsz	9,f
  9369     0333  2B30               	goto	u147_25
  9370     0334  0871               	movf	___lwdiv@divisor+1,w
  9371     0335  0273               	subwf	___lwdiv@dividend+1,w
  9372     0336  1D03               	skipz
  9373     0337  2B3A               	goto	u148_25
  9374     0338  0870               	movf	___lwdiv@divisor,w
  9375     0339  0272               	subwf	___lwdiv@dividend,w
  9376     033A                     u148_25:
  9377     033A  1C03               	skipc
  9378     033B  2B3D               	goto	u148_21
  9379     033C  2B3E               	goto	u148_20
  9380     033D                     u148_21:
  9381     033D  2B43               	goto	i1l2916
  9382     033E                     u148_20:
  9383     033E                     i1l2912:
  9384     033E  0870               	movf	___lwdiv@divisor,w
  9385     033F  02F2               	subwf	___lwdiv@dividend,f
  9386     0340  0871               	movf	___lwdiv@divisor+1,w
  9387     0341  3BF3               	subwfb	___lwdiv@dividend+1,f
  9388     0342                     i1l2914:
  9389     0342  1475               	bsf	___lwdiv@quotient,0
  9390     0343                     i1l2916:
  9391     0343  3001               	movlw	1
  9392     0344                     u149_25:
  9393     0344  36F1               	lsrf	___lwdiv@divisor+1,f
  9394     0345  0CF0               	rrf	___lwdiv@divisor,f
  9395     0346  0B89               	decfsz	9,f
  9396     0347  2B44               	goto	u149_25
  9397     0348                     i1l2918:
  9398     0348  3001               	movlw	1
  9399     0349  02F7               	subwf	___lwdiv@counter,f
  9400     034A  1D03               	btfss	3,2
  9401     034B  2B4D               	goto	u150_21
  9402     034C  2B4E               	goto	u150_20
  9403     034D                     u150_21:
  9404     034D  2B2F               	goto	i1l2910
  9405     034E                     u150_20:
  9406     034E                     i1l2920:
  9407     034E  0876               	movf	___lwdiv@quotient+1,w
  9408     034F  00F1               	movwf	?___lwdiv+1
  9409     0350  0875               	movf	___lwdiv@quotient,w
  9410     0351  00F0               	movwf	?___lwdiv
  9411     0352                     i1l1382:
  9412     0352  0008               	return
  9413     0353                     __end_of___lwdiv:
  9414                           
  9415                           	psect	text62
  9416     01F6                     __ptext62:	
  9417 ;; *************** function ___lldiv *****************
  9418 ;; Defined at:
  9419 ;;		line 5 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\__lldiv.c"
  9420 ;; Parameters:    Size  Location     Type
  9421 ;;  divisor         4    0[COMMON] unsigned long 
  9422 ;;  dividend        4    4[COMMON] unsigned long 
  9423 ;; Auto vars:     Size  Location     Type
  9424 ;;  quotient        4    9[COMMON] unsigned long 
  9425 ;;  counter         1   13[COMMON] unsigned char 
  9426 ;; Return value:  Size  Location     Type
  9427 ;;                  4    0[COMMON] unsigned long 
  9428 ;; Registers used:
  9429 ;;		wreg, status,2, status,0
  9430 ;; Tracked objects:
  9431 ;;		On entry : 0/0
  9432 ;;		On exit  : 0/0
  9433 ;;		Unchanged: 0/0
  9434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9435 ;;      Params:         8       0       0       0       0       0
  9436 ;;      Locals:         5       0       0       0       0       0
  9437 ;;      Temps:          1       0       0       0       0       0
  9438 ;;      Totals:        14       0       0       0       0       0
  9439 ;;Total ram usage:       14 bytes
  9440 ;; Hardware stack levels used: 1
  9441 ;; This function calls:
  9442 ;;		Nothing
  9443 ;; This function is called by:
  9444 ;;		_TMR0_Interrupt
  9445 ;; This function uses a non-reentrant model
  9446 ;;
  9447                           
  9448     01F6                     ___lldiv:	
  9449                           ;psect for function ___lldiv
  9450                           
  9451     01F6                     i1l2874:	
  9452                           ;incstack = 0
  9453                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  9454                           
  9455     01F6  3000               	movlw	0
  9456     01F7  00FC               	movwf	___lldiv@quotient+3
  9457     01F8  3000               	movlw	0
  9458     01F9  00FB               	movwf	___lldiv@quotient+2
  9459     01FA  3000               	movlw	0
  9460     01FB  00FA               	movwf	___lldiv@quotient+1
  9461     01FC  3000               	movlw	0
  9462     01FD  00F9               	movwf	___lldiv@quotient
  9463     01FE  0873               	movf	___lldiv@divisor+3,w
  9464     01FF  0472               	iorwf	___lldiv@divisor+2,w
  9465     0200  0471               	iorwf	___lldiv@divisor+1,w
  9466     0201  0470               	iorwf	___lldiv@divisor,w
  9467     0202  1903               	skipnz
  9468     0203  2A05               	goto	u137_21
  9469     0204  2A06               	goto	u137_20
  9470     0205                     u137_21:
  9471     0205  2A47               	goto	i1l2894
  9472     0206                     u137_20:
  9473     0206                     i1l2876:
  9474     0206  01FD               	clrf	___lldiv@counter
  9475     0207  0AFD               	incf	___lldiv@counter,f
  9476     0208  2A14               	goto	i1l2880
  9477     0209                     i1l2878:
  9478     0209  3001               	movlw	1
  9479     020A                     u138_25:
  9480     020A  35F0               	lslf	___lldiv@divisor,f
  9481     020B  0DF1               	rlf	___lldiv@divisor+1,f
  9482     020C  0DF2               	rlf	___lldiv@divisor+2,f
  9483     020D  0DF3               	rlf	___lldiv@divisor+3,f
  9484     020E  0B89               	decfsz	9,f
  9485     020F  2A0A               	goto	u138_25
  9486     0210  3001               	movlw	1
  9487     0211  00F8               	movwf	??___lldiv
  9488     0212  0878               	movf	??___lldiv,w
  9489     0213  07FD               	addwf	___lldiv@counter,f
  9490     0214                     i1l2880:
  9491     0214  1FF3               	btfss	___lldiv@divisor+3,7
  9492     0215  2A17               	goto	u139_21
  9493     0216  2A18               	goto	u139_20
  9494     0217                     u139_21:
  9495     0217  2A09               	goto	i1l2878
  9496     0218                     u139_20:
  9497     0218                     i1l2882:
  9498     0218  3001               	movlw	1
  9499     0219                     u140_25:
  9500     0219  35F9               	lslf	___lldiv@quotient,f
  9501     021A  0DFA               	rlf	___lldiv@quotient+1,f
  9502     021B  0DFB               	rlf	___lldiv@quotient+2,f
  9503     021C  0DFC               	rlf	___lldiv@quotient+3,f
  9504     021D  0B89               	decfsz	9,f
  9505     021E  2A19               	goto	u140_25
  9506     021F                     i1l2884:
  9507     021F  0873               	movf	___lldiv@divisor+3,w
  9508     0220  0277               	subwf	___lldiv@dividend+3,w
  9509     0221  1D03               	skipz
  9510     0222  2A2D               	goto	u141_25
  9511     0223  0872               	movf	___lldiv@divisor+2,w
  9512     0224  0276               	subwf	___lldiv@dividend+2,w
  9513     0225  1D03               	skipz
  9514     0226  2A2D               	goto	u141_25
  9515     0227  0871               	movf	___lldiv@divisor+1,w
  9516     0228  0275               	subwf	___lldiv@dividend+1,w
  9517     0229  1D03               	skipz
  9518     022A  2A2D               	goto	u141_25
  9519     022B  0870               	movf	___lldiv@divisor,w
  9520     022C  0274               	subwf	___lldiv@dividend,w
  9521     022D                     u141_25:
  9522     022D  1C03               	skipc
  9523     022E  2A30               	goto	u141_21
  9524     022F  2A31               	goto	u141_20
  9525     0230                     u141_21:
  9526     0230  2A3A               	goto	i1l2890
  9527     0231                     u141_20:
  9528     0231                     i1l2886:
  9529     0231  0870               	movf	___lldiv@divisor,w
  9530     0232  02F4               	subwf	___lldiv@dividend,f
  9531     0233  0871               	movf	___lldiv@divisor+1,w
  9532     0234  3BF5               	subwfb	___lldiv@dividend+1,f
  9533     0235  0872               	movf	___lldiv@divisor+2,w
  9534     0236  3BF6               	subwfb	___lldiv@dividend+2,f
  9535     0237  0873               	movf	___lldiv@divisor+3,w
  9536     0238  3BF7               	subwfb	___lldiv@dividend+3,f
  9537     0239                     i1l2888:
  9538     0239  1479               	bsf	___lldiv@quotient,0
  9539     023A                     i1l2890:
  9540     023A  3001               	movlw	1
  9541     023B                     u142_25:
  9542     023B  36F3               	lsrf	___lldiv@divisor+3,f
  9543     023C  0CF2               	rrf	___lldiv@divisor+2,f
  9544     023D  0CF1               	rrf	___lldiv@divisor+1,f
  9545     023E  0CF0               	rrf	___lldiv@divisor,f
  9546     023F  0B89               	decfsz	9,f
  9547     0240  2A3B               	goto	u142_25
  9548     0241                     i1l2892:
  9549     0241  3001               	movlw	1
  9550     0242  02FD               	subwf	___lldiv@counter,f
  9551     0243  1D03               	btfss	3,2
  9552     0244  2A46               	goto	u143_21
  9553     0245  2A47               	goto	u143_20
  9554     0246                     u143_21:
  9555     0246  2A18               	goto	i1l2882
  9556     0247                     u143_20:
  9557     0247                     i1l2894:
  9558     0247  087C               	movf	___lldiv@quotient+3,w
  9559     0248  00F3               	movwf	?___lldiv+3
  9560     0249  087B               	movf	___lldiv@quotient+2,w
  9561     024A  00F2               	movwf	?___lldiv+2
  9562     024B  087A               	movf	___lldiv@quotient+1,w
  9563     024C  00F1               	movwf	?___lldiv+1
  9564     024D  0879               	movf	___lldiv@quotient,w
  9565     024E  00F0               	movwf	?___lldiv
  9566     024F                     i1l1138:
  9567     024F  0008               	return
  9568     0250                     __end_of___lldiv:
  9569                           
  9570                           	psect	text63
  9571     0735                     __ptext63:	
  9572 ;; *************** function _EUSART_is_tx_ready *****************
  9573 ;; Defined at:
  9574 ;;		line 94 in file "mcc_generated_files/eusart.c"
  9575 ;; Parameters:    Size  Location     Type
  9576 ;;		None
  9577 ;; Auto vars:     Size  Location     Type
  9578 ;;		None
  9579 ;; Return value:  Size  Location     Type
  9580 ;;                  1    wreg      _Bool 
  9581 ;; Registers used:
  9582 ;;		wreg, status,2
  9583 ;; Tracked objects:
  9584 ;;		On entry : 0/0
  9585 ;;		On exit  : 0/0
  9586 ;;		Unchanged: 0/0
  9587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9588 ;;      Params:         0       0       0       0       0       0
  9589 ;;      Locals:         1       0       0       0       0       0
  9590 ;;      Temps:          0       0       0       0       0       0
  9591 ;;      Totals:         1       0       0       0       0       0
  9592 ;;Total ram usage:        1 bytes
  9593 ;; Hardware stack levels used: 1
  9594 ;; This function calls:
  9595 ;;		Nothing
  9596 ;; This function is called by:
  9597 ;;		_TMR0_Interrupt
  9598 ;; This function uses a non-reentrant model
  9599 ;;
  9600                           
  9601     0735                     _EUSART_is_tx_ready:	
  9602                           ;psect for function _EUSART_is_tx_ready
  9603                           
  9604     0735                     i1l2822:	
  9605                           ;incstack = 0
  9606                           ; Regs used in _EUSART_is_tx_ready: [wreg+status,2]
  9607                           
  9608                           
  9609                           ;mcc_generated_files/eusart.c: 96:     return (_Bool)(PIR1bits.TXIF && TXSTAbits.TXEN);
  9610     0735  01F0               	clrf	_EUSART_is_tx_ready$323
  9611     0736                     i1l2824:
  9612     0736  0020               	movlb	0	; select bank0
  9613     0737  1E11               	btfss	17,4	;volatile
  9614     0738  2F3A               	goto	u129_21
  9615     0739  2F3B               	goto	u129_20
  9616     073A                     u129_21:
  9617     073A  2F42               	goto	i1l2830
  9618     073B                     u129_20:
  9619     073B                     i1l2826:
  9620     073B  0023               	movlb	3	; select bank3
  9621     073C  1E9E               	btfss	30,5	;volatile
  9622     073D  2F3F               	goto	u130_21
  9623     073E  2F40               	goto	u130_20
  9624     073F                     u130_21:
  9625     073F  2F42               	goto	i1l2830
  9626     0740                     u130_20:
  9627     0740                     i1l2828:
  9628     0740  01F0               	clrf	_EUSART_is_tx_ready$323
  9629     0741  0AF0               	incf	_EUSART_is_tx_ready$323,f
  9630     0742                     i1l2830:
  9631     0742  0870               	movf	_EUSART_is_tx_ready$323,w
  9632     0743                     i1l123:
  9633     0743  0008               	return
  9634     0744                     __end_of_EUSART_is_tx_ready:
  9635                           
  9636                           	psect	text64
  9637     07ED                     __ptext64:	
  9638 ;; *************** function _EUSART_Write *****************
  9639 ;; Defined at:
  9640 ;;		line 132 in file "mcc_generated_files/eusart.c"
  9641 ;; Parameters:    Size  Location     Type
  9642 ;;  txData          1    wreg     unsigned char 
  9643 ;; Auto vars:     Size  Location     Type
  9644 ;;  txData          1    0[COMMON] unsigned char 
  9645 ;; Return value:  Size  Location     Type
  9646 ;;                  1    wreg      void 
  9647 ;; Registers used:
  9648 ;;		wreg
  9649 ;; Tracked objects:
  9650 ;;		On entry : 0/0
  9651 ;;		On exit  : 0/0
  9652 ;;		Unchanged: 0/0
  9653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9654 ;;      Params:         0       0       0       0       0       0
  9655 ;;      Locals:         1       0       0       0       0       0
  9656 ;;      Temps:          0       0       0       0       0       0
  9657 ;;      Totals:         1       0       0       0       0       0
  9658 ;;Total ram usage:        1 bytes
  9659 ;; Hardware stack levels used: 1
  9660 ;; This function calls:
  9661 ;;		Nothing
  9662 ;; This function is called by:
  9663 ;;		_TMR0_Interrupt
  9664 ;; This function uses a non-reentrant model
  9665 ;;
  9666                           
  9667     07ED                     _EUSART_Write:	
  9668                           ;psect for function _EUSART_Write
  9669                           
  9670                           
  9671                           ;incstack = 0
  9672                           ; Regs used in _EUSART_Write: [wreg]
  9673                           ;EUSART_Write@txData stored from wreg
  9674     07ED  00F0               	movwf	EUSART_Write@txData
  9675     07EE                     i1l2834:
  9676     07EE                     i1l142:	
  9677                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
  9678                           
  9679                           
  9680                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
  9681     07EE  0020               	movlb	0	; select bank0
  9682     07EF  1E11               	btfss	17,4	;volatile
  9683     07F0  2FF2               	goto	u131_21
  9684     07F1  2FF3               	goto	u131_20
  9685     07F2                     u131_21:
  9686     07F2  2FEE               	goto	i1l142
  9687     07F3                     u131_20:
  9688     07F3                     i1l2836:
  9689                           
  9690                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
  9691     07F3  0870               	movf	EUSART_Write@txData,w
  9692     07F4  0023               	movlb	3	; select bank3
  9693     07F5  009A               	movwf	26	;volatile
  9694     07F6                     i1l145:
  9695     07F6  0008               	return
  9696     07F7                     __end_of_EUSART_Write:
  9697                           
  9698                           	psect	text65
  9699     05D1                     __ptext65:	
  9700 ;; *************** function _ADC_GetConversion *****************
  9701 ;; Defined at:
  9702 ;;		line 112 in file "mcc_generated_files/adc.c"
  9703 ;; Parameters:    Size  Location     Type
  9704 ;;  channel         1    wreg     enum E2485
  9705 ;; Auto vars:     Size  Location     Type
  9706 ;;  channel         1    3[COMMON] enum E2485
  9707 ;; Return value:  Size  Location     Type
  9708 ;;                  2    0[COMMON] unsigned short 
  9709 ;; Registers used:
  9710 ;;		wreg, status,2, status,0
  9711 ;; Tracked objects:
  9712 ;;		On entry : 0/0
  9713 ;;		On exit  : 0/0
  9714 ;;		Unchanged: 0/0
  9715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9716 ;;      Params:         2       0       0       0       0       0
  9717 ;;      Locals:         1       0       0       0       0       0
  9718 ;;      Temps:          1       0       0       0       0       0
  9719 ;;      Totals:         4       0       0       0       0       0
  9720 ;;Total ram usage:        4 bytes
  9721 ;; Hardware stack levels used: 1
  9722 ;; This function calls:
  9723 ;;		Nothing
  9724 ;; This function is called by:
  9725 ;;		_TMR0_Interrupt
  9726 ;; This function uses a non-reentrant model
  9727 ;;
  9728                           
  9729     05D1                     _ADC_GetConversion:	
  9730                           ;psect for function _ADC_GetConversion
  9731                           
  9732                           
  9733                           ;incstack = 0
  9734                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  9735                           ;ADC_GetConversion@channel stored from wreg
  9736     05D1  00F3               	movwf	ADC_GetConversion@channel
  9737     05D2                     i1l2838:
  9738                           
  9739                           ;mcc_generated_files/adc.c: 112: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = ch
      +                          annel;
  9740     05D2  0873               	movf	ADC_GetConversion@channel,w
  9741     05D3  00F2               	movwf	??_ADC_GetConversion
  9742     05D4  0DF2               	rlf	??_ADC_GetConversion,f
  9743     05D5  0DF2               	rlf	??_ADC_GetConversion,f
  9744     05D6  0021               	movlb	1	; select bank1
  9745     05D7  081D               	movf	29,w	;volatile
  9746     05D8  0672               	xorwf	??_ADC_GetConversion,w
  9747     05D9  3983               	andlw	-125
  9748     05DA  0672               	xorwf	??_ADC_GetConversion,w
  9749     05DB  009D               	movwf	29	;volatile
  9750     05DC                     i1l2840:
  9751                           
  9752                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
  9753     05DC  141D               	bsf	29,0	;volatile
  9754     05DD                     i1l2842:
  9755                           
  9756                           ;mcc_generated_files/adc.c: 121:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  9757     05DD  3003               	movlw	3
  9758     05DE                     u246_27:
  9759     05DE  0B89               	decfsz	9,f
  9760     05DF  2DDE               	goto	u246_27
  9761     05E0  0000               	nop
  9762     05E1                     i1l2844:
  9763                           
  9764                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GO_nDONE = 1;
  9765     05E1  0021               	movlb	1	; select bank1
  9766     05E2  149D               	bsf	29,1	;volatile
  9767     05E3                     i1l512:	
  9768                           ;mcc_generated_files/adc.c: 128:     {;mcc_generated_files/adc.c: 129:     }
  9769                           
  9770                           
  9771                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GO_nDONE)
  9772     05E3  189D               	btfsc	29,1	;volatile
  9773     05E4  2DE6               	goto	u132_21
  9774     05E5  2DE7               	goto	u132_20
  9775     05E6                     u132_21:
  9776     05E6  2DE3               	goto	i1l512
  9777     05E7                     u132_20:
  9778     05E7                     i1l2846:
  9779                           
  9780                           ;mcc_generated_files/adc.c: 132:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  9781     05E7  081C               	movf	28,w	;volatile
  9782     05E8  00F1               	movwf	?_ADC_GetConversion+1
  9783     05E9  081B               	movf	27,w	;volatile
  9784     05EA  00F0               	movwf	?_ADC_GetConversion
  9785     05EB                     i1l515:
  9786     05EB  0008               	return
  9787     05EC                     __end_of_ADC_GetConversion:
  9788                           
  9789                           	psect	text66
  9790     06F5                     __ptext66:	
  9791 ;; *************** function _PIN_MANAGER_IOC *****************
  9792 ;; Defined at:
  9793 ;;		line 119 in file "mcc_generated_files/pin_manager.c"
  9794 ;; Parameters:    Size  Location     Type
  9795 ;;		None
  9796 ;; Auto vars:     Size  Location     Type
  9797 ;;		None
  9798 ;; Return value:  Size  Location     Type
  9799 ;;                  1    wreg      void 
  9800 ;; Registers used:
  9801 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9802 ;; Tracked objects:
  9803 ;;		On entry : 0/0
  9804 ;;		On exit  : 0/0
  9805 ;;		Unchanged: 0/0
  9806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9807 ;;      Params:         0       0       0       0       0       0
  9808 ;;      Locals:         0       0       0       0       0       0
  9809 ;;      Temps:          0       0       0       0       0       0
  9810 ;;      Totals:         0       0       0       0       0       0
  9811 ;;Total ram usage:        0 bytes
  9812 ;; Hardware stack levels used: 1
  9813 ;; Hardware stack levels required when called: 6
  9814 ;; This function calls:
  9815 ;;		_IOCBF0_ISR
  9816 ;;		_IOCBF3_ISR
  9817 ;; This function is called by:
  9818 ;;		_INTERRUPT_InterruptManager
  9819 ;; This function uses a non-reentrant model
  9820 ;;
  9821                           
  9822     06F5                     _PIN_MANAGER_IOC:	
  9823                           ;psect for function _PIN_MANAGER_IOC
  9824                           
  9825     06F5                     i1l3412:	
  9826                           ;incstack = 0
  9827                           ; Regs used in _PIN_MANAGER_IOC: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9828                           
  9829                           
  9830                           ;mcc_generated_files/pin_manager.c: 122:     if(IOCBFbits.IOCBF0 == 1)
  9831     06F5  0027               	movlb	7	; select bank7
  9832     06F6  1C16               	btfss	22,0	;volatile
  9833     06F7  2EF9               	goto	u192_21
  9834     06F8  2EFA               	goto	u192_20
  9835     06F9                     u192_21:
  9836     06F9  2EFD               	goto	i1l3416
  9837     06FA                     u192_20:
  9838     06FA                     i1l3414:
  9839                           
  9840                           ;mcc_generated_files/pin_manager.c: 123:     {;mcc_generated_files/pin_manager.c: 124:  
      +                                 IOCBF0_ISR();
  9841     06FA  3187  2753  3186   	fcall	_IOCBF0_ISR
  9842     06FD                     i1l3416:
  9843                           
  9844                           ;mcc_generated_files/pin_manager.c: 127:     if(IOCBFbits.IOCBF3 == 1)
  9845     06FD  0027               	movlb	7	; select bank7
  9846     06FE  1D96               	btfss	22,3	;volatile
  9847     06FF  2F01               	goto	u193_21
  9848     0700  2F02               	goto	u193_20
  9849     0701                     u193_21:
  9850     0701  2F05               	goto	i1l262
  9851     0702                     u193_20:
  9852     0702                     i1l3418:
  9853                           
  9854                           ;mcc_generated_files/pin_manager.c: 128:     {;mcc_generated_files/pin_manager.c: 129:  
      +                                 IOCBF3_ISR();
  9855     0702  3187  2744  3186   	fcall	_IOCBF3_ISR
  9856     0705                     i1l262:
  9857     0705  0008               	return
  9858     0706                     __end_of_PIN_MANAGER_IOC:
  9859                           
  9860                           	psect	text67
  9861     0744                     __ptext67:	
  9862 ;; *************** function _IOCBF3_ISR *****************
  9863 ;; Defined at:
  9864 ;;		line 166 in file "mcc_generated_files/pin_manager.c"
  9865 ;; Parameters:    Size  Location     Type
  9866 ;;		None
  9867 ;; Auto vars:     Size  Location     Type
  9868 ;;		None
  9869 ;; Return value:  Size  Location     Type
  9870 ;;                  1    wreg      void 
  9871 ;; Registers used:
  9872 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9873 ;; Tracked objects:
  9874 ;;		On entry : 0/0
  9875 ;;		On exit  : 0/0
  9876 ;;		Unchanged: 0/0
  9877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9878 ;;      Params:         0       0       0       0       0       0
  9879 ;;      Locals:         0       0       0       0       0       0
  9880 ;;      Temps:          0       0       0       0       0       0
  9881 ;;      Totals:         0       0       0       0       0       0
  9882 ;;Total ram usage:        0 bytes
  9883 ;; Hardware stack levels used: 1
  9884 ;; Hardware stack levels required when called: 5
  9885 ;; This function calls:
  9886 ;;		Absolute function
  9887 ;;		_IOCBF3_DefaultInterruptHandler
  9888 ;;		_S2_Interrupt
  9889 ;; This function is called by:
  9890 ;;		_PIN_MANAGER_IOC
  9891 ;; This function uses a non-reentrant model
  9892 ;;
  9893                           
  9894     0744                     _IOCBF3_ISR:	
  9895                           ;psect for function _IOCBF3_ISR
  9896                           
  9897     0744                     i1l3174:	
  9898                           ;incstack = 0
  9899                           ; Regs used in _IOCBF3_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9900                           
  9901                           
  9902                           ;mcc_generated_files/pin_manager.c: 171:     if(IOCBF3_InterruptHandler)
  9903     0744  0020               	movlb	0	; select bank0
  9904     0745  082E               	movf	_IOCBF3_InterruptHandler,w
  9905     0746  042F               	iorwf	_IOCBF3_InterruptHandler+1,w
  9906     0747  1903               	btfsc	3,2
  9907     0748  2F4A               	goto	u172_21
  9908     0749  2F4B               	goto	u172_20
  9909     074A                     u172_21:
  9910     074A  2F50               	goto	i1l3178
  9911     074B                     u172_20:
  9912     074B                     i1l3176:
  9913                           
  9914                           ;mcc_generated_files/pin_manager.c: 172:     {;mcc_generated_files/pin_manager.c: 173:  
      +                                 IOCBF3_InterruptHandler();
  9915     074B  082F               	movf	_IOCBF3_InterruptHandler+1,w
  9916     074C  008A               	movwf	10
  9917     074D  082E               	movf	_IOCBF3_InterruptHandler,w
  9918     074E  000A               	callw
  9919     074F  3187               	pagesel	$
  9920     0750                     i1l3178:
  9921                           
  9922                           ;mcc_generated_files/pin_manager.c: 175:     IOCBFbits.IOCBF3 = 0;
  9923     0750  0027               	movlb	7	; select bank7
  9924     0751  1196               	bcf	22,3	;volatile
  9925     0752                     i1l276:
  9926     0752  0008               	return
  9927     0753                     __end_of_IOCBF3_ISR:
  9928                           
  9929                           	psect	text68
  9930     0F40                     __ptext68:	
  9931 ;; *************** function _IOCBF3_DefaultInterruptHandler *****************
  9932 ;; Defined at:
  9933 ;;		line 188 in file "mcc_generated_files/pin_manager.c"
  9934 ;; Parameters:    Size  Location     Type
  9935 ;;		None
  9936 ;; Auto vars:     Size  Location     Type
  9937 ;;		None
  9938 ;; Return value:  Size  Location     Type
  9939 ;;                  1    wreg      void 
  9940 ;; Registers used:
  9941 ;;		None
  9942 ;; Tracked objects:
  9943 ;;		On entry : 0/0
  9944 ;;		On exit  : 0/0
  9945 ;;		Unchanged: 0/0
  9946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9947 ;;      Params:         0       0       0       0       0       0
  9948 ;;      Locals:         0       0       0       0       0       0
  9949 ;;      Temps:          0       0       0       0       0       0
  9950 ;;      Totals:         0       0       0       0       0       0
  9951 ;;Total ram usage:        0 bytes
  9952 ;; Hardware stack levels used: 1
  9953 ;; This function calls:
  9954 ;;		Nothing
  9955 ;; This function is called by:
  9956 ;;		_PIN_MANAGER_Initialize
  9957 ;;		_IOCBF3_ISR
  9958 ;; This function uses a non-reentrant model
  9959 ;;
  9960                           
  9961     0F40                     _IOCBF3_DefaultInterruptHandler:	
  9962                           ;psect for function _IOCBF3_DefaultInterruptHandler
  9963                           
  9964     0F40                     i1l282:	
  9965                           ;incstack = 0
  9966                           ; Regs used in _IOCBF3_DefaultInterruptHandler: []
  9967                           
  9968     0F40  0008               	return
  9969     0F41                     __end_of_IOCBF3_DefaultInterruptHandler:
  9970                           
  9971                           	psect	text69
  9972     057D                     __ptext69:	
  9973 ;; *************** function _S2_Interrupt *****************
  9974 ;; Defined at:
  9975 ;;		line 199 in file "main.c"
  9976 ;; Parameters:    Size  Location     Type
  9977 ;;		None
  9978 ;; Auto vars:     Size  Location     Type
  9979 ;;		None
  9980 ;; Return value:  Size  Location     Type
  9981 ;;                  1    wreg      void 
  9982 ;; Registers used:
  9983 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9984 ;; Tracked objects:
  9985 ;;		On entry : 0/0
  9986 ;;		On exit  : 0/0
  9987 ;;		Unchanged: 0/0
  9988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9989 ;;      Params:         0       0       0       0       0       0
  9990 ;;      Locals:         0       0       0       0       0       0
  9991 ;;      Temps:          0       0       0       0       0       0
  9992 ;;      Totals:         0       0       0       0       0       0
  9993 ;;Total ram usage:        0 bytes
  9994 ;; Hardware stack levels used: 1
  9995 ;; Hardware stack levels required when called: 4
  9996 ;; This function calls:
  9997 ;;		_TMR6_StartTimer
  9998 ;;		i1_updateMatrix
  9999 ;;		i1_updateMotor
 10000 ;; This function is called by:
 10001 ;;		_main
 10002 ;;		_IOCBF3_ISR
 10003 ;; This function uses a non-reentrant model
 10004 ;;
 10005                           
 10006     057D                     _S2_Interrupt:	
 10007                           ;psect for function _S2_Interrupt
 10008                           
 10009     057D                     i1l3086:	
 10010                           ;incstack = 0
 10011                           ; Regs used in _S2_Interrupt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10012                           
 10013                           
 10014                           ;main.c: 200:     if(targetFloor == 2 && currentFloor != 2){
 10015     057D  3002               	movlw	2
 10016     057E  0020               	movlb	0	; select bank0
 10017     057F  0665               	xorwf	_targetFloor,w
 10018     0580  1D03               	btfss	3,2
 10019     0581  2D83               	goto	u167_21
 10020     0582  2D84               	goto	u167_20
 10021     0583                     u167_21:
 10022     0583  2D8F               	goto	i1l3094
 10023     0584                     u167_20:
 10024     0584                     i1l3088:
 10025     0584  3002               	movlw	2
 10026     0585  0666               	xorwf	_currentFloor,w
 10027     0586  1903               	btfsc	3,2
 10028     0587  2D89               	goto	u168_21
 10029     0588  2D8A               	goto	u168_20
 10030     0589                     u168_21:
 10031     0589  2D8F               	goto	i1l3094
 10032     058A                     u168_20:
 10033     058A                     i1l3090:
 10034                           
 10035                           ;main.c: 201:         floorFlag = 1;
 10036     058A  01CF               	clrf	_floorFlag
 10037     058B  0ACF               	incf	_floorFlag,f
 10038     058C                     i1l3092:
 10039                           
 10040                           ;main.c: 202:         TMR6_StartTimer();
 10041     058C  318F  2742  3185   	fcall	_TMR6_StartTimer
 10042     058F                     i1l3094:
 10043                           
 10044                           ;main.c: 204:     currentFloor = 2;
 10045     058F  3002               	movlw	2
 10046     0590  0020               	movlb	0	; select bank0
 10047     0591  00E6               	movwf	_currentFloor
 10048     0592                     i1l3096:
 10049                           
 10050                           ;main.c: 205:     updateMotor();
 10051     0592  3184  2419  3185   	fcall	i1_updateMotor
 10052     0595                     i1l3098:
 10053                           
 10054                           ;main.c: 206:     updateMatrix();
 10055     0595  3184  24E5  3185   	fcall	i1_updateMatrix
 10056     0598                     i1l883:
 10057     0598  0008               	return
 10058     0599                     __end_of_S2_Interrupt:
 10059                           
 10060                           	psect	text70
 10061     0753                     __ptext70:	
 10062 ;; *************** function _IOCBF0_ISR *****************
 10063 ;; Defined at:
 10064 ;;		line 136 in file "mcc_generated_files/pin_manager.c"
 10065 ;; Parameters:    Size  Location     Type
 10066 ;;		None
 10067 ;; Auto vars:     Size  Location     Type
 10068 ;;		None
 10069 ;; Return value:  Size  Location     Type
 10070 ;;                  1    wreg      void 
 10071 ;; Registers used:
 10072 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10073 ;; Tracked objects:
 10074 ;;		On entry : 0/0
 10075 ;;		On exit  : 0/0
 10076 ;;		Unchanged: 0/0
 10077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10078 ;;      Params:         0       0       0       0       0       0
 10079 ;;      Locals:         0       0       0       0       0       0
 10080 ;;      Temps:          0       0       0       0       0       0
 10081 ;;      Totals:         0       0       0       0       0       0
 10082 ;;Total ram usage:        0 bytes
 10083 ;; Hardware stack levels used: 1
 10084 ;; Hardware stack levels required when called: 5
 10085 ;; This function calls:
 10086 ;;		Absolute function
 10087 ;;		_IOCBF0_DefaultInterruptHandler
 10088 ;;		_S1_Interrupt
 10089 ;; This function is called by:
 10090 ;;		_PIN_MANAGER_IOC
 10091 ;; This function uses a non-reentrant model
 10092 ;;
 10093                           
 10094     0753                     _IOCBF0_ISR:	
 10095                           ;psect for function _IOCBF0_ISR
 10096                           
 10097     0753                     i1l3168:	
 10098                           ;incstack = 0
 10099                           ; Regs used in _IOCBF0_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10100                           
 10101                           
 10102                           ;mcc_generated_files/pin_manager.c: 141:     if(IOCBF0_InterruptHandler)
 10103     0753  0020               	movlb	0	; select bank0
 10104     0754  0830               	movf	_IOCBF0_InterruptHandler,w
 10105     0755  0431               	iorwf	_IOCBF0_InterruptHandler+1,w
 10106     0756  1903               	btfsc	3,2
 10107     0757  2F59               	goto	u171_21
 10108     0758  2F5A               	goto	u171_20
 10109     0759                     u171_21:
 10110     0759  2F5F               	goto	i1l3172
 10111     075A                     u171_20:
 10112     075A                     i1l3170:
 10113                           
 10114                           ;mcc_generated_files/pin_manager.c: 142:     {;mcc_generated_files/pin_manager.c: 143:  
      +                                 IOCBF0_InterruptHandler();
 10115     075A  0831               	movf	_IOCBF0_InterruptHandler+1,w
 10116     075B  008A               	movwf	10
 10117     075C  0830               	movf	_IOCBF0_InterruptHandler,w
 10118     075D  000A               	callw
 10119     075E  3187               	pagesel	$
 10120     075F                     i1l3172:
 10121                           
 10122                           ;mcc_generated_files/pin_manager.c: 145:     IOCBFbits.IOCBF0 = 0;
 10123     075F  0027               	movlb	7	; select bank7
 10124     0760  1016               	bcf	22,0	;volatile
 10125     0761                     i1l266:
 10126     0761  0008               	return
 10127     0762                     __end_of_IOCBF0_ISR:
 10128                           
 10129                           	psect	text71
 10130     0F3F                     __ptext71:	
 10131 ;; *************** function _IOCBF0_DefaultInterruptHandler *****************
 10132 ;; Defined at:
 10133 ;;		line 158 in file "mcc_generated_files/pin_manager.c"
 10134 ;; Parameters:    Size  Location     Type
 10135 ;;		None
 10136 ;; Auto vars:     Size  Location     Type
 10137 ;;		None
 10138 ;; Return value:  Size  Location     Type
 10139 ;;                  1    wreg      void 
 10140 ;; Registers used:
 10141 ;;		None
 10142 ;; Tracked objects:
 10143 ;;		On entry : 0/0
 10144 ;;		On exit  : 0/0
 10145 ;;		Unchanged: 0/0
 10146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10147 ;;      Params:         0       0       0       0       0       0
 10148 ;;      Locals:         0       0       0       0       0       0
 10149 ;;      Temps:          0       0       0       0       0       0
 10150 ;;      Totals:         0       0       0       0       0       0
 10151 ;;Total ram usage:        0 bytes
 10152 ;; Hardware stack levels used: 1
 10153 ;; This function calls:
 10154 ;;		Nothing
 10155 ;; This function is called by:
 10156 ;;		_PIN_MANAGER_Initialize
 10157 ;;		_IOCBF0_ISR
 10158 ;; This function uses a non-reentrant model
 10159 ;;
 10160                           
 10161     0F3F                     _IOCBF0_DefaultInterruptHandler:	
 10162                           ;psect for function _IOCBF0_DefaultInterruptHandler
 10163                           
 10164     0F3F                     i1l272:	
 10165                           ;incstack = 0
 10166                           ; Regs used in _IOCBF0_DefaultInterruptHandler: []
 10167                           
 10168     0F3F  0008               	return
 10169     0F40                     __end_of_IOCBF0_DefaultInterruptHandler:
 10170                           
 10171                           	psect	text72
 10172     05EC                     __ptext72:	
 10173 ;; *************** function _S1_Interrupt *****************
 10174 ;; Defined at:
 10175 ;;		line 188 in file "main.c"
 10176 ;; Parameters:    Size  Location     Type
 10177 ;;		None
 10178 ;; Auto vars:     Size  Location     Type
 10179 ;;		None
 10180 ;; Return value:  Size  Location     Type
 10181 ;;                  1    wreg      void 
 10182 ;; Registers used:
 10183 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10184 ;; Tracked objects:
 10185 ;;		On entry : 0/0
 10186 ;;		On exit  : 0/0
 10187 ;;		Unchanged: 0/0
 10188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10189 ;;      Params:         0       0       0       0       0       0
 10190 ;;      Locals:         0       0       0       0       0       0
 10191 ;;      Temps:          0       0       0       0       0       0
 10192 ;;      Totals:         0       0       0       0       0       0
 10193 ;;Total ram usage:        0 bytes
 10194 ;; Hardware stack levels used: 1
 10195 ;; Hardware stack levels required when called: 4
 10196 ;; This function calls:
 10197 ;;		_TMR6_StartTimer
 10198 ;;		i1_updateMatrix
 10199 ;;		i1_updateMotor
 10200 ;; This function is called by:
 10201 ;;		_main
 10202 ;;		_IOCBF0_ISR
 10203 ;; This function uses a non-reentrant model
 10204 ;;
 10205                           
 10206     05EC                     _S1_Interrupt:	
 10207                           ;psect for function _S1_Interrupt
 10208                           
 10209     05EC                     i1l3070:	
 10210                           ;incstack = 0
 10211                           ; Regs used in _S1_Interrupt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10212                           
 10213                           
 10214                           ;main.c: 189:     position = 0;
 10215     05EC  0020               	movlb	0	; select bank0
 10216     05ED  01E4               	clrf	_position
 10217     05EE                     i1l3072:
 10218                           
 10219                           ;main.c: 190:     if(targetFloor == 1 && currentFloor != 1){
 10220     05EE  0365               	decf	_targetFloor,w
 10221     05EF  1D03               	btfss	3,2
 10222     05F0  2DF2               	goto	u165_21
 10223     05F1  2DF3               	goto	u165_20
 10224     05F2                     u165_21:
 10225     05F2  2DFD               	goto	i1l3080
 10226     05F3                     u165_20:
 10227     05F3                     i1l3074:
 10228     05F3  0366               	decf	_currentFloor,w
 10229     05F4  1903               	btfsc	3,2
 10230     05F5  2DF7               	goto	u166_21
 10231     05F6  2DF8               	goto	u166_20
 10232     05F7                     u166_21:
 10233     05F7  2DFD               	goto	i1l3080
 10234     05F8                     u166_20:
 10235     05F8                     i1l3076:
 10236                           
 10237                           ;main.c: 191:         floorFlag = 1;
 10238     05F8  01CF               	clrf	_floorFlag
 10239     05F9  0ACF               	incf	_floorFlag,f
 10240     05FA                     i1l3078:
 10241                           
 10242                           ;main.c: 192:         TMR6_StartTimer();
 10243     05FA  318F  2742  3185   	fcall	_TMR6_StartTimer
 10244     05FD                     i1l3080:
 10245                           
 10246                           ;main.c: 194:     currentFloor = 1;
 10247     05FD  0020               	movlb	0	; select bank0
 10248     05FE  01E6               	clrf	_currentFloor
 10249     05FF  0AE6               	incf	_currentFloor,f
 10250     0600                     i1l3082:
 10251                           
 10252                           ;main.c: 195:     updateMotor();
 10253     0600  3184  2419  3185   	fcall	i1_updateMotor
 10254     0603                     i1l3084:
 10255                           
 10256                           ;main.c: 196:     updateMatrix();
 10257     0603  3184  24E5  3185   	fcall	i1_updateMatrix
 10258     0606                     i1l879:
 10259     0606  0008               	return
 10260     0607                     __end_of_S1_Interrupt:
 10261                           
 10262                           	psect	text73
 10263     0762                     __ptext73:	
 10264 ;; *************** function _CMP2_ISR *****************
 10265 ;; Defined at:
 10266 ;;		line 91 in file "mcc_generated_files/cmp2.c"
 10267 ;; Parameters:    Size  Location     Type
 10268 ;;		None
 10269 ;; Auto vars:     Size  Location     Type
 10270 ;;		None
 10271 ;; Return value:  Size  Location     Type
 10272 ;;                  1    wreg      void 
 10273 ;; Registers used:
 10274 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10275 ;; Tracked objects:
 10276 ;;		On entry : 0/0
 10277 ;;		On exit  : 0/0
 10278 ;;		Unchanged: 0/0
 10279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10280 ;;      Params:         0       0       0       0       0       0
 10281 ;;      Locals:         0       0       0       0       0       0
 10282 ;;      Temps:          0       0       0       0       0       0
 10283 ;;      Totals:         0       0       0       0       0       0
 10284 ;;Total ram usage:        0 bytes
 10285 ;; Hardware stack levels used: 1
 10286 ;; Hardware stack levels required when called: 5
 10287 ;; This function calls:
 10288 ;;		Absolute function
 10289 ;;		_S4_Interrupt
 10290 ;; This function is called by:
 10291 ;;		_INTERRUPT_InterruptManager
 10292 ;; This function uses a non-reentrant model
 10293 ;;
 10294                           
 10295     0762                     _CMP2_ISR:	
 10296                           ;psect for function _CMP2_ISR
 10297                           
 10298     0762                     i1l3436:	
 10299                           ;incstack = 0
 10300                           ; Regs used in _CMP2_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10301                           
 10302                           
 10303                           ;mcc_generated_files/cmp2.c: 94:     PIR2bits.C2IF = 0;
 10304     0762  0020               	movlb	0	; select bank0
 10305     0763  1312               	bcf	18,6	;volatile
 10306     0764                     i1l3438:
 10307                           
 10308                           ;mcc_generated_files/cmp2.c: 96:     if(CMP2_InterruptHandler)
 10309     0764  0826               	movf	_CMP2_InterruptHandler,w
 10310     0765  0427               	iorwf	_CMP2_InterruptHandler+1,w
 10311     0766  1903               	btfsc	3,2
 10312     0767  2F69               	goto	u196_21
 10313     0768  2F6A               	goto	u196_20
 10314     0769                     u196_21:
 10315     0769  2F6F               	goto	i1l590
 10316     076A                     u196_20:
 10317     076A                     i1l3440:
 10318                           
 10319                           ;mcc_generated_files/cmp2.c: 97:     {;mcc_generated_files/cmp2.c: 98:         CMP2_Inte
      +                          rruptHandler();
 10320     076A  0827               	movf	_CMP2_InterruptHandler+1,w
 10321     076B  008A               	movwf	10
 10322     076C  0826               	movf	_CMP2_InterruptHandler,w
 10323     076D  000A               	callw
 10324     076E  3187               	pagesel	$
 10325     076F                     i1l590:
 10326     076F  0008               	return
 10327     0770                     __end_of_CMP2_ISR:
 10328                           
 10329                           	psect	text74
 10330     0599                     __ptext74:	
 10331 ;; *************** function _S4_Interrupt *****************
 10332 ;; Defined at:
 10333 ;;		line 219 in file "main.c"
 10334 ;; Parameters:    Size  Location     Type
 10335 ;;		None
 10336 ;; Auto vars:     Size  Location     Type
 10337 ;;		None
 10338 ;; Return value:  Size  Location     Type
 10339 ;;                  1    wreg      void 
 10340 ;; Registers used:
 10341 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10342 ;; Tracked objects:
 10343 ;;		On entry : 0/0
 10344 ;;		On exit  : 0/0
 10345 ;;		Unchanged: 0/0
 10346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10347 ;;      Params:         0       0       0       0       0       0
 10348 ;;      Locals:         0       0       0       0       0       0
 10349 ;;      Temps:          0       0       0       0       0       0
 10350 ;;      Totals:         0       0       0       0       0       0
 10351 ;;Total ram usage:        0 bytes
 10352 ;; Hardware stack levels used: 1
 10353 ;; Hardware stack levels required when called: 4
 10354 ;; This function calls:
 10355 ;;		_TMR6_StartTimer
 10356 ;;		i1_updateMatrix
 10357 ;;		i1_updateMotor
 10358 ;; This function is called by:
 10359 ;;		_main
 10360 ;;		_CMP2_ISR
 10361 ;; This function uses a non-reentrant model
 10362 ;;
 10363                           
 10364     0599                     _S4_Interrupt:	
 10365                           ;psect for function _S4_Interrupt
 10366                           
 10367     0599                     i1l3382:	
 10368                           ;incstack = 0
 10369                           ; Regs used in _S4_Interrupt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10370                           
 10371                           
 10372                           ;main.c: 220:     if(targetFloor == 4 && currentFloor != 4){
 10373     0599  3004               	movlw	4
 10374     059A  0020               	movlb	0	; select bank0
 10375     059B  0665               	xorwf	_targetFloor,w
 10376     059C  1D03               	btfss	3,2
 10377     059D  2D9F               	goto	u188_21
 10378     059E  2DA0               	goto	u188_20
 10379     059F                     u188_21:
 10380     059F  2DAB               	goto	i1l3390
 10381     05A0                     u188_20:
 10382     05A0                     i1l3384:
 10383     05A0  3004               	movlw	4
 10384     05A1  0666               	xorwf	_currentFloor,w
 10385     05A2  1903               	btfsc	3,2
 10386     05A3  2DA5               	goto	u189_21
 10387     05A4  2DA6               	goto	u189_20
 10388     05A5                     u189_21:
 10389     05A5  2DAB               	goto	i1l3390
 10390     05A6                     u189_20:
 10391     05A6                     i1l3386:
 10392                           
 10393                           ;main.c: 221:         floorFlag = 1;
 10394     05A6  01CF               	clrf	_floorFlag
 10395     05A7  0ACF               	incf	_floorFlag,f
 10396     05A8                     i1l3388:
 10397                           
 10398                           ;main.c: 222:         TMR6_StartTimer();
 10399     05A8  318F  2742  3185   	fcall	_TMR6_StartTimer
 10400     05AB                     i1l3390:
 10401                           
 10402                           ;main.c: 224:     currentFloor = 4;
 10403     05AB  3004               	movlw	4
 10404     05AC  0020               	movlb	0	; select bank0
 10405     05AD  00E6               	movwf	_currentFloor
 10406     05AE                     i1l3392:
 10407                           
 10408                           ;main.c: 225:     updateMotor();
 10409     05AE  3184  2419  3185   	fcall	i1_updateMotor
 10410     05B1                     i1l3394:
 10411                           
 10412                           ;main.c: 226:     updateMatrix();
 10413     05B1  3184  24E5  3185   	fcall	i1_updateMatrix
 10414     05B4                     i1l891:
 10415     05B4  0008               	return
 10416     05B5                     __end_of_S4_Interrupt:
 10417                           
 10418                           	psect	text75
 10419     0770                     __ptext75:	
 10420 ;; *************** function _CMP1_ISR *****************
 10421 ;; Defined at:
 10422 ;;		line 91 in file "mcc_generated_files/cmp1.c"
 10423 ;; Parameters:    Size  Location     Type
 10424 ;;		None
 10425 ;; Auto vars:     Size  Location     Type
 10426 ;;		None
 10427 ;; Return value:  Size  Location     Type
 10428 ;;                  1    wreg      void 
 10429 ;; Registers used:
 10430 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10431 ;; Tracked objects:
 10432 ;;		On entry : 0/0
 10433 ;;		On exit  : 0/0
 10434 ;;		Unchanged: 0/0
 10435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10436 ;;      Params:         0       0       0       0       0       0
 10437 ;;      Locals:         0       0       0       0       0       0
 10438 ;;      Temps:          0       0       0       0       0       0
 10439 ;;      Totals:         0       0       0       0       0       0
 10440 ;;Total ram usage:        0 bytes
 10441 ;; Hardware stack levels used: 1
 10442 ;; Hardware stack levels required when called: 5
 10443 ;; This function calls:
 10444 ;;		Absolute function
 10445 ;;		_S3_Interrupt
 10446 ;; This function is called by:
 10447 ;;		_INTERRUPT_InterruptManager
 10448 ;; This function uses a non-reentrant model
 10449 ;;
 10450                           
 10451     0770                     _CMP1_ISR:	
 10452                           ;psect for function _CMP1_ISR
 10453                           
 10454     0770                     i1l3442:	
 10455                           ;incstack = 0
 10456                           ; Regs used in _CMP1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10457                           
 10458                           
 10459                           ;mcc_generated_files/cmp1.c: 94:     PIR2bits.C1IF = 0;
 10460     0770  0020               	movlb	0	; select bank0
 10461     0771  1292               	bcf	18,5	;volatile
 10462     0772                     i1l3444:
 10463                           
 10464                           ;mcc_generated_files/cmp1.c: 96:     if(CMP1_InterruptHandler)
 10465     0772  0820               	movf	_CMP1_InterruptHandler,w
 10466     0773  0421               	iorwf	_CMP1_InterruptHandler+1,w
 10467     0774  1903               	btfsc	3,2
 10468     0775  2F77               	goto	u197_21
 10469     0776  2F78               	goto	u197_20
 10470     0777                     u197_21:
 10471     0777  2F7D               	goto	i1l736
 10472     0778                     u197_20:
 10473     0778                     i1l3446:
 10474                           
 10475                           ;mcc_generated_files/cmp1.c: 97:     {;mcc_generated_files/cmp1.c: 98:         CMP1_Inte
      +                          rruptHandler();
 10476     0778  0821               	movf	_CMP1_InterruptHandler+1,w
 10477     0779  008A               	movwf	10
 10478     077A  0820               	movf	_CMP1_InterruptHandler,w
 10479     077B  000A               	callw
 10480     077C  3187               	pagesel	$
 10481     077D                     i1l736:
 10482     077D  0008               	return
 10483     077E                     __end_of_CMP1_ISR:
 10484                           
 10485                           	psect	text76
 10486     05B5                     __ptext76:	
 10487 ;; *************** function _S3_Interrupt *****************
 10488 ;; Defined at:
 10489 ;;		line 209 in file "main.c"
 10490 ;; Parameters:    Size  Location     Type
 10491 ;;		None
 10492 ;; Auto vars:     Size  Location     Type
 10493 ;;		None
 10494 ;; Return value:  Size  Location     Type
 10495 ;;                  1    wreg      void 
 10496 ;; Registers used:
 10497 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10498 ;; Tracked objects:
 10499 ;;		On entry : 0/0
 10500 ;;		On exit  : 0/0
 10501 ;;		Unchanged: 0/0
 10502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10503 ;;      Params:         0       0       0       0       0       0
 10504 ;;      Locals:         0       0       0       0       0       0
 10505 ;;      Temps:          0       0       0       0       0       0
 10506 ;;      Totals:         0       0       0       0       0       0
 10507 ;;Total ram usage:        0 bytes
 10508 ;; Hardware stack levels used: 1
 10509 ;; Hardware stack levels required when called: 4
 10510 ;; This function calls:
 10511 ;;		_TMR6_StartTimer
 10512 ;;		i1_updateMatrix
 10513 ;;		i1_updateMotor
 10514 ;; This function is called by:
 10515 ;;		_main
 10516 ;;		_CMP1_ISR
 10517 ;; This function uses a non-reentrant model
 10518 ;;
 10519                           
 10520     05B5                     _S3_Interrupt:	
 10521                           ;psect for function _S3_Interrupt
 10522                           
 10523     05B5                     i1l3368:	
 10524                           ;incstack = 0
 10525                           ; Regs used in _S3_Interrupt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10526                           
 10527                           
 10528                           ;main.c: 210:     if(targetFloor == 3 && currentFloor != 3){
 10529     05B5  3003               	movlw	3
 10530     05B6  0020               	movlb	0	; select bank0
 10531     05B7  0665               	xorwf	_targetFloor,w
 10532     05B8  1D03               	btfss	3,2
 10533     05B9  2DBB               	goto	u186_21
 10534     05BA  2DBC               	goto	u186_20
 10535     05BB                     u186_21:
 10536     05BB  2DC7               	goto	i1l3376
 10537     05BC                     u186_20:
 10538     05BC                     i1l3370:
 10539     05BC  3003               	movlw	3
 10540     05BD  0666               	xorwf	_currentFloor,w
 10541     05BE  1903               	btfsc	3,2
 10542     05BF  2DC1               	goto	u187_21
 10543     05C0  2DC2               	goto	u187_20
 10544     05C1                     u187_21:
 10545     05C1  2DC7               	goto	i1l3376
 10546     05C2                     u187_20:
 10547     05C2                     i1l3372:
 10548                           
 10549                           ;main.c: 211:         floorFlag = 1;
 10550     05C2  01CF               	clrf	_floorFlag
 10551     05C3  0ACF               	incf	_floorFlag,f
 10552     05C4                     i1l3374:
 10553                           
 10554                           ;main.c: 212:         TMR6_StartTimer();
 10555     05C4  318F  2742  3185   	fcall	_TMR6_StartTimer
 10556     05C7                     i1l3376:
 10557                           
 10558                           ;main.c: 214:     currentFloor = 3;
 10559     05C7  3003               	movlw	3
 10560     05C8  0020               	movlb	0	; select bank0
 10561     05C9  00E6               	movwf	_currentFloor
 10562     05CA                     i1l3378:
 10563                           
 10564                           ;main.c: 215:     updateMotor();
 10565     05CA  3184  2419  3185   	fcall	i1_updateMotor
 10566     05CD                     i1l3380:
 10567                           
 10568                           ;main.c: 216:     updateMatrix();
 10569     05CD  3184  24E5  3185   	fcall	i1_updateMatrix
 10570     05D0                     i1l887:
 10571     05D0  0008               	return
 10572     05D1                     __end_of_S3_Interrupt:
 10573                           
 10574                           	psect	text77
 10575     0419                     __ptext77:	
 10576 ;; *************** function i1_updateMotor *****************
 10577 ;; Defined at:
 10578 ;;		line 85 in file "main.c"
 10579 ;; Parameters:    Size  Location     Type
 10580 ;;		None
 10581 ;; Auto vars:     Size  Location     Type
 10582 ;;		None
 10583 ;; Return value:  Size  Location     Type
 10584 ;;                  1    wreg      void 
 10585 ;; Registers used:
 10586 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10587 ;; Tracked objects:
 10588 ;;		On entry : 0/0
 10589 ;;		On exit  : 0/0
 10590 ;;		Unchanged: 0/0
 10591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10592 ;;      Params:         0       0       0       0       0       0
 10593 ;;      Locals:         0       0       0       0       0       0
 10594 ;;      Temps:          0       0       0       0       0       0
 10595 ;;      Totals:         0       0       0       0       0       0
 10596 ;;Total ram usage:        0 bytes
 10597 ;; Hardware stack levels used: 1
 10598 ;; Hardware stack levels required when called: 2
 10599 ;; This function calls:
 10600 ;;		i1_TMR4_StartTimer
 10601 ;;		i1_sendMotor
 10602 ;; This function is called by:
 10603 ;;		_TMR4_Interrupt
 10604 ;;		_TMR6_Interrupt
 10605 ;;		_S1_Interrupt
 10606 ;;		_S2_Interrupt
 10607 ;;		_S3_Interrupt
 10608 ;;		_S4_Interrupt
 10609 ;; This function uses a non-reentrant model
 10610 ;;
 10611                           
 10612     0419                     i1_updateMotor:	
 10613                           ;psect for function i1_updateMotor
 10614                           
 10615     0419                     i1l2924:	
 10616                           ;incstack = 0
 10617                           ; Regs used in i1_updateMotor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10618                           
 10619                           
 10620                           ;main.c: 86:     if(currentFloor==targetFloor){
 10621     0419  0020               	movlb	0	; select bank0
 10622     041A  0866               	movf	_currentFloor,w
 10623     041B  0665               	xorwf	_targetFloor,w
 10624     041C  1D03               	skipz
 10625     041D  2C1F               	goto	u151_21
 10626     041E  2C20               	goto	u151_20
 10627     041F                     u151_21:
 10628     041F  2C22               	goto	i1l2928
 10629     0420                     u151_20:
 10630     0420                     i1l2926:
 10631                           
 10632                           ;main.c: 87:         motorState = 0;
 10633     0420  01D1               	clrf	_motorState
 10634                           
 10635                           ;main.c: 88:     } else if(currentFloor < targetFloor){
 10636     0421  2C44               	goto	i1l2946
 10637     0422                     i1l2928:
 10638     0422  0865               	movf	_targetFloor,w
 10639     0423  0266               	subwf	_currentFloor,w
 10640     0424  1803               	skipnc
 10641     0425  2C27               	goto	u152_21
 10642     0426  2C28               	goto	u152_20
 10643     0427                     u152_21:
 10644     0427  2C37               	goto	i1l2938
 10645     0428                     u152_20:
 10646     0428                     i1l2930:
 10647                           
 10648                           ;main.c: 89:         if(motorState == 2){
 10649     0428  3002               	movlw	2
 10650     0429  0651               	xorwf	_motorState,w
 10651     042A  1D03               	btfss	3,2
 10652     042B  2C2D               	goto	u153_21
 10653     042C  2C2E               	goto	u153_20
 10654     042D                     u153_21:
 10655     042D  2C33               	goto	i1l2936
 10656     042E                     u153_20:
 10657     042E                     i1l2932:
 10658                           
 10659                           ;main.c: 90:             directionFlag = 1;
 10660     042E  01CE               	clrf	_directionFlag
 10661     042F  0ACE               	incf	_directionFlag,f
 10662     0430                     i1l2934:
 10663                           
 10664                           ;main.c: 91:             TMR4_StartTimer();
 10665     0430  318F  2745  3184   	fcall	i1_TMR4_StartTimer
 10666     0433                     i1l2936:
 10667                           
 10668                           ;main.c: 93:         motorState = 1;
 10669     0433  0020               	movlb	0	; select bank0
 10670     0434  01D1               	clrf	_motorState
 10671     0435  0AD1               	incf	_motorState,f
 10672                           
 10673                           ;main.c: 94:     } else{
 10674     0436  2C44               	goto	i1l2946
 10675     0437                     i1l2938:
 10676                           
 10677                           ;main.c: 95:         if(motorState == 1){
 10678     0437  0351               	decf	_motorState,w
 10679     0438  1D03               	btfss	3,2
 10680     0439  2C3B               	goto	u154_21
 10681     043A  2C3C               	goto	u154_20
 10682     043B                     u154_21:
 10683     043B  2C41               	goto	i1l2944
 10684     043C                     u154_20:
 10685     043C                     i1l2940:
 10686                           
 10687                           ;main.c: 96:             directionFlag = 1;
 10688     043C  01CE               	clrf	_directionFlag
 10689     043D  0ACE               	incf	_directionFlag,f
 10690     043E                     i1l2942:
 10691                           
 10692                           ;main.c: 97:             TMR4_StartTimer();
 10693     043E  318F  2745  3184   	fcall	i1_TMR4_StartTimer
 10694     0441                     i1l2944:
 10695                           
 10696                           ;main.c: 99:         motorState = 2;
 10697     0441  3002               	movlw	2
 10698     0442  0020               	movlb	0	; select bank0
 10699     0443  00D1               	movwf	_motorState
 10700     0444                     i1l2946:
 10701                           
 10702                           ;main.c: 101:     sendMotor();
 10703     0444  3182  22D6  3184   	fcall	i1_sendMotor
 10704     0447                     i1l846:
 10705     0447  0008               	return
 10706     0448                     __end_ofi1_updateMotor:
 10707                           
 10708                           	psect	text78
 10709     02D6                     __ptext78:	
 10710 ;; *************** function i1_sendMotor *****************
 10711 ;; Defined at:
 10712 ;;		line 57 in file "main.c"
 10713 ;; Parameters:    Size  Location     Type
 10714 ;;		None
 10715 ;; Auto vars:     Size  Location     Type
 10716 ;;		None
 10717 ;; Return value:  Size  Location     Type
 10718 ;;                  1    wreg      void 
 10719 ;; Registers used:
 10720 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10721 ;; Tracked objects:
 10722 ;;		On entry : 0/0
 10723 ;;		On exit  : 0/0
 10724 ;;		Unchanged: 0/0
 10725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10726 ;;      Params:         0       0       0       0       0       0
 10727 ;;      Locals:         0       0       0       0       0       0
 10728 ;;      Temps:          2       0       0       0       0       0
 10729 ;;      Totals:         2       0       0       0       0       0
 10730 ;;Total ram usage:        2 bytes
 10731 ;; Hardware stack levels used: 1
 10732 ;; Hardware stack levels required when called: 1
 10733 ;; This function calls:
 10734 ;;		i1_PWM3_LoadDutyValue
 10735 ;; This function is called by:
 10736 ;;		i1_updateMotor
 10737 ;; This function uses a non-reentrant model
 10738 ;;
 10739                           
 10740     02D6                     i1_sendMotor:	
 10741                           ;psect for function i1_sendMotor
 10742                           
 10743     02D6                     i1l2762:	
 10744                           ;incstack = 0
 10745                           ; Regs used in i1_sendMotor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10746                           
 10747                           
 10748                           ;main.c: 58:     if(floorFlag || directionFlag){
 10749     02D6  0020               	movlb	0	; select bank0
 10750     02D7  084F               	movf	_floorFlag,w
 10751     02D8  1D03               	btfss	3,2
 10752     02D9  2ADB               	goto	u122_21
 10753     02DA  2ADC               	goto	u122_20
 10754     02DB                     u122_21:
 10755     02DB  2AE1               	goto	i1l2766
 10756     02DC                     u122_20:
 10757     02DC                     i1l2764:
 10758     02DC  084E               	movf	_directionFlag,w
 10759     02DD  1903               	btfsc	3,2
 10760     02DE  2AE0               	goto	u123_21
 10761     02DF  2AE1               	goto	u123_20
 10762     02E0                     u123_21:
 10763     02E0  2B03               	goto	i1l2784
 10764     02E1                     u123_20:
 10765     02E1                     i1l2766:
 10766                           
 10767                           ;main.c: 59:         PWM3_LoadDutyValue(0);
 10768     02E1  3000               	movlw	0
 10769     02E2  00F0               	movwf	i1PWM3_LoadDutyValue@dutyValue
 10770     02E3  00F1               	movwf	i1PWM3_LoadDutyValue@dutyValue+1
 10771     02E4  3186  2653  3182   	fcall	i1_PWM3_LoadDutyValue
 10772                           
 10773                           ;main.c: 60:     } else{
 10774     02E7  2B16               	goto	i1l837
 10775     02E8                     i1l828:	
 10776                           ;main.c: 66:                 do { LATAbits.LATA7 = 1; } while(0);
 10777                           
 10778     02E8  0022               	movlb	2	; select bank2
 10779     02E9  178C               	bsf	12,7	;volatile
 10780     02EA                     i1l2770:
 10781                           
 10782                           ;main.c: 67:                 if(currentFloor == 4){
 10783     02EA  3004               	movlw	4
 10784     02EB  0020               	movlb	0	; select bank0
 10785     02EC  0666               	xorwf	_currentFloor,w
 10786     02ED  1D03               	btfss	3,2
 10787     02EE  2AF0               	goto	u124_21
 10788     02EF  2AF1               	goto	u124_20
 10789     02F0                     u124_21:
 10790     02F0  2AF2               	goto	i1l2774
 10791     02F1                     u124_20:
 10792     02F1  2AE1               	goto	i1l2766
 10793     02F2                     i1l2774:
 10794                           
 10795                           ;main.c: 70:                     PWM3_LoadDutyValue(409);
 10796     02F2  3099               	movlw	153
 10797     02F3  00F0               	movwf	i1PWM3_LoadDutyValue@dutyValue
 10798     02F4  3001               	movlw	1
 10799     02F5  00F1               	movwf	i1PWM3_LoadDutyValue@dutyValue+1
 10800     02F6  3186  2653  3182   	fcall	i1_PWM3_LoadDutyValue
 10801     02F9  2B16               	goto	i1l837
 10802     02FA                     i1l833:	
 10803                           ;main.c: 74:                 do { LATAbits.LATA7 = 0; } while(0);
 10804                           
 10805     02FA  0022               	movlb	2	; select bank2
 10806     02FB  138C               	bcf	12,7	;volatile
 10807     02FC                     i1l2776:
 10808                           
 10809                           ;main.c: 75:                 if(currentFloor == 1){
 10810     02FC  0020               	movlb	0	; select bank0
 10811     02FD  0366               	decf	_currentFloor,w
 10812     02FE  1D03               	btfss	3,2
 10813     02FF  2B01               	goto	u125_21
 10814     0300  2B02               	goto	u125_20
 10815     0301                     u125_21:
 10816     0301  2AF2               	goto	i1l2774
 10817     0302                     u125_20:
 10818     0302  2AE1               	goto	i1l2766
 10819     0303                     i1l2784:
 10820     0303  0851               	movf	_motorState,w
 10821     0304  00F4               	movwf	??i1_sendMotor
 10822     0305  01F5               	clrf	??i1_sendMotor+1
 10823                           
 10824                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10825                           ; Switch size 1, requested type "simple"
 10826                           ; Number of cases is 1, Range of values is 0 to 0
 10827                           ; switch strategies available:
 10828                           ; Name         Instructions Cycles
 10829                           ; simple_byte            4     3 (average)
 10830                           ; direct_byte            8     6 (fixed)
 10831                           ; jumptable            260     6 (fixed)
 10832                           ;	Chosen strategy is simple_byte
 10833     0306  0875               	movf	??i1_sendMotor+1,w
 10834     0307  3A00               	xorlw	0	; case 0
 10835     0308  1903               	skipnz
 10836     0309  2B0B               	goto	i1l4032
 10837     030A  2B16               	goto	i1l837
 10838     030B                     i1l4032:
 10839                           
 10840                           ; Switch size 1, requested type "simple"
 10841                           ; Number of cases is 3, Range of values is 0 to 2
 10842                           ; switch strategies available:
 10843                           ; Name         Instructions Cycles
 10844                           ; simple_byte           10     6 (average)
 10845                           ; direct_byte           12     6 (fixed)
 10846                           ; jumptable            260     6 (fixed)
 10847                           ;	Chosen strategy is simple_byte
 10848     030B  0874               	movf	??i1_sendMotor,w
 10849     030C  3A00               	xorlw	0	; case 0
 10850     030D  1903               	skipnz
 10851     030E  2AE1               	goto	i1l2766
 10852     030F  3A01               	xorlw	1	; case 1
 10853     0310  1903               	skipnz
 10854     0311  2AE8               	goto	i1l828
 10855     0312  3A03               	xorlw	3	; case 2
 10856     0313  1903               	skipnz
 10857     0314  2AFA               	goto	i1l833
 10858     0315  2B16               	goto	i1l837
 10859     0316                     i1l837:
 10860     0316  0008               	return
 10861     0317                     __end_ofi1_sendMotor:
 10862                           
 10863                           	psect	text79
 10864     0653                     __ptext79:	
 10865 ;; *************** function i1_PWM3_LoadDutyValue *****************
 10866 ;; Defined at:
 10867 ;;		line 82 in file "mcc_generated_files/pwm3.c"
 10868 ;; Parameters:    Size  Location     Type
 10869 ;;  dutyValue       2    0[COMMON] unsigned short 
 10870 ;; Auto vars:     Size  Location     Type
 10871 ;;		None
 10872 ;; Return value:  Size  Location     Type
 10873 ;;                  1    wreg      void 
 10874 ;; Registers used:
 10875 ;;		wreg, status,2, status,0
 10876 ;; Tracked objects:
 10877 ;;		On entry : 0/0
 10878 ;;		On exit  : 0/0
 10879 ;;		Unchanged: 0/0
 10880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10881 ;;      Params:         2       0       0       0       0       0
 10882 ;;      Locals:         0       0       0       0       0       0
 10883 ;;      Temps:          2       0       0       0       0       0
 10884 ;;      Totals:         4       0       0       0       0       0
 10885 ;;Total ram usage:        4 bytes
 10886 ;; Hardware stack levels used: 1
 10887 ;; This function calls:
 10888 ;;		Nothing
 10889 ;; This function is called by:
 10890 ;;		i1_sendMotor
 10891 ;; This function uses a non-reentrant model
 10892 ;;
 10893                           
 10894     0653                     i1_PWM3_LoadDutyValue:	
 10895                           ;psect for function i1_PWM3_LoadDutyValue
 10896                           
 10897     0653                     i1l2740:	
 10898                           ;incstack = 0
 10899                           ; Regs used in i1_PWM3_LoadDutyValue: [wreg+status,2+status,0]
 10900                           
 10901                           
 10902                           ;mcc_generated_files/pwm3.c: 82: void PWM3_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm3.c: 83: {;mcc_generated_files/pwm3.c: 85:     CCPR3L = ((dutyValue & 0x03FC
      +                          )>>2);
 10903     0653  0871               	movf	i1PWM3_LoadDutyValue@dutyValue+1,w
 10904     0654  00F3               	movwf	??i1_PWM3_LoadDutyValue+1
 10905     0655  0870               	movf	i1PWM3_LoadDutyValue@dutyValue,w
 10906     0656  00F2               	movwf	??i1_PWM3_LoadDutyValue
 10907     0657  36F3               	lsrf	??i1_PWM3_LoadDutyValue+1,f
 10908     0658  0CF2               	rrf	??i1_PWM3_LoadDutyValue,f
 10909     0659  36F3               	lsrf	??i1_PWM3_LoadDutyValue+1,f
 10910     065A  0CF2               	rrf	??i1_PWM3_LoadDutyValue,f
 10911     065B  0872               	movf	??i1_PWM3_LoadDutyValue,w
 10912     065C  0026               	movlb	6	; select bank6
 10913     065D  0091               	movwf	17	;volatile
 10914                           
 10915                           ;mcc_generated_files/pwm3.c: 88:     CCP3CON = ((uint8_t)(CCP3CON & 0xCF) | ((dutyValue 
      +                          & 0x0003)<<4));
 10916     065E  0870               	movf	i1PWM3_LoadDutyValue@dutyValue,w
 10917     065F  3903               	andlw	3
 10918     0660  00F2               	movwf	??i1_PWM3_LoadDutyValue
 10919     0661  3004               	movlw	4
 10920     0662                     u119_25:
 10921     0662  35F2               	lslf	??i1_PWM3_LoadDutyValue,f
 10922     0663  0B89               	decfsz	9,f
 10923     0664  2E62               	goto	u119_25
 10924     0665  0813               	movf	19,w	;volatile
 10925     0666  39CF               	andlw	207
 10926     0667  0472               	iorwf	??i1_PWM3_LoadDutyValue,w
 10927     0668  0093               	movwf	19	;volatile
 10928     0669                     i1l75:
 10929     0669  0008               	return
 10930     066A                     __end_ofi1_PWM3_LoadDutyValue:
 10931                           
 10932                           	psect	text80
 10933     0F45                     __ptext80:	
 10934 ;; *************** function i1_TMR4_StartTimer *****************
 10935 ;; Defined at:
 10936 ;;		line 87 in file "mcc_generated_files/tmr4.c"
 10937 ;; Parameters:    Size  Location     Type
 10938 ;;		None
 10939 ;; Auto vars:     Size  Location     Type
 10940 ;;		None
 10941 ;; Return value:  Size  Location     Type
 10942 ;;                  1    wreg      void 
 10943 ;; Registers used:
 10944 ;;		None
 10945 ;; Tracked objects:
 10946 ;;		On entry : 0/0
 10947 ;;		On exit  : 0/0
 10948 ;;		Unchanged: 0/0
 10949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10950 ;;      Params:         0       0       0       0       0       0
 10951 ;;      Locals:         0       0       0       0       0       0
 10952 ;;      Temps:          0       0       0       0       0       0
 10953 ;;      Totals:         0       0       0       0       0       0
 10954 ;;Total ram usage:        0 bytes
 10955 ;; Hardware stack levels used: 1
 10956 ;; This function calls:
 10957 ;;		Nothing
 10958 ;; This function is called by:
 10959 ;;		i1_updateMotor
 10960 ;; This function uses a non-reentrant model
 10961 ;;
 10962                           
 10963     0F45                     i1_TMR4_StartTimer:	
 10964                           ;psect for function i1_TMR4_StartTimer
 10965                           
 10966     0F45                     i1l2760:	
 10967                           ;incstack = 0
 10968                           ; Regs used in i1_TMR4_StartTimer: []
 10969                           
 10970                           
 10971                           ;mcc_generated_files/tmr4.c: 90:     T4CONbits.TMR4ON = 1;
 10972     0F45  0028               	movlb	8	; select bank8
 10973     0F46  1517               	bsf	23,2	;volatile
 10974     0F47                     i1l686:
 10975     0F47  0008               	return
 10976     0F48                     __end_ofi1_TMR4_StartTimer:
 10977                           
 10978                           	psect	text81
 10979     04E5                     __ptext81:	
 10980 ;; *************** function i1_updateMatrix *****************
 10981 ;; Defined at:
 10982 ;;		line 104 in file "main.c"
 10983 ;; Parameters:    Size  Location     Type
 10984 ;;		None
 10985 ;; Auto vars:     Size  Location     Type
 10986 ;;  direction       1    6[COMMON] unsigned char 
 10987 ;; Return value:  Size  Location     Type
 10988 ;;                  1    wreg      void 
 10989 ;; Registers used:
 10990 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10991 ;; Tracked objects:
 10992 ;;		On entry : 0/0
 10993 ;;		On exit  : 0/0
 10994 ;;		Unchanged: 0/0
 10995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10996 ;;      Params:         0       0       0       0       0       0
 10997 ;;      Locals:         1       0       0       0       0       0
 10998 ;;      Temps:          0       0       0       0       0       0
 10999 ;;      Totals:         1       0       0       0       0       0
 11000 ;;Total ram usage:        1 bytes
 11001 ;; Hardware stack levels used: 1
 11002 ;; Hardware stack levels required when called: 3
 11003 ;; This function calls:
 11004 ;;		i1_sendMatrix
 11005 ;;		i1_setMatrix
 11006 ;; This function is called by:
 11007 ;;		_TMR4_Interrupt
 11008 ;;		_TMR6_Interrupt
 11009 ;;		_S1_Interrupt
 11010 ;;		_S2_Interrupt
 11011 ;;		_S3_Interrupt
 11012 ;;		_S4_Interrupt
 11013 ;; This function uses a non-reentrant model
 11014 ;;
 11015                           
 11016     04E5                     i1_updateMatrix:	
 11017                           ;psect for function i1_updateMatrix
 11018                           
 11019     04E5                     i1l2948:	
 11020                           ;incstack = 0
 11021                           ; Regs used in i1_updateMatrix: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11022                           
 11023                           
 11024                           ;main.c: 105:     setMatrix(0, currentFloor);
 11025     04E5  0020               	movlb	0	; select bank0
 11026     04E6  0866               	movf	_currentFloor,w
 11027     04E7  00F1               	movwf	i1setMatrix@val
 11028     04E8  3000               	movlw	0
 11029     04E9  3184  2499  3184   	fcall	i1_setMatrix
 11030     04EC                     i1l2950:
 11031     04EC                     i1l2952:
 11032                           
 11033                           ;main.c: 108:     if(motorState==0){
 11034     04EC  0020               	movlb	0	; select bank0
 11035     04ED  0851               	movf	_motorState,w
 11036     04EE  1D03               	btfss	3,2
 11037     04EF  2CF1               	goto	u155_21
 11038     04F0  2CF2               	goto	u155_20
 11039     04F1                     u155_21:
 11040     04F1  2CF5               	goto	i1l2956
 11041     04F2                     u155_20:
 11042     04F2                     i1l2954:
 11043                           
 11044                           ;main.c: 109:         direction = 12;
 11045     04F2  300C               	movlw	12
 11046     04F3  00F6               	movwf	i1updateMatrix@direction
 11047                           
 11048                           ;main.c: 110:     } else if(motorState==1){
 11049     04F4  2CFF               	goto	i1l2962
 11050     04F5                     i1l2956:
 11051     04F5  0351               	decf	_motorState,w
 11052     04F6  1D03               	btfss	3,2
 11053     04F7  2CF9               	goto	u156_21
 11054     04F8  2CFA               	goto	u156_20
 11055     04F9                     u156_21:
 11056     04F9  2CFD               	goto	i1l2960
 11057     04FA                     u156_20:
 11058     04FA                     i1l2958:
 11059                           
 11060                           ;main.c: 111:         direction = 10;
 11061     04FA  300A               	movlw	10
 11062     04FB  00F6               	movwf	i1updateMatrix@direction
 11063                           
 11064                           ;main.c: 112:     } else{
 11065     04FC  2CFF               	goto	i1l2962
 11066     04FD                     i1l2960:
 11067                           
 11068                           ;main.c: 113:         direction = 11;
 11069     04FD  300B               	movlw	11
 11070     04FE  00F6               	movwf	i1updateMatrix@direction
 11071     04FF                     i1l2962:
 11072                           
 11073                           ;main.c: 116:     setMatrix(4, direction);
 11074     04FF  0876               	movf	i1updateMatrix@direction,w
 11075     0500  00F1               	movwf	i1setMatrix@val
 11076     0501  3004               	movlw	4
 11077     0502  3184  2499  3184   	fcall	i1_setMatrix
 11078     0505                     i1l2964:
 11079                           
 11080                           ;main.c: 117:     sendMatrix();
 11081     0505  3186  2607  3184   	fcall	i1_sendMatrix
 11082     0508                     i1l853:
 11083     0508  0008               	return
 11084     0509                     __end_ofi1_updateMatrix:
 11085                           
 11086                           	psect	text82
 11087     0499                     __ptext82:	
 11088 ;; *************** function i1_setMatrix *****************
 11089 ;; Defined at:
 11090 ;;		line 105 in file "ledMatrix.c"
 11091 ;; Parameters:    Size  Location     Type
 11092 ;;  pos             1    wreg     unsigned char 
 11093 ;;  val             1    1[COMMON] unsigned char 
 11094 ;; Auto vars:     Size  Location     Type
 11095 ;;  pos             1    3[COMMON] unsigned char 
 11096 ;;  i               1    5[COMMON] unsigned char 
 11097 ;;  eeAdd           1    4[COMMON] unsigned char 
 11098 ;; Return value:  Size  Location     Type
 11099 ;;                  1    wreg      void 
 11100 ;; Registers used:
 11101 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11102 ;; Tracked objects:
 11103 ;;		On entry : 0/0
 11104 ;;		On exit  : 0/0
 11105 ;;		Unchanged: 0/0
 11106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11107 ;;      Params:         1       0       0       0       0       0
 11108 ;;      Locals:         3       0       0       0       0       0
 11109 ;;      Temps:          1       0       0       0       0       0
 11110 ;;      Totals:         5       0       0       0       0       0
 11111 ;;Total ram usage:        5 bytes
 11112 ;; Hardware stack levels used: 1
 11113 ;; Hardware stack levels required when called: 1
 11114 ;; This function calls:
 11115 ;;		i1_DATAEE_ReadByte
 11116 ;; This function is called by:
 11117 ;;		i1_updateMatrix
 11118 ;; This function uses a non-reentrant model
 11119 ;;
 11120                           
 11121     0499                     i1_setMatrix:	
 11122                           ;psect for function i1_setMatrix
 11123                           
 11124                           
 11125                           ;incstack = 0
 11126                           ; Regs used in i1_setMatrix: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11127                           ;i1setMatrix@pos stored from wreg
 11128     0499  00F3               	movwf	i1setMatrix@pos
 11129     049A                     i1l2790:
 11130                           
 11131                           ;ledMatrix.c: 109:  uint8_t eeAdd = val<<2;
 11132     049A  0871               	movf	i1setMatrix@val,w
 11133     049B  00F2               	movwf	??i1_setMatrix
 11134     049C  3001               	movlw	1
 11135     049D                     u126_25:
 11136     049D  35F2               	lslf	??i1_setMatrix,f
 11137     049E  3EFF               	addlw	-1
 11138     049F  1D03               	skipz
 11139     04A0  2C9D               	goto	u126_25
 11140     04A1  3572               	lslf	??i1_setMatrix,w
 11141     04A2  00F4               	movwf	i1setMatrix@eeAdd
 11142     04A3                     i1l2792:
 11143                           
 11144                           ;ledMatrix.c: 110:  for(uint8_t i=0;i<4;i++){
 11145     04A3  01F5               	clrf	i1setMatrix@i
 11146     04A4                     i1l2798:
 11147                           
 11148                           ;ledMatrix.c: 111:   matrix[pos++]=DATAEE_ReadByte(eeAdd++);
 11149     04A4  0873               	movf	i1setMatrix@pos,w
 11150     04A5  3E39               	addlw	(low (_matrix| 0))& (0+255)
 11151     04A6  0086               	movwf	6
 11152     04A7  0187               	clrf	7
 11153     04A8  0874               	movf	i1setMatrix@eeAdd,w
 11154     04A9  3187  27D6  3184   	fcall	i1_DATAEE_ReadByte
 11155     04AC  0081               	movwf	1
 11156     04AD                     i1l2800:
 11157     04AD  3001               	movlw	1
 11158     04AE  00F2               	movwf	??i1_setMatrix
 11159     04AF  0872               	movf	??i1_setMatrix,w
 11160     04B0  07F4               	addwf	i1setMatrix@eeAdd,f
 11161     04B1                     i1l2802:
 11162     04B1  3001               	movlw	1
 11163     04B2  00F2               	movwf	??i1_setMatrix
 11164     04B3  0872               	movf	??i1_setMatrix,w
 11165     04B4  07F3               	addwf	i1setMatrix@pos,f
 11166     04B5                     i1l2804:
 11167                           
 11168                           ;ledMatrix.c: 112:     }
 11169     04B5  3001               	movlw	1
 11170     04B6  00F2               	movwf	??i1_setMatrix
 11171     04B7  0872               	movf	??i1_setMatrix,w
 11172     04B8  07F5               	addwf	i1setMatrix@i,f
 11173     04B9                     i1l2806:
 11174     04B9  3004               	movlw	4
 11175     04BA  0275               	subwf	i1setMatrix@i,w
 11176     04BB  1C03               	skipc
 11177     04BC  2CBE               	goto	u127_21
 11178     04BD  2CBF               	goto	u127_20
 11179     04BE                     u127_21:
 11180     04BE  2CA4               	goto	i1l2798
 11181     04BF                     u127_20:
 11182     04BF                     i1l937:
 11183     04BF  0008               	return
 11184     04C0                     __end_ofi1_setMatrix:
 11185                           
 11186                           	psect	text83
 11187     07D6                     __ptext83:	
 11188 ;; *************** function i1_DATAEE_ReadByte *****************
 11189 ;; Defined at:
 11190 ;;		line 211 in file "mcc_generated_files/memory.c"
 11191 ;; Parameters:    Size  Location     Type
 11192 ;;  bAdd            1    wreg     unsigned char 
 11193 ;; Auto vars:     Size  Location     Type
 11194 ;;  bAdd            1    0[COMMON] unsigned char 
 11195 ;; Return value:  Size  Location     Type
 11196 ;;                  1    wreg      unsigned char 
 11197 ;; Registers used:
 11198 ;;		wreg
 11199 ;; Tracked objects:
 11200 ;;		On entry : 0/0
 11201 ;;		On exit  : 0/0
 11202 ;;		Unchanged: 0/0
 11203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11204 ;;      Params:         0       0       0       0       0       0
 11205 ;;      Locals:         1       0       0       0       0       0
 11206 ;;      Temps:          0       0       0       0       0       0
 11207 ;;      Totals:         1       0       0       0       0       0
 11208 ;;Total ram usage:        1 bytes
 11209 ;; Hardware stack levels used: 1
 11210 ;; This function calls:
 11211 ;;		Nothing
 11212 ;; This function is called by:
 11213 ;;		i1_setMatrix
 11214 ;; This function uses a non-reentrant model
 11215 ;;
 11216                           
 11217     07D6                     i1_DATAEE_ReadByte:	
 11218                           ;psect for function i1_DATAEE_ReadByte
 11219                           
 11220                           
 11221                           ;incstack = 0
 11222                           ; Regs used in i1_DATAEE_ReadByte: [wreg]
 11223                           ;i1DATAEE_ReadByte@bAdd stored from wreg
 11224     07D6  00F0               	movwf	i1DATAEE_ReadByte@bAdd
 11225     07D7                     i1l2742:
 11226                           
 11227                           ;mcc_generated_files/memory.c: 211: uint8_t DATAEE_ReadByte(uint8_t bAdd);mcc_generated_
      +                          files/memory.c: 212: {;mcc_generated_files/memory.c: 213:     EEADRL = (uint8_t)(bAdd & 
      +                          0x0ff);
 11228     07D7  0870               	movf	i1DATAEE_ReadByte@bAdd,w
 11229     07D8  0023               	movlb	3	; select bank3
 11230     07D9  0091               	movwf	17	;volatile
 11231     07DA                     i1l2744:
 11232                           
 11233                           ;mcc_generated_files/memory.c: 214:     EECON1bits.CFGS = 0;
 11234     07DA  1315               	bcf	21,6	;volsfr
 11235     07DB                     i1l2746:
 11236                           
 11237                           ;mcc_generated_files/memory.c: 215:     EECON1bits.EEPGD = 0;
 11238     07DB  1395               	bcf	21,7	;volsfr
 11239     07DC                     i1l2748:
 11240                           
 11241                           ;mcc_generated_files/memory.c: 216:     EECON1bits.RD = 1;
 11242     07DC  1415               	bsf	21,0	;volsfr
 11243     07DD                     i1l2750:
 11244                           
 11245                           ;mcc_generated_files/memory.c: 217:     __nop();
 11246     07DD  0000               	nop
 11247     07DE                     i1l2752:
 11248                           
 11249                           ;mcc_generated_files/memory.c: 218:     __nop();
 11250     07DE  0000               	nop
 11251                           
 11252                           ;mcc_generated_files/memory.c: 220:     return (EEDATL);
 11253     07DF  0023               	movlb	3	; select bank3
 11254     07E0  0813               	movf	19,w	;volatile
 11255     07E1                     i1l568:
 11256     07E1  0008               	return
 11257     07E2                     __end_ofi1_DATAEE_ReadByte:
 11258                           
 11259                           	psect	text84
 11260     0607                     __ptext84:	
 11261 ;; *************** function i1_sendMatrix *****************
 11262 ;; Defined at:
 11263 ;;		line 115 in file "ledMatrix.c"
 11264 ;; Parameters:    Size  Location     Type
 11265 ;;		None
 11266 ;; Auto vars:     Size  Location     Type
 11267 ;;  i               1    4[COMMON] unsigned char 
 11268 ;; Return value:  Size  Location     Type
 11269 ;;                  1    wreg      void 
 11270 ;; Registers used:
 11271 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11272 ;; Tracked objects:
 11273 ;;		On entry : 0/0
 11274 ;;		On exit  : 0/0
 11275 ;;		Unchanged: 0/0
 11276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11277 ;;      Params:         0       0       0       0       0       0
 11278 ;;      Locals:         1       0       0       0       0       0
 11279 ;;      Temps:          1       0       0       0       0       0
 11280 ;;      Totals:         2       0       0       0       0       0
 11281 ;;Total ram usage:        2 bytes
 11282 ;; Hardware stack levels used: 1
 11283 ;; Hardware stack levels required when called: 2
 11284 ;; This function calls:
 11285 ;;		i1_txMAX7219
 11286 ;; This function is called by:
 11287 ;;		i1_updateMatrix
 11288 ;; This function uses a non-reentrant model
 11289 ;;
 11290                           
 11291     0607                     i1_sendMatrix:	
 11292                           ;psect for function i1_sendMatrix
 11293                           
 11294     0607                     i1l2808:	
 11295                           ;incstack = 0
 11296                           ; Regs used in i1_sendMatrix: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11297                           
 11298                           
 11299                           ;ledMatrix.c: 116:     for(uint8_t i=0;i<8;i++){
 11300     0607  01F4               	clrf	i1sendMatrix@i
 11301     0608                     i1l2814:
 11302                           
 11303                           ;ledMatrix.c: 118:         txMAX7219(i+1,matrix[7-i]);
 11304     0608  3040               	movlw	(low ((_matrix| 0+7)))& (0+255)
 11305     0609  00F3               	movwf	??i1_sendMatrix
 11306     060A  0874               	movf	i1sendMatrix@i,w
 11307     060B  02F3               	subwf	??i1_sendMatrix,f
 11308     060C  0873               	movf	??i1_sendMatrix,w
 11309     060D  0086               	movwf	6
 11310     060E  0187               	clrf	7
 11311     060F  0801               	movf	1,w
 11312     0610  00F1               	movwf	i1txMAX7219@dat0
 11313     0611  0874               	movf	i1sendMatrix@i,w
 11314     0612  3E01               	addlw	1
 11315     0613  3186  2621  3186   	fcall	i1_txMAX7219
 11316     0616                     i1l2816:
 11317                           
 11318                           ;ledMatrix.c: 122:     }
 11319     0616  3001               	movlw	1
 11320     0617  00F3               	movwf	??i1_sendMatrix
 11321     0618  0873               	movf	??i1_sendMatrix,w
 11322     0619  07F4               	addwf	i1sendMatrix@i,f
 11323     061A                     i1l2818:
 11324     061A  3008               	movlw	8
 11325     061B  0274               	subwf	i1sendMatrix@i,w
 11326     061C  1C03               	skipc
 11327     061D  2E1F               	goto	u128_21
 11328     061E  2E20               	goto	u128_20
 11329     061F                     u128_21:
 11330     061F  2E08               	goto	i1l2814
 11331     0620                     u128_20:
 11332     0620                     i1l942:
 11333     0620  0008               	return
 11334     0621                     __end_ofi1_sendMatrix:
 11335                           
 11336                           	psect	text85
 11337     0621                     __ptext85:	
 11338 ;; *************** function i1_txMAX7219 *****************
 11339 ;; Defined at:
 11340 ;;		line 74 in file "ledMatrix.c"
 11341 ;; Parameters:    Size  Location     Type
 11342 ;;  addr0           1    wreg     unsigned char 
 11343 ;;  dat0            1    1[COMMON] unsigned char 
 11344 ;; Auto vars:     Size  Location     Type
 11345 ;;  addr0           1    2[COMMON] unsigned char 
 11346 ;; Return value:  Size  Location     Type
 11347 ;;                  1    wreg      void 
 11348 ;; Registers used:
 11349 ;;		wreg, status,2, status,0, pclath, cstack
 11350 ;; Tracked objects:
 11351 ;;		On entry : 0/0
 11352 ;;		On exit  : 0/0
 11353 ;;		Unchanged: 0/0
 11354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11355 ;;      Params:         1       0       0       0       0       0
 11356 ;;      Locals:         1       0       0       0       0       0
 11357 ;;      Temps:          0       0       0       0       0       0
 11358 ;;      Totals:         2       0       0       0       0       0
 11359 ;;Total ram usage:        2 bytes
 11360 ;; Hardware stack levels used: 1
 11361 ;; Hardware stack levels required when called: 1
 11362 ;; This function calls:
 11363 ;;		i1_SPI1_WriteByte
 11364 ;; This function is called by:
 11365 ;;		i1_sendMatrix
 11366 ;; This function uses a non-reentrant model
 11367 ;;
 11368                           
 11369     0621                     i1_txMAX7219:	
 11370                           ;psect for function i1_txMAX7219
 11371                           
 11372                           
 11373                           ;incstack = 0
 11374                           ; Regs used in i1_txMAX7219: [wreg+status,2+status,0+pclath+cstack]
 11375                           ;i1txMAX7219@addr0 stored from wreg
 11376     0621  00F2               	movwf	i1txMAX7219@addr0
 11377     0622                     i1l919:	
 11378                           ;ledMatrix.c: 75:     do { LATBbits.LATB1 = 0; } while(0);
 11379                           
 11380     0622  0022               	movlb	2	; select bank2
 11381     0623  108D               	bcf	13,1	;volatile
 11382     0624                     i1l2756:
 11383                           
 11384                           ;ledMatrix.c: 76:     SPI1_WriteByte(addr0);
 11385     0624  0872               	movf	i1txMAX7219@addr0,w
 11386     0625  318F  2760  3186   	fcall	i1_SPI1_WriteByte
 11387     0628                     i1l921:	
 11388                           ;ledMatrix.c: 77:     while(!PIR1bits.SSP1IF);
 11389                           
 11390     0628  0020               	movlb	0	; select bank0
 11391     0629  1D91               	btfss	17,3	;volatile
 11392     062A  2E2C               	goto	u120_21
 11393     062B  2E2D               	goto	u120_20
 11394     062C                     u120_21:
 11395     062C  2E28               	goto	i1l921
 11396     062D                     u120_20:
 11397     062D                     i1l923:
 11398                           
 11399                           ;ledMatrix.c: 78:     PIR1bits.SSP1IF = 0;
 11400     062D  1191               	bcf	17,3	;volatile
 11401     062E                     i1l2758:
 11402                           
 11403                           ;ledMatrix.c: 79:     SPI1_WriteByte(dat0);
 11404     062E  0871               	movf	i1txMAX7219@dat0,w
 11405     062F  318F  2760  3186   	fcall	i1_SPI1_WriteByte
 11406     0632                     i1l924:	
 11407                           ;ledMatrix.c: 80:     while(!PIR1bits.SSP1IF);
 11408                           
 11409     0632  0020               	movlb	0	; select bank0
 11410     0633  1D91               	btfss	17,3	;volatile
 11411     0634  2E36               	goto	u121_21
 11412     0635  2E37               	goto	u121_20
 11413     0636                     u121_21:
 11414     0636  2E32               	goto	i1l924
 11415     0637                     u121_20:
 11416     0637                     i1l926:
 11417                           
 11418                           ;ledMatrix.c: 81:     PIR1bits.SSP1IF = 0;
 11419     0637  1191               	bcf	17,3	;volatile
 11420     0638                     i1l927:	
 11421                           ;ledMatrix.c: 82:     do { LATBbits.LATB1 = 1; } while(0);
 11422                           
 11423     0638  0022               	movlb	2	; select bank2
 11424     0639  148D               	bsf	13,1	;volatile
 11425     063A                     i1l929:
 11426     063A  0008               	return
 11427     063B                     __end_ofi1_txMAX7219:
 11428                           
 11429                           	psect	text86
 11430     0F60                     __ptext86:	
 11431 ;; *************** function i1_SPI1_WriteByte *****************
 11432 ;; Defined at:
 11433 ;;		line 131 in file "mcc_generated_files/spi1.c"
 11434 ;; Parameters:    Size  Location     Type
 11435 ;;  byte            1    wreg     unsigned char 
 11436 ;; Auto vars:     Size  Location     Type
 11437 ;;  byte            1    0[COMMON] unsigned char 
 11438 ;; Return value:  Size  Location     Type
 11439 ;;                  1    wreg      void 
 11440 ;; Registers used:
 11441 ;;		wreg
 11442 ;; Tracked objects:
 11443 ;;		On entry : 0/0
 11444 ;;		On exit  : 0/0
 11445 ;;		Unchanged: 0/0
 11446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11447 ;;      Params:         0       0       0       0       0       0
 11448 ;;      Locals:         1       0       0       0       0       0
 11449 ;;      Temps:          0       0       0       0       0       0
 11450 ;;      Totals:         1       0       0       0       0       0
 11451 ;;Total ram usage:        1 bytes
 11452 ;; Hardware stack levels used: 1
 11453 ;; This function calls:
 11454 ;;		Nothing
 11455 ;; This function is called by:
 11456 ;;		i1_txMAX7219
 11457 ;; This function uses a non-reentrant model
 11458 ;;
 11459                           
 11460     0F60                     i1_SPI1_WriteByte:	
 11461                           ;psect for function i1_SPI1_WriteByte
 11462                           
 11463                           
 11464                           ;incstack = 0
 11465                           ; Regs used in i1_SPI1_WriteByte: [wreg]
 11466                           ;i1SPI1_WriteByte@byte stored from wreg
 11467     0F60  00F0               	movwf	i1SPI1_WriteByte@byte
 11468     0F61                     i1l2738:
 11469                           
 11470                           ;mcc_generated_files/spi1.c: 131: void SPI1_WriteByte(uint8_t byte);mcc_generated_files/
      +                          spi1.c: 132: {;mcc_generated_files/spi1.c: 133:     SSP1BUF = byte;
 11471     0F61  0870               	movf	i1SPI1_WriteByte@byte,w
 11472     0F62  0024               	movlb	4	; select bank4
 11473     0F63  0091               	movwf	17	;volatile
 11474     0F64                     i1l58:
 11475     0F64  0008               	return
 11476     0F65                     __end_ofi1_SPI1_WriteByte:
 11477                           
 11478                           	psect	text87
 11479     0F42                     __ptext87:	
 11480 ;; *************** function _TMR6_StartTimer *****************
 11481 ;; Defined at:
 11482 ;;		line 87 in file "mcc_generated_files/tmr6.c"
 11483 ;; Parameters:    Size  Location     Type
 11484 ;;		None
 11485 ;; Auto vars:     Size  Location     Type
 11486 ;;		None
 11487 ;; Return value:  Size  Location     Type
 11488 ;;                  1    wreg      void 
 11489 ;; Registers used:
 11490 ;;		None
 11491 ;; Tracked objects:
 11492 ;;		On entry : 0/0
 11493 ;;		On exit  : 0/0
 11494 ;;		Unchanged: 0/0
 11495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11496 ;;      Params:         0       0       0       0       0       0
 11497 ;;      Locals:         0       0       0       0       0       0
 11498 ;;      Temps:          0       0       0       0       0       0
 11499 ;;      Totals:         0       0       0       0       0       0
 11500 ;;Total ram usage:        0 bytes
 11501 ;; Hardware stack levels used: 1
 11502 ;; This function calls:
 11503 ;;		Nothing
 11504 ;; This function is called by:
 11505 ;;		_S1_Interrupt
 11506 ;;		_S2_Interrupt
 11507 ;;		_S3_Interrupt
 11508 ;;		_S4_Interrupt
 11509 ;; This function uses a non-reentrant model
 11510 ;;
 11511                           
 11512     0F42                     _TMR6_StartTimer:	
 11513                           ;psect for function _TMR6_StartTimer
 11514                           
 11515     0F42                     i1l2850:	
 11516                           ;incstack = 0
 11517                           ; Regs used in _TMR6_StartTimer: []
 11518                           
 11519                           
 11520                           ;mcc_generated_files/tmr6.c: 90:     T6CONbits.TMR6ON = 1;
 11521     0F42  0028               	movlb	8	; select bank8
 11522     0F43  151E               	bsf	30,2	;volatile
 11523     0F44                     i1l632:
 11524     0F44  0008               	return
 11525     0F45                     __end_of_TMR6_StartTimer:
 11526                           
 11527                           	psect	text88
 11528     06E3                     __ptext88:	
 11529 ;; *************** function _CCP4_CaptureISR *****************
 11530 ;; Defined at:
 11531 ;;		line 89 in file "mcc_generated_files/ccp4.c"
 11532 ;; Parameters:    Size  Location     Type
 11533 ;;		None
 11534 ;; Auto vars:     Size  Location     Type
 11535 ;;  module          2    3[COMMON] struct CCPR4Reg_tag
 11536 ;; Return value:  Size  Location     Type
 11537 ;;                  1    wreg      void 
 11538 ;; Registers used:
 11539 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11540 ;; Tracked objects:
 11541 ;;		On entry : 0/0
 11542 ;;		On exit  : 0/0
 11543 ;;		Unchanged: 0/0
 11544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11545 ;;      Params:         0       0       0       0       0       0
 11546 ;;      Locals:         2       0       0       0       0       0
 11547 ;;      Temps:          0       0       0       0       0       0
 11548 ;;      Totals:         2       0       0       0       0       0
 11549 ;;Total ram usage:        2 bytes
 11550 ;; Hardware stack levels used: 1
 11551 ;; Hardware stack levels required when called: 2
 11552 ;; This function calls:
 11553 ;;		Absolute function
 11554 ;;		_CCP4_DefaultCallBack
 11555 ;;		_CCP4_Interrupt
 11556 ;; This function is called by:
 11557 ;;		_INTERRUPT_InterruptManager
 11558 ;; This function uses a non-reentrant model
 11559 ;;
 11560                           
 11561     06E3                     _CCP4_CaptureISR:	
 11562                           ;psect for function _CCP4_CaptureISR
 11563                           
 11564     06E3                     i1l3448:	
 11565                           ;incstack = 0
 11566                           ; Regs used in _CCP4_CaptureISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11567                           
 11568                           
 11569                           ;mcc_generated_files/ccp4.c: 91:     CCP4_PERIOD_REG_T module;;mcc_generated_files/ccp4.
      +                          c: 94:     PIR3bits.CCP4IF = 0;
 11570     06E3  0020               	movlb	0	; select bank0
 11571     06E4  1293               	bcf	19,5	;volatile
 11572     06E5                     i1l3450:
 11573                           
 11574                           ;mcc_generated_files/ccp4.c: 97:     module.ccpr4l = CCPR4L;
 11575     06E5  0026               	movlb	6	; select bank6
 11576     06E6  0818               	movf	24,w	;volatile
 11577     06E7  00F3               	movwf	CCP4_CaptureISR@module
 11578                           
 11579                           ;mcc_generated_files/ccp4.c: 98:     module.ccpr4h = CCPR4H;
 11580     06E8  0819               	movf	25,w	;volatile
 11581     06E9  00F4               	movwf	CCP4_CaptureISR@module+1
 11582     06EA                     i1l3452:
 11583                           
 11584                           ;mcc_generated_files/ccp4.c: 101:     CCP4_CallBack(module.ccpr4_16Bit);
 11585     06EA  0874               	movf	CCP4_CaptureISR@module+1,w
 11586     06EB  00F1               	movwf	CCP4_Interrupt@capturedValue+1
 11587     06EC  0873               	movf	CCP4_CaptureISR@module,w
 11588     06ED  00F0               	movwf	CCP4_Interrupt@capturedValue
 11589     06EE  0020               	movlb	0	; select bank0
 11590     06EF  082D               	movf	_CCP4_CallBack+1,w
 11591     06F0  008A               	movwf	10
 11592     06F1  082C               	movf	_CCP4_CallBack,w
 11593     06F2  000A               	callw
 11594     06F3  3186               	pagesel	$
 11595     06F4                     i1l305:
 11596     06F4  0008               	return
 11597     06F5                     __end_of_CCP4_CaptureISR:
 11598                           
 11599                           	psect	text89
 11600     0F3E                     __ptext89:	
 11601 ;; *************** function _CCP4_DefaultCallBack *****************
 11602 ;; Defined at:
 11603 ;;		line 60 in file "mcc_generated_files/ccp4.c"
 11604 ;; Parameters:    Size  Location     Type
 11605 ;;  capturedValu    2    0[COMMON] unsigned short 
 11606 ;; Auto vars:     Size  Location     Type
 11607 ;;		None
 11608 ;; Return value:  Size  Location     Type
 11609 ;;                  1    wreg      void 
 11610 ;; Registers used:
 11611 ;;		None
 11612 ;; Tracked objects:
 11613 ;;		On entry : 0/0
 11614 ;;		On exit  : 0/0
 11615 ;;		Unchanged: 0/0
 11616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11617 ;;      Params:         2       0       0       0       0       0
 11618 ;;      Locals:         0       0       0       0       0       0
 11619 ;;      Temps:          0       0       0       0       0       0
 11620 ;;      Totals:         2       0       0       0       0       0
 11621 ;;Total ram usage:        2 bytes
 11622 ;; Hardware stack levels used: 1
 11623 ;; This function calls:
 11624 ;;		Nothing
 11625 ;; This function is called by:
 11626 ;;		_CCP4_Initialize
 11627 ;;		_CCP4_CaptureISR
 11628 ;; This function uses a non-reentrant model
 11629 ;;
 11630                           
 11631     0F3E                     _CCP4_DefaultCallBack:	
 11632                           ;psect for function _CCP4_DefaultCallBack
 11633                           
 11634     0F3E                     i1l299:	
 11635                           ;incstack = 0
 11636                           ; Regs used in _CCP4_DefaultCallBack: []
 11637                           
 11638     0F3E  0008               	return
 11639     0F3F                     __end_of_CCP4_DefaultCallBack:
 11640                           
 11641                           	psect	text90
 11642     0387                     __ptext90:	
 11643 ;; *************** function _CCP4_Interrupt *****************
 11644 ;; Defined at:
 11645 ;;		line 169 in file "main.c"
 11646 ;; Parameters:    Size  Location     Type
 11647 ;;  capturedValu    2    0[COMMON] unsigned short 
 11648 ;; Auto vars:     Size  Location     Type
 11649 ;;		None
 11650 ;; Return value:  Size  Location     Type
 11651 ;;                  1    wreg      void 
 11652 ;; Registers used:
 11653 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11654 ;; Tracked objects:
 11655 ;;		On entry : 0/0
 11656 ;;		On exit  : 0/0
 11657 ;;		Unchanged: 0/0
 11658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11659 ;;      Params:         2       0       0       0       0       0
 11660 ;;      Locals:         0       0       0       0       0       0
 11661 ;;      Temps:          1       0       0       0       0       0
 11662 ;;      Totals:         3       0       0       0       0       0
 11663 ;;Total ram usage:        3 bytes
 11664 ;; Hardware stack levels used: 1
 11665 ;; Hardware stack levels required when called: 1
 11666 ;; This function calls:
 11667 ;;		_TMR1_HasOverflowOccured
 11668 ;; This function is called by:
 11669 ;;		_main
 11670 ;;		_CCP4_CaptureISR
 11671 ;; This function uses a non-reentrant model
 11672 ;;
 11673                           
 11674     0387                     _CCP4_Interrupt:	
 11675                           ;psect for function _CCP4_Interrupt
 11676                           
 11677     0387                     i1l3350:	
 11678                           ;incstack = 0
 11679                           ; Regs used in _CCP4_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11680                           
 11681                           
 11682                           ;main.c: 170:     if(PORTAbits.RA7){
 11683     0387  0020               	movlb	0	; select bank0
 11684     0388  1F8C               	btfss	12,7	;volatile
 11685     0389  2B8B               	goto	u183_21
 11686     038A  2B8C               	goto	u183_20
 11687     038B                     u183_21:
 11688     038B  2B91               	goto	i1l3354
 11689     038C                     u183_20:
 11690     038C                     i1l3352:
 11691                           
 11692                           ;main.c: 171:         position++;
 11693     038C  3001               	movlw	1
 11694     038D  00F2               	movwf	??_CCP4_Interrupt
 11695     038E  0872               	movf	??_CCP4_Interrupt,w
 11696     038F  07E4               	addwf	_position,f
 11697                           
 11698                           ;main.c: 172:     } else{
 11699     0390  2B93               	goto	i1l3356
 11700     0391                     i1l3354:
 11701                           
 11702                           ;main.c: 173:         position--;
 11703     0391  3001               	movlw	1
 11704     0392  02E4               	subwf	_position,f
 11705     0393                     i1l3356:
 11706                           
 11707                           ;main.c: 175:     if(TMR1_HasOverflowOccured()){
 11708     0393  318F  2754  3183   	fcall	_TMR1_HasOverflowOccured
 11709     0396  3A00               	xorlw	0
 11710     0397  1903               	skipnz
 11711     0398  2B9A               	goto	u184_21
 11712     0399  2B9B               	goto	u184_20
 11713     039A                     u184_21:
 11714     039A  2BA7               	goto	i1l3362
 11715     039B                     u184_20:
 11716     039B                     i1l3358:
 11717                           
 11718                           ;main.c: 176:         velocity[++velocity_idx] = 0;
 11719     039B  3001               	movlw	1
 11720     039C  00F2               	movwf	??_CCP4_Interrupt
 11721     039D  0872               	movf	??_CCP4_Interrupt,w
 11722     039E  0020               	movlb	0	; select bank0
 11723     039F  07CD               	addwf	_velocity_idx,f
 11724     03A0  084D               	movf	_velocity_idx,w
 11725     03A1  3EA0               	addlw	(low (_velocity| 0))& (0+255)
 11726     03A2  0086               	movwf	6
 11727     03A3  0187               	clrf	7
 11728     03A4  0181               	clrf	1
 11729     03A5                     i1l3360:
 11730                           
 11731                           ;main.c: 177:         PIR1bits.TMR1IF = 0;
 11732     03A5  1011               	bcf	17,0	;volatile
 11733                           
 11734                           ;main.c: 178:     } else{
 11735     03A6  2BB2               	goto	i1l3364
 11736     03A7                     i1l3362:
 11737                           
 11738                           ;main.c: 179:         velocity[++velocity_idx] = capturedValue;
 11739     03A7  3001               	movlw	1
 11740     03A8  00F2               	movwf	??_CCP4_Interrupt
 11741     03A9  0872               	movf	??_CCP4_Interrupt,w
 11742     03AA  0020               	movlb	0	; select bank0
 11743     03AB  07CD               	addwf	_velocity_idx,f
 11744     03AC  084D               	movf	_velocity_idx,w
 11745     03AD  3EA0               	addlw	(low (_velocity| 0))& (0+255)
 11746     03AE  0086               	movwf	6
 11747     03AF  0187               	clrf	7
 11748     03B0  0870               	movf	CCP4_Interrupt@capturedValue,w
 11749     03B1  0081               	movwf	1
 11750     03B2                     i1l3364:
 11751                           
 11752                           ;main.c: 181:     if(velocity_idx>15){
 11753     03B2  3010               	movlw	16
 11754     03B3  024D               	subwf	_velocity_idx,w
 11755     03B4  1C03               	skipc
 11756     03B5  2BB7               	goto	u185_21
 11757     03B6  2BB8               	goto	u185_20
 11758     03B7                     u185_21:
 11759     03B7  2BB9               	goto	i1l875
 11760     03B8                     u185_20:
 11761     03B8                     i1l3366:
 11762                           
 11763                           ;main.c: 182:         velocity_idx = 0;
 11764     03B8  01CD               	clrf	_velocity_idx
 11765     03B9                     i1l875:
 11766     03B9  0008               	return
 11767     03BA                     __end_of_CCP4_Interrupt:
 11768                           
 11769                           	psect	text91
 11770     0F54                     __ptext91:	
 11771 ;; *************** function _TMR1_HasOverflowOccured *****************
 11772 ;; Defined at:
 11773 ;;		line 150 in file "mcc_generated_files/tmr1.c"
 11774 ;; Parameters:    Size  Location     Type
 11775 ;;		None
 11776 ;; Auto vars:     Size  Location     Type
 11777 ;;		None
 11778 ;; Return value:  Size  Location     Type
 11779 ;;                  1    wreg      _Bool 
 11780 ;; Registers used:
 11781 ;;		wreg, status,2, status,0
 11782 ;; Tracked objects:
 11783 ;;		On entry : 0/0
 11784 ;;		On exit  : 0/0
 11785 ;;		Unchanged: 0/0
 11786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11787 ;;      Params:         0       0       0       0       0       0
 11788 ;;      Locals:         0       0       0       0       0       0
 11789 ;;      Temps:          0       0       0       0       0       0
 11790 ;;      Totals:         0       0       0       0       0       0
 11791 ;;Total ram usage:        0 bytes
 11792 ;; Hardware stack levels used: 1
 11793 ;; This function calls:
 11794 ;;		Nothing
 11795 ;; This function is called by:
 11796 ;;		_CCP4_Interrupt
 11797 ;; This function uses a non-reentrant model
 11798 ;;
 11799                           
 11800     0F54                     _TMR1_HasOverflowOccured:	
 11801                           ;psect for function _TMR1_HasOverflowOccured
 11802                           
 11803     0F54                     i1l2980:	
 11804                           ;incstack = 0
 11805                           ; Regs used in _TMR1_HasOverflowOccured: [wreg+status,2+status,0]
 11806                           
 11807                           
 11808                           ;mcc_generated_files/tmr1.c: 153:     return(PIR1bits.TMR1IF);
 11809     0F54  0020               	movlb	0	; select bank0
 11810     0F55  0811               	movf	17,w	;volatile
 11811     0F56  3901               	andlw	1
 11812     0F57                     i1l436:
 11813     0F57  0008               	return
 11814     0F58                     __end_of_TMR1_HasOverflowOccured:
 11815     007E                     btemp	set	126	;btemp
 11816     007E                     int$flags	set	126
 11817     007E                     wtemp0	set	126
 11818                           
 11819                           	psect	idloc
 11820                           
 11821                           ;Config register IDLOC0 @ 0x8000
 11822                           ;	unspecified, using default values
 11823     8000                     	org	32768
 11824     8000  3FFF               	dw	16383
 11825                           
 11826                           ;Config register IDLOC1 @ 0x8001
 11827                           ;	unspecified, using default values
 11828     8001                     	org	32769
 11829     8001  3FFF               	dw	16383
 11830                           
 11831                           ;Config register IDLOC2 @ 0x8002
 11832                           ;	unspecified, using default values
 11833     8002                     	org	32770
 11834     8002  3FFF               	dw	16383
 11835                           
 11836                           ;Config register IDLOC3 @ 0x8003
 11837                           ;	unspecified, using default values
 11838     8003                     	org	32771
 11839     8003  3FFF               	dw	16383
 11840                           
 11841                           	psect	config
 11842                           
 11843                           ;Config register CONFIG1 @ 0x8007
 11844                           ;	Oscillator Selection
 11845                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 11846                           ;	Watchdog Timer Enable
 11847                           ;	WDTE = OFF, WDT disabled
 11848                           ;	Power-up Timer Enable
 11849                           ;	PWRTE = OFF, PWRT disabled
 11850                           ;	MCLR Pin Function Select
 11851                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 11852                           ;	Flash Program Memory Code Protection
 11853                           ;	CP = OFF, Program memory code protection is disabled
 11854                           ;	Data Memory Code Protection
 11855                           ;	CPD = OFF, Data memory code protection is disabled
 11856                           ;	Brown-out Reset Enable
 11857                           ;	BOREN = ON, Brown-out Reset enabled
 11858                           ;	Clock Out Enable
 11859                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 11860                           ;	Internal/External Switchover
 11861                           ;	IESO = ON, Internal/External Switchover mode is enabled
 11862                           ;	Fail-Safe Clock Monitor Enable
 11863                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 11864     8007                     	org	32775
 11865     8007  3FE4               	dw	16356
 11866                           
 11867                           ;Config register CONFIG2 @ 0x8008
 11868                           ;	Flash Memory Self-Write Protection
 11869                           ;	WRT = OFF, Write protection off
 11870                           ;	PLL Enable
 11871                           ;	PLLEN = OFF, 4x PLL disabled
 11872                           ;	Stack Overflow/Underflow Reset Enable
 11873                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 11874                           ;	Brown-out Reset Voltage Selection
 11875                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 11876                           ;	Low-Voltage Programming Enable
 11877                           ;	LVP = ON, Low-voltage programming enabled
 11878     8008                     	org	32776
 11879     8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    4
    Data        3
    BSS         41
    Persistent  57
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     18      71
    BANK1            80      8      24
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    CMP1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> S3_Interrupt(), 

    CMP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> S3_Interrupt(), Absolute function(), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_Interrupt(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_Interrupt(), TMR4_DefaultInterruptHandler(), Absolute function(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR6_Interrupt(), TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR6_Interrupt(), TMR6_DefaultInterruptHandler(), Absolute function(), 

    CMP2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> S4_Interrupt(), 

    CMP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> S4_Interrupt(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Interrupt(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Interrupt(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    CCP4_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_Interrupt(), CCP4_DefaultCallBack(), 

    CCP4_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_Interrupt(), CCP4_DefaultCallBack(), Absolute function(), 

    IOCBF3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> S2_Interrupt(), IOCBF3_DefaultInterruptHandler(), 

    IOCBF3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> S2_Interrupt(), Absolute function(), IOCBF3_DefaultInterruptHandler(), 

    IOCBF0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> S1_Interrupt(), IOCBF0_DefaultInterruptHandler(), 

    IOCBF0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> S1_Interrupt(), Absolute function(), IOCBF0_DefaultInterruptHandler(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR6_Interrupt->i1_updateMatrix
    _TMR4_Interrupt->i1_updateMatrix
    _TMR0_Interrupt->___lldiv
    _S2_Interrupt->i1_updateMatrix
    _S1_Interrupt->i1_updateMatrix
    _S4_Interrupt->i1_updateMatrix
    _S3_Interrupt->i1_updateMatrix
    i1_updateMotor->i1_sendMotor
    i1_sendMotor->i1_PWM3_LoadDutyValue
    i1_updateMatrix->i1_setMatrix
    i1_setMatrix->i1_DATAEE_ReadByte
    i1_sendMatrix->i1_txMAX7219
    i1_txMAX7219->i1_SPI1_WriteByte
    _CCP4_CaptureISR->_CCP4_Interrupt

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR0_CallBack->_TMR0_Interrupt

Critical Paths under _main in BANK1

    _main->_updateMatrix
    _updateMotor->_sendMotor
    _sendMotor->_PWM3_LoadDutyValue
    _updateMatrix->_setMatrix
    _setMatrix->_DATAEE_ReadByte
    _sendMatrix->_txMAX7219
    _initMAX7219->_txMAX7219
    _txMAX7219->_SPI1_WriteByte
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF3_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _CCP4_Initialize->_CCP4_SetCallBack

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    6136
                                              7 BANK1      1     1      0
                   _CCP4_SetCallBack
           _CMP1_SetInterruptHandler
           _CMP2_SetInterruptHandler
                        _EUSART_Read
                 _EUSART_is_rx_ready
         _IOCBF0_SetInterruptHandler
         _IOCBF3_SetInterruptHandler
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
           _TMR4_SetInterruptHandler
           _TMR6_SetInterruptHandler
                        _initMAX7219
                       _updateMatrix
                        _updateMotor
 ---------------------------------------------------------------------------------
 (1) _updateMotor                                          0     0      0     602
                    _TMR4_StartTimer
                          _sendMotor
 ---------------------------------------------------------------------------------
 (2) _sendMotor                                            2     2      0     602
                                              4 BANK1      2     2      0
                 _PWM3_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _PWM3_LoadDutyValue                                   4     2      2     602
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _updateMatrix                                         1     1      0    1457
                                              6 BANK1      1     1      0
                         _sendMatrix
                          _setMatrix
 ---------------------------------------------------------------------------------
 (2) _setMatrix                                            5     4      1     381
                                              1 BANK1      5     4      1
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (3) _DATAEE_ReadByte                                      1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _sendMatrix                                           2     2      0    1033
                                              3 BANK1      2     2      0
                          _txMAX7219
 ---------------------------------------------------------------------------------
 (1) _initMAX7219                                          2     2      0     903
                                              3 BANK1      2     2      0
                          _txMAX7219
 ---------------------------------------------------------------------------------
 (3) _txMAX7219                                            2     1      1     903
                                              1 BANK1      2     1      1
                     _SPI1_WriteByte
 ---------------------------------------------------------------------------------
 (4) _SPI1_WriteByte                                       1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1629
                     _ADC_Initialize
                    _CCP4_Initialize
                    _CMP1_Initialize
                    _CMP2_Initialize
                     _DAC_Initialize
                  _EUSART_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM3_Initialize
                    _SPI1_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                    _TMR6_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     211
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR6_SetInterruptHandler                             2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     211
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     422
         _IOCBF0_SetInterruptHandler
         _IOCBF3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCBF3_SetInterruptHandler                           2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCBF0_SetInterruptHandler                           2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     363
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _DAC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP4_Initialize                                      0     0      0     211
                   _CCP4_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP4_SetCallBack                                     2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CMP2_SetInterruptHandler                             2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _CMP1_SetInterruptHandler                             2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0    5009
                    _CCP4_CaptureISR
                           _CMP1_ISR
                           _CMP2_ISR
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
                           _TMR4_ISR
                           _TMR6_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR6_ISR                                             0     0      0     619
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (7) _TMR6_CallBack                                        0     0      0     619
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
                     _TMR6_Interrupt *
 ---------------------------------------------------------------------------------
 (8) _TMR6_Interrupt                                       0     0      0     619
                     _TMR6_StopTimer
                    _TMR6_WriteTimer
                     i1_updateMatrix
                      i1_updateMotor
 ---------------------------------------------------------------------------------
 (9) _TMR6_WriteTimer                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _TMR6_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR6_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR4_ISR                                             0     0      0     619
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (7) _TMR4_CallBack                                        0     0      0     619
                   Absolute function *
       _TMR4_DefaultInterruptHandler *
                     _TMR4_Interrupt *
 ---------------------------------------------------------------------------------
 (8) _TMR4_Interrupt                                       0     0      0     619
                     _TMR4_StopTimer
                    _TMR4_WriteTimer
                     i1_updateMatrix
                      i1_updateMotor
 ---------------------------------------------------------------------------------
 (9) _TMR4_WriteTimer                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _TMR4_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR4_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0    1261
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (7) _TMR0_CallBack                                        0     0      0    1261
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                     _TMR0_Interrupt *
 ---------------------------------------------------------------------------------
 (8) _TMR0_Interrupt                                      18    18      0    1261
                                              0 BANK0     18    18      0
                  _ADC_GetConversion
                       _EUSART_Write
                 _EUSART_is_tx_ready
                            ___lldiv
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (9) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (9) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (9) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (9) _EUSART_is_tx_ready                                   1     1      0      24
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _ADC_GetConversion                                    4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _PIN_MANAGER_IOC                                      0     0      0    1194
                         _IOCBF0_ISR
                         _IOCBF3_ISR
 ---------------------------------------------------------------------------------
 (7) _IOCBF3_ISR                                           0     0      0     597
                   Absolute function *
     _IOCBF3_DefaultInterruptHandler *
                       _S2_Interrupt *
 ---------------------------------------------------------------------------------
 (8) _S2_Interrupt                                         0     0      0     597
                    _TMR6_StartTimer
                     i1_updateMatrix
                      i1_updateMotor
 ---------------------------------------------------------------------------------
 (8) _IOCBF3_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _IOCBF0_ISR                                           0     0      0     597
                   Absolute function *
     _IOCBF0_DefaultInterruptHandler *
                       _S1_Interrupt *
 ---------------------------------------------------------------------------------
 (8) _S1_Interrupt                                         0     0      0     597
                    _TMR6_StartTimer
                     i1_updateMatrix
                      i1_updateMotor
 ---------------------------------------------------------------------------------
 (8) _IOCBF0_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CMP2_ISR                                             0     0      0     597
                   Absolute function *
                       _S4_Interrupt *
 ---------------------------------------------------------------------------------
 (7) _S4_Interrupt                                         0     0      0     597
                    _TMR6_StartTimer
                     i1_updateMatrix
                      i1_updateMotor
 ---------------------------------------------------------------------------------
 (6) _CMP1_ISR                                             0     0      0     597
                   Absolute function *
                       _S3_Interrupt *
 ---------------------------------------------------------------------------------
 (7) _S3_Interrupt                                         0     0      0     597
                    _TMR6_StartTimer
                     i1_updateMatrix
                      i1_updateMotor
 ---------------------------------------------------------------------------------
 (9) i1_updateMotor                                        0     0      0     200
                  i1_TMR4_StartTimer
                        i1_sendMotor
 ---------------------------------------------------------------------------------
 (10) i1_sendMotor                                         2     2      0     200
                                              4 COMMON     2     2      0
               i1_PWM3_LoadDutyValue
 ---------------------------------------------------------------------------------
 (11) i1_PWM3_LoadDutyValue                                4     2      2     200
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (10) i1_TMR4_StartTimer                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (9) i1_updateMatrix                                       1     1      0     397
                                              6 COMMON     1     1      0
                       i1_sendMatrix
                        i1_setMatrix
 ---------------------------------------------------------------------------------
 (10) i1_setMatrix                                         5     4      1     189
                                              1 COMMON     5     4      1
                  i1_DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (11) i1_DATAEE_ReadByte                                   1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) i1_sendMatrix                                        2     2      0     182
                                              3 COMMON     2     2      0
                        i1_txMAX7219
 ---------------------------------------------------------------------------------
 (11) i1_txMAX7219                                         2     1      1      92
                                              1 COMMON     2     1      1
                   i1_SPI1_WriteByte
 ---------------------------------------------------------------------------------
 (12) i1_SPI1_WriteByte                                    1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _TMR6_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CCP4_CaptureISR                                      2     2      0     122
                                              3 COMMON     2     2      0
                   Absolute function *
               _CCP4_DefaultCallBack *
                     _CCP4_Interrupt *
 ---------------------------------------------------------------------------------
 (7) _CCP4_Interrupt                                       3     1      2      75
                                              0 COMMON     3     1      2
            _TMR1_HasOverflowOccured
 ---------------------------------------------------------------------------------
 (8) _TMR1_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _CCP4_DefaultCallBack                                 2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CCP4_SetCallBack
   _CMP1_SetInterruptHandler
   _CMP2_SetInterruptHandler
   _EUSART_Read
   _EUSART_is_rx_ready
   _IOCBF0_SetInterruptHandler
   _IOCBF3_SetInterruptHandler
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP4_Initialize
       _CCP4_SetCallBack
     _CMP1_Initialize
     _CMP2_Initialize
     _DAC_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCBF0_SetInterruptHandler
       _IOCBF3_SetInterruptHandler
     _PWM3_Initialize
     _SPI1_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
     _TMR2_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _WDT_Initialize
   _TMR0_SetInterruptHandler
   _TMR4_SetInterruptHandler
   _TMR6_SetInterruptHandler
   _initMAX7219
     _txMAX7219
       _SPI1_WriteByte
   _updateMatrix
     _sendMatrix
       _txMAX7219
     _setMatrix
       _DATAEE_ReadByte
   _updateMotor
     _TMR4_StartTimer
     _sendMotor
       _PWM3_LoadDutyValue

 _INTERRUPT_InterruptManager (ROOT)
   _CCP4_CaptureISR
     Absolute function(Fake) *
     _CCP4_DefaultCallBack *
     _CCP4_Interrupt *
       _TMR1_HasOverflowOccured
   _CMP1_ISR
     Absolute function(Fake) *
     _S3_Interrupt *
       _TMR6_StartTimer
       i1_updateMatrix
         i1_sendMatrix
           i1_txMAX7219
             i1_SPI1_WriteByte
         i1_setMatrix
           i1_DATAEE_ReadByte
       i1_updateMotor
         i1_TMR4_StartTimer
         i1_sendMotor
           i1_PWM3_LoadDutyValue
   _CMP2_ISR
     Absolute function(Fake) *
     _S4_Interrupt *
       _TMR6_StartTimer
       i1_updateMatrix
       i1_updateMotor
   _PIN_MANAGER_IOC
     _IOCBF0_ISR
       Absolute function(Fake) *
       _IOCBF0_DefaultInterruptHandler *
       _S1_Interrupt *
         _TMR6_StartTimer
         i1_updateMatrix
         i1_updateMotor
     _IOCBF3_ISR
       Absolute function(Fake) *
       _IOCBF3_DefaultInterruptHandler *
       _S2_Interrupt *
         _TMR6_StartTimer
         i1_updateMatrix
         i1_updateMotor
   _TMR0_ISR
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *
       _TMR0_Interrupt *
         _ADC_GetConversion
         _EUSART_Write
         _EUSART_is_tx_ready
         ___lldiv
         ___lwdiv
         ___wmul
   _TMR4_ISR
     _TMR4_CallBack
       Absolute function(Fake) *
       _TMR4_DefaultInterruptHandler *
       _TMR4_Interrupt *
         _TMR4_StopTimer
         _TMR4_WriteTimer
         i1_updateMatrix
         i1_updateMotor
   _TMR6_ISR
     _TMR6_CallBack
       Absolute function(Fake) *
       _TMR6_DefaultInterruptHandler *
       _TMR6_Interrupt *
         _TMR6_StopTimer
         _TMR6_WriteTimer
         i1_updateMatrix
         i1_updateMotor

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      6D       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     12      47       6       88.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      8      18       8       30.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      6D      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Oct 02 21:25:22 2022

                              _CCP4_Initialize 06D1                             SPI1_WriteByte@byte 00B0  
             ??_IOCBF3_DefaultInterruptHandler 0070                ?_IOCBF3_DefaultInterruptHandler 0070  
                                           l21 07EC                                             l72 0FED  
                                           l58 0F7F                              ??_CMP1_Initialize 00B0  
                                           l75 0560                              ??_TMR6_StartTimer 0070  
                       __end_of_FVR_Initialize 0F5C                            ___wmul@multiplicand 0072  
                             ??_TMR6_StopTimer 0070                                _timer0ReloadVal 0038  
                                          l126 0F73                                            l302 06E2  
                                          l118 04E4                                            l135 0726  
                                          l160 0FD2                                            l410 07BD  
                                          l139 0734                                            l163 0FC0  
                                          l308 0FB7                                            l157 0FC9  
                                          l600 0F79                                            l257 03E9  
                                          l353 0386                                            l356 0F8C  
                                          l372 0F9C                                            l269 0FDB  
                                          l279 0FE4                                            l455 06AA  
                                          l711 0FFF                                            l359 0F5F  
                                          l477 0FF6                                            l629 06BD  
                                          l583 07C9                                            l568 078A  
                                          l593 0FAE                                            l497 0F94  
                                          l729 07D5                                            l657 07FF  
                                          l921 0531                                            l833 0276  
                                          l739 0FA5                                            l683 06D0  
                                          l923 0536                                            l924 053C  
                                          l932 02D5                                            l828 0263  
                                          l853 0498                                            l837 0293  
                                          l926 0541                                            l942 057C  
                                          l686 0F50                                            l846 0418  
                                          l927 0542                                            l919 052A  
                                          l929 0544                                            l937 0470  
                                          l949 0F5B                                            _PR2 001B  
                                          _PR4 0416                                            _PR6 041D  
                              _timer1ReloadVal 002A                      ?_CMP2_SetInterruptHandler 00B0  
               ?_EUSART_SetFramingErrorHandler 00B0                                _TMR2_Initialize 0F95  
               CCP4_SetCallBack@customCallBack 00B0                                            wreg 0009  
                             _CCP4_SetCallBack 0FAF                                   ?_initMAX7219 0070  
                      __end_of_CCP4_CaptureISR 06F5                                TMR0_Interrupt@i 005A  
                              TMR0_Interrupt@p 0062                                TMR0_Interrupt@t 005E  
                              TMR0_Interrupt@v 0056                                   ?_EUSART_Read 0070  
                                         l4030 0288                                           l3700 04E2  
                                         l3710 03C3                                           l3702 03BA  
                                         l3640 0FB8                                           l3720 03D3  
                                         l3712 03C7                                           l3704 03BC  
                                         l3800 06AB                                           l3632 0F7C  
                                         l3642 0FD3                                           l3730 03D8  
                                         l3722 03D4                                           l3714 03C9  
                                         l3706 03BE                                           l3810 06BA  
                                         l3802 06AE                                           l3650 0780  
                                         l3634 0545                                           l3900 072B  
                                         l3820 0F8D                                           l3740 06D5  
                                         l3812 07CA                                           l3636 0FC1  
                                         l3644 0FDC                                           l3732 03E0  
                                         l3724 03D5                                           l3716 03CA  
                                         l3708 03C1                                           l3804 06AF  
                                         l3660 0787                                           l3652 0783  
                                         l3902 072C                                           l3822 0F90  
                                         l3646 0FAF                                           l3742 06D6  
                                         l3814 07CC                                           l3638 0FCA  
                                         l3750 0F89                                           l3734 03E8  
                                         l3726 03D6                                           l3718 03D1  
                                         l3830 07B7                                           l3806 06B1  
                                         l3910 0353                                           l3670 0537  
                                         l3654 0784                                           l3912 0FA6  
                                         l3904 0731                                           l3824 0F91  
                                         l3744 06DE                                           l3736 06D1  
                                         l3816 07D1                                           l3760 07C5  
                                         l3752 0F8A                                           l3728 03D7  
                                         l3680 07EA                                           l3672 07E2  
                                         l3648 0FEE                                           l3832 07BB  
                                         l3664 07F7                                           l3808 06B3  
                                         l3656 0785                                           l3840 025B  
                                         l3920 03F3                                           l3914 0F9D  
                                         l3906 0733                                           l3746 06E0  
                                         l3738 06D4                                           l3818 07D3  
                                         l3762 07C7                                           l3690 04C0  
                                         l3682 0FE5                                           l3674 07E4  
                                         l3826 07B2                                           l3666 0FF7  
                                         l3770 06C1                                           l3754 0F5C  
                                         l3658 0786                                           l3834 0F4E  
                                         l3850 0278                                           l3922 03F9  
                                         l3930 0408                                           l3756 07BE  
                                         l3764 0F74                                           l3692 04C9  
                                         l3748 0F86                                           l3684 0FE8  
                                         l3676 07E6                                           l3828 07B6  
                                         l3780 0F95                                           l3772 06C2  
                                         l3668 052C                                           l3940 0471  
                                         l3844 0265                                           l3836 0250  
                                         l3932 040D                                           l3924 03FF  
                                         l3916 03EA                                           l3758 07C0  
                                         l3694 04CA                                           l3766 0F58  
                                         l3686 0FE9                                           l3678 07E8  
                                         l3790 069B                                           l3782 0F98  
                                         l3774 06C4                                           l3950 0488  
                                         l3942 0479                                           l3838 0256  
                                         l3934 040F                                           l3926 0401  
                                         l3918 03F1                                           l3696 04D2  
                                         l3688 0FEA                                           l3792 069E  
                                         l3784 0F99                                           l3776 06C6  
                                         l3768 06BE                                           l3960 02BB  
                                         l3880 046A                                           l3872 0454  
                                         l3864 044A                                           l3952 048C  
                                         l3944 0479                                           l3848 026D  
                                         l3936 0412                                           l3928 0404  
                                         l3698 04DA                                           l3794 06A0  
                                         l3786 0F9A                                           l3778 06CD  
                                         l3962 02C8                                           l3890 0571  
                                         l3882 0561                                           l3874 045D  
                                         l3866 0453                                           l3954 048F  
                                         l3946 047F                                           l3858 027F  
                                         l3938 0415                                           l3970 01C4  
                                         l3796 06A1                                           l3788 0696  
                                         l3964 02CE                                           l3892 0576  
                                         l3876 0462                                           l3956 0495  
                                         l3948 0483                                           l3980 01D6  
                                         l3972 01C8                                           l3894 0F6F  
                                         l3798 06A2                                           l3958 0294  
                                         l3878 0466                                           l3982 01DB  
                                         l3974 01CB                                           l3966 0180  
                                         l3888 0563                                           l3984 01E3  
                                         l3976 01CD                                           l3968 01C3  
                                         l3898 0726                                           l3986 01ED  
                                         l3988 01F0                                           u2300 027E  
                                         u2301 027D                                           _LATA 010C  
                                         _LATB 010D                                           u2320 0470  
                                         u2400 047F                                           u2321 046F  
                                         u2401 047E                                           u2250 0536  
                                         u2330 057C                                           u2410 0488  
                                         u2251 0535                                           u2331 057B  
                                         u2315 044D                                           u2411 0487  
                                         u2340 072B                                           u2260 0541  
                                         u2420 01D5                                           u2341 072A  
                                         u2261 0540                                           u2245 0556  
                                         u2421 01D4                                           u2350 0731  
                                         u2270 0256                                           u2430 01E3  
                                         u2351 0730                                           u2271 0255  
                                         u2431 01E2                                           u2280 025B  
                                         u2360 03F1                                           u2440 01ED  
                                         u2281 025A                                           u2361 03F0  
                                         u2441 01EC                                           u2290 026C  
                                         u2370 03F9                                           u2291 026B  
                                         u2371 03F8                                           u2380 03FF  
                                         u2381 03FE                                           u2390 040D  
                                         u2391 040C                                           u2457 02C1  
                            ??_CMP2_Initialize 00B0                                           i1l58 0F64  
                                         i1l75 0669                        _TMR1_HasOverflowOccured 0F54  
                                         _TMR0 0015                                           _TMR2 001A  
                                         _TMR4 0415                                           _TMR6 041C  
                                         _WPUA 020C                                           _WPUB 020D  
                            ??_TMR6_WriteTimer 0070                                           _main 0180  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E                          i1DATAEE_ReadByte@bAdd 0070  
                                         start 006A                               __end_of_CMP1_ISR 077E  
                             __end_of_CMP2_ISR 0770                          __end_ofi1_updateMotor 0448  
                   ??_TMR4_SetInterruptHandler 00B2                                 i1_updateMatrix 04E5  
                      __end_of_TMR0_Initialize 06AB                 ??_TMR0_DefaultInterruptHandler 0070  
                              ?_FVR_Initialize 0070                                  ?_EUSART_Write 0070  
                     _CMP1_SetInterruptHandler 0F9D                  __end_of_OSCILLATOR_Initialize 0F8D  
                                        ?_main 0070                                    i1_txMAX7219 0621  
                       ??_CCP4_DefaultCallBack 0072                                __end_of___lldiv 0250  
                                        _T1CON 0018                                          _T2CON 001C  
                                        _T4CON 0417                                          _T6CON 041E  
                              __end_of___lwdiv 0353                                          i1l201 004C  
                                        i1l202 0068                                          i1l123 0743  
                                        i1l203 005A                                          i1l142 07EE  
                                        i1l208 0068                                          i1l305 06F4  
                                        i1l145 07F6                                          i1l262 0705  
                                        i1l272 0F3F                                          i1l512 05E3  
                                        i1l192 0012                                          i1l266 0761  
                                        i1l282 0F40                                          i1l194 001E  
                                        i1l515 05EB                                          i1l436 0F57  
                                        i1l276 0752                                          i1l197 0030  
                                        i1l470 0652                                          i1l199 003E  
                                        i1l632 0F44                                          i1l480 0F41  
                                        i1l704 0695                                          i1l641 0F6E  
                                        i1l474 07B1                                          i1l714 0002  
                                        i1l650 067F                                          i1l299 0F3E  
                                        i1l635 0F4D                                          i1l708 07A4  
                                        i1l660 0003                                          i1l590 076F  
                                        i1l654 0797                                          i1l568 07E1  
                                        i1l736 077D                                          i1l921 0628  
                                        i1l833 02FA                                          i1l923 062D  
                                        i1l924 0632                                          i1l828 02E8  
                                        i1l853 0508                                          i1l837 0316  
                                        i1l861 017F                                          i1l926 0637  
                                        i1l942 0620                                          i1l686 0F47  
                                        i1l846 0447                                          i1l927 0638  
                                        i1l919 0622                                          i1l695 0F69  
                                        i1l864 0725                                          i1l929 063A  
                                        i1l937 04BF                                          i1l689 0F4A  
                                        i1l875 03B9                                          i1l891 05B4  
                                        i1l883 0598                                          i1l867 0715  
                                        i1l887 05D0                                          i1l879 0606  
                                        _RCREG 0199                                          _RCSTA 019D  
                                        _TMR1H 0017                                          _TMR1L 0016  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TXREG 019A                                          _TXSTA 019E  
                              _TMR4_Initialize 06BE                      ?_TMR0_SetInterruptHandler 00B0  
                    ?_TMR6_SetInterruptHandler 00B0                               __end_of_TMR0_ISR 0653  
                             __end_of_TMR4_ISR 0696                               __end_of_TMR6_ISR 0680  
                              _DATAEE_ReadByte 077E                        __end_of_PIN_MANAGER_IOC 0706  
                               _WDT_Initialize 0F5C                                    i1_setMatrix 0499  
                                  i1_sendMotor 02D6                        __end_of_PWM3_Initialize 0FEE  
                      __end_of_TMR1_Initialize 07BE                                          pclath 000A  
                                        status 0003                        __end_of_CCP4_Initialize 06E3  
                                        wtemp0 007E                               i1setMatrix@eeAdd 0074  
                            ?i1_SPI1_WriteByte 0070                         __end_ofi1_updateMatrix 0509  
               ??_TMR6_DefaultInterruptHandler 0070                             ??i1_SPI1_WriteByte 0070  
                             ??_DAC_Initialize 00B0                                __initialization 006C  
                                 __end_of_main 01F6                                 ??_EUSART_Write 0070  
                      __end_of_TMR2_Initialize 0F9D                    ?_INTERRUPT_InterruptManager 0070  
                                       ??_main 00B7                        _IOCBF0_InterruptHandler 0030  
                       __end_of_WDT_Initialize 0F60                                _TMR6_Initialize 06AB  
                    ??_TMR1_HasOverflowOccured 0070                               ?_CCP4_CaptureISR 0070  
            _EUSART_DefaultFramingErrorHandler 0000                                         _ADCON0 009D  
                                       _ADCON1 009E                     _EUSART_OverrunErrorHandler 0034  
                                       _ADRESH 009C                                         _EEADRH 0192  
                                       _ADRESL 009B                                         _EEADRL 0191  
                                       _EEDATH 0194                                         _CCPR3H 0312  
                                       _CCPR4H 0319                                         _EEDATL 0193  
                                       _CCPR3L 0311                                         _CCPR4L 0318  
                                       _EECON2 0196                                         _ANSELA 018C  
                                       _ANSELB 018D                     __end_of_EUSART_is_rx_ready 0F74  
                                       _BORCON 0116                                         _T1GCON 0019  
                                       i1l1102 0513                                         i1l1104 0527  
                                       i1l1138 024F                                         i1l3010 00BC  
                                       i1l3020 00D4                                         i1l3004 008C  
                                       i1l3030 0143                                         i1l3022 00E1  
                                       i1l3006 0094                                         u120_20 062D  
                                       i1l3032 014C                                         i1l3024 00F9  
                                       i1l3016 00BE                                         i1l3008 00A4  
                                       u120_21 062C                                         i1l3034 0156  
                                       i1l3026 0104                                         i1l3018 00D0  
                                       i1l3050 0716                                         i1l3044 0164  
                                       i1l3036 0159                                         i1l3028 0137  
                                       i1l3052 0719                                         i1l3060 0706  
                                       i1l3070 05EC                                         i1l1382 0352  
                                       i1l3046 016D                                         i1l3038 0161  
                                       i1l3054 071D                                         i1l3062 0709  
                                       u121_20 0637                                         i1l4032 030B  
                                       i1l3080 05FD                                         i1l3072 05EE  
                                       i1l3048 0172                                         i1l3056 071F  
                                       i1l3064 070D                                         u121_21 0636  
                                       i1l3082 0600                                         i1l3074 05F3  
                                       i1l3170 075A                                         i1l3090 058A  
                                       i1l3058 0722                                         i1l3066 070F  
                                       i1l3084 0603                                         i1l3076 05F8  
                                       i1l3172 075F                                         i1l3092 058C  
                                       i1l3412 06F5                                         i1l3420 063B  
                                       i1l3068 0712                                         i1l3350 0387  
                                       i1l3078 05FA                                         i1l3094 058F  
                                       i1l3086 057D                                         i1l3174 0744  
                                       i1l3414 06FA                                         i1l3422 063C  
                                       i1l3430 0682                                         i1l3360 03A5  
                                       i1l3352 038C                                         i1l2800 04AD  
                                       u122_20 02DC                                         i1l3440 076A  
                                       i1l3168 0753                                         i1l3096 0592  
                                       i1l3088 0584                                         i1l3176 074B  
                                       i1l3416 06FD                                         u130_20 0740  
                                       i1l3280 07AC                                         i1l3424 064C  
                                       i1l3432 068F                                         u210_20 0022  
                                       u122_21 02DB                                         u130_21 073F  
                                       u210_21 0021                                         i1l3362 03A7  
                                       i1l3354 0391                                         i1l3450 06E5  
                                       i1l2802 04B1                                         i1l3370 05BC  
                                       i1l3442 0770                                         i1l3098 0595  
                                       i1l3178 0750                                         i1l3418 0702  
                                       i1l3426 064F                                         i1l3290 079F  
                                       i1l3434 0692                                         i1l3282 078B  
                                       i1l3364 03B2                                         i1l3356 0393  
                                       i1l3452 06EA                                         i1l2804 04B5  
                                       i1l2740 0653                                         i1l3380 05CD  
                                       i1l3372 05C2                                         i1l3444 0772  
                                       i1l3436 0762                                         i1l2900 0319  
                                       i1l3428 0680                                         i1l3284 0792  
                                       i1l3460 067C                                         i1l3540 001A  
                                       i1l3532 0006                                         i1l3366 03B8  
                                       i1l3358 039B                                         i1l2814 0608  
                                       i1l2750 07DD                                         i1l2742 07D7  
                                       i1l2806 04B9                                         i1l3374 05C4  
                                       i1l3446 0778                                         i1l3390 05AB  
                                       i1l3382 0599                                         i1l3438 0764  
                                       i1l2830 0742                                         i1l2822 0735  
                                       i1l2910 032F                                         i1l2902 031F  
                                       i1l3278 07A5                                         i1l3454 066A  
                                       i1l3550 003A                                         i1l3542 0022  
                                       i1l3534 000A                                         i1l3448 06E3  
                                       i1l2816 0616                                         i1l2808 0607  
                                       i1l2752 07DE                                         i1l2744 07DA  
                                       i1l2760 0F45                                         u123_20 02E1  
                                       i1l3376 05C7                                         i1l3368 05B5  
                                       i1l3392 05AE                                         i1l3384 05A0  
                                       i1l2840 05DC                                         u131_20 07F3  
                                       i1l2824 0736                                         i1l2912 033E  
                                       i1l2904 0322                                         i1l2920 034E  
                                       i1l3288 0798                                         i1l3456 066C  
                                       i1l3560 005F                                         i1l3552 0043  
                                       i1l3544 0027                                         u211_20 0027  
                                       i1l3536 000E                                         u123_21 02E0  
                                       u131_21 07F2                                         u211_21 0026  
                                       i1l2850 0F42                                         i1l2738 0F61  
                                       i1l2818 061A                                         i1l2746 07DB  
                                       i1l2770 02EA                                         i1l2762 02D6  
                                       i1l2930 0428                                         i1l3378 05CA  
                                       i1l3394 05B1                                         i1l3386 05A6  
                                       i1l2842 05DD                                         i1l2834 07EE  
                                       i1l2826 073B                                         i1l2914 0342  
                                       i1l2906 0327                                         i1l3458 0679  
                                       i1l3562 0064                                         i1l3554 0048  
                                       i1l3546 002C                                         i1l3538 0016  
                                       i1l2756 0624                                         i1l2748 07DC  
                                       i1l2764 02DC                                         i1l2940 043C  
                                       i1l2932 042E                                         i1l2924 0419  
                                       i1l3388 05A8                                         i1l2844 05E1  
                                       i1l2836 07F3                                         i1l2828 0740  
                                       i1l2916 0343                                         i1l2908 032B  
                                       i1l2860 0509                                         i1l2852 0F4B  
                                       i1l3556 0051                                         i1l3548 0035  
                                       i1l2758 062E                                         i1l2790 049A  
                                       i1l2950 04EC                                         i1l2774 02F2  
                                       i1l2766 02E1                                         i1l2942 043E  
                                       i1l2934 0430                                         i1l2926 0420  
                                       i1l2846 05E7                                         i1l2838 05D2  
                                       i1l2918 0348                                         i1l2870 0523  
                                       i1l2862 050B                                         i1l2854 0F6B  
                                       i1l3558 0056                                         i1l2792 04A3  
                                       i1l2960 04FD                                         i1l2952 04EC  
                                       i1l2776 02FC                                         u124_20 02F1  
                                       i1l2784 0303                                         i1l2944 0441  
                                       i1l2936 0433                                         i1l2928 0422  
                                       u132_20 05E7                                         i1l2880 0214  
                                       i1l2864 050F                                         i1l2856 0F48  
                                       u220_20 0064                                         u212_20 002C  
                                       u124_21 02F0                                         u132_21 05E6  
                                       u220_21 0063                                         u212_21 002B  
                                       i1l2962 04FF                                         i1l2954 04F2  
                                       i1l2938 0437                                         i1l2946 0444  
                                       i1l2890 023A                                         i1l2882 0218  
                                       i1l2874 01F6                                         i1l2866 0518  
                                       i1l2858 0F66                                         i1l2980 0F54  
                                       i1l2964 0505                                         i1l2956 04F5  
                                       i1l2948 04E5                                         i1l2892 0241  
                                       i1l2884 021F                                         i1l2876 0206  
                                       i1l2868 051D                                         u140_25 0219  
                                       i1l2798 04A4                                         i1l2958 04FA  
                                       i1l2886 0231                                         i1l2878 0209  
                                       i1l2894 0247                                         u125_20 0302  
                                       i1l2888 0239                                         u141_20 0231  
                                       u133_20 050F                                         u213_20 0035  
                                       u125_21 0301                                         u141_21 0230  
                                       u133_21 050E                                         u213_21 0034  
                                       i1l2898 0317                                         u141_25 022D  
                                       u150_20 034E                                         u214_20 003A  
                                       u206_20 000A                                         u150_21 034D  
                                       u214_21 0039                                         u206_21 0009  
                                       u126_25 049D                                         u142_25 023B  
                                       u134_25 0514                                         u127_20 04BF  
                                       u151_20 0420                                         u143_20 0247  
                                       u215_20 0043                                         u207_20 000E  
                                       u127_21 04BE                                         u151_21 041F  
                                       u143_21 0246                                         u215_21 0042  
                                       u207_21 000D                                         u119_25 0662  
                                       u135_25 0519                                         u128_20 0620  
                                       u152_20 0428                                         u144_20 031F  
                                       u136_20 0523                                         u160_20 0111  
                                       u216_20 0048                                         u208_20 0016  
                                       u128_21 061F                                         u152_21 0427  
                                       u144_21 031E                                         u136_21 0522  
                                       u216_21 0047                                         u208_21 0015  
                                       u160_25 010D                                         u153_20 042E  
                                       u129_20 073B                                         u137_20 0206  
                                       u217_20 0051                                         u209_20 001A  
                                       u153_21 042D                                         u129_21 073A  
                                       u137_21 0205                                         u217_21 0050  
                                       u209_21 0019                                         u145_25 0323  
                                       u161_25 013A                        TMR4_WriteTimer@timerVal 0070  
                                       u154_20 043C                                         u146_20 032F  
                                       u218_20 0056                                         u154_21 043B  
                                       u146_21 032E                                         u218_21 0055  
                                       u138_25 020A                                         u162_25 014F  
                                       u155_20 04F2                                         u171_20 075A  
                                       u139_20 0218                                         u163_20 0161  
                                       u219_20 005F                                         _FVRCON 0117  
                                       u155_21 04F1                                         u171_21 0759  
                                       u139_21 0217                                         u163_21 0160  
                                       u219_21 005E                                         u147_25 0330  
                                       u156_20 04FA                                         u172_20 074B  
                                       u148_20 033E                                         u164_20 017F  
                                       u156_21 04F9                                         u172_21 074A  
                                       u148_21 033D                                         u164_21 017E  
                                       u148_25 033A                                         u164_25 017B  
                   __end_of_EUSART_is_tx_ready 0744                                         u165_20 05F3  
                                       u173_20 07AC                                         u165_21 05F2  
                                       u173_21 07AB                                         u149_25 0344  
                                       u166_20 05F8                                         u158_20 00E1  
                                       u174_20 0792                                         u166_21 05F7  
                                       u158_21 00E0                                         u174_21 0791  
                                       u158_25 00DD                                         u246_27 05DE  
                                       u183_20 038C                                         u167_20 0584  
                                       u159_20 00EF                                         u175_20 079F  
                                       u183_21 038B                                         u167_21 0583  
                                       u175_21 079E                                         u159_25 00EB  
                                       u184_20 039B                                         u168_20 058A  
                                       u192_20 06FA                                         u184_21 039A  
                                       u168_21 0589                                         u192_21 06F9  
                                       u185_20 03B8                                         u193_20 0702  
                                       u185_21 03B7                                         u193_21 0701  
                                       u186_20 05BC                                         u194_20 064C  
                                       u186_21 05BB                                         u194_21 064B  
                                       u187_20 05C2                                         u195_20 068F  
                                       u187_21 05C1                                         u195_21 068E  
                                       u188_20 05A0                                         u196_20 076A  
                                       u188_21 059F                                         u196_21 0769  
                                       u197_20 0778                                         u189_20 05A6  
                                       u197_21 0777                                         u189_21 05A5  
                                       u198_20 0679                                         u198_21 0678  
                                       _OSCCON 0099                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                  ?_S1_Interrupt 0070  
                                       _WDTCON 0097                                _TMR4_StartTimer 0F4E  
                              ?i1_updateMatrix 0070                                   _CCPTMRS0bits 029E  
                                ?_S2_Interrupt 0070                                         ___wmul 0509  
                         TMR0_Interrupt@i_1694 005C                                      ??___lldiv 0078  
                                    ??___lwdiv 0074                                   i1_sendMatrix 0607  
                             ?_TMR0_Initialize 0070                                         _matrix 0039  
                      __end_of_TMR4_Initialize 06D1                                  _CCP4_CallBack 002C  
                                ?_S3_Interrupt 0070                        __end_of_DATAEE_ReadByte 078B  
         __end_of_TMR4_DefaultInterruptHandler 0003                   _TMR4_DefaultInterruptHandler 0002  
                              _TMR4_WriteTimer 0F65                                ?_WDT_Initialize 0070  
                     ADC_GetConversion@channel 0073                                  ?_S4_Interrupt 0070  
                                    ?_CMP1_ISR 0070                          __end_of_TMR0_CallBack 07B2  
                                    ?_CMP2_ISR 0070       CMP1_SetInterruptHandler@InterruptHandler 00B0  
     TMR4_SetInterruptHandler@InterruptHandler 00B0       TMR6_SetInterruptHandler@InterruptHandler 00B0  
     CMP2_SetInterruptHandler@InterruptHandler 00B0       TMR0_SetInterruptHandler@InterruptHandler 00B0  
   IOCBF3_SetInterruptHandler@InterruptHandler 00B0     IOCBF0_SetInterruptHandler@InterruptHandler 00B0  
                             ?_PIN_MANAGER_IOC 0070                                   ??_IOCBF0_ISR 0077  
                                 ??_IOCBF3_ISR 0077                               ?_PWM3_Initialize 0070  
                             ?_TMR1_Initialize 0070                                 ??_S1_Interrupt 0077  
                            _SYSTEM_Initialize 0353                        __end_of__initialization 0088  
                             ?_CCP4_Initialize 0070                                _CMP1_Initialize 07CA  
                           ?_SYSTEM_Initialize 0070                                _TMR6_StartTimer 0F42  
                                 ?_updateMotor 0070                                 ??_S2_Interrupt 0077  
                     __end_of_CCP4_SetCallBack 0FB8               __end_of_CMP2_SetInterruptHandler 0FAF  
                               __pcstackCOMMON 0070                          __end_of_TMR4_CallBack 07A5  
                                 __pidataBANK0 0F51                            ??_SYSTEM_Initialize 00B2  
                                    ?_TMR0_ISR 0070                                      ?_TMR4_ISR 0070  
                                    ?_TMR6_ISR 0070                              ??_SPI1_Initialize 00B0  
       __end_of_IOCBF0_DefaultInterruptHandler 0F40                 _IOCBF0_DefaultInterruptHandler 0F3F  
                             ?_TMR2_Initialize 0070                        __end_of_TMR6_Initialize 06BE  
                               ??_S3_Interrupt 0077                             __end_of_IOCBF0_ISR 0762  
                           __end_of_IOCBF3_ISR 0753                          __end_of_TMR6_CallBack 0798  
                              _CMP2_Initialize 07BE                             _spi1_configuration 0800  
                               _OPTION_REGbits 0095                                _TMR6_WriteTimer 0F6A  
                        TMR0_ISR@CountCallBack 004B                          TMR6_ISR@CountCallBack 0047  
                ?_TMR4_DefaultInterruptHandler 0070                                 ??_S4_Interrupt 0077  
              ??_EUSART_SetOverrunErrorHandler 00B2         __end_of_IOCBF3_DefaultInterruptHandler 0F41  
               _IOCBF3_DefaultInterruptHandler 0F40                                     ??_CMP1_ISR 0077  
                                   ??_CMP2_ISR 0077                        __end_of_TMR4_StartTimer 0F51  
                    __end_of_SYSTEM_Initialize 0387                                     __pbssBANK0 0039  
                                   __pbssBANK1 00A0                           __end_of_EUSART_Write 07F7  
                               _SPI1_WriteByte 0F7A                          _TMR4_InterruptHandler 0022  
                   ??_CMP1_SetInterruptHandler 00B2                               ??_FVR_Initialize 00B0  
                                   __pmaintext 0180                  i1PWM3_LoadDutyValue@dutyValue 0070  
                  CCP4_Interrupt@capturedValue 0070               __end_of_TMR0_SetInterruptHandler 0FF7  
                                      ?___wmul 0070                                     ??_TMR0_ISR 007E  
             __end_of_TMR6_SetInterruptHandler 0800                                     ??_TMR4_ISR 0077  
                                  sendMatrix@i 00B4                                     ??_TMR6_ISR 0077  
                                   __pintentry 0004                        __end_of_TMR4_WriteTimer 0F6A  
                                      _DACCON0 0118                                        _DACCON1 0119  
                                      _CM1CON0 0111                                        _CM1CON1 0112  
                                      _CM2CON0 0113                                        _CM2CON1 0114  
                                      _CCP3CON 0313                                        _CCP4CON 031A  
                                      _BAUDCON 019F                               ?_TMR4_Initialize 0070  
                                      _APFCON0 011D                                        _APFCON1 011E  
                                 ?i1_txMAX7219 0071                               ?_DATAEE_ReadByte 0070  
                                      _OSCTUNE 0098                                        _SSP1ADD 0212  
                                      _SSP1BUF 0211                        __end_of_CMP1_Initialize 07D6  
                     ??_EUSART_SetErrorHandler 00B2                                   ?i1_setMatrix 0071  
                                 ?i1_sendMotor 0070                        __end_of_TMR6_StartTimer 0F45  
                       __end_of_SPI1_WriteByte 0F80                   __end_ofi1_PWM3_LoadDutyValue 066A  
                         _ADC_InterruptHandler 0049                        __end_of_CMP2_Initialize 07CA  
                                      ___lldiv 01F6                                        ___lwdiv 0317  
                      __end_of_TMR6_WriteTimer 0F6F                       _CMP2_SetInterruptHandler 0FA6  
                                      _data_tx 0041                               ?_TMR6_Initialize 0070  
                         __end_of_S1_Interrupt 0607                                        __ptext1 03EA  
                                      __ptext2 0250                                        __ptext3 0545  
                                      __ptext4 0F4E                                        __ptext5 0471  
                                      __ptext6 0448                                        __ptext7 077E  
                                      __ptext8 0561                                        __ptext9 0294  
                            __end_of_txMAX7219 0545                                      _T1CONbits 0018  
                        _OSCILLATOR_Initialize 0F86                                      _T2CONbits 001C  
                                    _CMOUTbits 0115                                      _T4CONbits 0417  
                     ??_PIN_MANAGER_Initialize 00B2                                      _IOCBFbits 0396  
                    ?_TMR4_SetInterruptHandler 00B0                                      _IOCBNbits 0395  
                                    _T6CONbits 041E                                      _IOCBPbits 0394  
                         __end_of_S2_Interrupt 0599                                        clrloop0 0F81  
                             ?_TMR4_StartTimer 0070                           end_of_initialization 0088  
                                   _sendMatrix 0561                              __end_of_setMatrix 0471  
                            __end_of_sendMotor 0294                                   i1setMatrix@i 0075  
               ??_TMR4_DefaultInterruptHandler 0070                               ??i1_updateMatrix 0076  
        __end_of_EUSART_SetOverrunErrorHandler 0FD3                  _EUSART_SetOverrunErrorHandler 0FCA  
                              ?_SPI1_WriteByte 0070                           __end_of_S3_Interrupt 05D1  
                            _EUSART_Initialize 04C0                                ___lldiv@divisor 0070  
                              ___lldiv@counter 007D                             ?_EUSART_Initialize 0070  
                         __end_of_S4_Interrupt 05B5                                      _RCSTAbits 019D  
                           _EUSART_is_rx_ready 0F6F                             _EUSART_is_tx_ready 0735  
                                   _motorState 0051                               ?_TMR4_WriteTimer 0070  
                        _CMP1_InterruptHandler 0020                            ??_EUSART_Initialize 00B2  
                             ??_WDT_Initialize 00B0                       _TMR0_SetInterruptHandler 0FEE  
                                    _PORTAbits 000C                            ?_EUSART_is_rx_ready 0070  
                     _TMR6_SetInterruptHandler 07F7                                 _TMR0_Interrupt 008C  
                          ?_EUSART_is_tx_ready 0070                                 txMAX7219@addr0 00B2  
                                    _TRISBbits 008D                   ??_IOCBF0_SetInterruptHandler 00B2  
                 ??_IOCBF3_SetInterruptHandler 00B2                               ?_CMP1_Initialize 0070  
                             ?_TMR6_StartTimer 0070                                 _CCP4_Interrupt 0387  
                    __end_of_EUSART_Initialize 04E5                           ??_EUSART_is_rx_ready 00B0  
                              _SPI1_Initialize 07E2                           ??_EUSART_is_tx_ready 0070  
                                    _TXSTAbits 019E              CCP4_DefaultCallBack@capturedValue 0070  
                                ?_updateMatrix 0070                     __end_of_PWM3_LoadDutyValue 0561  
                                i1_updateMotor 0419                              ?_CCP4_SetCallBack 00B0  
                             ?_CMP2_Initialize 0070                             ??_CCP4_SetCallBack 00B2  
                   _EUSART_DefaultErrorHandler 0000                               ?_TMR6_WriteTimer 0070  
                               __end_of___wmul 0528                         __end_of_TMR0_Interrupt 0180  
                                 _EUSART_Write 07ED                                 _ADC_Initialize 0F8D  
                       ?_OSCILLATOR_Initialize 0070                           i1_PWM3_LoadDutyValue 0653  
                     ?_TMR1_HasOverflowOccured 0070                                 _TMR4_Interrupt 0716  
                          start_initialization 006C                                  ??_initMAX7219 00B3  
                       __end_of_CCP4_Interrupt 03BA                                  ??_EUSART_Read 00B0  
                       _EUSART_is_tx_ready$323 0070                                    ?_sendMatrix 0070  
                      i1updateMatrix@direction 0076                               main@receivedData 00B7  
                               ??_updateMatrix 00B6                            DATAEE_ReadByte@bAdd 00B0  
                               _TMR6_Interrupt 0706                 ?_EUSART_SetOverrunErrorHandler 00B0  
                               ?i1_updateMotor 0070                                 _TMR4_StopTimer 0F48  
                   _EUSART_FramingErrorHandler 0036                                       ??___wmul 0074  
                       _EUSART_SetErrorHandler 0FB8                         __end_of_ADC_Initialize 0F95  
                                  __pdataBANK0 0064                                ?_TMR0_Interrupt 0070  
                       __end_of_TMR4_Interrupt 0726                          ?i1_PWM3_LoadDutyValue 0070  
                             i1_SPI1_WriteByte 0F60                          CCP4_CaptureISR@module 0073  
                        TMR4_ISR@CountCallBack 0045                                      ___latbits 0001  
                                __pcstackBANK0 0052                                  __pcstackBANK1 00B0  
                              ?_CCP4_Interrupt 0070                                 _TMR6_StopTimer 0F4B  
                      __end_of_SPI1_Initialize 07ED                          _CMP2_InterruptHandler 0026  
                       __end_of_TMR6_Interrupt 0716                            __end_of_initMAX7219 02D6  
                                 _currentFloor 0066                                   _S1_Interrupt 05EC  
                          __end_of_EUSART_Read 0735                          _TMR0_InterruptHandler 0028  
                        _TMR6_InterruptHandler 0024                                      __pnvBANK0 0020  
                       __end_of_TMR4_StopTimer 0F4B                        _IOCBF3_InterruptHandler 002E  
                   ??_CMP2_SetInterruptHandler 00B2                               ___lwdiv@dividend 0072  
                       _PIN_MANAGER_Initialize 03BA                                   _S2_Interrupt 057D  
             __end_of_TMR4_SetInterruptHandler 1000                              ??_CCP4_CaptureISR 0073  
                                     ?___lldiv 0070                                       ?___lwdiv 0070  
                                   setMatrix@i 00B5                __end_of_TMR1_HasOverflowOccured 0F58  
                              ?_ADC_Initialize 0070                                ?_TMR4_Interrupt 0070  
                 ??_INTERRUPT_InterruptManager 007E                                   _S3_Interrupt 05B5  
                                    _floorFlag 004F                      ?_CMP1_SetInterruptHandler 00B0  
                            i1_DATAEE_ReadByte 07D6                         __end_of_TMR6_StopTimer 0F4E  
           __end_of_IOCBF0_SetInterruptHandler 0FDC                     _IOCBF0_SetInterruptHandler 0FD3  
           __end_of_IOCBF3_SetInterruptHandler 0FE5                     _IOCBF3_SetInterruptHandler 0FDC  
                             ??_SPI1_WriteByte 00B0                                      _txMAX7219 0528  
                           ?i1_DATAEE_ReadByte 0070                                       _CMP1_ISR 0770  
                                     _CMP2_ISR 0762                                   _S4_Interrupt 0599  
                             ___lwdiv@quotient 0075                                  _TMR0_CallBack 07A5  
                                 setMatrix@val 00B1                                   setMatrix@pos 00B3  
                              ?_TMR6_Interrupt 0070                              ??_TMR0_Initialize 00B2  
                        updateMatrix@direction 00B6                            ??i1_DATAEE_ReadByte 0070  
                               ___wmul@product 0074                                       _LATAbits 010C  
       EUSART_SetErrorHandler@interruptHandler 00B0                                       _LATBbits 010D  
                                    _setMatrix 0448                                      _sendMotor 0250  
                                    clear_ram0 0F80                   __end_of_CCP4_DefaultCallBack 0F3F  
                              ??i1_updateMotor 0076                                       _PIE2bits 0092  
                                     _PIE3bits 0093                              _eusartRxLastError 0050  
                              ?_TMR4_StopTimer 0070                     ??_TMR0_SetInterruptHandler 00B2  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 00B2  
                                     _PIR2bits 0012                                       _PIR3bits 0013  
                   ??_TMR6_SetInterruptHandler 00B2                           i1SPI1_WriteByte@byte 0070  
                                     _SSP1CON1 0215                                       _SSP1CON2 0216  
                                     _TMR0_ISR 063B              _EUSART_DefaultOverrunErrorHandler 0000  
                                     _TMR4_ISR 0680                                  _TMR4_CallBack 0798  
                                     _TMR6_ISR 066A                                       _SSP1STAT 0214  
                            ??_PIN_MANAGER_IOC 0077                                  ?i1_sendMatrix 0070  
                       ??i1_PWM3_LoadDutyValue 0072                                  txMAX7219@dat0 00B1  
                            ??_PWM3_Initialize 00B0                              ??_TMR1_Initialize 00B0  
                                   _ADCON0bits 009D                      __end_ofi1_DATAEE_ReadByte 07E2  
                            ___wmul@multiplier 0070                                 _DAC_Initialize 0F74  
                                _TMR6_CallBack 078B                              ??_CCP4_Initialize 00B2  
                         __end_of_updateMatrix 0499                                ?_TMR6_StopTimer 0070  
                                  _initMAX7219 0294                                     ?_txMAX7219 00B1  
                               ?_TMR0_CallBack 0070                                    _EUSART_Read 0726  
                             ?_SPI1_Initialize 0070                              i1_TMR4_StartTimer 0F45  
                               i1setMatrix@val 0071                                 i1setMatrix@pos 0073  
                            ??_TMR2_Initialize 00B0                             ?i1_TMR4_StartTimer 0070  
                                   ?_setMatrix 00B1                                     ?_sendMotor 0070  
                                   _EECON1bits 0195                               i1txMAX7219@addr0 0072  
                                ??_updateMotor 00B6                              _ADC_GetConversion 05D1  
                               ?_TMR4_CallBack 0070                            ??i1_TMR4_StartTimer 0070  
                               ??i1_sendMatrix 0073                        ??_OSCILLATOR_Initialize 00B0  
                          _EUSART_ErrorHandler 0032                             ?_ADC_GetConversion 0070  
                       __end_of_DAC_Initialize 0F7A                       _TMR4_SetInterruptHandler 0FF7  
                           _PWM3_LoadDutyValue 0545                                 ?_TMR6_CallBack 0070  
                          ??_ADC_GetConversion 0072                                 setMatrix@eeAdd 00B4  
                              ___lwdiv@divisor 0070                                ___lwdiv@counter 0077  
                                     __ptext10 0528                                       __ptext11 0F7A  
                                     __ptext20 0696                                       __ptext12 0353  
                                     __ptext21 0FEE                                       __ptext13 0F5C  
                                   _T1GCONbits 0019                                       __ptext30 0FCA  
                                     __ptext22 07E2                                       __ptext14 06AB  
                                     __ptext31 0FC1                                       __ptext23 0FE5  
                                     __ptext15 07F7                                       __ptext40 0726  
                                     __ptext32 0FB8                                       __ptext24 03BA  
                                     __ptext16 06BE                                       __ptext41 0FA6  
                                     __ptext33 0F74                                       __ptext25 0FDC  
                                     __ptext17 0FF7                                       __ptext50 0680  
                                     __ptext42 0F9D                                       __ptext34 07BE  
                                     __ptext26 0FD3                                       __ptext18 0F95  
                                     __ptext51 0798                                       __ptext35 07CA  
                                     __ptext27 0F86                                       __ptext19 07B2  
                                     __ptext60 0509                                       __ptext52 0002  
                                     __ptext44 066A                                       __ptext36 06D1  
                                     __ptext28 0F58                                       __ptext61 0317  
                                     __ptext53 0716                                       __ptext45 078B  
                                     __ptext37 0FAF                                       __ptext29 04C0  
                                     __ptext70 0753                                       __ptext62 01F6  
                                     __ptext54 0F65                                       __ptext46 0003  
                                     __ptext38 0F8D                                       __ptext71 0F3F  
                                     __ptext63 0735                                       __ptext55 0F48  
                                     __ptext47 0706                                       __ptext39 0F6F  
                                     __ptext80 0F45                                       __ptext72 05EC  
                                     __ptext64 07ED                                       __ptext56 063B  
                                     __ptext48 0F6A                                       __ptext81 04E5  
                                     __ptext73 0762                                       __ptext65 05D1  
                                     __ptext57 07A5                                       __ptext49 0F4B  
                                     __ptext90 0387                                       __ptext82 0499  
                                     __ptext74 0599                                       __ptext66 06F5  
                                     __ptext58 0F41                            ?_PWM3_LoadDutyValue 00B0  
                                     __ptext91 0F54                                       __ptext83 07D6  
                                     __ptext75 0770                                       __ptext67 0744  
                                     __ptext59 008C                                       __ptext84 0607  
                                     __ptext76 05B5                                       __ptext68 0F40  
                                     __ptext85 0621                                       __ptext77 0419  
                                     __ptext69 057D                                       __ptext86 0F60  
                                     __ptext78 02D6                                       __ptext87 0F42  
                                     __ptext79 0653                                       __ptext88 06E3  
                                     __ptext89 0F3E                                   _SSP1CON1bits 0215  
                    __end_ofi1_TMR4_StartTimer 0F48                                   ??_sendMatrix 00B3  
                                   _IOCBF0_ISR 0753                                     _IOCBF3_ISR 0744  
                      TMR6_WriteTimer@timerVal 0070                              ??_TMR4_Initialize 00B2  
                     __end_ofi1_SPI1_WriteByte 0F65           __end_of_TMR0_DefaultInterruptHandler 0F42  
                 _TMR0_DefaultInterruptHandler 0F41                              ??_DATAEE_ReadByte 00B0  
                    __end_of_ADC_GetConversion 05EC                                  _directionFlag 004E  
                      ?_EUSART_SetErrorHandler 00B0                               ??_TMR0_Interrupt 0052  
EUSART_SetOverrunErrorHandler@interruptHandler 00B0                           ??_PWM3_LoadDutyValue 00B2  
                                     _velocity 00A0                                       int$flags 007E  
                                     _position 0064             __end_of_INTERRUPT_InterruptManager 006A  
                   _INTERRUPT_InterruptManager 0004                                  i1sendMatrix@i 0074  
        __end_of_EUSART_SetFramingErrorHandler 0FCA                  _EUSART_SetFramingErrorHandler 0FC1  
                              ?_DAC_Initialize 0070                            __end_of_updateMotor 0419  
                                ??i1_txMAX7219 0072                             __end_of_sendMatrix 057D  
                             ??_CCP4_Interrupt 0072                                     _INTCONbits 000B  
                         _CCP4_DefaultCallBack 0F3E                                ??_TMR0_CallBack 007E  
                              i1txMAX7219@dat0 0071                                     _FVRCONbits 0117  
                                  ??_txMAX7219 00B2                                  ??i1_setMatrix 0072  
                                ??i1_sendMotor 0074           __end_of_TMR6_DefaultInterruptHandler 0004  
                 _TMR6_DefaultInterruptHandler 0003                                       intlevel1 0000  
                                  _targetFloor 0065                                _CCP4_CaptureISR 06E3  
                             ___lldiv@dividend 0074                        ?_PIN_MANAGER_Initialize 0070  
                            ??_TMR6_Initialize 00B2                 __end_of_EUSART_SetErrorHandler 0FC1  
                                  ??_setMatrix 00B2                                    ??_sendMotor 00B4  
                             ??_ADC_Initialize 00B0                                ??_TMR4_CallBack 0077  
                ?_TMR0_DefaultInterruptHandler 0070               __end_of_CMP1_SetInterruptHandler 0FA6  
                             ??_TMR4_Interrupt 0077  EUSART_SetFramingErrorHandler@interruptHandler 00B0  
                  PWM3_LoadDutyValue@dutyValue 00B0                              ??_TMR4_StartTimer 00B0  
                              ??_TMR6_CallBack 0077                                  __pstringtext1 0800  
                               _FVR_Initialize 0F58                                     _OPTION_REG 0095  
                        ?_CCP4_DefaultCallBack 0070                               ___lldiv@quotient 0079  
                                 _velocity_idx 004D                                _TMR0_Initialize 0696  
                  ?_IOCBF0_SetInterruptHandler 00B0                    ?_IOCBF3_SetInterruptHandler 00B0  
                             ??_TMR6_Interrupt 0077                            __end_ofi1_txMAX7219 063B  
                         __end_ofi1_sendMatrix 0621                                    ?_IOCBF0_ISR 0070  
                           EUSART_Write@txData 0070                                    ?_IOCBF3_ISR 0070  
               __end_of_PIN_MANAGER_Initialize 03EA                               ??_TMR4_StopTimer 0070  
                ?_TMR6_DefaultInterruptHandler 0070                              ??_TMR4_WriteTimer 0070  
             ??_IOCBF0_DefaultInterruptHandler 0070                ?_IOCBF0_DefaultInterruptHandler 0070  
                              _PIN_MANAGER_IOC 06F5                            __end_ofi1_setMatrix 04C0  
                          __end_ofi1_sendMotor 0317                                   _updateMatrix 0471  
                              _TMR1_Initialize 07B2                                _PWM3_Initialize 0FE5  
                   __end_of_spi1_configuration 0804                                    _updateMotor 03EA  
