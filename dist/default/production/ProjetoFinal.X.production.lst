

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Oct 01 20:26:49 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	eeprom_data,global,class=EEDATA,space=3,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2
    57                           	psect	intentry,global,class=CODE,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,delta=2
    59                           	psect	text42,local,class=CODE,merge=1,delta=2
    60                           	psect	text43,local,class=CODE,merge=1,delta=2
    61                           	psect	text44,local,class=CODE,merge=1,delta=2
    62                           	psect	text45,local,class=CODE,merge=1,delta=2
    63                           	psect	text46,local,class=CODE,merge=1,delta=2
    64                           	psect	text47,local,class=CODE,merge=1,delta=2
    65                           	psect	text48,local,class=CODE,merge=1,delta=2
    66                           	psect	text49,local,class=CODE,merge=1,delta=2
    67                           	psect	text50,local,class=CODE,merge=1,delta=2
    68                           	psect	text51,local,class=CODE,merge=1,delta=2
    69                           	psect	text52,local,class=CODE,merge=1,delta=2
    70                           	psect	text53,local,class=CODE,merge=1,delta=2
    71                           	psect	text54,local,class=CODE,merge=1,delta=2
    72                           	psect	text55,local,class=CODE,merge=1,delta=2
    73                           	psect	text56,local,class=CODE,merge=1,delta=2,group=1
    74                           	psect	text57,local,class=CODE,merge=1,delta=2
    75                           	psect	text58,local,class=CODE,merge=1,delta=2
    76                           	psect	text59,local,class=CODE,merge=1,delta=2
    77                           	psect	text60,local,class=CODE,merge=1,delta=2
    78                           	psect	text61,local,class=CODE,merge=1,delta=2
    79                           	psect	text62,local,class=CODE,merge=1,delta=2
    80                           	psect	text63,local,class=CODE,merge=1,delta=2
    81                           	psect	text64,local,class=CODE,merge=1,delta=2
    82                           	psect	text65,local,class=CODE,merge=1,delta=2
    83                           	psect	text66,local,class=CODE,merge=1,delta=2
    84                           	psect	text67,local,class=CODE,merge=1,delta=2
    85                           	psect	text68,local,class=CODE,merge=1,delta=2
    86                           	psect	text69,local,class=CODE,merge=1,delta=2
    87                           	psect	text70,local,class=CODE,merge=1,delta=2
    88                           	psect	text71,local,class=CODE,merge=1,delta=2
    89                           	psect	text72,local,class=CODE,merge=1,delta=2
    90                           	psect	text73,local,class=CODE,merge=1,delta=2
    91                           	psect	text74,local,class=CODE,merge=1,delta=2
    92                           	psect	text75,local,class=CODE,merge=1,delta=2
    93                           	psect	text76,local,class=CODE,merge=1,delta=2
    94                           	psect	text77,local,class=CODE,merge=1,delta=2
    95                           	psect	text78,local,class=CODE,merge=1,delta=2
    96                           	psect	text79,local,class=CODE,merge=1,delta=2
    97                           	psect	text80,local,class=CODE,merge=1,delta=2,group=1
    98                           	psect	text81,local,class=CODE,merge=1,delta=2,group=1
    99                           	psect	text82,local,class=CODE,merge=1,delta=2,group=1
   100                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
   101                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   102                           	dabs	1,0x7E,2
   103     0000                     
   104                           ; Version 2.40
   105                           ; Generated 17/11/2021 GMT
   106                           ; 
   107                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   108                           ; All rights reserved.
   109                           ; 
   110                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   111                           ; 
   112                           ; Redistribution and use in source and binary forms, with or without modification, are
   113                           ; permitted provided that the following conditions are met:
   114                           ; 
   115                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   116                           ;        conditions and the following disclaimer.
   117                           ; 
   118                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   119                           ;        of conditions and the following disclaimer in the documentation and/or other
   120                           ;        materials provided with the distribution. Publication is not required when
   121                           ;        this file is used in an embedded application.
   122                           ; 
   123                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   124                           ;        software without specific prior written permission.
   125                           ; 
   126                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   127                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   128                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   129                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   130                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   131                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   132                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   133                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   134                           ; 
   135                           ; 
   136                           ; Code-generator required, PIC16F1827 Definitions
   137                           ; 
   138                           ; SFR Addresses
   139     0000                     	;# 
   140     0001                     	;# 
   141     0002                     	;# 
   142     0003                     	;# 
   143     0004                     	;# 
   144     0005                     	;# 
   145     0006                     	;# 
   146     0007                     	;# 
   147     0008                     	;# 
   148     0009                     	;# 
   149     000A                     	;# 
   150     000B                     	;# 
   151     000C                     	;# 
   152     000D                     	;# 
   153     0011                     	;# 
   154     0012                     	;# 
   155     0013                     	;# 
   156     0014                     	;# 
   157     0015                     	;# 
   158     0016                     	;# 
   159     0016                     	;# 
   160     0017                     	;# 
   161     0018                     	;# 
   162     0019                     	;# 
   163     001A                     	;# 
   164     001B                     	;# 
   165     001C                     	;# 
   166     001E                     	;# 
   167     001F                     	;# 
   168     008C                     	;# 
   169     008D                     	;# 
   170     0091                     	;# 
   171     0092                     	;# 
   172     0093                     	;# 
   173     0094                     	;# 
   174     0095                     	;# 
   175     0096                     	;# 
   176     0097                     	;# 
   177     0098                     	;# 
   178     0099                     	;# 
   179     009A                     	;# 
   180     009B                     	;# 
   181     009B                     	;# 
   182     009C                     	;# 
   183     009D                     	;# 
   184     009E                     	;# 
   185     010C                     	;# 
   186     010D                     	;# 
   187     0111                     	;# 
   188     0112                     	;# 
   189     0113                     	;# 
   190     0114                     	;# 
   191     0115                     	;# 
   192     0116                     	;# 
   193     0117                     	;# 
   194     0118                     	;# 
   195     0119                     	;# 
   196     011A                     	;# 
   197     011B                     	;# 
   198     011D                     	;# 
   199     011E                     	;# 
   200     018C                     	;# 
   201     018D                     	;# 
   202     0191                     	;# 
   203     0191                     	;# 
   204     0192                     	;# 
   205     0193                     	;# 
   206     0193                     	;# 
   207     0193                     	;# 
   208     0194                     	;# 
   209     0195                     	;# 
   210     0196                     	;# 
   211     0199                     	;# 
   212     019A                     	;# 
   213     019B                     	;# 
   214     019B                     	;# 
   215     019B                     	;# 
   216     019B                     	;# 
   217     019C                     	;# 
   218     019C                     	;# 
   219     019D                     	;# 
   220     019E                     	;# 
   221     019F                     	;# 
   222     020C                     	;# 
   223     020D                     	;# 
   224     0211                     	;# 
   225     0211                     	;# 
   226     0212                     	;# 
   227     0212                     	;# 
   228     0213                     	;# 
   229     0213                     	;# 
   230     0214                     	;# 
   231     0214                     	;# 
   232     0215                     	;# 
   233     0215                     	;# 
   234     0215                     	;# 
   235     0216                     	;# 
   236     0216                     	;# 
   237     0217                     	;# 
   238     0217                     	;# 
   239     0219                     	;# 
   240     021A                     	;# 
   241     021B                     	;# 
   242     021C                     	;# 
   243     021D                     	;# 
   244     021E                     	;# 
   245     021F                     	;# 
   246     0291                     	;# 
   247     0291                     	;# 
   248     0292                     	;# 
   249     0293                     	;# 
   250     0294                     	;# 
   251     0295                     	;# 
   252     0295                     	;# 
   253     0296                     	;# 
   254     0298                     	;# 
   255     0298                     	;# 
   256     0299                     	;# 
   257     029A                     	;# 
   258     029B                     	;# 
   259     029C                     	;# 
   260     029C                     	;# 
   261     029D                     	;# 
   262     029E                     	;# 
   263     029E                     	;# 
   264     0311                     	;# 
   265     0311                     	;# 
   266     0312                     	;# 
   267     0313                     	;# 
   268     0318                     	;# 
   269     0318                     	;# 
   270     0319                     	;# 
   271     031A                     	;# 
   272     0394                     	;# 
   273     0395                     	;# 
   274     0396                     	;# 
   275     039A                     	;# 
   276     039C                     	;# 
   277     039D                     	;# 
   278     039E                     	;# 
   279     039F                     	;# 
   280     0415                     	;# 
   281     0416                     	;# 
   282     0417                     	;# 
   283     041C                     	;# 
   284     041D                     	;# 
   285     041E                     	;# 
   286     0FE4                     	;# 
   287     0FE5                     	;# 
   288     0FE6                     	;# 
   289     0FE7                     	;# 
   290     0FE8                     	;# 
   291     0FE9                     	;# 
   292     0FEA                     	;# 
   293     0FEB                     	;# 
   294     0FED                     	;# 
   295     0FEE                     	;# 
   296     0FEF                     	;# 
   297     0000                     	;# 
   298     0001                     	;# 
   299     0002                     	;# 
   300     0003                     	;# 
   301     0004                     	;# 
   302     0005                     	;# 
   303     0006                     	;# 
   304     0007                     	;# 
   305     0008                     	;# 
   306     0009                     	;# 
   307     000A                     	;# 
   308     000B                     	;# 
   309     000C                     	;# 
   310     000D                     	;# 
   311     0011                     	;# 
   312     0012                     	;# 
   313     0013                     	;# 
   314     0014                     	;# 
   315     0015                     	;# 
   316     0016                     	;# 
   317     0016                     	;# 
   318     0017                     	;# 
   319     0018                     	;# 
   320     0019                     	;# 
   321     001A                     	;# 
   322     001B                     	;# 
   323     001C                     	;# 
   324     001E                     	;# 
   325     001F                     	;# 
   326     008C                     	;# 
   327     008D                     	;# 
   328     0091                     	;# 
   329     0092                     	;# 
   330     0093                     	;# 
   331     0094                     	;# 
   332     0095                     	;# 
   333     0096                     	;# 
   334     0097                     	;# 
   335     0098                     	;# 
   336     0099                     	;# 
   337     009A                     	;# 
   338     009B                     	;# 
   339     009B                     	;# 
   340     009C                     	;# 
   341     009D                     	;# 
   342     009E                     	;# 
   343     010C                     	;# 
   344     010D                     	;# 
   345     0111                     	;# 
   346     0112                     	;# 
   347     0113                     	;# 
   348     0114                     	;# 
   349     0115                     	;# 
   350     0116                     	;# 
   351     0117                     	;# 
   352     0118                     	;# 
   353     0119                     	;# 
   354     011A                     	;# 
   355     011B                     	;# 
   356     011D                     	;# 
   357     011E                     	;# 
   358     018C                     	;# 
   359     018D                     	;# 
   360     0191                     	;# 
   361     0191                     	;# 
   362     0192                     	;# 
   363     0193                     	;# 
   364     0193                     	;# 
   365     0193                     	;# 
   366     0194                     	;# 
   367     0195                     	;# 
   368     0196                     	;# 
   369     0199                     	;# 
   370     019A                     	;# 
   371     019B                     	;# 
   372     019B                     	;# 
   373     019B                     	;# 
   374     019B                     	;# 
   375     019C                     	;# 
   376     019C                     	;# 
   377     019D                     	;# 
   378     019E                     	;# 
   379     019F                     	;# 
   380     020C                     	;# 
   381     020D                     	;# 
   382     0211                     	;# 
   383     0211                     	;# 
   384     0212                     	;# 
   385     0212                     	;# 
   386     0213                     	;# 
   387     0213                     	;# 
   388     0214                     	;# 
   389     0214                     	;# 
   390     0215                     	;# 
   391     0215                     	;# 
   392     0215                     	;# 
   393     0216                     	;# 
   394     0216                     	;# 
   395     0217                     	;# 
   396     0217                     	;# 
   397     0219                     	;# 
   398     021A                     	;# 
   399     021B                     	;# 
   400     021C                     	;# 
   401     021D                     	;# 
   402     021E                     	;# 
   403     021F                     	;# 
   404     0291                     	;# 
   405     0291                     	;# 
   406     0292                     	;# 
   407     0293                     	;# 
   408     0294                     	;# 
   409     0295                     	;# 
   410     0295                     	;# 
   411     0296                     	;# 
   412     0298                     	;# 
   413     0298                     	;# 
   414     0299                     	;# 
   415     029A                     	;# 
   416     029B                     	;# 
   417     029C                     	;# 
   418     029C                     	;# 
   419     029D                     	;# 
   420     029E                     	;# 
   421     029E                     	;# 
   422     0311                     	;# 
   423     0311                     	;# 
   424     0312                     	;# 
   425     0313                     	;# 
   426     0318                     	;# 
   427     0318                     	;# 
   428     0319                     	;# 
   429     031A                     	;# 
   430     0394                     	;# 
   431     0395                     	;# 
   432     0396                     	;# 
   433     039A                     	;# 
   434     039C                     	;# 
   435     039D                     	;# 
   436     039E                     	;# 
   437     039F                     	;# 
   438     0415                     	;# 
   439     0416                     	;# 
   440     0417                     	;# 
   441     041C                     	;# 
   442     041D                     	;# 
   443     041E                     	;# 
   444     0FE4                     	;# 
   445     0FE5                     	;# 
   446     0FE6                     	;# 
   447     0FE7                     	;# 
   448     0FE8                     	;# 
   449     0FE9                     	;# 
   450     0FEA                     	;# 
   451     0FEB                     	;# 
   452     0FED                     	;# 
   453     0FEE                     	;# 
   454     0FEF                     	;# 
   455     0000                     	;# 
   456     0001                     	;# 
   457     0002                     	;# 
   458     0003                     	;# 
   459     0004                     	;# 
   460     0005                     	;# 
   461     0006                     	;# 
   462     0007                     	;# 
   463     0008                     	;# 
   464     0009                     	;# 
   465     000A                     	;# 
   466     000B                     	;# 
   467     000C                     	;# 
   468     000D                     	;# 
   469     0011                     	;# 
   470     0012                     	;# 
   471     0013                     	;# 
   472     0014                     	;# 
   473     0015                     	;# 
   474     0016                     	;# 
   475     0016                     	;# 
   476     0017                     	;# 
   477     0018                     	;# 
   478     0019                     	;# 
   479     001A                     	;# 
   480     001B                     	;# 
   481     001C                     	;# 
   482     001E                     	;# 
   483     001F                     	;# 
   484     008C                     	;# 
   485     008D                     	;# 
   486     0091                     	;# 
   487     0092                     	;# 
   488     0093                     	;# 
   489     0094                     	;# 
   490     0095                     	;# 
   491     0096                     	;# 
   492     0097                     	;# 
   493     0098                     	;# 
   494     0099                     	;# 
   495     009A                     	;# 
   496     009B                     	;# 
   497     009B                     	;# 
   498     009C                     	;# 
   499     009D                     	;# 
   500     009E                     	;# 
   501     010C                     	;# 
   502     010D                     	;# 
   503     0111                     	;# 
   504     0112                     	;# 
   505     0113                     	;# 
   506     0114                     	;# 
   507     0115                     	;# 
   508     0116                     	;# 
   509     0117                     	;# 
   510     0118                     	;# 
   511     0119                     	;# 
   512     011A                     	;# 
   513     011B                     	;# 
   514     011D                     	;# 
   515     011E                     	;# 
   516     018C                     	;# 
   517     018D                     	;# 
   518     0191                     	;# 
   519     0191                     	;# 
   520     0192                     	;# 
   521     0193                     	;# 
   522     0193                     	;# 
   523     0193                     	;# 
   524     0194                     	;# 
   525     0195                     	;# 
   526     0196                     	;# 
   527     0199                     	;# 
   528     019A                     	;# 
   529     019B                     	;# 
   530     019B                     	;# 
   531     019B                     	;# 
   532     019B                     	;# 
   533     019C                     	;# 
   534     019C                     	;# 
   535     019D                     	;# 
   536     019E                     	;# 
   537     019F                     	;# 
   538     020C                     	;# 
   539     020D                     	;# 
   540     0211                     	;# 
   541     0211                     	;# 
   542     0212                     	;# 
   543     0212                     	;# 
   544     0213                     	;# 
   545     0213                     	;# 
   546     0214                     	;# 
   547     0214                     	;# 
   548     0215                     	;# 
   549     0215                     	;# 
   550     0215                     	;# 
   551     0216                     	;# 
   552     0216                     	;# 
   553     0217                     	;# 
   554     0217                     	;# 
   555     0219                     	;# 
   556     021A                     	;# 
   557     021B                     	;# 
   558     021C                     	;# 
   559     021D                     	;# 
   560     021E                     	;# 
   561     021F                     	;# 
   562     0291                     	;# 
   563     0291                     	;# 
   564     0292                     	;# 
   565     0293                     	;# 
   566     0294                     	;# 
   567     0295                     	;# 
   568     0295                     	;# 
   569     0296                     	;# 
   570     0298                     	;# 
   571     0298                     	;# 
   572     0299                     	;# 
   573     029A                     	;# 
   574     029B                     	;# 
   575     029C                     	;# 
   576     029C                     	;# 
   577     029D                     	;# 
   578     029E                     	;# 
   579     029E                     	;# 
   580     0311                     	;# 
   581     0311                     	;# 
   582     0312                     	;# 
   583     0313                     	;# 
   584     0318                     	;# 
   585     0318                     	;# 
   586     0319                     	;# 
   587     031A                     	;# 
   588     0394                     	;# 
   589     0395                     	;# 
   590     0396                     	;# 
   591     039A                     	;# 
   592     039C                     	;# 
   593     039D                     	;# 
   594     039E                     	;# 
   595     039F                     	;# 
   596     0415                     	;# 
   597     0416                     	;# 
   598     0417                     	;# 
   599     041C                     	;# 
   600     041D                     	;# 
   601     041E                     	;# 
   602     0FE4                     	;# 
   603     0FE5                     	;# 
   604     0FE6                     	;# 
   605     0FE7                     	;# 
   606     0FE8                     	;# 
   607     0FE9                     	;# 
   608     0FEA                     	;# 
   609     0FEB                     	;# 
   610     0FED                     	;# 
   611     0FEE                     	;# 
   612     0FEF                     	;# 
   613     0000                     	;# 
   614     0001                     	;# 
   615     0002                     	;# 
   616     0003                     	;# 
   617     0004                     	;# 
   618     0005                     	;# 
   619     0006                     	;# 
   620     0007                     	;# 
   621     0008                     	;# 
   622     0009                     	;# 
   623     000A                     	;# 
   624     000B                     	;# 
   625     000C                     	;# 
   626     000D                     	;# 
   627     0011                     	;# 
   628     0012                     	;# 
   629     0013                     	;# 
   630     0014                     	;# 
   631     0015                     	;# 
   632     0016                     	;# 
   633     0016                     	;# 
   634     0017                     	;# 
   635     0018                     	;# 
   636     0019                     	;# 
   637     001A                     	;# 
   638     001B                     	;# 
   639     001C                     	;# 
   640     001E                     	;# 
   641     001F                     	;# 
   642     008C                     	;# 
   643     008D                     	;# 
   644     0091                     	;# 
   645     0092                     	;# 
   646     0093                     	;# 
   647     0094                     	;# 
   648     0095                     	;# 
   649     0096                     	;# 
   650     0097                     	;# 
   651     0098                     	;# 
   652     0099                     	;# 
   653     009A                     	;# 
   654     009B                     	;# 
   655     009B                     	;# 
   656     009C                     	;# 
   657     009D                     	;# 
   658     009E                     	;# 
   659     010C                     	;# 
   660     010D                     	;# 
   661     0111                     	;# 
   662     0112                     	;# 
   663     0113                     	;# 
   664     0114                     	;# 
   665     0115                     	;# 
   666     0116                     	;# 
   667     0117                     	;# 
   668     0118                     	;# 
   669     0119                     	;# 
   670     011A                     	;# 
   671     011B                     	;# 
   672     011D                     	;# 
   673     011E                     	;# 
   674     018C                     	;# 
   675     018D                     	;# 
   676     0191                     	;# 
   677     0191                     	;# 
   678     0192                     	;# 
   679     0193                     	;# 
   680     0193                     	;# 
   681     0193                     	;# 
   682     0194                     	;# 
   683     0195                     	;# 
   684     0196                     	;# 
   685     0199                     	;# 
   686     019A                     	;# 
   687     019B                     	;# 
   688     019B                     	;# 
   689     019B                     	;# 
   690     019B                     	;# 
   691     019C                     	;# 
   692     019C                     	;# 
   693     019D                     	;# 
   694     019E                     	;# 
   695     019F                     	;# 
   696     020C                     	;# 
   697     020D                     	;# 
   698     0211                     	;# 
   699     0211                     	;# 
   700     0212                     	;# 
   701     0212                     	;# 
   702     0213                     	;# 
   703     0213                     	;# 
   704     0214                     	;# 
   705     0214                     	;# 
   706     0215                     	;# 
   707     0215                     	;# 
   708     0215                     	;# 
   709     0216                     	;# 
   710     0216                     	;# 
   711     0217                     	;# 
   712     0217                     	;# 
   713     0219                     	;# 
   714     021A                     	;# 
   715     021B                     	;# 
   716     021C                     	;# 
   717     021D                     	;# 
   718     021E                     	;# 
   719     021F                     	;# 
   720     0291                     	;# 
   721     0291                     	;# 
   722     0292                     	;# 
   723     0293                     	;# 
   724     0294                     	;# 
   725     0295                     	;# 
   726     0295                     	;# 
   727     0296                     	;# 
   728     0298                     	;# 
   729     0298                     	;# 
   730     0299                     	;# 
   731     029A                     	;# 
   732     029B                     	;# 
   733     029C                     	;# 
   734     029C                     	;# 
   735     029D                     	;# 
   736     029E                     	;# 
   737     029E                     	;# 
   738     0311                     	;# 
   739     0311                     	;# 
   740     0312                     	;# 
   741     0313                     	;# 
   742     0318                     	;# 
   743     0318                     	;# 
   744     0319                     	;# 
   745     031A                     	;# 
   746     0394                     	;# 
   747     0395                     	;# 
   748     0396                     	;# 
   749     039A                     	;# 
   750     039C                     	;# 
   751     039D                     	;# 
   752     039E                     	;# 
   753     039F                     	;# 
   754     0415                     	;# 
   755     0416                     	;# 
   756     0417                     	;# 
   757     041C                     	;# 
   758     041D                     	;# 
   759     041E                     	;# 
   760     0FE4                     	;# 
   761     0FE5                     	;# 
   762     0FE6                     	;# 
   763     0FE7                     	;# 
   764     0FE8                     	;# 
   765     0FE9                     	;# 
   766     0FEA                     	;# 
   767     0FEB                     	;# 
   768     0FED                     	;# 
   769     0FEE                     	;# 
   770     0FEF                     	;# 
   771     0000                     	;# 
   772     0001                     	;# 
   773     0002                     	;# 
   774     0003                     	;# 
   775     0004                     	;# 
   776     0005                     	;# 
   777     0006                     	;# 
   778     0007                     	;# 
   779     0008                     	;# 
   780     0009                     	;# 
   781     000A                     	;# 
   782     000B                     	;# 
   783     000C                     	;# 
   784     000D                     	;# 
   785     0011                     	;# 
   786     0012                     	;# 
   787     0013                     	;# 
   788     0014                     	;# 
   789     0015                     	;# 
   790     0016                     	;# 
   791     0016                     	;# 
   792     0017                     	;# 
   793     0018                     	;# 
   794     0019                     	;# 
   795     001A                     	;# 
   796     001B                     	;# 
   797     001C                     	;# 
   798     001E                     	;# 
   799     001F                     	;# 
   800     008C                     	;# 
   801     008D                     	;# 
   802     0091                     	;# 
   803     0092                     	;# 
   804     0093                     	;# 
   805     0094                     	;# 
   806     0095                     	;# 
   807     0096                     	;# 
   808     0097                     	;# 
   809     0098                     	;# 
   810     0099                     	;# 
   811     009A                     	;# 
   812     009B                     	;# 
   813     009B                     	;# 
   814     009C                     	;# 
   815     009D                     	;# 
   816     009E                     	;# 
   817     010C                     	;# 
   818     010D                     	;# 
   819     0111                     	;# 
   820     0112                     	;# 
   821     0113                     	;# 
   822     0114                     	;# 
   823     0115                     	;# 
   824     0116                     	;# 
   825     0117                     	;# 
   826     0118                     	;# 
   827     0119                     	;# 
   828     011A                     	;# 
   829     011B                     	;# 
   830     011D                     	;# 
   831     011E                     	;# 
   832     018C                     	;# 
   833     018D                     	;# 
   834     0191                     	;# 
   835     0191                     	;# 
   836     0192                     	;# 
   837     0193                     	;# 
   838     0193                     	;# 
   839     0193                     	;# 
   840     0194                     	;# 
   841     0195                     	;# 
   842     0196                     	;# 
   843     0199                     	;# 
   844     019A                     	;# 
   845     019B                     	;# 
   846     019B                     	;# 
   847     019B                     	;# 
   848     019B                     	;# 
   849     019C                     	;# 
   850     019C                     	;# 
   851     019D                     	;# 
   852     019E                     	;# 
   853     019F                     	;# 
   854     020C                     	;# 
   855     020D                     	;# 
   856     0211                     	;# 
   857     0211                     	;# 
   858     0212                     	;# 
   859     0212                     	;# 
   860     0213                     	;# 
   861     0213                     	;# 
   862     0214                     	;# 
   863     0214                     	;# 
   864     0215                     	;# 
   865     0215                     	;# 
   866     0215                     	;# 
   867     0216                     	;# 
   868     0216                     	;# 
   869     0217                     	;# 
   870     0217                     	;# 
   871     0219                     	;# 
   872     021A                     	;# 
   873     021B                     	;# 
   874     021C                     	;# 
   875     021D                     	;# 
   876     021E                     	;# 
   877     021F                     	;# 
   878     0291                     	;# 
   879     0291                     	;# 
   880     0292                     	;# 
   881     0293                     	;# 
   882     0294                     	;# 
   883     0295                     	;# 
   884     0295                     	;# 
   885     0296                     	;# 
   886     0298                     	;# 
   887     0298                     	;# 
   888     0299                     	;# 
   889     029A                     	;# 
   890     029B                     	;# 
   891     029C                     	;# 
   892     029C                     	;# 
   893     029D                     	;# 
   894     029E                     	;# 
   895     029E                     	;# 
   896     0311                     	;# 
   897     0311                     	;# 
   898     0312                     	;# 
   899     0313                     	;# 
   900     0318                     	;# 
   901     0318                     	;# 
   902     0319                     	;# 
   903     031A                     	;# 
   904     0394                     	;# 
   905     0395                     	;# 
   906     0396                     	;# 
   907     039A                     	;# 
   908     039C                     	;# 
   909     039D                     	;# 
   910     039E                     	;# 
   911     039F                     	;# 
   912     0415                     	;# 
   913     0416                     	;# 
   914     0417                     	;# 
   915     041C                     	;# 
   916     041D                     	;# 
   917     041E                     	;# 
   918     0FE4                     	;# 
   919     0FE5                     	;# 
   920     0FE6                     	;# 
   921     0FE7                     	;# 
   922     0FE8                     	;# 
   923     0FE9                     	;# 
   924     0FEA                     	;# 
   925     0FEB                     	;# 
   926     0FED                     	;# 
   927     0FEE                     	;# 
   928     0FEF                     	;# 
   929     0000                     	;# 
   930     0001                     	;# 
   931     0002                     	;# 
   932     0003                     	;# 
   933     0004                     	;# 
   934     0005                     	;# 
   935     0006                     	;# 
   936     0007                     	;# 
   937     0008                     	;# 
   938     0009                     	;# 
   939     000A                     	;# 
   940     000B                     	;# 
   941     000C                     	;# 
   942     000D                     	;# 
   943     0011                     	;# 
   944     0012                     	;# 
   945     0013                     	;# 
   946     0014                     	;# 
   947     0015                     	;# 
   948     0016                     	;# 
   949     0016                     	;# 
   950     0017                     	;# 
   951     0018                     	;# 
   952     0019                     	;# 
   953     001A                     	;# 
   954     001B                     	;# 
   955     001C                     	;# 
   956     001E                     	;# 
   957     001F                     	;# 
   958     008C                     	;# 
   959     008D                     	;# 
   960     0091                     	;# 
   961     0092                     	;# 
   962     0093                     	;# 
   963     0094                     	;# 
   964     0095                     	;# 
   965     0096                     	;# 
   966     0097                     	;# 
   967     0098                     	;# 
   968     0099                     	;# 
   969     009A                     	;# 
   970     009B                     	;# 
   971     009B                     	;# 
   972     009C                     	;# 
   973     009D                     	;# 
   974     009E                     	;# 
   975     010C                     	;# 
   976     010D                     	;# 
   977     0111                     	;# 
   978     0112                     	;# 
   979     0113                     	;# 
   980     0114                     	;# 
   981     0115                     	;# 
   982     0116                     	;# 
   983     0117                     	;# 
   984     0118                     	;# 
   985     0119                     	;# 
   986     011A                     	;# 
   987     011B                     	;# 
   988     011D                     	;# 
   989     011E                     	;# 
   990     018C                     	;# 
   991     018D                     	;# 
   992     0191                     	;# 
   993     0191                     	;# 
   994     0192                     	;# 
   995     0193                     	;# 
   996     0193                     	;# 
   997     0193                     	;# 
   998     0194                     	;# 
   999     0195                     	;# 
  1000     0196                     	;# 
  1001     0199                     	;# 
  1002     019A                     	;# 
  1003     019B                     	;# 
  1004     019B                     	;# 
  1005     019B                     	;# 
  1006     019B                     	;# 
  1007     019C                     	;# 
  1008     019C                     	;# 
  1009     019D                     	;# 
  1010     019E                     	;# 
  1011     019F                     	;# 
  1012     020C                     	;# 
  1013     020D                     	;# 
  1014     0211                     	;# 
  1015     0211                     	;# 
  1016     0212                     	;# 
  1017     0212                     	;# 
  1018     0213                     	;# 
  1019     0213                     	;# 
  1020     0214                     	;# 
  1021     0214                     	;# 
  1022     0215                     	;# 
  1023     0215                     	;# 
  1024     0215                     	;# 
  1025     0216                     	;# 
  1026     0216                     	;# 
  1027     0217                     	;# 
  1028     0217                     	;# 
  1029     0219                     	;# 
  1030     021A                     	;# 
  1031     021B                     	;# 
  1032     021C                     	;# 
  1033     021D                     	;# 
  1034     021E                     	;# 
  1035     021F                     	;# 
  1036     0291                     	;# 
  1037     0291                     	;# 
  1038     0292                     	;# 
  1039     0293                     	;# 
  1040     0294                     	;# 
  1041     0295                     	;# 
  1042     0295                     	;# 
  1043     0296                     	;# 
  1044     0298                     	;# 
  1045     0298                     	;# 
  1046     0299                     	;# 
  1047     029A                     	;# 
  1048     029B                     	;# 
  1049     029C                     	;# 
  1050     029C                     	;# 
  1051     029D                     	;# 
  1052     029E                     	;# 
  1053     029E                     	;# 
  1054     0311                     	;# 
  1055     0311                     	;# 
  1056     0312                     	;# 
  1057     0313                     	;# 
  1058     0318                     	;# 
  1059     0318                     	;# 
  1060     0319                     	;# 
  1061     031A                     	;# 
  1062     0394                     	;# 
  1063     0395                     	;# 
  1064     0396                     	;# 
  1065     039A                     	;# 
  1066     039C                     	;# 
  1067     039D                     	;# 
  1068     039E                     	;# 
  1069     039F                     	;# 
  1070     0415                     	;# 
  1071     0416                     	;# 
  1072     0417                     	;# 
  1073     041C                     	;# 
  1074     041D                     	;# 
  1075     041E                     	;# 
  1076     0FE4                     	;# 
  1077     0FE5                     	;# 
  1078     0FE6                     	;# 
  1079     0FE7                     	;# 
  1080     0FE8                     	;# 
  1081     0FE9                     	;# 
  1082     0FEA                     	;# 
  1083     0FEB                     	;# 
  1084     0FED                     	;# 
  1085     0FEE                     	;# 
  1086     0FEF                     	;# 
  1087     0000                     	;# 
  1088     0001                     	;# 
  1089     0002                     	;# 
  1090     0003                     	;# 
  1091     0004                     	;# 
  1092     0005                     	;# 
  1093     0006                     	;# 
  1094     0007                     	;# 
  1095     0008                     	;# 
  1096     0009                     	;# 
  1097     000A                     	;# 
  1098     000B                     	;# 
  1099     000C                     	;# 
  1100     000D                     	;# 
  1101     0011                     	;# 
  1102     0012                     	;# 
  1103     0013                     	;# 
  1104     0014                     	;# 
  1105     0015                     	;# 
  1106     0016                     	;# 
  1107     0016                     	;# 
  1108     0017                     	;# 
  1109     0018                     	;# 
  1110     0019                     	;# 
  1111     001A                     	;# 
  1112     001B                     	;# 
  1113     001C                     	;# 
  1114     001E                     	;# 
  1115     001F                     	;# 
  1116     008C                     	;# 
  1117     008D                     	;# 
  1118     0091                     	;# 
  1119     0092                     	;# 
  1120     0093                     	;# 
  1121     0094                     	;# 
  1122     0095                     	;# 
  1123     0096                     	;# 
  1124     0097                     	;# 
  1125     0098                     	;# 
  1126     0099                     	;# 
  1127     009A                     	;# 
  1128     009B                     	;# 
  1129     009B                     	;# 
  1130     009C                     	;# 
  1131     009D                     	;# 
  1132     009E                     	;# 
  1133     010C                     	;# 
  1134     010D                     	;# 
  1135     0111                     	;# 
  1136     0112                     	;# 
  1137     0113                     	;# 
  1138     0114                     	;# 
  1139     0115                     	;# 
  1140     0116                     	;# 
  1141     0117                     	;# 
  1142     0118                     	;# 
  1143     0119                     	;# 
  1144     011A                     	;# 
  1145     011B                     	;# 
  1146     011D                     	;# 
  1147     011E                     	;# 
  1148     018C                     	;# 
  1149     018D                     	;# 
  1150     0191                     	;# 
  1151     0191                     	;# 
  1152     0192                     	;# 
  1153     0193                     	;# 
  1154     0193                     	;# 
  1155     0193                     	;# 
  1156     0194                     	;# 
  1157     0195                     	;# 
  1158     0196                     	;# 
  1159     0199                     	;# 
  1160     019A                     	;# 
  1161     019B                     	;# 
  1162     019B                     	;# 
  1163     019B                     	;# 
  1164     019B                     	;# 
  1165     019C                     	;# 
  1166     019C                     	;# 
  1167     019D                     	;# 
  1168     019E                     	;# 
  1169     019F                     	;# 
  1170     020C                     	;# 
  1171     020D                     	;# 
  1172     0211                     	;# 
  1173     0211                     	;# 
  1174     0212                     	;# 
  1175     0212                     	;# 
  1176     0213                     	;# 
  1177     0213                     	;# 
  1178     0214                     	;# 
  1179     0214                     	;# 
  1180     0215                     	;# 
  1181     0215                     	;# 
  1182     0215                     	;# 
  1183     0216                     	;# 
  1184     0216                     	;# 
  1185     0217                     	;# 
  1186     0217                     	;# 
  1187     0219                     	;# 
  1188     021A                     	;# 
  1189     021B                     	;# 
  1190     021C                     	;# 
  1191     021D                     	;# 
  1192     021E                     	;# 
  1193     021F                     	;# 
  1194     0291                     	;# 
  1195     0291                     	;# 
  1196     0292                     	;# 
  1197     0293                     	;# 
  1198     0294                     	;# 
  1199     0295                     	;# 
  1200     0295                     	;# 
  1201     0296                     	;# 
  1202     0298                     	;# 
  1203     0298                     	;# 
  1204     0299                     	;# 
  1205     029A                     	;# 
  1206     029B                     	;# 
  1207     029C                     	;# 
  1208     029C                     	;# 
  1209     029D                     	;# 
  1210     029E                     	;# 
  1211     029E                     	;# 
  1212     0311                     	;# 
  1213     0311                     	;# 
  1214     0312                     	;# 
  1215     0313                     	;# 
  1216     0318                     	;# 
  1217     0318                     	;# 
  1218     0319                     	;# 
  1219     031A                     	;# 
  1220     0394                     	;# 
  1221     0395                     	;# 
  1222     0396                     	;# 
  1223     039A                     	;# 
  1224     039C                     	;# 
  1225     039D                     	;# 
  1226     039E                     	;# 
  1227     039F                     	;# 
  1228     0415                     	;# 
  1229     0416                     	;# 
  1230     0417                     	;# 
  1231     041C                     	;# 
  1232     041D                     	;# 
  1233     041E                     	;# 
  1234     0FE4                     	;# 
  1235     0FE5                     	;# 
  1236     0FE6                     	;# 
  1237     0FE7                     	;# 
  1238     0FE8                     	;# 
  1239     0FE9                     	;# 
  1240     0FEA                     	;# 
  1241     0FEB                     	;# 
  1242     0FED                     	;# 
  1243     0FEE                     	;# 
  1244     0FEF                     	;# 
  1245     0000                     	;# 
  1246     0001                     	;# 
  1247     0002                     	;# 
  1248     0003                     	;# 
  1249     0004                     	;# 
  1250     0005                     	;# 
  1251     0006                     	;# 
  1252     0007                     	;# 
  1253     0008                     	;# 
  1254     0009                     	;# 
  1255     000A                     	;# 
  1256     000B                     	;# 
  1257     000C                     	;# 
  1258     000D                     	;# 
  1259     0011                     	;# 
  1260     0012                     	;# 
  1261     0013                     	;# 
  1262     0014                     	;# 
  1263     0015                     	;# 
  1264     0016                     	;# 
  1265     0016                     	;# 
  1266     0017                     	;# 
  1267     0018                     	;# 
  1268     0019                     	;# 
  1269     001A                     	;# 
  1270     001B                     	;# 
  1271     001C                     	;# 
  1272     001E                     	;# 
  1273     001F                     	;# 
  1274     008C                     	;# 
  1275     008D                     	;# 
  1276     0091                     	;# 
  1277     0092                     	;# 
  1278     0093                     	;# 
  1279     0094                     	;# 
  1280     0095                     	;# 
  1281     0096                     	;# 
  1282     0097                     	;# 
  1283     0098                     	;# 
  1284     0099                     	;# 
  1285     009A                     	;# 
  1286     009B                     	;# 
  1287     009B                     	;# 
  1288     009C                     	;# 
  1289     009D                     	;# 
  1290     009E                     	;# 
  1291     010C                     	;# 
  1292     010D                     	;# 
  1293     0111                     	;# 
  1294     0112                     	;# 
  1295     0113                     	;# 
  1296     0114                     	;# 
  1297     0115                     	;# 
  1298     0116                     	;# 
  1299     0117                     	;# 
  1300     0118                     	;# 
  1301     0119                     	;# 
  1302     011A                     	;# 
  1303     011B                     	;# 
  1304     011D                     	;# 
  1305     011E                     	;# 
  1306     018C                     	;# 
  1307     018D                     	;# 
  1308     0191                     	;# 
  1309     0191                     	;# 
  1310     0192                     	;# 
  1311     0193                     	;# 
  1312     0193                     	;# 
  1313     0193                     	;# 
  1314     0194                     	;# 
  1315     0195                     	;# 
  1316     0196                     	;# 
  1317     0199                     	;# 
  1318     019A                     	;# 
  1319     019B                     	;# 
  1320     019B                     	;# 
  1321     019B                     	;# 
  1322     019B                     	;# 
  1323     019C                     	;# 
  1324     019C                     	;# 
  1325     019D                     	;# 
  1326     019E                     	;# 
  1327     019F                     	;# 
  1328     020C                     	;# 
  1329     020D                     	;# 
  1330     0211                     	;# 
  1331     0211                     	;# 
  1332     0212                     	;# 
  1333     0212                     	;# 
  1334     0213                     	;# 
  1335     0213                     	;# 
  1336     0214                     	;# 
  1337     0214                     	;# 
  1338     0215                     	;# 
  1339     0215                     	;# 
  1340     0215                     	;# 
  1341     0216                     	;# 
  1342     0216                     	;# 
  1343     0217                     	;# 
  1344     0217                     	;# 
  1345     0219                     	;# 
  1346     021A                     	;# 
  1347     021B                     	;# 
  1348     021C                     	;# 
  1349     021D                     	;# 
  1350     021E                     	;# 
  1351     021F                     	;# 
  1352     0291                     	;# 
  1353     0291                     	;# 
  1354     0292                     	;# 
  1355     0293                     	;# 
  1356     0294                     	;# 
  1357     0295                     	;# 
  1358     0295                     	;# 
  1359     0296                     	;# 
  1360     0298                     	;# 
  1361     0298                     	;# 
  1362     0299                     	;# 
  1363     029A                     	;# 
  1364     029B                     	;# 
  1365     029C                     	;# 
  1366     029C                     	;# 
  1367     029D                     	;# 
  1368     029E                     	;# 
  1369     029E                     	;# 
  1370     0311                     	;# 
  1371     0311                     	;# 
  1372     0312                     	;# 
  1373     0313                     	;# 
  1374     0318                     	;# 
  1375     0318                     	;# 
  1376     0319                     	;# 
  1377     031A                     	;# 
  1378     0394                     	;# 
  1379     0395                     	;# 
  1380     0396                     	;# 
  1381     039A                     	;# 
  1382     039C                     	;# 
  1383     039D                     	;# 
  1384     039E                     	;# 
  1385     039F                     	;# 
  1386     0415                     	;# 
  1387     0416                     	;# 
  1388     0417                     	;# 
  1389     041C                     	;# 
  1390     041D                     	;# 
  1391     041E                     	;# 
  1392     0FE4                     	;# 
  1393     0FE5                     	;# 
  1394     0FE6                     	;# 
  1395     0FE7                     	;# 
  1396     0FE8                     	;# 
  1397     0FE9                     	;# 
  1398     0FEA                     	;# 
  1399     0FEB                     	;# 
  1400     0FED                     	;# 
  1401     0FEE                     	;# 
  1402     0FEF                     	;# 
  1403     0000                     	;# 
  1404     0001                     	;# 
  1405     0002                     	;# 
  1406     0003                     	;# 
  1407     0004                     	;# 
  1408     0005                     	;# 
  1409     0006                     	;# 
  1410     0007                     	;# 
  1411     0008                     	;# 
  1412     0009                     	;# 
  1413     000A                     	;# 
  1414     000B                     	;# 
  1415     000C                     	;# 
  1416     000D                     	;# 
  1417     0011                     	;# 
  1418     0012                     	;# 
  1419     0013                     	;# 
  1420     0014                     	;# 
  1421     0015                     	;# 
  1422     0016                     	;# 
  1423     0016                     	;# 
  1424     0017                     	;# 
  1425     0018                     	;# 
  1426     0019                     	;# 
  1427     001A                     	;# 
  1428     001B                     	;# 
  1429     001C                     	;# 
  1430     001E                     	;# 
  1431     001F                     	;# 
  1432     008C                     	;# 
  1433     008D                     	;# 
  1434     0091                     	;# 
  1435     0092                     	;# 
  1436     0093                     	;# 
  1437     0094                     	;# 
  1438     0095                     	;# 
  1439     0096                     	;# 
  1440     0097                     	;# 
  1441     0098                     	;# 
  1442     0099                     	;# 
  1443     009A                     	;# 
  1444     009B                     	;# 
  1445     009B                     	;# 
  1446     009C                     	;# 
  1447     009D                     	;# 
  1448     009E                     	;# 
  1449     010C                     	;# 
  1450     010D                     	;# 
  1451     0111                     	;# 
  1452     0112                     	;# 
  1453     0113                     	;# 
  1454     0114                     	;# 
  1455     0115                     	;# 
  1456     0116                     	;# 
  1457     0117                     	;# 
  1458     0118                     	;# 
  1459     0119                     	;# 
  1460     011A                     	;# 
  1461     011B                     	;# 
  1462     011D                     	;# 
  1463     011E                     	;# 
  1464     018C                     	;# 
  1465     018D                     	;# 
  1466     0191                     	;# 
  1467     0191                     	;# 
  1468     0192                     	;# 
  1469     0193                     	;# 
  1470     0193                     	;# 
  1471     0193                     	;# 
  1472     0194                     	;# 
  1473     0195                     	;# 
  1474     0196                     	;# 
  1475     0199                     	;# 
  1476     019A                     	;# 
  1477     019B                     	;# 
  1478     019B                     	;# 
  1479     019B                     	;# 
  1480     019B                     	;# 
  1481     019C                     	;# 
  1482     019C                     	;# 
  1483     019D                     	;# 
  1484     019E                     	;# 
  1485     019F                     	;# 
  1486     020C                     	;# 
  1487     020D                     	;# 
  1488     0211                     	;# 
  1489     0211                     	;# 
  1490     0212                     	;# 
  1491     0212                     	;# 
  1492     0213                     	;# 
  1493     0213                     	;# 
  1494     0214                     	;# 
  1495     0214                     	;# 
  1496     0215                     	;# 
  1497     0215                     	;# 
  1498     0215                     	;# 
  1499     0216                     	;# 
  1500     0216                     	;# 
  1501     0217                     	;# 
  1502     0217                     	;# 
  1503     0219                     	;# 
  1504     021A                     	;# 
  1505     021B                     	;# 
  1506     021C                     	;# 
  1507     021D                     	;# 
  1508     021E                     	;# 
  1509     021F                     	;# 
  1510     0291                     	;# 
  1511     0291                     	;# 
  1512     0292                     	;# 
  1513     0293                     	;# 
  1514     0294                     	;# 
  1515     0295                     	;# 
  1516     0295                     	;# 
  1517     0296                     	;# 
  1518     0298                     	;# 
  1519     0298                     	;# 
  1520     0299                     	;# 
  1521     029A                     	;# 
  1522     029B                     	;# 
  1523     029C                     	;# 
  1524     029C                     	;# 
  1525     029D                     	;# 
  1526     029E                     	;# 
  1527     029E                     	;# 
  1528     0311                     	;# 
  1529     0311                     	;# 
  1530     0312                     	;# 
  1531     0313                     	;# 
  1532     0318                     	;# 
  1533     0318                     	;# 
  1534     0319                     	;# 
  1535     031A                     	;# 
  1536     0394                     	;# 
  1537     0395                     	;# 
  1538     0396                     	;# 
  1539     039A                     	;# 
  1540     039C                     	;# 
  1541     039D                     	;# 
  1542     039E                     	;# 
  1543     039F                     	;# 
  1544     0415                     	;# 
  1545     0416                     	;# 
  1546     0417                     	;# 
  1547     041C                     	;# 
  1548     041D                     	;# 
  1549     041E                     	;# 
  1550     0FE4                     	;# 
  1551     0FE5                     	;# 
  1552     0FE6                     	;# 
  1553     0FE7                     	;# 
  1554     0FE8                     	;# 
  1555     0FE9                     	;# 
  1556     0FEA                     	;# 
  1557     0FEB                     	;# 
  1558     0FED                     	;# 
  1559     0FEE                     	;# 
  1560     0FEF                     	;# 
  1561     0000                     	;# 
  1562     0001                     	;# 
  1563     0002                     	;# 
  1564     0003                     	;# 
  1565     0004                     	;# 
  1566     0005                     	;# 
  1567     0006                     	;# 
  1568     0007                     	;# 
  1569     0008                     	;# 
  1570     0009                     	;# 
  1571     000A                     	;# 
  1572     000B                     	;# 
  1573     000C                     	;# 
  1574     000D                     	;# 
  1575     0011                     	;# 
  1576     0012                     	;# 
  1577     0013                     	;# 
  1578     0014                     	;# 
  1579     0015                     	;# 
  1580     0016                     	;# 
  1581     0016                     	;# 
  1582     0017                     	;# 
  1583     0018                     	;# 
  1584     0019                     	;# 
  1585     001A                     	;# 
  1586     001B                     	;# 
  1587     001C                     	;# 
  1588     001E                     	;# 
  1589     001F                     	;# 
  1590     008C                     	;# 
  1591     008D                     	;# 
  1592     0091                     	;# 
  1593     0092                     	;# 
  1594     0093                     	;# 
  1595     0094                     	;# 
  1596     0095                     	;# 
  1597     0096                     	;# 
  1598     0097                     	;# 
  1599     0098                     	;# 
  1600     0099                     	;# 
  1601     009A                     	;# 
  1602     009B                     	;# 
  1603     009B                     	;# 
  1604     009C                     	;# 
  1605     009D                     	;# 
  1606     009E                     	;# 
  1607     010C                     	;# 
  1608     010D                     	;# 
  1609     0111                     	;# 
  1610     0112                     	;# 
  1611     0113                     	;# 
  1612     0114                     	;# 
  1613     0115                     	;# 
  1614     0116                     	;# 
  1615     0117                     	;# 
  1616     0118                     	;# 
  1617     0119                     	;# 
  1618     011A                     	;# 
  1619     011B                     	;# 
  1620     011D                     	;# 
  1621     011E                     	;# 
  1622     018C                     	;# 
  1623     018D                     	;# 
  1624     0191                     	;# 
  1625     0191                     	;# 
  1626     0192                     	;# 
  1627     0193                     	;# 
  1628     0193                     	;# 
  1629     0193                     	;# 
  1630     0194                     	;# 
  1631     0195                     	;# 
  1632     0196                     	;# 
  1633     0199                     	;# 
  1634     019A                     	;# 
  1635     019B                     	;# 
  1636     019B                     	;# 
  1637     019B                     	;# 
  1638     019B                     	;# 
  1639     019C                     	;# 
  1640     019C                     	;# 
  1641     019D                     	;# 
  1642     019E                     	;# 
  1643     019F                     	;# 
  1644     020C                     	;# 
  1645     020D                     	;# 
  1646     0211                     	;# 
  1647     0211                     	;# 
  1648     0212                     	;# 
  1649     0212                     	;# 
  1650     0213                     	;# 
  1651     0213                     	;# 
  1652     0214                     	;# 
  1653     0214                     	;# 
  1654     0215                     	;# 
  1655     0215                     	;# 
  1656     0215                     	;# 
  1657     0216                     	;# 
  1658     0216                     	;# 
  1659     0217                     	;# 
  1660     0217                     	;# 
  1661     0219                     	;# 
  1662     021A                     	;# 
  1663     021B                     	;# 
  1664     021C                     	;# 
  1665     021D                     	;# 
  1666     021E                     	;# 
  1667     021F                     	;# 
  1668     0291                     	;# 
  1669     0291                     	;# 
  1670     0292                     	;# 
  1671     0293                     	;# 
  1672     0294                     	;# 
  1673     0295                     	;# 
  1674     0295                     	;# 
  1675     0296                     	;# 
  1676     0298                     	;# 
  1677     0298                     	;# 
  1678     0299                     	;# 
  1679     029A                     	;# 
  1680     029B                     	;# 
  1681     029C                     	;# 
  1682     029C                     	;# 
  1683     029D                     	;# 
  1684     029E                     	;# 
  1685     029E                     	;# 
  1686     0311                     	;# 
  1687     0311                     	;# 
  1688     0312                     	;# 
  1689     0313                     	;# 
  1690     0318                     	;# 
  1691     0318                     	;# 
  1692     0319                     	;# 
  1693     031A                     	;# 
  1694     0394                     	;# 
  1695     0395                     	;# 
  1696     0396                     	;# 
  1697     039A                     	;# 
  1698     039C                     	;# 
  1699     039D                     	;# 
  1700     039E                     	;# 
  1701     039F                     	;# 
  1702     0415                     	;# 
  1703     0416                     	;# 
  1704     0417                     	;# 
  1705     041C                     	;# 
  1706     041D                     	;# 
  1707     041E                     	;# 
  1708     0FE4                     	;# 
  1709     0FE5                     	;# 
  1710     0FE6                     	;# 
  1711     0FE7                     	;# 
  1712     0FE8                     	;# 
  1713     0FE9                     	;# 
  1714     0FEA                     	;# 
  1715     0FEB                     	;# 
  1716     0FED                     	;# 
  1717     0FEE                     	;# 
  1718     0FEF                     	;# 
  1719     0000                     	;# 
  1720     0001                     	;# 
  1721     0002                     	;# 
  1722     0003                     	;# 
  1723     0004                     	;# 
  1724     0005                     	;# 
  1725     0006                     	;# 
  1726     0007                     	;# 
  1727     0008                     	;# 
  1728     0009                     	;# 
  1729     000A                     	;# 
  1730     000B                     	;# 
  1731     000C                     	;# 
  1732     000D                     	;# 
  1733     0011                     	;# 
  1734     0012                     	;# 
  1735     0013                     	;# 
  1736     0014                     	;# 
  1737     0015                     	;# 
  1738     0016                     	;# 
  1739     0016                     	;# 
  1740     0017                     	;# 
  1741     0018                     	;# 
  1742     0019                     	;# 
  1743     001A                     	;# 
  1744     001B                     	;# 
  1745     001C                     	;# 
  1746     001E                     	;# 
  1747     001F                     	;# 
  1748     008C                     	;# 
  1749     008D                     	;# 
  1750     0091                     	;# 
  1751     0092                     	;# 
  1752     0093                     	;# 
  1753     0094                     	;# 
  1754     0095                     	;# 
  1755     0096                     	;# 
  1756     0097                     	;# 
  1757     0098                     	;# 
  1758     0099                     	;# 
  1759     009A                     	;# 
  1760     009B                     	;# 
  1761     009B                     	;# 
  1762     009C                     	;# 
  1763     009D                     	;# 
  1764     009E                     	;# 
  1765     010C                     	;# 
  1766     010D                     	;# 
  1767     0111                     	;# 
  1768     0112                     	;# 
  1769     0113                     	;# 
  1770     0114                     	;# 
  1771     0115                     	;# 
  1772     0116                     	;# 
  1773     0117                     	;# 
  1774     0118                     	;# 
  1775     0119                     	;# 
  1776     011A                     	;# 
  1777     011B                     	;# 
  1778     011D                     	;# 
  1779     011E                     	;# 
  1780     018C                     	;# 
  1781     018D                     	;# 
  1782     0191                     	;# 
  1783     0191                     	;# 
  1784     0192                     	;# 
  1785     0193                     	;# 
  1786     0193                     	;# 
  1787     0193                     	;# 
  1788     0194                     	;# 
  1789     0195                     	;# 
  1790     0196                     	;# 
  1791     0199                     	;# 
  1792     019A                     	;# 
  1793     019B                     	;# 
  1794     019B                     	;# 
  1795     019B                     	;# 
  1796     019B                     	;# 
  1797     019C                     	;# 
  1798     019C                     	;# 
  1799     019D                     	;# 
  1800     019E                     	;# 
  1801     019F                     	;# 
  1802     020C                     	;# 
  1803     020D                     	;# 
  1804     0211                     	;# 
  1805     0211                     	;# 
  1806     0212                     	;# 
  1807     0212                     	;# 
  1808     0213                     	;# 
  1809     0213                     	;# 
  1810     0214                     	;# 
  1811     0214                     	;# 
  1812     0215                     	;# 
  1813     0215                     	;# 
  1814     0215                     	;# 
  1815     0216                     	;# 
  1816     0216                     	;# 
  1817     0217                     	;# 
  1818     0217                     	;# 
  1819     0219                     	;# 
  1820     021A                     	;# 
  1821     021B                     	;# 
  1822     021C                     	;# 
  1823     021D                     	;# 
  1824     021E                     	;# 
  1825     021F                     	;# 
  1826     0291                     	;# 
  1827     0291                     	;# 
  1828     0292                     	;# 
  1829     0293                     	;# 
  1830     0294                     	;# 
  1831     0295                     	;# 
  1832     0295                     	;# 
  1833     0296                     	;# 
  1834     0298                     	;# 
  1835     0298                     	;# 
  1836     0299                     	;# 
  1837     029A                     	;# 
  1838     029B                     	;# 
  1839     029C                     	;# 
  1840     029C                     	;# 
  1841     029D                     	;# 
  1842     029E                     	;# 
  1843     029E                     	;# 
  1844     0311                     	;# 
  1845     0311                     	;# 
  1846     0312                     	;# 
  1847     0313                     	;# 
  1848     0318                     	;# 
  1849     0318                     	;# 
  1850     0319                     	;# 
  1851     031A                     	;# 
  1852     0394                     	;# 
  1853     0395                     	;# 
  1854     0396                     	;# 
  1855     039A                     	;# 
  1856     039C                     	;# 
  1857     039D                     	;# 
  1858     039E                     	;# 
  1859     039F                     	;# 
  1860     0415                     	;# 
  1861     0416                     	;# 
  1862     0417                     	;# 
  1863     041C                     	;# 
  1864     041D                     	;# 
  1865     041E                     	;# 
  1866     0FE4                     	;# 
  1867     0FE5                     	;# 
  1868     0FE6                     	;# 
  1869     0FE7                     	;# 
  1870     0FE8                     	;# 
  1871     0FE9                     	;# 
  1872     0FEA                     	;# 
  1873     0FEB                     	;# 
  1874     0FED                     	;# 
  1875     0FEE                     	;# 
  1876     0FEF                     	;# 
  1877     0000                     	;# 
  1878     0001                     	;# 
  1879     0002                     	;# 
  1880     0003                     	;# 
  1881     0004                     	;# 
  1882     0005                     	;# 
  1883     0006                     	;# 
  1884     0007                     	;# 
  1885     0008                     	;# 
  1886     0009                     	;# 
  1887     000A                     	;# 
  1888     000B                     	;# 
  1889     000C                     	;# 
  1890     000D                     	;# 
  1891     0011                     	;# 
  1892     0012                     	;# 
  1893     0013                     	;# 
  1894     0014                     	;# 
  1895     0015                     	;# 
  1896     0016                     	;# 
  1897     0016                     	;# 
  1898     0017                     	;# 
  1899     0018                     	;# 
  1900     0019                     	;# 
  1901     001A                     	;# 
  1902     001B                     	;# 
  1903     001C                     	;# 
  1904     001E                     	;# 
  1905     001F                     	;# 
  1906     008C                     	;# 
  1907     008D                     	;# 
  1908     0091                     	;# 
  1909     0092                     	;# 
  1910     0093                     	;# 
  1911     0094                     	;# 
  1912     0095                     	;# 
  1913     0096                     	;# 
  1914     0097                     	;# 
  1915     0098                     	;# 
  1916     0099                     	;# 
  1917     009A                     	;# 
  1918     009B                     	;# 
  1919     009B                     	;# 
  1920     009C                     	;# 
  1921     009D                     	;# 
  1922     009E                     	;# 
  1923     010C                     	;# 
  1924     010D                     	;# 
  1925     0111                     	;# 
  1926     0112                     	;# 
  1927     0113                     	;# 
  1928     0114                     	;# 
  1929     0115                     	;# 
  1930     0116                     	;# 
  1931     0117                     	;# 
  1932     0118                     	;# 
  1933     0119                     	;# 
  1934     011A                     	;# 
  1935     011B                     	;# 
  1936     011D                     	;# 
  1937     011E                     	;# 
  1938     018C                     	;# 
  1939     018D                     	;# 
  1940     0191                     	;# 
  1941     0191                     	;# 
  1942     0192                     	;# 
  1943     0193                     	;# 
  1944     0193                     	;# 
  1945     0193                     	;# 
  1946     0194                     	;# 
  1947     0195                     	;# 
  1948     0196                     	;# 
  1949     0199                     	;# 
  1950     019A                     	;# 
  1951     019B                     	;# 
  1952     019B                     	;# 
  1953     019B                     	;# 
  1954     019B                     	;# 
  1955     019C                     	;# 
  1956     019C                     	;# 
  1957     019D                     	;# 
  1958     019E                     	;# 
  1959     019F                     	;# 
  1960     020C                     	;# 
  1961     020D                     	;# 
  1962     0211                     	;# 
  1963     0211                     	;# 
  1964     0212                     	;# 
  1965     0212                     	;# 
  1966     0213                     	;# 
  1967     0213                     	;# 
  1968     0214                     	;# 
  1969     0214                     	;# 
  1970     0215                     	;# 
  1971     0215                     	;# 
  1972     0215                     	;# 
  1973     0216                     	;# 
  1974     0216                     	;# 
  1975     0217                     	;# 
  1976     0217                     	;# 
  1977     0219                     	;# 
  1978     021A                     	;# 
  1979     021B                     	;# 
  1980     021C                     	;# 
  1981     021D                     	;# 
  1982     021E                     	;# 
  1983     021F                     	;# 
  1984     0291                     	;# 
  1985     0291                     	;# 
  1986     0292                     	;# 
  1987     0293                     	;# 
  1988     0294                     	;# 
  1989     0295                     	;# 
  1990     0295                     	;# 
  1991     0296                     	;# 
  1992     0298                     	;# 
  1993     0298                     	;# 
  1994     0299                     	;# 
  1995     029A                     	;# 
  1996     029B                     	;# 
  1997     029C                     	;# 
  1998     029C                     	;# 
  1999     029D                     	;# 
  2000     029E                     	;# 
  2001     029E                     	;# 
  2002     0311                     	;# 
  2003     0311                     	;# 
  2004     0312                     	;# 
  2005     0313                     	;# 
  2006     0318                     	;# 
  2007     0318                     	;# 
  2008     0319                     	;# 
  2009     031A                     	;# 
  2010     0394                     	;# 
  2011     0395                     	;# 
  2012     0396                     	;# 
  2013     039A                     	;# 
  2014     039C                     	;# 
  2015     039D                     	;# 
  2016     039E                     	;# 
  2017     039F                     	;# 
  2018     0415                     	;# 
  2019     0416                     	;# 
  2020     0417                     	;# 
  2021     041C                     	;# 
  2022     041D                     	;# 
  2023     041E                     	;# 
  2024     0FE4                     	;# 
  2025     0FE5                     	;# 
  2026     0FE6                     	;# 
  2027     0FE7                     	;# 
  2028     0FE8                     	;# 
  2029     0FE9                     	;# 
  2030     0FEA                     	;# 
  2031     0FEB                     	;# 
  2032     0FED                     	;# 
  2033     0FEE                     	;# 
  2034     0FEF                     	;# 
  2035     0000                     	;# 
  2036     0001                     	;# 
  2037     0002                     	;# 
  2038     0003                     	;# 
  2039     0004                     	;# 
  2040     0005                     	;# 
  2041     0006                     	;# 
  2042     0007                     	;# 
  2043     0008                     	;# 
  2044     0009                     	;# 
  2045     000A                     	;# 
  2046     000B                     	;# 
  2047     000C                     	;# 
  2048     000D                     	;# 
  2049     0011                     	;# 
  2050     0012                     	;# 
  2051     0013                     	;# 
  2052     0014                     	;# 
  2053     0015                     	;# 
  2054     0016                     	;# 
  2055     0016                     	;# 
  2056     0017                     	;# 
  2057     0018                     	;# 
  2058     0019                     	;# 
  2059     001A                     	;# 
  2060     001B                     	;# 
  2061     001C                     	;# 
  2062     001E                     	;# 
  2063     001F                     	;# 
  2064     008C                     	;# 
  2065     008D                     	;# 
  2066     0091                     	;# 
  2067     0092                     	;# 
  2068     0093                     	;# 
  2069     0094                     	;# 
  2070     0095                     	;# 
  2071     0096                     	;# 
  2072     0097                     	;# 
  2073     0098                     	;# 
  2074     0099                     	;# 
  2075     009A                     	;# 
  2076     009B                     	;# 
  2077     009B                     	;# 
  2078     009C                     	;# 
  2079     009D                     	;# 
  2080     009E                     	;# 
  2081     010C                     	;# 
  2082     010D                     	;# 
  2083     0111                     	;# 
  2084     0112                     	;# 
  2085     0113                     	;# 
  2086     0114                     	;# 
  2087     0115                     	;# 
  2088     0116                     	;# 
  2089     0117                     	;# 
  2090     0118                     	;# 
  2091     0119                     	;# 
  2092     011A                     	;# 
  2093     011B                     	;# 
  2094     011D                     	;# 
  2095     011E                     	;# 
  2096     018C                     	;# 
  2097     018D                     	;# 
  2098     0191                     	;# 
  2099     0191                     	;# 
  2100     0192                     	;# 
  2101     0193                     	;# 
  2102     0193                     	;# 
  2103     0193                     	;# 
  2104     0194                     	;# 
  2105     0195                     	;# 
  2106     0196                     	;# 
  2107     0199                     	;# 
  2108     019A                     	;# 
  2109     019B                     	;# 
  2110     019B                     	;# 
  2111     019B                     	;# 
  2112     019B                     	;# 
  2113     019C                     	;# 
  2114     019C                     	;# 
  2115     019D                     	;# 
  2116     019E                     	;# 
  2117     019F                     	;# 
  2118     020C                     	;# 
  2119     020D                     	;# 
  2120     0211                     	;# 
  2121     0211                     	;# 
  2122     0212                     	;# 
  2123     0212                     	;# 
  2124     0213                     	;# 
  2125     0213                     	;# 
  2126     0214                     	;# 
  2127     0214                     	;# 
  2128     0215                     	;# 
  2129     0215                     	;# 
  2130     0215                     	;# 
  2131     0216                     	;# 
  2132     0216                     	;# 
  2133     0217                     	;# 
  2134     0217                     	;# 
  2135     0219                     	;# 
  2136     021A                     	;# 
  2137     021B                     	;# 
  2138     021C                     	;# 
  2139     021D                     	;# 
  2140     021E                     	;# 
  2141     021F                     	;# 
  2142     0291                     	;# 
  2143     0291                     	;# 
  2144     0292                     	;# 
  2145     0293                     	;# 
  2146     0294                     	;# 
  2147     0295                     	;# 
  2148     0295                     	;# 
  2149     0296                     	;# 
  2150     0298                     	;# 
  2151     0298                     	;# 
  2152     0299                     	;# 
  2153     029A                     	;# 
  2154     029B                     	;# 
  2155     029C                     	;# 
  2156     029C                     	;# 
  2157     029D                     	;# 
  2158     029E                     	;# 
  2159     029E                     	;# 
  2160     0311                     	;# 
  2161     0311                     	;# 
  2162     0312                     	;# 
  2163     0313                     	;# 
  2164     0318                     	;# 
  2165     0318                     	;# 
  2166     0319                     	;# 
  2167     031A                     	;# 
  2168     0394                     	;# 
  2169     0395                     	;# 
  2170     0396                     	;# 
  2171     039A                     	;# 
  2172     039C                     	;# 
  2173     039D                     	;# 
  2174     039E                     	;# 
  2175     039F                     	;# 
  2176     0415                     	;# 
  2177     0416                     	;# 
  2178     0417                     	;# 
  2179     041C                     	;# 
  2180     041D                     	;# 
  2181     041E                     	;# 
  2182     0FE4                     	;# 
  2183     0FE5                     	;# 
  2184     0FE6                     	;# 
  2185     0FE7                     	;# 
  2186     0FE8                     	;# 
  2187     0FE9                     	;# 
  2188     0FEA                     	;# 
  2189     0FEB                     	;# 
  2190     0FED                     	;# 
  2191     0FEE                     	;# 
  2192     0FEF                     	;# 
  2193     0000                     	;# 
  2194     0001                     	;# 
  2195     0002                     	;# 
  2196     0003                     	;# 
  2197     0004                     	;# 
  2198     0005                     	;# 
  2199     0006                     	;# 
  2200     0007                     	;# 
  2201     0008                     	;# 
  2202     0009                     	;# 
  2203     000A                     	;# 
  2204     000B                     	;# 
  2205     000C                     	;# 
  2206     000D                     	;# 
  2207     0011                     	;# 
  2208     0012                     	;# 
  2209     0013                     	;# 
  2210     0014                     	;# 
  2211     0015                     	;# 
  2212     0016                     	;# 
  2213     0016                     	;# 
  2214     0017                     	;# 
  2215     0018                     	;# 
  2216     0019                     	;# 
  2217     001A                     	;# 
  2218     001B                     	;# 
  2219     001C                     	;# 
  2220     001E                     	;# 
  2221     001F                     	;# 
  2222     008C                     	;# 
  2223     008D                     	;# 
  2224     0091                     	;# 
  2225     0092                     	;# 
  2226     0093                     	;# 
  2227     0094                     	;# 
  2228     0095                     	;# 
  2229     0096                     	;# 
  2230     0097                     	;# 
  2231     0098                     	;# 
  2232     0099                     	;# 
  2233     009A                     	;# 
  2234     009B                     	;# 
  2235     009B                     	;# 
  2236     009C                     	;# 
  2237     009D                     	;# 
  2238     009E                     	;# 
  2239     010C                     	;# 
  2240     010D                     	;# 
  2241     0111                     	;# 
  2242     0112                     	;# 
  2243     0113                     	;# 
  2244     0114                     	;# 
  2245     0115                     	;# 
  2246     0116                     	;# 
  2247     0117                     	;# 
  2248     0118                     	;# 
  2249     0119                     	;# 
  2250     011A                     	;# 
  2251     011B                     	;# 
  2252     011D                     	;# 
  2253     011E                     	;# 
  2254     018C                     	;# 
  2255     018D                     	;# 
  2256     0191                     	;# 
  2257     0191                     	;# 
  2258     0192                     	;# 
  2259     0193                     	;# 
  2260     0193                     	;# 
  2261     0193                     	;# 
  2262     0194                     	;# 
  2263     0195                     	;# 
  2264     0196                     	;# 
  2265     0199                     	;# 
  2266     019A                     	;# 
  2267     019B                     	;# 
  2268     019B                     	;# 
  2269     019B                     	;# 
  2270     019B                     	;# 
  2271     019C                     	;# 
  2272     019C                     	;# 
  2273     019D                     	;# 
  2274     019E                     	;# 
  2275     019F                     	;# 
  2276     020C                     	;# 
  2277     020D                     	;# 
  2278     0211                     	;# 
  2279     0211                     	;# 
  2280     0212                     	;# 
  2281     0212                     	;# 
  2282     0213                     	;# 
  2283     0213                     	;# 
  2284     0214                     	;# 
  2285     0214                     	;# 
  2286     0215                     	;# 
  2287     0215                     	;# 
  2288     0215                     	;# 
  2289     0216                     	;# 
  2290     0216                     	;# 
  2291     0217                     	;# 
  2292     0217                     	;# 
  2293     0219                     	;# 
  2294     021A                     	;# 
  2295     021B                     	;# 
  2296     021C                     	;# 
  2297     021D                     	;# 
  2298     021E                     	;# 
  2299     021F                     	;# 
  2300     0291                     	;# 
  2301     0291                     	;# 
  2302     0292                     	;# 
  2303     0293                     	;# 
  2304     0294                     	;# 
  2305     0295                     	;# 
  2306     0295                     	;# 
  2307     0296                     	;# 
  2308     0298                     	;# 
  2309     0298                     	;# 
  2310     0299                     	;# 
  2311     029A                     	;# 
  2312     029B                     	;# 
  2313     029C                     	;# 
  2314     029C                     	;# 
  2315     029D                     	;# 
  2316     029E                     	;# 
  2317     029E                     	;# 
  2318     0311                     	;# 
  2319     0311                     	;# 
  2320     0312                     	;# 
  2321     0313                     	;# 
  2322     0318                     	;# 
  2323     0318                     	;# 
  2324     0319                     	;# 
  2325     031A                     	;# 
  2326     0394                     	;# 
  2327     0395                     	;# 
  2328     0396                     	;# 
  2329     039A                     	;# 
  2330     039C                     	;# 
  2331     039D                     	;# 
  2332     039E                     	;# 
  2333     039F                     	;# 
  2334     0415                     	;# 
  2335     0416                     	;# 
  2336     0417                     	;# 
  2337     041C                     	;# 
  2338     041D                     	;# 
  2339     041E                     	;# 
  2340     0FE4                     	;# 
  2341     0FE5                     	;# 
  2342     0FE6                     	;# 
  2343     0FE7                     	;# 
  2344     0FE8                     	;# 
  2345     0FE9                     	;# 
  2346     0FEA                     	;# 
  2347     0FEB                     	;# 
  2348     0FED                     	;# 
  2349     0FEE                     	;# 
  2350     0FEF                     	;# 
  2351     0000                     	;# 
  2352     0001                     	;# 
  2353     0002                     	;# 
  2354     0003                     	;# 
  2355     0004                     	;# 
  2356     0005                     	;# 
  2357     0006                     	;# 
  2358     0007                     	;# 
  2359     0008                     	;# 
  2360     0009                     	;# 
  2361     000A                     	;# 
  2362     000B                     	;# 
  2363     000C                     	;# 
  2364     000D                     	;# 
  2365     0011                     	;# 
  2366     0012                     	;# 
  2367     0013                     	;# 
  2368     0014                     	;# 
  2369     0015                     	;# 
  2370     0016                     	;# 
  2371     0016                     	;# 
  2372     0017                     	;# 
  2373     0018                     	;# 
  2374     0019                     	;# 
  2375     001A                     	;# 
  2376     001B                     	;# 
  2377     001C                     	;# 
  2378     001E                     	;# 
  2379     001F                     	;# 
  2380     008C                     	;# 
  2381     008D                     	;# 
  2382     0091                     	;# 
  2383     0092                     	;# 
  2384     0093                     	;# 
  2385     0094                     	;# 
  2386     0095                     	;# 
  2387     0096                     	;# 
  2388     0097                     	;# 
  2389     0098                     	;# 
  2390     0099                     	;# 
  2391     009A                     	;# 
  2392     009B                     	;# 
  2393     009B                     	;# 
  2394     009C                     	;# 
  2395     009D                     	;# 
  2396     009E                     	;# 
  2397     010C                     	;# 
  2398     010D                     	;# 
  2399     0111                     	;# 
  2400     0112                     	;# 
  2401     0113                     	;# 
  2402     0114                     	;# 
  2403     0115                     	;# 
  2404     0116                     	;# 
  2405     0117                     	;# 
  2406     0118                     	;# 
  2407     0119                     	;# 
  2408     011A                     	;# 
  2409     011B                     	;# 
  2410     011D                     	;# 
  2411     011E                     	;# 
  2412     018C                     	;# 
  2413     018D                     	;# 
  2414     0191                     	;# 
  2415     0191                     	;# 
  2416     0192                     	;# 
  2417     0193                     	;# 
  2418     0193                     	;# 
  2419     0193                     	;# 
  2420     0194                     	;# 
  2421     0195                     	;# 
  2422     0196                     	;# 
  2423     0199                     	;# 
  2424     019A                     	;# 
  2425     019B                     	;# 
  2426     019B                     	;# 
  2427     019B                     	;# 
  2428     019B                     	;# 
  2429     019C                     	;# 
  2430     019C                     	;# 
  2431     019D                     	;# 
  2432     019E                     	;# 
  2433     019F                     	;# 
  2434     020C                     	;# 
  2435     020D                     	;# 
  2436     0211                     	;# 
  2437     0211                     	;# 
  2438     0212                     	;# 
  2439     0212                     	;# 
  2440     0213                     	;# 
  2441     0213                     	;# 
  2442     0214                     	;# 
  2443     0214                     	;# 
  2444     0215                     	;# 
  2445     0215                     	;# 
  2446     0215                     	;# 
  2447     0216                     	;# 
  2448     0216                     	;# 
  2449     0217                     	;# 
  2450     0217                     	;# 
  2451     0219                     	;# 
  2452     021A                     	;# 
  2453     021B                     	;# 
  2454     021C                     	;# 
  2455     021D                     	;# 
  2456     021E                     	;# 
  2457     021F                     	;# 
  2458     0291                     	;# 
  2459     0291                     	;# 
  2460     0292                     	;# 
  2461     0293                     	;# 
  2462     0294                     	;# 
  2463     0295                     	;# 
  2464     0295                     	;# 
  2465     0296                     	;# 
  2466     0298                     	;# 
  2467     0298                     	;# 
  2468     0299                     	;# 
  2469     029A                     	;# 
  2470     029B                     	;# 
  2471     029C                     	;# 
  2472     029C                     	;# 
  2473     029D                     	;# 
  2474     029E                     	;# 
  2475     029E                     	;# 
  2476     0311                     	;# 
  2477     0311                     	;# 
  2478     0312                     	;# 
  2479     0313                     	;# 
  2480     0318                     	;# 
  2481     0318                     	;# 
  2482     0319                     	;# 
  2483     031A                     	;# 
  2484     0394                     	;# 
  2485     0395                     	;# 
  2486     0396                     	;# 
  2487     039A                     	;# 
  2488     039C                     	;# 
  2489     039D                     	;# 
  2490     039E                     	;# 
  2491     039F                     	;# 
  2492     0415                     	;# 
  2493     0416                     	;# 
  2494     0417                     	;# 
  2495     041C                     	;# 
  2496     041D                     	;# 
  2497     041E                     	;# 
  2498     0FE4                     	;# 
  2499     0FE5                     	;# 
  2500     0FE6                     	;# 
  2501     0FE7                     	;# 
  2502     0FE8                     	;# 
  2503     0FE9                     	;# 
  2504     0FEA                     	;# 
  2505     0FEB                     	;# 
  2506     0FED                     	;# 
  2507     0FEE                     	;# 
  2508     0FEF                     	;# 
  2509     0000                     	;# 
  2510     0001                     	;# 
  2511     0002                     	;# 
  2512     0003                     	;# 
  2513     0004                     	;# 
  2514     0005                     	;# 
  2515     0006                     	;# 
  2516     0007                     	;# 
  2517     0008                     	;# 
  2518     0009                     	;# 
  2519     000A                     	;# 
  2520     000B                     	;# 
  2521     000C                     	;# 
  2522     000D                     	;# 
  2523     0011                     	;# 
  2524     0012                     	;# 
  2525     0013                     	;# 
  2526     0014                     	;# 
  2527     0015                     	;# 
  2528     0016                     	;# 
  2529     0016                     	;# 
  2530     0017                     	;# 
  2531     0018                     	;# 
  2532     0019                     	;# 
  2533     001A                     	;# 
  2534     001B                     	;# 
  2535     001C                     	;# 
  2536     001E                     	;# 
  2537     001F                     	;# 
  2538     008C                     	;# 
  2539     008D                     	;# 
  2540     0091                     	;# 
  2541     0092                     	;# 
  2542     0093                     	;# 
  2543     0094                     	;# 
  2544     0095                     	;# 
  2545     0096                     	;# 
  2546     0097                     	;# 
  2547     0098                     	;# 
  2548     0099                     	;# 
  2549     009A                     	;# 
  2550     009B                     	;# 
  2551     009B                     	;# 
  2552     009C                     	;# 
  2553     009D                     	;# 
  2554     009E                     	;# 
  2555     010C                     	;# 
  2556     010D                     	;# 
  2557     0111                     	;# 
  2558     0112                     	;# 
  2559     0113                     	;# 
  2560     0114                     	;# 
  2561     0115                     	;# 
  2562     0116                     	;# 
  2563     0117                     	;# 
  2564     0118                     	;# 
  2565     0119                     	;# 
  2566     011A                     	;# 
  2567     011B                     	;# 
  2568     011D                     	;# 
  2569     011E                     	;# 
  2570     018C                     	;# 
  2571     018D                     	;# 
  2572     0191                     	;# 
  2573     0191                     	;# 
  2574     0192                     	;# 
  2575     0193                     	;# 
  2576     0193                     	;# 
  2577     0193                     	;# 
  2578     0194                     	;# 
  2579     0195                     	;# 
  2580     0196                     	;# 
  2581     0199                     	;# 
  2582     019A                     	;# 
  2583     019B                     	;# 
  2584     019B                     	;# 
  2585     019B                     	;# 
  2586     019B                     	;# 
  2587     019C                     	;# 
  2588     019C                     	;# 
  2589     019D                     	;# 
  2590     019E                     	;# 
  2591     019F                     	;# 
  2592     020C                     	;# 
  2593     020D                     	;# 
  2594     0211                     	;# 
  2595     0211                     	;# 
  2596     0212                     	;# 
  2597     0212                     	;# 
  2598     0213                     	;# 
  2599     0213                     	;# 
  2600     0214                     	;# 
  2601     0214                     	;# 
  2602     0215                     	;# 
  2603     0215                     	;# 
  2604     0215                     	;# 
  2605     0216                     	;# 
  2606     0216                     	;# 
  2607     0217                     	;# 
  2608     0217                     	;# 
  2609     0219                     	;# 
  2610     021A                     	;# 
  2611     021B                     	;# 
  2612     021C                     	;# 
  2613     021D                     	;# 
  2614     021E                     	;# 
  2615     021F                     	;# 
  2616     0291                     	;# 
  2617     0291                     	;# 
  2618     0292                     	;# 
  2619     0293                     	;# 
  2620     0294                     	;# 
  2621     0295                     	;# 
  2622     0295                     	;# 
  2623     0296                     	;# 
  2624     0298                     	;# 
  2625     0298                     	;# 
  2626     0299                     	;# 
  2627     029A                     	;# 
  2628     029B                     	;# 
  2629     029C                     	;# 
  2630     029C                     	;# 
  2631     029D                     	;# 
  2632     029E                     	;# 
  2633     029E                     	;# 
  2634     0311                     	;# 
  2635     0311                     	;# 
  2636     0312                     	;# 
  2637     0313                     	;# 
  2638     0318                     	;# 
  2639     0318                     	;# 
  2640     0319                     	;# 
  2641     031A                     	;# 
  2642     0394                     	;# 
  2643     0395                     	;# 
  2644     0396                     	;# 
  2645     039A                     	;# 
  2646     039C                     	;# 
  2647     039D                     	;# 
  2648     039E                     	;# 
  2649     039F                     	;# 
  2650     0415                     	;# 
  2651     0416                     	;# 
  2652     0417                     	;# 
  2653     041C                     	;# 
  2654     041D                     	;# 
  2655     041E                     	;# 
  2656     0FE4                     	;# 
  2657     0FE5                     	;# 
  2658     0FE6                     	;# 
  2659     0FE7                     	;# 
  2660     0FE8                     	;# 
  2661     0FE9                     	;# 
  2662     0FEA                     	;# 
  2663     0FEB                     	;# 
  2664     0FED                     	;# 
  2665     0FEE                     	;# 
  2666     0FEF                     	;# 
  2667     0000                     	;# 
  2668     0001                     	;# 
  2669     0002                     	;# 
  2670     0003                     	;# 
  2671     0004                     	;# 
  2672     0005                     	;# 
  2673     0006                     	;# 
  2674     0007                     	;# 
  2675     0008                     	;# 
  2676     0009                     	;# 
  2677     000A                     	;# 
  2678     000B                     	;# 
  2679     000C                     	;# 
  2680     000D                     	;# 
  2681     0011                     	;# 
  2682     0012                     	;# 
  2683     0013                     	;# 
  2684     0014                     	;# 
  2685     0015                     	;# 
  2686     0016                     	;# 
  2687     0016                     	;# 
  2688     0017                     	;# 
  2689     0018                     	;# 
  2690     0019                     	;# 
  2691     001A                     	;# 
  2692     001B                     	;# 
  2693     001C                     	;# 
  2694     001E                     	;# 
  2695     001F                     	;# 
  2696     008C                     	;# 
  2697     008D                     	;# 
  2698     0091                     	;# 
  2699     0092                     	;# 
  2700     0093                     	;# 
  2701     0094                     	;# 
  2702     0095                     	;# 
  2703     0096                     	;# 
  2704     0097                     	;# 
  2705     0098                     	;# 
  2706     0099                     	;# 
  2707     009A                     	;# 
  2708     009B                     	;# 
  2709     009B                     	;# 
  2710     009C                     	;# 
  2711     009D                     	;# 
  2712     009E                     	;# 
  2713     010C                     	;# 
  2714     010D                     	;# 
  2715     0111                     	;# 
  2716     0112                     	;# 
  2717     0113                     	;# 
  2718     0114                     	;# 
  2719     0115                     	;# 
  2720     0116                     	;# 
  2721     0117                     	;# 
  2722     0118                     	;# 
  2723     0119                     	;# 
  2724     011A                     	;# 
  2725     011B                     	;# 
  2726     011D                     	;# 
  2727     011E                     	;# 
  2728     018C                     	;# 
  2729     018D                     	;# 
  2730     0191                     	;# 
  2731     0191                     	;# 
  2732     0192                     	;# 
  2733     0193                     	;# 
  2734     0193                     	;# 
  2735     0193                     	;# 
  2736     0194                     	;# 
  2737     0195                     	;# 
  2738     0196                     	;# 
  2739     0199                     	;# 
  2740     019A                     	;# 
  2741     019B                     	;# 
  2742     019B                     	;# 
  2743     019B                     	;# 
  2744     019B                     	;# 
  2745     019C                     	;# 
  2746     019C                     	;# 
  2747     019D                     	;# 
  2748     019E                     	;# 
  2749     019F                     	;# 
  2750     020C                     	;# 
  2751     020D                     	;# 
  2752     0211                     	;# 
  2753     0211                     	;# 
  2754     0212                     	;# 
  2755     0212                     	;# 
  2756     0213                     	;# 
  2757     0213                     	;# 
  2758     0214                     	;# 
  2759     0214                     	;# 
  2760     0215                     	;# 
  2761     0215                     	;# 
  2762     0215                     	;# 
  2763     0216                     	;# 
  2764     0216                     	;# 
  2765     0217                     	;# 
  2766     0217                     	;# 
  2767     0219                     	;# 
  2768     021A                     	;# 
  2769     021B                     	;# 
  2770     021C                     	;# 
  2771     021D                     	;# 
  2772     021E                     	;# 
  2773     021F                     	;# 
  2774     0291                     	;# 
  2775     0291                     	;# 
  2776     0292                     	;# 
  2777     0293                     	;# 
  2778     0294                     	;# 
  2779     0295                     	;# 
  2780     0295                     	;# 
  2781     0296                     	;# 
  2782     0298                     	;# 
  2783     0298                     	;# 
  2784     0299                     	;# 
  2785     029A                     	;# 
  2786     029B                     	;# 
  2787     029C                     	;# 
  2788     029C                     	;# 
  2789     029D                     	;# 
  2790     029E                     	;# 
  2791     029E                     	;# 
  2792     0311                     	;# 
  2793     0311                     	;# 
  2794     0312                     	;# 
  2795     0313                     	;# 
  2796     0318                     	;# 
  2797     0318                     	;# 
  2798     0319                     	;# 
  2799     031A                     	;# 
  2800     0394                     	;# 
  2801     0395                     	;# 
  2802     0396                     	;# 
  2803     039A                     	;# 
  2804     039C                     	;# 
  2805     039D                     	;# 
  2806     039E                     	;# 
  2807     039F                     	;# 
  2808     0415                     	;# 
  2809     0416                     	;# 
  2810     0417                     	;# 
  2811     041C                     	;# 
  2812     041D                     	;# 
  2813     041E                     	;# 
  2814     0FE4                     	;# 
  2815     0FE5                     	;# 
  2816     0FE6                     	;# 
  2817     0FE7                     	;# 
  2818     0FE8                     	;# 
  2819     0FE9                     	;# 
  2820     0FEA                     	;# 
  2821     0FEB                     	;# 
  2822     0FED                     	;# 
  2823     0FEE                     	;# 
  2824     0FEF                     	;# 
  2825     0000                     	;# 
  2826     0001                     	;# 
  2827     0002                     	;# 
  2828     0003                     	;# 
  2829     0004                     	;# 
  2830     0005                     	;# 
  2831     0006                     	;# 
  2832     0007                     	;# 
  2833     0008                     	;# 
  2834     0009                     	;# 
  2835     000A                     	;# 
  2836     000B                     	;# 
  2837     000C                     	;# 
  2838     000D                     	;# 
  2839     0011                     	;# 
  2840     0012                     	;# 
  2841     0013                     	;# 
  2842     0014                     	;# 
  2843     0015                     	;# 
  2844     0016                     	;# 
  2845     0016                     	;# 
  2846     0017                     	;# 
  2847     0018                     	;# 
  2848     0019                     	;# 
  2849     001A                     	;# 
  2850     001B                     	;# 
  2851     001C                     	;# 
  2852     001E                     	;# 
  2853     001F                     	;# 
  2854     008C                     	;# 
  2855     008D                     	;# 
  2856     0091                     	;# 
  2857     0092                     	;# 
  2858     0093                     	;# 
  2859     0094                     	;# 
  2860     0095                     	;# 
  2861     0096                     	;# 
  2862     0097                     	;# 
  2863     0098                     	;# 
  2864     0099                     	;# 
  2865     009A                     	;# 
  2866     009B                     	;# 
  2867     009B                     	;# 
  2868     009C                     	;# 
  2869     009D                     	;# 
  2870     009E                     	;# 
  2871     010C                     	;# 
  2872     010D                     	;# 
  2873     0111                     	;# 
  2874     0112                     	;# 
  2875     0113                     	;# 
  2876     0114                     	;# 
  2877     0115                     	;# 
  2878     0116                     	;# 
  2879     0117                     	;# 
  2880     0118                     	;# 
  2881     0119                     	;# 
  2882     011A                     	;# 
  2883     011B                     	;# 
  2884     011D                     	;# 
  2885     011E                     	;# 
  2886     018C                     	;# 
  2887     018D                     	;# 
  2888     0191                     	;# 
  2889     0191                     	;# 
  2890     0192                     	;# 
  2891     0193                     	;# 
  2892     0193                     	;# 
  2893     0193                     	;# 
  2894     0194                     	;# 
  2895     0195                     	;# 
  2896     0196                     	;# 
  2897     0199                     	;# 
  2898     019A                     	;# 
  2899     019B                     	;# 
  2900     019B                     	;# 
  2901     019B                     	;# 
  2902     019B                     	;# 
  2903     019C                     	;# 
  2904     019C                     	;# 
  2905     019D                     	;# 
  2906     019E                     	;# 
  2907     019F                     	;# 
  2908     020C                     	;# 
  2909     020D                     	;# 
  2910     0211                     	;# 
  2911     0211                     	;# 
  2912     0212                     	;# 
  2913     0212                     	;# 
  2914     0213                     	;# 
  2915     0213                     	;# 
  2916     0214                     	;# 
  2917     0214                     	;# 
  2918     0215                     	;# 
  2919     0215                     	;# 
  2920     0215                     	;# 
  2921     0216                     	;# 
  2922     0216                     	;# 
  2923     0217                     	;# 
  2924     0217                     	;# 
  2925     0219                     	;# 
  2926     021A                     	;# 
  2927     021B                     	;# 
  2928     021C                     	;# 
  2929     021D                     	;# 
  2930     021E                     	;# 
  2931     021F                     	;# 
  2932     0291                     	;# 
  2933     0291                     	;# 
  2934     0292                     	;# 
  2935     0293                     	;# 
  2936     0294                     	;# 
  2937     0295                     	;# 
  2938     0295                     	;# 
  2939     0296                     	;# 
  2940     0298                     	;# 
  2941     0298                     	;# 
  2942     0299                     	;# 
  2943     029A                     	;# 
  2944     029B                     	;# 
  2945     029C                     	;# 
  2946     029C                     	;# 
  2947     029D                     	;# 
  2948     029E                     	;# 
  2949     029E                     	;# 
  2950     0311                     	;# 
  2951     0311                     	;# 
  2952     0312                     	;# 
  2953     0313                     	;# 
  2954     0318                     	;# 
  2955     0318                     	;# 
  2956     0319                     	;# 
  2957     031A                     	;# 
  2958     0394                     	;# 
  2959     0395                     	;# 
  2960     0396                     	;# 
  2961     039A                     	;# 
  2962     039C                     	;# 
  2963     039D                     	;# 
  2964     039E                     	;# 
  2965     039F                     	;# 
  2966     0415                     	;# 
  2967     0416                     	;# 
  2968     0417                     	;# 
  2969     041C                     	;# 
  2970     041D                     	;# 
  2971     041E                     	;# 
  2972     0FE4                     	;# 
  2973     0FE5                     	;# 
  2974     0FE6                     	;# 
  2975     0FE7                     	;# 
  2976     0FE8                     	;# 
  2977     0FE9                     	;# 
  2978     0FEA                     	;# 
  2979     0FEB                     	;# 
  2980     0FED                     	;# 
  2981     0FEE                     	;# 
  2982     0FEF                     	;# 
  2983     0000                     	;# 
  2984     0001                     	;# 
  2985     0002                     	;# 
  2986     0003                     	;# 
  2987     0004                     	;# 
  2988     0005                     	;# 
  2989     0006                     	;# 
  2990     0007                     	;# 
  2991     0008                     	;# 
  2992     0009                     	;# 
  2993     000A                     	;# 
  2994     000B                     	;# 
  2995     000C                     	;# 
  2996     000D                     	;# 
  2997     0011                     	;# 
  2998     0012                     	;# 
  2999     0013                     	;# 
  3000     0014                     	;# 
  3001     0015                     	;# 
  3002     0016                     	;# 
  3003     0016                     	;# 
  3004     0017                     	;# 
  3005     0018                     	;# 
  3006     0019                     	;# 
  3007     001A                     	;# 
  3008     001B                     	;# 
  3009     001C                     	;# 
  3010     001E                     	;# 
  3011     001F                     	;# 
  3012     008C                     	;# 
  3013     008D                     	;# 
  3014     0091                     	;# 
  3015     0092                     	;# 
  3016     0093                     	;# 
  3017     0094                     	;# 
  3018     0095                     	;# 
  3019     0096                     	;# 
  3020     0097                     	;# 
  3021     0098                     	;# 
  3022     0099                     	;# 
  3023     009A                     	;# 
  3024     009B                     	;# 
  3025     009B                     	;# 
  3026     009C                     	;# 
  3027     009D                     	;# 
  3028     009E                     	;# 
  3029     010C                     	;# 
  3030     010D                     	;# 
  3031     0111                     	;# 
  3032     0112                     	;# 
  3033     0113                     	;# 
  3034     0114                     	;# 
  3035     0115                     	;# 
  3036     0116                     	;# 
  3037     0117                     	;# 
  3038     0118                     	;# 
  3039     0119                     	;# 
  3040     011A                     	;# 
  3041     011B                     	;# 
  3042     011D                     	;# 
  3043     011E                     	;# 
  3044     018C                     	;# 
  3045     018D                     	;# 
  3046     0191                     	;# 
  3047     0191                     	;# 
  3048     0192                     	;# 
  3049     0193                     	;# 
  3050     0193                     	;# 
  3051     0193                     	;# 
  3052     0194                     	;# 
  3053     0195                     	;# 
  3054     0196                     	;# 
  3055     0199                     	;# 
  3056     019A                     	;# 
  3057     019B                     	;# 
  3058     019B                     	;# 
  3059     019B                     	;# 
  3060     019B                     	;# 
  3061     019C                     	;# 
  3062     019C                     	;# 
  3063     019D                     	;# 
  3064     019E                     	;# 
  3065     019F                     	;# 
  3066     020C                     	;# 
  3067     020D                     	;# 
  3068     0211                     	;# 
  3069     0211                     	;# 
  3070     0212                     	;# 
  3071     0212                     	;# 
  3072     0213                     	;# 
  3073     0213                     	;# 
  3074     0214                     	;# 
  3075     0214                     	;# 
  3076     0215                     	;# 
  3077     0215                     	;# 
  3078     0215                     	;# 
  3079     0216                     	;# 
  3080     0216                     	;# 
  3081     0217                     	;# 
  3082     0217                     	;# 
  3083     0219                     	;# 
  3084     021A                     	;# 
  3085     021B                     	;# 
  3086     021C                     	;# 
  3087     021D                     	;# 
  3088     021E                     	;# 
  3089     021F                     	;# 
  3090     0291                     	;# 
  3091     0291                     	;# 
  3092     0292                     	;# 
  3093     0293                     	;# 
  3094     0294                     	;# 
  3095     0295                     	;# 
  3096     0295                     	;# 
  3097     0296                     	;# 
  3098     0298                     	;# 
  3099     0298                     	;# 
  3100     0299                     	;# 
  3101     029A                     	;# 
  3102     029B                     	;# 
  3103     029C                     	;# 
  3104     029C                     	;# 
  3105     029D                     	;# 
  3106     029E                     	;# 
  3107     029E                     	;# 
  3108     0311                     	;# 
  3109     0311                     	;# 
  3110     0312                     	;# 
  3111     0313                     	;# 
  3112     0318                     	;# 
  3113     0318                     	;# 
  3114     0319                     	;# 
  3115     031A                     	;# 
  3116     0394                     	;# 
  3117     0395                     	;# 
  3118     0396                     	;# 
  3119     039A                     	;# 
  3120     039C                     	;# 
  3121     039D                     	;# 
  3122     039E                     	;# 
  3123     039F                     	;# 
  3124     0415                     	;# 
  3125     0416                     	;# 
  3126     0417                     	;# 
  3127     041C                     	;# 
  3128     041D                     	;# 
  3129     041E                     	;# 
  3130     0FE4                     	;# 
  3131     0FE5                     	;# 
  3132     0FE6                     	;# 
  3133     0FE7                     	;# 
  3134     0FE8                     	;# 
  3135     0FE9                     	;# 
  3136     0FEA                     	;# 
  3137     0FEB                     	;# 
  3138     0FED                     	;# 
  3139     0FEE                     	;# 
  3140     0FEF                     	;# 
  3141                           
  3142                           	psect	eeprom_data
  3143     0000  00FF 0081 0081 00FF 0000 0000 0000 00FF 	db	255,129,129,255,0,0,0,255	;# 
  3144     0008  00C2 00A1 0091 008E 0042 0089 0089 0076 	db	194,161,145,142,66,137,137,118	;# 
  3145     0010  001F 0010 0010 00FF 008F 0089 0089 0071 	db	31,16,16,255,143,137,137,113	;# 
  3146     0018  007E 0089 0089 0072 0009 0009 0009 00FF 	db	126,137,137,114,9,9,9,255	;# 
  3147     0020  0076 0089 0089 0076 004E 0091 0091 007E 	db	118,137,137,118,78,145,145,126	;# 
  3148     0028  0000 0018 0006 0018 0000 0018 0060 0018 	db	0,24,6,24,0,24,96,24	;# 
  3149     0030  0000 0000 0000 0000 0000 0018 0066 0018 	db	0,0,0,0,0,24,102,24	;# 
  3150     0000                     	;# 
  3151     0001                     	;# 
  3152     0002                     	;# 
  3153     0003                     	;# 
  3154     0004                     	;# 
  3155     0005                     	;# 
  3156     0006                     	;# 
  3157     0007                     	;# 
  3158     0008                     	;# 
  3159     0009                     	;# 
  3160     000A                     	;# 
  3161     000B                     	;# 
  3162     000C                     	;# 
  3163     000D                     	;# 
  3164     0011                     	;# 
  3165     0012                     	;# 
  3166     0013                     	;# 
  3167     0014                     	;# 
  3168     0015                     	;# 
  3169     0016                     	;# 
  3170     0016                     	;# 
  3171     0017                     	;# 
  3172     0018                     	;# 
  3173     0019                     	;# 
  3174     001A                     	;# 
  3175     001B                     	;# 
  3176     001C                     	;# 
  3177     001E                     	;# 
  3178     001F                     	;# 
  3179     008C                     	;# 
  3180     008D                     	;# 
  3181     0091                     	;# 
  3182     0092                     	;# 
  3183     0093                     	;# 
  3184     0094                     	;# 
  3185     0095                     	;# 
  3186     0096                     	;# 
  3187     0097                     	;# 
  3188     0098                     	;# 
  3189     0099                     	;# 
  3190     009A                     	;# 
  3191     009B                     	;# 
  3192     009B                     	;# 
  3193     009C                     	;# 
  3194     009D                     	;# 
  3195     009E                     	;# 
  3196     010C                     	;# 
  3197     010D                     	;# 
  3198     0111                     	;# 
  3199     0112                     	;# 
  3200     0113                     	;# 
  3201     0114                     	;# 
  3202     0115                     	;# 
  3203     0116                     	;# 
  3204     0117                     	;# 
  3205     0118                     	;# 
  3206     0119                     	;# 
  3207     011A                     	;# 
  3208     011B                     	;# 
  3209     011D                     	;# 
  3210     011E                     	;# 
  3211     018C                     	;# 
  3212     018D                     	;# 
  3213     0191                     	;# 
  3214     0191                     	;# 
  3215     0192                     	;# 
  3216     0193                     	;# 
  3217     0193                     	;# 
  3218     0193                     	;# 
  3219     0194                     	;# 
  3220     0195                     	;# 
  3221     0196                     	;# 
  3222     0199                     	;# 
  3223     019A                     	;# 
  3224     019B                     	;# 
  3225     019B                     	;# 
  3226     019B                     	;# 
  3227     019B                     	;# 
  3228     019C                     	;# 
  3229     019C                     	;# 
  3230     019D                     	;# 
  3231     019E                     	;# 
  3232     019F                     	;# 
  3233     020C                     	;# 
  3234     020D                     	;# 
  3235     0211                     	;# 
  3236     0211                     	;# 
  3237     0212                     	;# 
  3238     0212                     	;# 
  3239     0213                     	;# 
  3240     0213                     	;# 
  3241     0214                     	;# 
  3242     0214                     	;# 
  3243     0215                     	;# 
  3244     0215                     	;# 
  3245     0215                     	;# 
  3246     0216                     	;# 
  3247     0216                     	;# 
  3248     0217                     	;# 
  3249     0217                     	;# 
  3250     0219                     	;# 
  3251     021A                     	;# 
  3252     021B                     	;# 
  3253     021C                     	;# 
  3254     021D                     	;# 
  3255     021E                     	;# 
  3256     021F                     	;# 
  3257     0291                     	;# 
  3258     0291                     	;# 
  3259     0292                     	;# 
  3260     0293                     	;# 
  3261     0294                     	;# 
  3262     0295                     	;# 
  3263     0295                     	;# 
  3264     0296                     	;# 
  3265     0298                     	;# 
  3266     0298                     	;# 
  3267     0299                     	;# 
  3268     029A                     	;# 
  3269     029B                     	;# 
  3270     029C                     	;# 
  3271     029C                     	;# 
  3272     029D                     	;# 
  3273     029E                     	;# 
  3274     029E                     	;# 
  3275     0311                     	;# 
  3276     0311                     	;# 
  3277     0312                     	;# 
  3278     0313                     	;# 
  3279     0318                     	;# 
  3280     0318                     	;# 
  3281     0319                     	;# 
  3282     031A                     	;# 
  3283     0394                     	;# 
  3284     0395                     	;# 
  3285     0396                     	;# 
  3286     039A                     	;# 
  3287     039C                     	;# 
  3288     039D                     	;# 
  3289     039E                     	;# 
  3290     039F                     	;# 
  3291     0415                     	;# 
  3292     0416                     	;# 
  3293     0417                     	;# 
  3294     041C                     	;# 
  3295     041D                     	;# 
  3296     041E                     	;# 
  3297     0FE4                     	;# 
  3298     0FE5                     	;# 
  3299     0FE6                     	;# 
  3300     0FE7                     	;# 
  3301     0FE8                     	;# 
  3302     0FE9                     	;# 
  3303     0FEA                     	;# 
  3304     0FEB                     	;# 
  3305     0FED                     	;# 
  3306     0FEE                     	;# 
  3307     0FEF                     	;# 
  3308                           
  3309 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  3310     0000                     
  3311 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  3312     0000                     
  3313 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  3314     0000                     
  3315                           	psect	idataBANK1
  3316     0002                     __pidataBANK1:
  3317                           
  3318                           ;initializer for _targetFloor
  3319     0002  3401               	retlw	1
  3320                           
  3321                           ;initializer for _currentFloor
  3322     0003  3404               	retlw	4
  3323                           
  3324                           	psect	stringtext1
  3325     07FF                     __pstringtext1:
  3326     07FF                     _spi1_configuration:
  3327     07FF  3400               	retlw	0
  3328     0800  3400               	retlw	0
  3329     0801  3401               	retlw	1
  3330     0802  3400               	retlw	0
  3331     0803                     __end_of_spi1_configuration:
  3332                           
  3333                           	psect	nvBANK0
  3334     005D                     __pnvBANK0:
  3335     005D                     _TMR0_InterruptHandler:
  3336     005D                     	ds	2
  3337     005F                     _timer1ReloadVal:
  3338     005F                     	ds	2
  3339     0061                     _CCP4_CallBack:
  3340     0061                     	ds	2
  3341     0063                     _timer0ReloadVal:
  3342     0063                     	ds	1
  3343                           
  3344                           	psect	nvBANK1
  3345     00A0                     __pnvBANK1:
  3346     00A0                     _CMP1_InterruptHandler:
  3347     00A0                     	ds	2
  3348     00A2                     _TMR4_InterruptHandler:
  3349     00A2                     	ds	2
  3350     00A4                     _TMR6_InterruptHandler:
  3351     00A4                     	ds	2
  3352     00A6                     _CMP2_InterruptHandler:
  3353     00A6                     	ds	2
  3354     00A8                     _IOCBF3_InterruptHandler:
  3355     00A8                     	ds	2
  3356     00AA                     _IOCBF0_InterruptHandler:
  3357     00AA                     	ds	2
  3358     00AC                     _EUSART_ErrorHandler:
  3359     00AC                     	ds	2
  3360     00AE                     _EUSART_OverrunErrorHandler:
  3361     00AE                     	ds	2
  3362     00B0                     _EUSART_FramingErrorHandler:
  3363     00B0                     	ds	2
  3364     0015                     _TMR0	set	21
  3365     0019                     _T1GCONbits	set	25
  3366     0018                     _T1CONbits	set	24
  3367     0018                     _T1CON	set	24
  3368     0016                     _TMR1L	set	22
  3369     0017                     _TMR1H	set	23
  3370     0019                     _T1GCON	set	25
  3371     001C                     _T2CONbits	set	28
  3372     001C                     _T2CON	set	28
  3373     001A                     _TMR2	set	26
  3374     001B                     _PR2	set	27
  3375     0012                     _PIR2bits	set	18
  3376     0013                     _PIR3bits	set	19
  3377     000B                     _INTCONbits	set	11
  3378     0011                     _PIR1bits	set	17
  3379     009D                     _ADCON0bits	set	157
  3380     009D                     _ADCON0	set	157
  3381     009C                     _ADRESH	set	156
  3382     009B                     _ADRESL	set	155
  3383     009E                     _ADCON1	set	158
  3384     0095                     _OPTION_REG	set	149
  3385     0097                     _WDTCON	set	151
  3386     0098                     _OSCTUNE	set	152
  3387     0099                     _OSCCON	set	153
  3388     0095                     _OPTION_REGbits	set	149
  3389     008D                     _TRISB	set	141
  3390     008C                     _TRISA	set	140
  3391     0092                     _PIE2bits	set	146
  3392     0093                     _PIE3bits	set	147
  3393     008D                     _TRISBbits	set	141
  3394     010D                     _LATBbits	set	269
  3395     010C                     _LATAbits	set	268
  3396     0112                     _CM1CON1	set	274
  3397     0111                     _CM1CON0	set	273
  3398     0119                     _DACCON1	set	281
  3399     0118                     _DACCON0	set	280
  3400     0115                     _CMOUTbits	set	277
  3401     0114                     _CM2CON1	set	276
  3402     0113                     _CM2CON0	set	275
  3403     0116                     _BORCON	set	278
  3404     011E                     _APFCON1	set	286
  3405     011D                     _APFCON0	set	285
  3406     010D                     _LATB	set	269
  3407     010C                     _LATA	set	268
  3408     0196                     _EECON2	set	406
  3409     0193                     _EEDATL	set	403
  3410     0194                     _EEDATH	set	404
  3411     0195                     _EECON1bits	set	405
  3412     0192                     _EEADRH	set	402
  3413     0191                     _EEADRL	set	401
  3414     018C                     _ANSELA	set	396
  3415     018D                     _ANSELB	set	397
  3416     019A                     _TXREG	set	410
  3417     0199                     _RCREG	set	409
  3418     019D                     _RCSTAbits	set	413
  3419     019E                     _TXSTAbits	set	414
  3420     019C                     _SPBRGH	set	412
  3421     019B                     _SPBRGL	set	411
  3422     019E                     _TXSTA	set	414
  3423     019D                     _RCSTA	set	413
  3424     019F                     _BAUDCON	set	415
  3425     020C                     _WPUA	set	524
  3426     020D                     _WPUB	set	525
  3427     0211                     _SSP1BUF	set	529
  3428     0216                     _SSP1CON2	set	534
  3429     0215                     _SSP1CON1bits	set	533
  3430     0212                     _SSP1ADD	set	530
  3431     0215                     _SSP1CON1	set	533
  3432     0214                     _SSP1STAT	set	532
  3433     029E                     _CCPTMRS0bits	set	670
  3434     0319                     _CCPR4H	set	793
  3435     0318                     _CCPR4L	set	792
  3436     031A                     _CCP4CON	set	794
  3437     0312                     _CCPR3H	set	786
  3438     0311                     _CCPR3L	set	785
  3439     0313                     _CCP3CON	set	787
  3440     0394                     _IOCBPbits	set	916
  3441     0395                     _IOCBNbits	set	917
  3442     0396                     _IOCBFbits	set	918
  3443     0417                     _T4CONbits	set	1047
  3444     0417                     _T4CON	set	1047
  3445     0415                     _TMR4	set	1045
  3446     0416                     _PR4	set	1046
  3447     041E                     _T6CONbits	set	1054
  3448     041E                     _T6CON	set	1054
  3449     041C                     _TMR6	set	1052
  3450     041D                     _PR6	set	1053
  3451                           
  3452                           	psect	cinit
  3453     006C                     start_initialization:	
  3454                           ; #config settings
  3455                           
  3456     006C                     __initialization:
  3457                           
  3458                           ; Initialize objects allocated to BANK1
  3459     006C  0021               	movlb	1	; select bank1
  3460     006D  3180  2002  3180   	fcall	__pidataBANK1	;fetch initializer
  3461     0070  00C5               	movwf	__pdataBANK1& (0+127)
  3462     0071  3180  2003  3180   	fcall	__pidataBANK1+1	;fetch initializer
  3463     0074  00C6               	movwf	(__pdataBANK1+1)& (0+127)
  3464                           
  3465                           ; Clear objects allocated to BANK0
  3466     0075  304D               	movlw	low __pbssBANK0
  3467     0076  0084               	movwf	4
  3468     0077  3000               	movlw	high __pbssBANK0
  3469     0078  0085               	movwf	5
  3470     0079  3010               	movlw	16
  3471     007A  318E  269A  3180   	fcall	clear_ram0
  3472                           
  3473                           ; Clear objects allocated to BANK1
  3474     007D  30B2               	movlw	low __pbssBANK1
  3475     007E  0084               	movwf	4
  3476     007F  3000               	movlw	high __pbssBANK1
  3477     0080  0085               	movwf	5
  3478     0081  300B               	movlw	11
  3479     0082  318E  269A  3180   	fcall	clear_ram0
  3480     0085                     end_of_initialization:	
  3481                           ;End of C runtime variable initialization code
  3482                           
  3483     0085                     __end_of__initialization:
  3484     0085  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3485     0086  0020               	movlb	0
  3486     0087  3183  2B6A         	ljmp	_main	;jump to C main() function
  3487                           
  3488                           	psect	bssBANK0
  3489     004D                     __pbssBANK0:
  3490     004D                     _data_tx:
  3491     004D                     	ds	4
  3492     0051                     _Enc_pulse:
  3493     0051                     	ds	2
  3494     0053                     _pulse:
  3495     0053                     	ds	2
  3496     0055                     TMR4_ISR@CountCallBack:
  3497     0055                     	ds	2
  3498     0057                     TMR6_ISR@CountCallBack:
  3499     0057                     	ds	2
  3500     0059                     _ADC_InterruptHandler:
  3501     0059                     	ds	2
  3502     005B                     _velocity:
  3503     005B                     	ds	1
  3504     005C                     _position:
  3505     005C                     	ds	1
  3506                           
  3507                           	psect	bssBANK1
  3508     00B2                     __pbssBANK1:
  3509     00B2                     _matrix:
  3510     00B2                     	ds	8
  3511     00BA                     _motorLoading:
  3512     00BA                     	ds	1
  3513     00BB                     _eusartRxLastError:
  3514     00BB                     	ds	1
  3515     00BC                     _motorState:
  3516     00BC                     	ds	1
  3517                           
  3518                           	psect	dataBANK1
  3519     00C5                     __pdataBANK1:
  3520     00C5                     _targetFloor:
  3521     00C5                     	ds	1
  3522     00C6                     _currentFloor:
  3523     00C6                     	ds	1
  3524                           
  3525                           	psect	clrtext
  3526     0E9A                     clear_ram0:	
  3527                           ;	Called with FSR0 containing the base address, and
  3528                           ;	WREG with the size to clear
  3529                           
  3530     0E9A  0064               	clrwdt	;clear the watchdog before getting into this loop
  3531     0E9B                     clrloop0:
  3532     0E9B  0180               	clrf	0	;clear RAM location pointed to by FSR
  3533     0E9C  3101               	addfsr 0,1
  3534     0E9D  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3535     0E9E  2E9B               	goto	clrloop0	;have we reached the end yet?
  3536     0E9F  3400               	retlw	0	;all done for this memory range, return
  3537                           
  3538                           	psect	cstackBANK1
  3539     00BD                     __pcstackBANK1:
  3540     00BD                     ?_EUSART_SetFramingErrorHandler:
  3541     00BD                     ?_EUSART_SetOverrunErrorHandler:	
  3542                           ; 1 bytes @ 0x0
  3543                           
  3544     00BD                     ?_EUSART_SetErrorHandler:	
  3545                           ; 1 bytes @ 0x0
  3546                           
  3547     00BD                     ?_IOCBF0_SetInterruptHandler:	
  3548                           ; 1 bytes @ 0x0
  3549                           
  3550     00BD                     ?_IOCBF3_SetInterruptHandler:	
  3551                           ; 1 bytes @ 0x0
  3552                           
  3553     00BD                     ?_CCP4_SetCallBack:	
  3554                           ; 1 bytes @ 0x0
  3555                           
  3556     00BD                     ??_OSCILLATOR_Initialize:	
  3557                           ; 1 bytes @ 0x0
  3558                           
  3559     00BD                     ??_WDT_Initialize:	
  3560                           ; 1 bytes @ 0x0
  3561                           
  3562     00BD                     ??_CMP2_Initialize:	
  3563                           ; 1 bytes @ 0x0
  3564                           
  3565     00BD                     ??_DAC_Initialize:	
  3566                           ; 1 bytes @ 0x0
  3567                           
  3568     00BD                     ??_TMR2_Initialize:	
  3569                           ; 1 bytes @ 0x0
  3570                           
  3571     00BD                     ??_CMP1_Initialize:	
  3572                           ; 1 bytes @ 0x0
  3573                           
  3574     00BD                     ??_ADC_Initialize:	
  3575                           ; 1 bytes @ 0x0
  3576                           
  3577     00BD                     ??_TMR1_Initialize:	
  3578                           ; 1 bytes @ 0x0
  3579                           
  3580     00BD                     ?_TMR0_SetInterruptHandler:	
  3581                           ; 1 bytes @ 0x0
  3582                           
  3583     00BD                     ?_TMR6_SetInterruptHandler:	
  3584                           ; 1 bytes @ 0x0
  3585                           
  3586     00BD                     ?_TMR4_SetInterruptHandler:	
  3587                           ; 1 bytes @ 0x0
  3588                           
  3589     00BD                     ??_SPI1_Initialize:	
  3590                           ; 1 bytes @ 0x0
  3591                           
  3592     00BD                     ??_SPI1_WriteByte:	
  3593                           ; 1 bytes @ 0x0
  3594                           
  3595     00BD                     ??_PWM3_Initialize:	
  3596                           ; 1 bytes @ 0x0
  3597                           
  3598     00BD                     ?_PWM3_LoadDutyValue:	
  3599                           ; 1 bytes @ 0x0
  3600                           
  3601     00BD                     ??_EUSART_is_rx_ready:	
  3602                           ; 1 bytes @ 0x0
  3603                           
  3604     00BD                     ??_EUSART_Read:	
  3605                           ; 1 bytes @ 0x0
  3606                           
  3607     00BD                     ??_DATAEE_ReadByte:	
  3608                           ; 1 bytes @ 0x0
  3609                           
  3610     00BD                     ?_CMP2_SetInterruptHandler:	
  3611                           ; 1 bytes @ 0x0
  3612                           
  3613     00BD                     ??_TMR4_StartTimer:	
  3614                           ; 1 bytes @ 0x0
  3615                           
  3616     00BD                     ?_CMP1_SetInterruptHandler:	
  3617                           ; 1 bytes @ 0x0
  3618                           
  3619     00BD                     SPI1_WriteByte@byte:	
  3620                           ; 1 bytes @ 0x0
  3621                           
  3622     00BD                     DATAEE_ReadByte@bAdd:	
  3623                           ; 1 bytes @ 0x0
  3624                           
  3625     00BD                     PWM3_LoadDutyValue@dutyValue:	
  3626                           ; 1 bytes @ 0x0
  3627                           
  3628     00BD                     EUSART_SetFramingErrorHandler@interruptHandler:	
  3629                           ; 2 bytes @ 0x0
  3630                           
  3631     00BD                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  3632                           ; 2 bytes @ 0x0
  3633                           
  3634     00BD                     EUSART_SetErrorHandler@interruptHandler:	
  3635                           ; 2 bytes @ 0x0
  3636                           
  3637     00BD                     IOCBF0_SetInterruptHandler@InterruptHandler:	
  3638                           ; 2 bytes @ 0x0
  3639                           
  3640     00BD                     IOCBF3_SetInterruptHandler@InterruptHandler:	
  3641                           ; 2 bytes @ 0x0
  3642                           
  3643     00BD                     CCP4_SetCallBack@customCallBack:	
  3644                           ; 2 bytes @ 0x0
  3645                           
  3646     00BD                     TMR0_SetInterruptHandler@InterruptHandler:	
  3647                           ; 2 bytes @ 0x0
  3648                           
  3649     00BD                     CMP2_SetInterruptHandler@InterruptHandler:	
  3650                           ; 2 bytes @ 0x0
  3651                           
  3652     00BD                     TMR6_SetInterruptHandler@InterruptHandler:	
  3653                           ; 2 bytes @ 0x0
  3654                           
  3655     00BD                     TMR4_SetInterruptHandler@InterruptHandler:	
  3656                           ; 2 bytes @ 0x0
  3657                           
  3658     00BD                     CMP1_SetInterruptHandler@InterruptHandler:	
  3659                           ; 2 bytes @ 0x0
  3660                           
  3661                           
  3662                           ; 2 bytes @ 0x0
  3663     00BD                     	ds	1
  3664     00BE                     ?_updateMatrix:
  3665     00BE                     ?_txMAX7219:	
  3666                           ; 1 bytes @ 0x1
  3667                           
  3668     00BE                     txMAX7219@dat0:	
  3669                           ; 1 bytes @ 0x1
  3670                           
  3671     00BE                     updateMatrix@val:	
  3672                           ; 1 bytes @ 0x1
  3673                           
  3674                           
  3675                           ; 1 bytes @ 0x1
  3676     00BE                     	ds	1
  3677     00BF                     ??_EUSART_SetFramingErrorHandler:
  3678     00BF                     ??_EUSART_SetOverrunErrorHandler:	
  3679                           ; 1 bytes @ 0x2
  3680                           
  3681     00BF                     ??_EUSART_SetErrorHandler:	
  3682                           ; 1 bytes @ 0x2
  3683                           
  3684     00BF                     ??_IOCBF0_SetInterruptHandler:	
  3685                           ; 1 bytes @ 0x2
  3686                           
  3687     00BF                     ??_IOCBF3_SetInterruptHandler:	
  3688                           ; 1 bytes @ 0x2
  3689                           
  3690     00BF                     ??_CCP4_SetCallBack:	
  3691                           ; 1 bytes @ 0x2
  3692                           
  3693     00BF                     ??_TMR4_Initialize:	
  3694                           ; 1 bytes @ 0x2
  3695                           
  3696     00BF                     ??_TMR0_Initialize:	
  3697                           ; 1 bytes @ 0x2
  3698                           
  3699     00BF                     ??_TMR6_Initialize:	
  3700                           ; 1 bytes @ 0x2
  3701                           
  3702     00BF                     ??_TMR0_SetInterruptHandler:	
  3703                           ; 1 bytes @ 0x2
  3704                           
  3705     00BF                     ??_TMR6_SetInterruptHandler:	
  3706                           ; 1 bytes @ 0x2
  3707                           
  3708     00BF                     ??_TMR4_SetInterruptHandler:	
  3709                           ; 1 bytes @ 0x2
  3710                           
  3711     00BF                     ??_updateMatrix:	
  3712                           ; 1 bytes @ 0x2
  3713                           
  3714     00BF                     ??_PWM3_LoadDutyValue:	
  3715                           ; 1 bytes @ 0x2
  3716                           
  3717     00BF                     ??_EUSART_Initialize:	
  3718                           ; 1 bytes @ 0x2
  3719                           
  3720     00BF                     ??_PIN_MANAGER_Initialize:	
  3721                           ; 1 bytes @ 0x2
  3722                           
  3723     00BF                     ??_CCP4_Initialize:	
  3724                           ; 1 bytes @ 0x2
  3725                           
  3726     00BF                     ??_SYSTEM_Initialize:	
  3727                           ; 1 bytes @ 0x2
  3728                           
  3729     00BF                     ??_CMP2_SetInterruptHandler:	
  3730                           ; 1 bytes @ 0x2
  3731                           
  3732     00BF                     ??_CMP1_SetInterruptHandler:	
  3733                           ; 1 bytes @ 0x2
  3734                           
  3735     00BF                     ??_txMAX7219:	
  3736                           ; 1 bytes @ 0x2
  3737                           
  3738     00BF                     txMAX7219@addr0:	
  3739                           ; 1 bytes @ 0x2
  3740                           
  3741                           
  3742                           ; 1 bytes @ 0x2
  3743     00BF                     	ds	1
  3744     00C0                     ??_sendMatrix:
  3745     00C0                     updateMatrix@pos:	
  3746                           ; 1 bytes @ 0x3
  3747                           
  3748                           
  3749                           ; 1 bytes @ 0x3
  3750     00C0                     	ds	1
  3751     00C1                     ??_controlMotor:
  3752     00C1                     updateMatrix@eeAdd:	
  3753                           ; 1 bytes @ 0x4
  3754                           
  3755     00C1                     sendMatrix@i:	
  3756                           ; 1 bytes @ 0x4
  3757                           
  3758                           
  3759                           ; 1 bytes @ 0x4
  3760     00C1                     	ds	1
  3761     00C2                     updateMatrix@i:
  3762                           
  3763                           ; 1 bytes @ 0x5
  3764     00C2                     	ds	1
  3765     00C3                     ??_updateMotor:
  3766     00C3                     ??_main:	
  3767                           ; 1 bytes @ 0x6
  3768                           
  3769     00C3                     main@receivedData:	
  3770                           ; 1 bytes @ 0x6
  3771                           
  3772                           
  3773                           ; 1 bytes @ 0x6
  3774     00C3                     	ds	1
  3775     00C4                     main@direction:
  3776                           
  3777                           ; 1 bytes @ 0x7
  3778     00C4                     	ds	1
  3779                           
  3780                           	psect	cstackCOMMON
  3781     0070                     __pcstackCOMMON:
  3782     0070                     ?_PIN_MANAGER_IOC:
  3783     0070                     ?_TMR0_ISR:	
  3784                           ; 1 bytes @ 0x0
  3785                           
  3786     0070                     ?_TMR4_ISR:	
  3787                           ; 1 bytes @ 0x0
  3788                           
  3789     0070                     ?_CMP2_ISR:	
  3790                           ; 1 bytes @ 0x0
  3791                           
  3792     0070                     ?_CMP1_ISR:	
  3793                           ; 1 bytes @ 0x0
  3794                           
  3795     0070                     ?_CCP4_CaptureISR:	
  3796                           ; 1 bytes @ 0x0
  3797                           
  3798     0070                     ?_TMR6_ISR:	
  3799                           ; 1 bytes @ 0x0
  3800                           
  3801     0070                     ?_IOCBF0_DefaultInterruptHandler:	
  3802                           ; 1 bytes @ 0x0
  3803                           
  3804     0070                     ??_IOCBF0_DefaultInterruptHandler:	
  3805                           ; 1 bytes @ 0x0
  3806                           
  3807     0070                     ?_IOCBF3_DefaultInterruptHandler:	
  3808                           ; 1 bytes @ 0x0
  3809                           
  3810     0070                     ??_IOCBF3_DefaultInterruptHandler:	
  3811                           ; 1 bytes @ 0x0
  3812                           
  3813     0070                     ?_IOCBF0_ISR:	
  3814                           ; 1 bytes @ 0x0
  3815                           
  3816     0070                     ?_IOCBF3_ISR:	
  3817                           ; 1 bytes @ 0x0
  3818                           
  3819     0070                     ?_OSCILLATOR_Initialize:	
  3820                           ; 1 bytes @ 0x0
  3821                           
  3822     0070                     ?_WDT_Initialize:	
  3823                           ; 1 bytes @ 0x0
  3824                           
  3825     0070                     ?_CMP2_Initialize:	
  3826                           ; 1 bytes @ 0x0
  3827                           
  3828     0070                     ?_DAC_Initialize:	
  3829                           ; 1 bytes @ 0x0
  3830                           
  3831     0070                     ?_TMR4_Initialize:	
  3832                           ; 1 bytes @ 0x0
  3833                           
  3834     0070                     ?_TMR2_Initialize:	
  3835                           ; 1 bytes @ 0x0
  3836                           
  3837     0070                     ?_TMR0_Initialize:	
  3838                           ; 1 bytes @ 0x0
  3839                           
  3840     0070                     ?_TMR6_Initialize:	
  3841                           ; 1 bytes @ 0x0
  3842                           
  3843     0070                     ?_CMP1_Initialize:	
  3844                           ; 1 bytes @ 0x0
  3845                           
  3846     0070                     ?_ADC_Initialize:	
  3847                           ; 1 bytes @ 0x0
  3848                           
  3849     0070                     ?_TMR1_Initialize:	
  3850                           ; 1 bytes @ 0x0
  3851                           
  3852     0070                     ?_TMR0_DefaultInterruptHandler:	
  3853                           ; 1 bytes @ 0x0
  3854                           
  3855     0070                     ??_TMR0_DefaultInterruptHandler:	
  3856                           ; 1 bytes @ 0x0
  3857                           
  3858     0070                     ?_TMR6_DefaultInterruptHandler:	
  3859                           ; 1 bytes @ 0x0
  3860                           
  3861     0070                     ??_TMR6_DefaultInterruptHandler:	
  3862                           ; 1 bytes @ 0x0
  3863                           
  3864     0070                     ?_TMR6_CallBack:	
  3865                           ; 1 bytes @ 0x0
  3866                           
  3867     0070                     ?_TMR4_DefaultInterruptHandler:	
  3868                           ; 1 bytes @ 0x0
  3869                           
  3870     0070                     ??_TMR4_DefaultInterruptHandler:	
  3871                           ; 1 bytes @ 0x0
  3872                           
  3873     0070                     ?_TMR4_CallBack:	
  3874                           ; 1 bytes @ 0x0
  3875                           
  3876     0070                     ?_sendMatrix:	
  3877                           ; 1 bytes @ 0x0
  3878                           
  3879     0070                     ?_SPI1_Initialize:	
  3880                           ; 1 bytes @ 0x0
  3881                           
  3882     0070                     ?_SPI1_WriteByte:	
  3883                           ; 1 bytes @ 0x0
  3884                           
  3885     0070                     ?_PWM3_Initialize:	
  3886                           ; 1 bytes @ 0x0
  3887                           
  3888     0070                     ?_EUSART_Initialize:	
  3889                           ; 1 bytes @ 0x0
  3890                           
  3891     0070                     ?_EUSART_is_tx_ready:	
  3892                           ; 1 bytes @ 0x0
  3893                           
  3894     0070                     ??_EUSART_is_tx_ready:	
  3895                           ; 1 bytes @ 0x0
  3896                           
  3897     0070                     ?_EUSART_is_rx_ready:	
  3898                           ; 1 bytes @ 0x0
  3899                           
  3900     0070                     ?_EUSART_Read:	
  3901                           ; 1 bytes @ 0x0
  3902                           
  3903     0070                     ?_EUSART_Write:	
  3904                           ; 1 bytes @ 0x0
  3905                           
  3906     0070                     ??_EUSART_Write:	
  3907                           ; 1 bytes @ 0x0
  3908                           
  3909     0070                     ?_INTERRUPT_InterruptManager:	
  3910                           ; 1 bytes @ 0x0
  3911                           
  3912     0070                     ?_PIN_MANAGER_Initialize:	
  3913                           ; 1 bytes @ 0x0
  3914                           
  3915     0070                     ?_CCP4_Initialize:	
  3916                           ; 1 bytes @ 0x0
  3917                           
  3918     0070                     ?_SYSTEM_Initialize:	
  3919                           ; 1 bytes @ 0x0
  3920                           
  3921     0070                     ?_TMR1_HasOverflowOccured:	
  3922                           ; 1 bytes @ 0x0
  3923                           
  3924     0070                     ??_TMR1_HasOverflowOccured:	
  3925                           ; 1 bytes @ 0x0
  3926                           
  3927     0070                     ?_DATAEE_ReadByte:	
  3928                           ; 1 bytes @ 0x0
  3929                           
  3930     0070                     ?_TMR6_StartTimer:	
  3931                           ; 1 bytes @ 0x0
  3932                           
  3933     0070                     ??_TMR6_StartTimer:	
  3934                           ; 1 bytes @ 0x0
  3935                           
  3936     0070                     ?_TMR6_StopTimer:	
  3937                           ; 1 bytes @ 0x0
  3938                           
  3939     0070                     ??_TMR6_StopTimer:	
  3940                           ; 1 bytes @ 0x0
  3941                           
  3942     0070                     ?_TMR6_WriteTimer:	
  3943                           ; 1 bytes @ 0x0
  3944                           
  3945     0070                     ??_TMR6_WriteTimer:	
  3946                           ; 1 bytes @ 0x0
  3947                           
  3948     0070                     ?_TMR4_StartTimer:	
  3949                           ; 1 bytes @ 0x0
  3950                           
  3951     0070                     ?_TMR4_StopTimer:	
  3952                           ; 1 bytes @ 0x0
  3953                           
  3954     0070                     ??_TMR4_StopTimer:	
  3955                           ; 1 bytes @ 0x0
  3956                           
  3957     0070                     ?_TMR4_WriteTimer:	
  3958                           ; 1 bytes @ 0x0
  3959                           
  3960     0070                     ??_TMR4_WriteTimer:	
  3961                           ; 1 bytes @ 0x0
  3962                           
  3963     0070                     ?_controlMotor:	
  3964                           ; 1 bytes @ 0x0
  3965                           
  3966     0070                     ?_updateMotor:	
  3967                           ; 1 bytes @ 0x0
  3968                           
  3969     0070                     ?_TMR0_Interrupt:	
  3970                           ; 1 bytes @ 0x0
  3971                           
  3972     0070                     ?_TMR4_Interrupt:	
  3973                           ; 1 bytes @ 0x0
  3974                           
  3975     0070                     ?_TMR6_Interrupt:	
  3976                           ; 1 bytes @ 0x0
  3977                           
  3978     0070                     ?_S1_Interrupt:	
  3979                           ; 1 bytes @ 0x0
  3980                           
  3981     0070                     ?_S2_Interrupt:	
  3982                           ; 1 bytes @ 0x0
  3983                           
  3984     0070                     ?_S3_Interrupt:	
  3985                           ; 1 bytes @ 0x0
  3986                           
  3987     0070                     ?_S4_Interrupt:	
  3988                           ; 1 bytes @ 0x0
  3989                           
  3990     0070                     ?_main:	
  3991                           ; 1 bytes @ 0x0
  3992                           
  3993     0070                     ?i1_PWM3_LoadDutyValue:	
  3994                           ; 1 bytes @ 0x0
  3995                           
  3996     0070                     ?i1_TMR4_StartTimer:	
  3997                           ; 1 bytes @ 0x0
  3998                           
  3999     0070                     ??i1_TMR4_StartTimer:	
  4000                           ; 1 bytes @ 0x0
  4001                           
  4002     0070                     ?i1_controlMotor:	
  4003                           ; 1 bytes @ 0x0
  4004                           
  4005     0070                     ?i1_updateMotor:	
  4006                           ; 1 bytes @ 0x0
  4007                           
  4008     0070                     ?_ADC_GetConversion:	
  4009                           ; 1 bytes @ 0x0
  4010                           
  4011     0070                     ?___lldiv:	
  4012                           ; 2 bytes @ 0x0
  4013                           
  4014     0070                     ?___xxtofl:	
  4015                           ; 4 bytes @ 0x0
  4016                           
  4017     0070                     _EUSART_is_tx_ready$323:	
  4018                           ; 4 bytes @ 0x0
  4019                           
  4020     0070                     EUSART_Write@txData:	
  4021                           ; 1 bytes @ 0x0
  4022                           
  4023     0070                     TMR6_WriteTimer@timerVal:	
  4024                           ; 1 bytes @ 0x0
  4025                           
  4026     0070                     TMR4_WriteTimer@timerVal:	
  4027                           ; 1 bytes @ 0x0
  4028                           
  4029     0070                     i1PWM3_LoadDutyValue@dutyValue:	
  4030                           ; 1 bytes @ 0x0
  4031                           
  4032     0070                     ___lldiv@divisor:	
  4033                           ; 2 bytes @ 0x0
  4034                           
  4035     0070                     ___xxtofl@val:	
  4036                           ; 4 bytes @ 0x0
  4037                           
  4038                           
  4039                           ; 4 bytes @ 0x0
  4040     0070                     	ds	1
  4041     0071                     ??_TMR4_ISR:
  4042     0071                     ??_TMR6_ISR:	
  4043                           ; 1 bytes @ 0x1
  4044                           
  4045     0071                     ??_TMR6_CallBack:	
  4046                           ; 1 bytes @ 0x1
  4047                           
  4048     0071                     ??_TMR4_CallBack:	
  4049                           ; 1 bytes @ 0x1
  4050                           
  4051     0071                     ??_TMR4_Interrupt:	
  4052                           ; 1 bytes @ 0x1
  4053                           
  4054     0071                     ??_TMR6_Interrupt:	
  4055                           ; 1 bytes @ 0x1
  4056                           
  4057                           
  4058                           ; 1 bytes @ 0x1
  4059     0071                     	ds	1
  4060     0072                     ??_ADC_GetConversion:
  4061     0072                     ??i1_PWM3_LoadDutyValue:	
  4062                           ; 1 bytes @ 0x2
  4063                           
  4064                           
  4065                           ; 1 bytes @ 0x2
  4066     0072                     	ds	1
  4067     0073                     ADC_GetConversion@channel:
  4068                           
  4069                           ; 1 bytes @ 0x3
  4070     0073                     	ds	1
  4071     0074                     ??___xxtofl:
  4072     0074                     ??i1_controlMotor:	
  4073                           ; 1 bytes @ 0x4
  4074                           
  4075     0074                     ___lldiv@dividend:	
  4076                           ; 1 bytes @ 0x4
  4077                           
  4078                           
  4079                           ; 4 bytes @ 0x4
  4080     0074                     	ds	2
  4081     0076                     ??_PIN_MANAGER_IOC:
  4082     0076                     ??_CMP2_ISR:	
  4083                           ; 1 bytes @ 0x6
  4084                           
  4085     0076                     ??_CMP1_ISR:	
  4086                           ; 1 bytes @ 0x6
  4087                           
  4088     0076                     ??_IOCBF0_ISR:	
  4089                           ; 1 bytes @ 0x6
  4090                           
  4091     0076                     ??_IOCBF3_ISR:	
  4092                           ; 1 bytes @ 0x6
  4093                           
  4094     0076                     ??_S1_Interrupt:	
  4095                           ; 1 bytes @ 0x6
  4096                           
  4097     0076                     ??_S2_Interrupt:	
  4098                           ; 1 bytes @ 0x6
  4099                           
  4100     0076                     ??_S3_Interrupt:	
  4101                           ; 1 bytes @ 0x6
  4102                           
  4103     0076                     ??_S4_Interrupt:	
  4104                           ; 1 bytes @ 0x6
  4105                           
  4106     0076                     ??i1_updateMotor:	
  4107                           ; 1 bytes @ 0x6
  4108                           
  4109                           
  4110                           ; 1 bytes @ 0x6
  4111     0076                     	ds	2
  4112     0078                     ??___lldiv:
  4113     0078                     ___xxtofl@sign:	
  4114                           ; 1 bytes @ 0x8
  4115                           
  4116                           
  4117                           ; 1 bytes @ 0x8
  4118     0078                     	ds	1
  4119     0079                     ___xxtofl@exp:
  4120     0079                     ___lldiv@quotient:	
  4121                           ; 1 bytes @ 0x9
  4122                           
  4123                           
  4124                           ; 4 bytes @ 0x9
  4125     0079                     	ds	1
  4126     007A                     ___xxtofl@arg:
  4127                           
  4128                           ; 4 bytes @ 0xA
  4129     007A                     	ds	3
  4130     007D                     ___lldiv@counter:
  4131                           
  4132                           ; 1 bytes @ 0xD
  4133     007D                     	ds	1
  4134     007E                     ??_TMR0_ISR:
  4135     007E                     ??_CCP4_CaptureISR:	
  4136                           ; 1 bytes @ 0xE
  4137                           
  4138     007E                     ??_INTERRUPT_InterruptManager:	
  4139                           ; 1 bytes @ 0xE
  4140                           
  4141     007E                     ??_CCP4_DefaultCallBack:	
  4142                           ; 1 bytes @ 0xE
  4143                           
  4144                           
  4145                           	psect	cstackBANK0
  4146     0020                     __pcstackBANK0:	
  4147                           ; 1 bytes @ 0xE
  4148                           
  4149     0020                     ??_TMR0_Interrupt:
  4150     0020                     ?___fldiv:	
  4151                           ; 1 bytes @ 0x0
  4152                           
  4153     0020                     ___fldiv@a:	
  4154                           ; 4 bytes @ 0x0
  4155                           
  4156                           
  4157                           ; 4 bytes @ 0x0
  4158     0020                     	ds	4
  4159     0024                     TMR0_Interrupt@i:
  4160     0024                     ___fldiv@b:	
  4161                           ; 2 bytes @ 0x4
  4162                           
  4163                           
  4164                           ; 4 bytes @ 0x4
  4165     0024                     	ds	2
  4166     0026                     TMR0_Interrupt@temperature:
  4167                           
  4168                           ; 4 bytes @ 0x6
  4169     0026                     	ds	2
  4170     0028                     ??___fldiv:
  4171                           
  4172                           ; 1 bytes @ 0x8
  4173     0028                     	ds	5
  4174     002D                     ___fldiv@rem:
  4175                           
  4176                           ; 4 bytes @ 0xD
  4177     002D                     	ds	4
  4178     0031                     ___fldiv@sign:
  4179                           
  4180                           ; 1 bytes @ 0x11
  4181     0031                     	ds	1
  4182     0032                     ___fldiv@new_exp:
  4183                           
  4184                           ; 2 bytes @ 0x12
  4185     0032                     	ds	2
  4186     0034                     ___fldiv@grs:
  4187                           
  4188                           ; 4 bytes @ 0x14
  4189     0034                     	ds	4
  4190     0038                     ___fldiv@bexp:
  4191                           
  4192                           ; 1 bytes @ 0x18
  4193     0038                     	ds	1
  4194     0039                     ___fldiv@aexp:
  4195                           
  4196                           ; 1 bytes @ 0x19
  4197     0039                     	ds	1
  4198     003A                     ?___fltol:
  4199     003A                     ___fltol@f1:	
  4200                           ; 4 bytes @ 0x1A
  4201                           
  4202                           
  4203                           ; 4 bytes @ 0x1A
  4204     003A                     	ds	4
  4205     003E                     ??___fltol:
  4206                           
  4207                           ; 1 bytes @ 0x1E
  4208     003E                     	ds	4
  4209     0042                     ___fltol@sign1:
  4210                           
  4211                           ; 1 bytes @ 0x22
  4212     0042                     	ds	1
  4213     0043                     ___fltol@exp1:
  4214                           
  4215                           ; 1 bytes @ 0x23
  4216     0043                     	ds	1
  4217     0044                     ?_CCP4_DefaultCallBack:
  4218     0044                     ?_CCP4_Interrupt:	
  4219                           ; 1 bytes @ 0x24
  4220                           
  4221     0044                     CCP4_DefaultCallBack@capturedValue:	
  4222                           ; 1 bytes @ 0x24
  4223                           
  4224     0044                     CCP4_Interrupt@capturedValue:	
  4225                           ; 2 bytes @ 0x24
  4226                           
  4227                           
  4228                           ; 2 bytes @ 0x24
  4229     0044                     	ds	2
  4230     0046                     ??_CCP4_Interrupt:
  4231                           
  4232                           ; 1 bytes @ 0x26
  4233     0046                     	ds	1
  4234     0047                     _CCP4_Interrupt$2521:
  4235                           
  4236                           ; 4 bytes @ 0x27
  4237     0047                     	ds	4
  4238     004B                     CCP4_CaptureISR@module:
  4239                           
  4240                           ; 2 bytes @ 0x2B
  4241     004B                     	ds	2
  4242                           
  4243                           	psect	maintext
  4244     036A                     __pmaintext:	
  4245 ;;
  4246 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  4247 ;;
  4248 ;; *************** function _main *****************
  4249 ;; Defined at:
  4250 ;;		line 200 in file "main.c"
  4251 ;; Parameters:    Size  Location     Type
  4252 ;;		None
  4253 ;; Auto vars:     Size  Location     Type
  4254 ;;  direction       1    7[BANK1 ] unsigned char 
  4255 ;;  receivedData    1    6[BANK1 ] unsigned char 
  4256 ;; Return value:  Size  Location     Type
  4257 ;;                  1    wreg      void 
  4258 ;; Registers used:
  4259 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4260 ;; Tracked objects:
  4261 ;;		On entry : B1F/0
  4262 ;;		On exit  : 0/0
  4263 ;;		Unchanged: 0/0
  4264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4265 ;;      Params:         0       0       0       0       0       0
  4266 ;;      Locals:         0       0       2       0       0       0
  4267 ;;      Temps:          0       0       0       0       0       0
  4268 ;;      Totals:         0       0       2       0       0       0
  4269 ;;Total ram usage:        2 bytes
  4270 ;; Hardware stack levels required when called: 10
  4271 ;; This function calls:
  4272 ;;		_CCP4_SetCallBack
  4273 ;;		_CMP1_SetInterruptHandler
  4274 ;;		_CMP2_SetInterruptHandler
  4275 ;;		_EUSART_Read
  4276 ;;		_EUSART_is_rx_ready
  4277 ;;		_IOCBF0_SetInterruptHandler
  4278 ;;		_IOCBF3_SetInterruptHandler
  4279 ;;		_SYSTEM_Initialize
  4280 ;;		_TMR0_SetInterruptHandler
  4281 ;;		_TMR4_SetInterruptHandler
  4282 ;;		_TMR6_SetInterruptHandler
  4283 ;;		_sendMatrix
  4284 ;;		_updateMatrix
  4285 ;;		_updateMotor
  4286 ;; This function is called by:
  4287 ;;		Startup code after reset
  4288 ;; This function uses a non-reentrant model
  4289 ;;
  4290                           
  4291     036A                     _main:	
  4292                           ;psect for function _main
  4293                           
  4294     036A                     l3646:	
  4295                           ;incstack = 0
  4296                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4297                           
  4298                           
  4299                           ;main.c: 203:     SYSTEM_Initialize();
  4300     036A  3186  2617  3183   	fcall	_SYSTEM_Initialize
  4301                           
  4302                           ;main.c: 205:     TMR0_SetInterruptHandler(TMR0_Interrupt);
  4303     036D  30DD               	movlw	low _TMR0_Interrupt
  4304     036E  0021               	movlb	1	; select bank1
  4305     036F  00BD               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  4306     0370  3002               	movlw	high _TMR0_Interrupt
  4307     0371  00BE               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4308     0372  318E  26C9  3183   	fcall	_TMR0_SetInterruptHandler
  4309                           
  4310                           ;main.c: 206:     TMR4_SetInterruptHandler(TMR4_Interrupt);
  4311     0375  30DC               	movlw	low _TMR4_Interrupt
  4312     0376  0021               	movlb	1	; select bank1
  4313     0377  00BD               	movwf	TMR4_SetInterruptHandler@InterruptHandler^(0+128)
  4314     0378  300E               	movlw	high _TMR4_Interrupt
  4315     0379  00BE               	movwf	(TMR4_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4316     037A  318E  2688  3183   	fcall	_TMR4_SetInterruptHandler
  4317                           
  4318                           ;main.c: 207:     TMR6_SetInterruptHandler(TMR6_Interrupt);
  4319     037D  30E6               	movlw	low _TMR6_Interrupt
  4320     037E  0021               	movlb	1	; select bank1
  4321     037F  00BD               	movwf	TMR6_SetInterruptHandler@InterruptHandler^(0+128)
  4322     0380  300E               	movlw	high _TMR6_Interrupt
  4323     0381  00BE               	movwf	(TMR6_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4324     0382  318E  268E  3183   	fcall	_TMR6_SetInterruptHandler
  4325                           
  4326                           ;main.c: 208:     CCP4_SetCallBack(CCP4_Interrupt);
  4327     0385  3065               	movlw	low _CCP4_Interrupt
  4328     0386  0021               	movlb	1	; select bank1
  4329     0387  00BD               	movwf	CCP4_SetCallBack@customCallBack^(0+128)
  4330     0388  3004               	movlw	high _CCP4_Interrupt
  4331     0389  00BE               	movwf	(CCP4_SetCallBack@customCallBack^(0+128)+1)
  4332     038A  318E  26B7  3183   	fcall	_CCP4_SetCallBack
  4333                           
  4334                           ;main.c: 209:     IOCBF0_SetInterruptHandler(S1_Interrupt);
  4335     038D  3035               	movlw	low _S1_Interrupt
  4336     038E  0021               	movlb	1	; select bank1
  4337     038F  00BD               	movwf	IOCBF0_SetInterruptHandler@InterruptHandler^(0+128)
  4338     0390  3007               	movlw	high _S1_Interrupt
  4339     0391  00BE               	movwf	(IOCBF0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4340     0392  318E  267C  3183   	fcall	_IOCBF0_SetInterruptHandler
  4341                           
  4342                           ;main.c: 210:     IOCBF3_SetInterruptHandler(S2_Interrupt);
  4343     0395  304F               	movlw	low _S2_Interrupt
  4344     0396  0021               	movlb	1	; select bank1
  4345     0397  00BD               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler^(0+128)
  4346     0398  3007               	movlw	high _S2_Interrupt
  4347     0399  00BE               	movwf	(IOCBF3_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4348     039A  318E  2682  3183   	fcall	_IOCBF3_SetInterruptHandler
  4349                           
  4350                           ;main.c: 211:     CMP1_SetInterruptHandler(S3_Interrupt);
  4351     039D  3081               	movlw	low _S3_Interrupt
  4352     039E  0021               	movlb	1	; select bank1
  4353     039F  00BD               	movwf	CMP1_SetInterruptHandler@InterruptHandler^(0+128)
  4354     03A0  3007               	movlw	high _S3_Interrupt
  4355     03A1  00BE               	movwf	(CMP1_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4356     03A2  318E  2658  3183   	fcall	_CMP1_SetInterruptHandler
  4357                           
  4358                           ;main.c: 212:     CMP2_SetInterruptHandler(S4_Interrupt);
  4359     03A5  3068               	movlw	low _S4_Interrupt
  4360     03A6  0021               	movlb	1	; select bank1
  4361     03A7  00BD               	movwf	CMP2_SetInterruptHandler@InterruptHandler^(0+128)
  4362     03A8  3007               	movlw	high _S4_Interrupt
  4363     03A9  00BE               	movwf	(CMP2_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4364     03AA  318E  265E  3183   	fcall	_CMP2_SetInterruptHandler
  4365     03AD                     l3648:
  4366                           
  4367                           ;main.c: 218:     (INTCONbits.GIE = 1);
  4368     03AD  178B               	bsf	11,7	;volatile
  4369     03AE                     l3650:
  4370                           
  4371                           ;main.c: 221:     (INTCONbits.PEIE = 1);
  4372     03AE  170B               	bsf	11,6	;volatile
  4373     03AF                     l3652:
  4374                           
  4375                           ;main.c: 229:     uint8_t receivedData = 0;
  4376     03AF  0021               	movlb	1	; select bank1
  4377     03B0  01C3               	clrf	main@receivedData^(0+128)
  4378     03B1                     l3654:
  4379                           
  4380                           ;main.c: 232:     {;main.c: 233:         if(EUSART_is_rx_ready()){
  4381     03B1  318E  2653  3183   	fcall	_EUSART_is_rx_ready
  4382     03B4  3A00               	xorlw	0
  4383     03B5  1903               	skipnz
  4384     03B6  2BB8               	goto	u2761
  4385     03B7  2BB9               	goto	u2760
  4386     03B8                     u2761:
  4387     03B8  2BCB               	goto	l3664
  4388     03B9                     u2760:
  4389     03B9  2BBF               	goto	l3660
  4390     03BA                     l3658:
  4391                           
  4392                           ;main.c: 235:                 receivedData = EUSART_Read();
  4393     03BA  318F  2793  3183   	fcall	_EUSART_Read
  4394     03BD  0021               	movlb	1	; select bank1
  4395     03BE  00C3               	movwf	main@receivedData^(0+128)
  4396     03BF                     l3660:
  4397                           
  4398                           ;main.c: 234:             while(EUSART_is_rx_ready()){
  4399     03BF  318E  2653  3183   	fcall	_EUSART_is_rx_ready
  4400     03C2  3A00               	xorlw	0
  4401     03C3  1D03               	skipz
  4402     03C4  2BC6               	goto	u2771
  4403     03C5  2BC7               	goto	u2770
  4404     03C6                     u2771:
  4405     03C6  2BBA               	goto	l3658
  4406     03C7                     u2770:
  4407     03C7                     l3662:
  4408                           
  4409                           ;main.c: 237:             targetFloor = receivedData+1;
  4410     03C7  0021               	movlb	1	; select bank1
  4411     03C8  0843               	movf	main@receivedData^(0+128),w
  4412     03C9  3E01               	addlw	1
  4413     03CA  00C5               	movwf	_targetFloor^(0+128)
  4414     03CB                     l3664:
  4415                           
  4416                           ;main.c: 240:         updateMatrix(0, currentFloor);
  4417     03CB  0021               	movlb	1	; select bank1
  4418     03CC  0846               	movf	_currentFloor^(0+128),w
  4419     03CD  00BE               	movwf	updateMatrix@val^(0+128)
  4420     03CE  3000               	movlw	0
  4421     03CF  3186  2677  3183   	fcall	_updateMatrix
  4422     03D2                     l3666:
  4423     03D2                     l3668:
  4424                           
  4425                           ;main.c: 243:         if(motorState==0){
  4426     03D2  0021               	movlb	1	; select bank1
  4427     03D3  083C               	movf	_motorState^(0+128),w
  4428     03D4  1D03               	btfss	3,2
  4429     03D5  2BD7               	goto	u2781
  4430     03D6  2BD8               	goto	u2780
  4431     03D7                     u2781:
  4432     03D7  2BDB               	goto	l3672
  4433     03D8                     u2780:
  4434     03D8                     l3670:
  4435                           
  4436                           ;main.c: 244:             direction = 12;
  4437     03D8  300C               	movlw	12
  4438     03D9  00C4               	movwf	main@direction^(0+128)
  4439                           
  4440                           ;main.c: 245:         } else if(motorState==1){
  4441     03DA  2BE5               	goto	l3678
  4442     03DB                     l3672:
  4443     03DB  033C               	decf	_motorState^(0+128),w
  4444     03DC  1D03               	btfss	3,2
  4445     03DD  2BDF               	goto	u2791
  4446     03DE  2BE0               	goto	u2790
  4447     03DF                     u2791:
  4448     03DF  2BE3               	goto	l3676
  4449     03E0                     u2790:
  4450     03E0                     l3674:
  4451                           
  4452                           ;main.c: 246:             direction = 10;
  4453     03E0  300A               	movlw	10
  4454     03E1  00C4               	movwf	main@direction^(0+128)
  4455                           
  4456                           ;main.c: 247:         } else{
  4457     03E2  2BE5               	goto	l3678
  4458     03E3                     l3676:
  4459                           
  4460                           ;main.c: 248:             direction = 11;
  4461     03E3  300B               	movlw	11
  4462     03E4  00C4               	movwf	main@direction^(0+128)
  4463     03E5                     l3678:
  4464                           
  4465                           ;main.c: 251:         updateMatrix(4, direction);
  4466     03E5  0844               	movf	main@direction^(0+128),w
  4467     03E6  00BE               	movwf	updateMatrix@val^(0+128)
  4468     03E7  3004               	movlw	4
  4469     03E8  3186  2677  3183   	fcall	_updateMatrix
  4470     03EB                     l3680:
  4471                           
  4472                           ;main.c: 252:         sendMatrix();
  4473     03EB  3186  26FE  3183   	fcall	_sendMatrix
  4474     03EE                     l3682:
  4475                           
  4476                           ;main.c: 253:         updateMotor();
  4477     03EE  3185  25AF  3183   	fcall	_updateMotor
  4478     03F1  2BB1               	goto	l3654
  4479     03F2  3180  286A         	ljmp	start
  4480     03F4                     __end_of_main:
  4481                           
  4482                           	psect	text1
  4483     05AF                     __ptext1:	
  4484 ;; *************** function _updateMotor *****************
  4485 ;; Defined at:
  4486 ;;		line 78 in file "main.c"
  4487 ;; Parameters:    Size  Location     Type
  4488 ;;		None
  4489 ;; Auto vars:     Size  Location     Type
  4490 ;;		None
  4491 ;; Return value:  Size  Location     Type
  4492 ;;                  1    wreg      void 
  4493 ;; Registers used:
  4494 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4495 ;; Tracked objects:
  4496 ;;		On entry : 0/0
  4497 ;;		On exit  : 0/0
  4498 ;;		Unchanged: 0/0
  4499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4500 ;;      Params:         0       0       0       0       0       0
  4501 ;;      Locals:         0       0       0       0       0       0
  4502 ;;      Temps:          0       0       0       0       0       0
  4503 ;;      Totals:         0       0       0       0       0       0
  4504 ;;Total ram usage:        0 bytes
  4505 ;; Hardware stack levels used: 1
  4506 ;; Hardware stack levels required when called: 9
  4507 ;; This function calls:
  4508 ;;		_TMR4_StartTimer
  4509 ;;		_controlMotor
  4510 ;; This function is called by:
  4511 ;;		_main
  4512 ;; This function uses a non-reentrant model
  4513 ;;
  4514                           
  4515     05AF                     _updateMotor:	
  4516                           ;psect for function _updateMotor
  4517                           
  4518     05AF                     l3552:	
  4519                           ;incstack = 0
  4520                           ; Regs used in _updateMotor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4521                           
  4522                           
  4523                           ;main.c: 79:     if(!motorLoading){
  4524     05AF  0021               	movlb	1	; select bank1
  4525     05B0  083A               	movf	_motorLoading^(0+128),w
  4526     05B1  1D03               	btfss	3,2
  4527     05B2  2DB4               	goto	u2531
  4528     05B3  2DB5               	goto	u2530
  4529     05B4                     u2531:
  4530     05B4  2DBB               	goto	l3556
  4531     05B5                     u2530:
  4532     05B5                     l3554:
  4533                           
  4534                           ;main.c: 80:         if(currentFloor==targetFloor){
  4535     05B5  0846               	movf	_currentFloor^(0+128),w
  4536     05B6  0645               	xorwf	_targetFloor^(0+128),w
  4537     05B7  1D03               	skipz
  4538     05B8  2DBA               	goto	u2541
  4539     05B9  2DBB               	goto	u2540
  4540     05BA                     u2541:
  4541     05BA  2DBD               	goto	l3558
  4542     05BB                     u2540:
  4543     05BB                     l3556:
  4544                           
  4545                           ;main.c: 81:             motorState = 0;
  4546     05BB  01BC               	clrf	_motorState^(0+128)
  4547                           
  4548                           ;main.c: 82:         } else if(currentFloor < targetFloor){
  4549     05BC  2DDF               	goto	l3578
  4550     05BD                     l3558:
  4551     05BD  0845               	movf	_targetFloor^(0+128),w
  4552     05BE  0246               	subwf	_currentFloor^(0+128),w
  4553     05BF  1803               	skipnc
  4554     05C0  2DC2               	goto	u2551
  4555     05C1  2DC3               	goto	u2550
  4556     05C2                     u2551:
  4557     05C2  2DD2               	goto	l3568
  4558     05C3                     u2550:
  4559     05C3                     l3560:
  4560                           
  4561                           ;main.c: 83:             if(motorState == 2){
  4562     05C3  3002               	movlw	2
  4563     05C4  063C               	xorwf	_motorState^(0+128),w
  4564     05C5  1D03               	btfss	3,2
  4565     05C6  2DC8               	goto	u2561
  4566     05C7  2DC9               	goto	u2560
  4567     05C8                     u2561:
  4568     05C8  2DCE               	goto	l3566
  4569     05C9                     u2560:
  4570     05C9                     l3562:
  4571                           
  4572                           ;main.c: 84:                 motorLoading = 1;
  4573     05C9  01BA               	clrf	_motorLoading^(0+128)
  4574     05CA  0ABA               	incf	_motorLoading^(0+128),f
  4575     05CB                     l3564:
  4576                           
  4577                           ;main.c: 85:                 TMR4_StartTimer();
  4578     05CB  318E  263E  3185   	fcall	_TMR4_StartTimer
  4579     05CE                     l3566:
  4580                           
  4581                           ;main.c: 87:             motorState = 1;
  4582     05CE  0021               	movlb	1	; select bank1
  4583     05CF  01BC               	clrf	_motorState^(0+128)
  4584     05D0  0ABC               	incf	_motorState^(0+128),f
  4585                           
  4586                           ;main.c: 88:         } else{
  4587     05D1  2DDF               	goto	l3578
  4588     05D2                     l3568:
  4589                           
  4590                           ;main.c: 89:             if(motorState == 1){
  4591     05D2  033C               	decf	_motorState^(0+128),w
  4592     05D3  1D03               	btfss	3,2
  4593     05D4  2DD6               	goto	u2571
  4594     05D5  2DD7               	goto	u2570
  4595     05D6                     u2571:
  4596     05D6  2DDC               	goto	l3574
  4597     05D7                     u2570:
  4598     05D7                     l3570:
  4599                           
  4600                           ;main.c: 90:                 motorLoading = 1;
  4601     05D7  01BA               	clrf	_motorLoading^(0+128)
  4602     05D8  0ABA               	incf	_motorLoading^(0+128),f
  4603     05D9                     l3572:
  4604                           
  4605                           ;main.c: 91:                 TMR4_StartTimer();
  4606     05D9  318E  263E  3185   	fcall	_TMR4_StartTimer
  4607     05DC                     l3574:
  4608                           
  4609                           ;main.c: 93:             motorState = 2;
  4610     05DC  3002               	movlw	2
  4611     05DD  0021               	movlb	1	; select bank1
  4612     05DE  00BC               	movwf	_motorState^(0+128)
  4613     05DF                     l3578:
  4614                           
  4615                           ;main.c: 98:     controlMotor();
  4616     05DF  3185  251B  3185   	fcall	_controlMotor
  4617     05E2                     l828:
  4618     05E2  0008               	return
  4619     05E3                     __end_of_updateMotor:
  4620                           
  4621                           	psect	text2
  4622     051B                     __ptext2:	
  4623 ;; *************** function _controlMotor *****************
  4624 ;; Defined at:
  4625 ;;		line 57 in file "main.c"
  4626 ;; Parameters:    Size  Location     Type
  4627 ;;		None
  4628 ;; Auto vars:     Size  Location     Type
  4629 ;;		None
  4630 ;; Return value:  Size  Location     Type
  4631 ;;                  1    wreg      void 
  4632 ;; Registers used:
  4633 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4634 ;; Tracked objects:
  4635 ;;		On entry : 0/0
  4636 ;;		On exit  : 0/0
  4637 ;;		Unchanged: 0/0
  4638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4639 ;;      Params:         0       0       0       0       0       0
  4640 ;;      Locals:         0       0       0       0       0       0
  4641 ;;      Temps:          0       0       2       0       0       0
  4642 ;;      Totals:         0       0       2       0       0       0
  4643 ;;Total ram usage:        2 bytes
  4644 ;; Hardware stack levels used: 1
  4645 ;; Hardware stack levels required when called: 8
  4646 ;; This function calls:
  4647 ;;		_PWM3_LoadDutyValue
  4648 ;; This function is called by:
  4649 ;;		_updateMotor
  4650 ;; This function uses a non-reentrant model
  4651 ;;
  4652                           
  4653     051B                     _controlMotor:	
  4654                           ;psect for function _controlMotor
  4655                           
  4656     051B                     l3364:	
  4657                           ;incstack = 0
  4658                           ; Regs used in _controlMotor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4659                           
  4660                           
  4661                           ;main.c: 58:     switch(motorState){
  4662     051B  2D50               	goto	l3384
  4663     051C                     l3366:
  4664                           
  4665                           ;main.c: 60:             PWM3_LoadDutyValue(0);
  4666     051C  3000               	movlw	0
  4667     051D  00BD               	movwf	PWM3_LoadDutyValue@dutyValue^(0+128)
  4668     051E  00BE               	movwf	(PWM3_LoadDutyValue@dutyValue+1)^(0+128)
  4669     051F  3186  26E2  3185   	fcall	_PWM3_LoadDutyValue
  4670     0522                     l3368:
  4671     0522  0022               	movlb	2	; select bank2
  4672     0523  178C               	bsf	12,7	;volatile
  4673     0524                     l3370:
  4674                           
  4675                           ;main.c: 63:             if(currentFloor != 4){
  4676     0524  3004               	movlw	4
  4677     0525  0021               	movlb	1	; select bank1
  4678     0526  0646               	xorwf	_currentFloor^(0+128),w
  4679     0527  1903               	btfsc	3,2
  4680     0528  2D2A               	goto	u2281
  4681     0529  2D2B               	goto	u2280
  4682     052A                     u2281:
  4683     052A  2D33               	goto	l3374
  4684     052B                     u2280:
  4685     052B                     l3372:
  4686                           
  4687                           ;main.c: 64:                 PWM3_LoadDutyValue(409);
  4688     052B  3099               	movlw	153
  4689     052C  00BD               	movwf	PWM3_LoadDutyValue@dutyValue^(0+128)
  4690     052D  3001               	movlw	1
  4691     052E  00BE               	movwf	(PWM3_LoadDutyValue@dutyValue^(0+128)+1)
  4692     052F  3186  26E2  3185   	fcall	_PWM3_LoadDutyValue
  4693                           
  4694                           ;main.c: 65:             } else{
  4695     0532  2D39               	goto	l3376
  4696     0533                     l3374:
  4697                           
  4698                           ;main.c: 66:                 PWM3_LoadDutyValue(0);
  4699     0533  3000               	movlw	0
  4700     0534  00BD               	movwf	PWM3_LoadDutyValue@dutyValue^(0+128)
  4701     0535  00BE               	movwf	(PWM3_LoadDutyValue@dutyValue+1)^(0+128)
  4702     0536  3186  26E2  3185   	fcall	_PWM3_LoadDutyValue
  4703     0539                     l3376:
  4704     0539  0022               	movlb	2	; select bank2
  4705     053A  138C               	bcf	12,7	;volatile
  4706     053B                     l3378:
  4707                           
  4708                           ;main.c: 70:             if(currentFloor != 1){
  4709     053B  0021               	movlb	1	; select bank1
  4710     053C  0346               	decf	_currentFloor^(0+128),w
  4711     053D  1903               	btfsc	3,2
  4712     053E  2D40               	goto	u2291
  4713     053F  2D41               	goto	u2290
  4714     0540                     u2291:
  4715     0540  2D49               	goto	l3382
  4716     0541                     u2290:
  4717     0541                     l3380:
  4718                           
  4719                           ;main.c: 71:                 PWM3_LoadDutyValue(409);
  4720     0541  3099               	movlw	153
  4721     0542  00BD               	movwf	PWM3_LoadDutyValue@dutyValue^(0+128)
  4722     0543  3001               	movlw	1
  4723     0544  00BE               	movwf	(PWM3_LoadDutyValue@dutyValue^(0+128)+1)
  4724     0545  3186  26E2  3185   	fcall	_PWM3_LoadDutyValue
  4725                           
  4726                           ;main.c: 72:             } else{
  4727     0548  2D64               	goto	l817
  4728     0549                     l3382:
  4729                           
  4730                           ;main.c: 73:                 PWM3_LoadDutyValue(0);
  4731     0549  3000               	movlw	0
  4732     054A  00BD               	movwf	PWM3_LoadDutyValue@dutyValue^(0+128)
  4733     054B  00BE               	movwf	(PWM3_LoadDutyValue@dutyValue+1)^(0+128)
  4734     054C  3186  26E2  3185   	fcall	_PWM3_LoadDutyValue
  4735     054F  2D64               	goto	l817
  4736     0550                     l3384:
  4737     0550  0021               	movlb	1	; select bank1
  4738     0551  083C               	movf	_motorState^(0+128),w
  4739     0552  00C1               	movwf	??_controlMotor^(0+128)
  4740     0553  01C2               	clrf	(??_controlMotor^(0+128)+1)
  4741                           
  4742                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4743                           ; Switch size 1, requested type "simple"
  4744                           ; Number of cases is 1, Range of values is 0 to 0
  4745                           ; switch strategies available:
  4746                           ; Name         Instructions Cycles
  4747                           ; simple_byte            4     3 (average)
  4748                           ; direct_byte            8     6 (fixed)
  4749                           ; jumptable            260     6 (fixed)
  4750                           ;	Chosen strategy is simple_byte
  4751     0554  0842               	movf	(??_controlMotor+1)^(0+128),w
  4752     0555  3A00               	xorlw	0	; case 0
  4753     0556  1903               	skipnz
  4754     0557  2D59               	goto	l3746
  4755     0558  2D64               	goto	l817
  4756     0559                     l3746:
  4757                           
  4758                           ; Switch size 1, requested type "simple"
  4759                           ; Number of cases is 3, Range of values is 0 to 2
  4760                           ; switch strategies available:
  4761                           ; Name         Instructions Cycles
  4762                           ; simple_byte           10     6 (average)
  4763                           ; direct_byte           12     6 (fixed)
  4764                           ; jumptable            260     6 (fixed)
  4765                           ;	Chosen strategy is simple_byte
  4766     0559  0841               	movf	??_controlMotor^(0+128),w
  4767     055A  3A00               	xorlw	0	; case 0
  4768     055B  1903               	skipnz
  4769     055C  2D1C               	goto	l3366
  4770     055D  3A01               	xorlw	1	; case 1
  4771     055E  1903               	skipnz
  4772     055F  2D22               	goto	l3368
  4773     0560  3A03               	xorlw	3	; case 2
  4774     0561  1903               	skipnz
  4775     0562  2D39               	goto	l3376
  4776     0563  2D64               	goto	l817
  4777     0564                     l817:
  4778     0564  0008               	return
  4779     0565                     __end_of_controlMotor:
  4780                           
  4781                           	psect	text3
  4782     06E2                     __ptext3:	
  4783 ;; *************** function _PWM3_LoadDutyValue *****************
  4784 ;; Defined at:
  4785 ;;		line 82 in file "mcc_generated_files/pwm3.c"
  4786 ;; Parameters:    Size  Location     Type
  4787 ;;  dutyValue       2    0[BANK1 ] unsigned short 
  4788 ;; Auto vars:     Size  Location     Type
  4789 ;;		None
  4790 ;; Return value:  Size  Location     Type
  4791 ;;                  1    wreg      void 
  4792 ;; Registers used:
  4793 ;;		wreg, status,2, status,0
  4794 ;; Tracked objects:
  4795 ;;		On entry : 0/0
  4796 ;;		On exit  : 0/0
  4797 ;;		Unchanged: 0/0
  4798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4799 ;;      Params:         0       0       2       0       0       0
  4800 ;;      Locals:         0       0       0       0       0       0
  4801 ;;      Temps:          0       0       2       0       0       0
  4802 ;;      Totals:         0       0       4       0       0       0
  4803 ;;Total ram usage:        4 bytes
  4804 ;; Hardware stack levels used: 1
  4805 ;; Hardware stack levels required when called: 7
  4806 ;; This function calls:
  4807 ;;		Nothing
  4808 ;; This function is called by:
  4809 ;;		_controlMotor
  4810 ;; This function uses a non-reentrant model
  4811 ;;
  4812                           
  4813     06E2                     _PWM3_LoadDutyValue:	
  4814                           ;psect for function _PWM3_LoadDutyValue
  4815                           
  4816     06E2                     l2834:	
  4817                           ;incstack = 0
  4818                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2+status,0]
  4819                           
  4820                           
  4821                           ;mcc_generated_files/pwm3.c: 82: void PWM3_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm3.c: 83: {;mcc_generated_files/pwm3.c: 85:     CCPR3L = ((dutyValue & 0x03FC
      +                          )>>2);
  4822     06E2  0021               	movlb	1	; select bank1
  4823     06E3  083E               	movf	(PWM3_LoadDutyValue@dutyValue+1)^(0+128),w
  4824     06E4  00C0               	movwf	(??_PWM3_LoadDutyValue^(0+128)+1)
  4825     06E5  083D               	movf	PWM3_LoadDutyValue@dutyValue^(0+128),w
  4826     06E6  00BF               	movwf	??_PWM3_LoadDutyValue^(0+128)
  4827     06E7  36C0               	lsrf	(??_PWM3_LoadDutyValue^(0+128)+1),f
  4828     06E8  0CBF               	rrf	??_PWM3_LoadDutyValue^(0+128),f
  4829     06E9  36C0               	lsrf	(??_PWM3_LoadDutyValue^(0+128)+1),f
  4830     06EA  0CBF               	rrf	??_PWM3_LoadDutyValue^(0+128),f
  4831     06EB  083F               	movf	??_PWM3_LoadDutyValue^(0+128),w
  4832     06EC  0026               	movlb	6	; select bank6
  4833     06ED  0091               	movwf	17	;volatile
  4834                           
  4835                           ;mcc_generated_files/pwm3.c: 88:     CCP3CON = ((uint8_t)(CCP3CON & 0xCF) | ((dutyValue 
      +                          & 0x0003)<<4));
  4836     06EE  0021               	movlb	1	; select bank1
  4837     06EF  083D               	movf	PWM3_LoadDutyValue@dutyValue^(0+128),w
  4838     06F0  3903               	andlw	3
  4839     06F1  00BF               	movwf	??_PWM3_LoadDutyValue^(0+128)
  4840     06F2  3004               	movlw	4
  4841     06F3                     u1555:
  4842     06F3  35BF               	lslf	??_PWM3_LoadDutyValue^(0+128),f
  4843     06F4  0B89               	decfsz	9,f
  4844     06F5  2EF3               	goto	u1555
  4845     06F6  0026               	movlb	6	; select bank6
  4846     06F7  0813               	movf	19,w	;volatile
  4847     06F8  39CF               	andlw	207
  4848     06F9  0021               	movlb	1	; select bank1
  4849     06FA  043F               	iorwf	??_PWM3_LoadDutyValue^(0+128),w
  4850     06FB  0026               	movlb	6	; select bank6
  4851     06FC  0093               	movwf	19	;volatile
  4852     06FD                     l75:
  4853     06FD  0008               	return
  4854     06FE                     __end_of_PWM3_LoadDutyValue:
  4855                           
  4856                           	psect	text4
  4857     0E3E                     __ptext4:	
  4858 ;; *************** function _TMR4_StartTimer *****************
  4859 ;; Defined at:
  4860 ;;		line 87 in file "mcc_generated_files/tmr4.c"
  4861 ;; Parameters:    Size  Location     Type
  4862 ;;		None
  4863 ;; Auto vars:     Size  Location     Type
  4864 ;;		None
  4865 ;; Return value:  Size  Location     Type
  4866 ;;                  1    wreg      void 
  4867 ;; Registers used:
  4868 ;;		None
  4869 ;; Tracked objects:
  4870 ;;		On entry : 0/0
  4871 ;;		On exit  : 0/0
  4872 ;;		Unchanged: 0/0
  4873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4874 ;;      Params:         0       0       0       0       0       0
  4875 ;;      Locals:         0       0       0       0       0       0
  4876 ;;      Temps:          0       0       0       0       0       0
  4877 ;;      Totals:         0       0       0       0       0       0
  4878 ;;Total ram usage:        0 bytes
  4879 ;; Hardware stack levels used: 1
  4880 ;; Hardware stack levels required when called: 7
  4881 ;; This function calls:
  4882 ;;		Nothing
  4883 ;; This function is called by:
  4884 ;;		_updateMotor
  4885 ;; This function uses a non-reentrant model
  4886 ;;
  4887                           
  4888     0E3E                     _TMR4_StartTimer:	
  4889                           ;psect for function _TMR4_StartTimer
  4890                           
  4891     0E3E                     l3358:	
  4892                           ;incstack = 0
  4893                           ; Regs used in _TMR4_StartTimer: []
  4894                           
  4895                           
  4896                           ;mcc_generated_files/tmr4.c: 90:     T4CONbits.TMR4ON = 1;
  4897     0E3E  0028               	movlb	8	; select bank8
  4898     0E3F  1517               	bsf	23,2	;volatile
  4899     0E40                     l676:
  4900     0E40  0008               	return
  4901     0E41                     __end_of_TMR4_StartTimer:
  4902                           
  4903                           	psect	text5
  4904     0677                     __ptext5:	
  4905 ;; *************** function _updateMatrix *****************
  4906 ;; Defined at:
  4907 ;;		line 105 in file "C:/Users/160047412/Desktop/ProjetoFinal.X/ledMatrix.c"
  4908 ;; Parameters:    Size  Location     Type
  4909 ;;  pos             1    wreg     unsigned char 
  4910 ;;  val             1    1[BANK1 ] unsigned char 
  4911 ;; Auto vars:     Size  Location     Type
  4912 ;;  pos             1    3[BANK1 ] unsigned char 
  4913 ;;  i               1    5[BANK1 ] unsigned char 
  4914 ;;  eeAdd           1    4[BANK1 ] unsigned char 
  4915 ;; Return value:  Size  Location     Type
  4916 ;;                  1    wreg      void 
  4917 ;; Registers used:
  4918 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4919 ;; Tracked objects:
  4920 ;;		On entry : 0/0
  4921 ;;		On exit  : 0/0
  4922 ;;		Unchanged: 0/0
  4923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4924 ;;      Params:         0       0       1       0       0       0
  4925 ;;      Locals:         0       0       3       0       0       0
  4926 ;;      Temps:          0       0       1       0       0       0
  4927 ;;      Totals:         0       0       5       0       0       0
  4928 ;;Total ram usage:        5 bytes
  4929 ;; Hardware stack levels used: 1
  4930 ;; Hardware stack levels required when called: 8
  4931 ;; This function calls:
  4932 ;;		_DATAEE_ReadByte
  4933 ;; This function is called by:
  4934 ;;		_main
  4935 ;; This function uses a non-reentrant model
  4936 ;;
  4937                           
  4938     0677                     _updateMatrix:	
  4939                           ;psect for function _updateMatrix
  4940                           
  4941                           
  4942                           ;incstack = 0
  4943                           ; Regs used in _updateMatrix: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4944                           ;updateMatrix@pos stored from wreg
  4945     0677  0021               	movlb	1	; select bank1
  4946     0678  00C0               	movwf	updateMatrix@pos^(0+128)
  4947     0679                     l3580:
  4948                           
  4949                           ;C:/Users/160047412/Desktop/ProjetoFinal.X/ledMatrix.c: 109:  uint8_t eeAdd = val<<2;
  4950     0679  083E               	movf	updateMatrix@val^(0+128),w
  4951     067A  00BF               	movwf	??_updateMatrix^(0+128)
  4952     067B  3001               	movlw	1
  4953     067C                     u2585:
  4954     067C  35BF               	lslf	??_updateMatrix^(0+128),f
  4955     067D  3EFF               	addlw	-1
  4956     067E  1D03               	skipz
  4957     067F  2E7C               	goto	u2585
  4958     0680  353F               	lslf	??_updateMatrix^(0+128),w
  4959     0681  00C1               	movwf	updateMatrix@eeAdd^(0+128)
  4960     0682                     l3582:
  4961                           
  4962                           ;C:/Users/160047412/Desktop/ProjetoFinal.X/ledMatrix.c: 110:  for(uint8_t i=0;i<4;i++){
  4963     0682  01C2               	clrf	updateMatrix@i^(0+128)
  4964     0683                     l3588:
  4965                           
  4966                           ;C:/Users/160047412/Desktop/ProjetoFinal.X/ledMatrix.c: 111:   matrix[pos++]=DATAEE_Read
      +                          Byte(eeAdd++);
  4967     0683  0840               	movf	updateMatrix@pos^(0+128),w
  4968     0684  3EB2               	addlw	(low (_matrix| 0))& (0+255)
  4969     0685  0086               	movwf	6
  4970     0686  0187               	clrf	7
  4971     0687  0841               	movf	updateMatrix@eeAdd^(0+128),w
  4972     0688  3187  27F2  3186   	fcall	_DATAEE_ReadByte
  4973     068B  0081               	movwf	1
  4974     068C                     l3590:
  4975     068C  3001               	movlw	1
  4976     068D  0021               	movlb	1	; select bank1
  4977     068E  00BF               	movwf	??_updateMatrix^(0+128)
  4978     068F  083F               	movf	??_updateMatrix^(0+128),w
  4979     0690  07C1               	addwf	updateMatrix@eeAdd^(0+128),f
  4980     0691                     l3592:
  4981     0691  3001               	movlw	1
  4982     0692  00BF               	movwf	??_updateMatrix^(0+128)
  4983     0693  083F               	movf	??_updateMatrix^(0+128),w
  4984     0694  07C0               	addwf	updateMatrix@pos^(0+128),f
  4985     0695                     l3594:
  4986                           
  4987                           ;C:/Users/160047412/Desktop/ProjetoFinal.X/ledMatrix.c: 112:     }
  4988     0695  3001               	movlw	1
  4989     0696  00BF               	movwf	??_updateMatrix^(0+128)
  4990     0697  083F               	movf	??_updateMatrix^(0+128),w
  4991     0698  07C2               	addwf	updateMatrix@i^(0+128),f
  4992     0699                     l3596:
  4993     0699  3004               	movlw	4
  4994     069A  0242               	subwf	updateMatrix@i^(0+128),w
  4995     069B  1C03               	skipc
  4996     069C  2E9E               	goto	u2591
  4997     069D  2E9F               	goto	u2590
  4998     069E                     u2591:
  4999     069E  2E83               	goto	l3588
  5000     069F                     u2590:
  5001     069F                     l909:
  5002     069F  0008               	return
  5003     06A0                     __end_of_updateMatrix:
  5004                           
  5005                           	psect	text6
  5006     07F2                     __ptext6:	
  5007 ;; *************** function _DATAEE_ReadByte *****************
  5008 ;; Defined at:
  5009 ;;		line 211 in file "mcc_generated_files/memory.c"
  5010 ;; Parameters:    Size  Location     Type
  5011 ;;  bAdd            1    wreg     unsigned char 
  5012 ;; Auto vars:     Size  Location     Type
  5013 ;;  bAdd            1    0[BANK1 ] unsigned char 
  5014 ;; Return value:  Size  Location     Type
  5015 ;;                  1    wreg      unsigned char 
  5016 ;; Registers used:
  5017 ;;		wreg
  5018 ;; Tracked objects:
  5019 ;;		On entry : 0/0
  5020 ;;		On exit  : 0/0
  5021 ;;		Unchanged: 0/0
  5022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5023 ;;      Params:         0       0       0       0       0       0
  5024 ;;      Locals:         0       0       1       0       0       0
  5025 ;;      Temps:          0       0       0       0       0       0
  5026 ;;      Totals:         0       0       1       0       0       0
  5027 ;;Total ram usage:        1 bytes
  5028 ;; Hardware stack levels used: 1
  5029 ;; Hardware stack levels required when called: 7
  5030 ;; This function calls:
  5031 ;;		Nothing
  5032 ;; This function is called by:
  5033 ;;		_updateMatrix
  5034 ;; This function uses a non-reentrant model
  5035 ;;
  5036                           
  5037     07F2                     _DATAEE_ReadByte:	
  5038                           ;psect for function _DATAEE_ReadByte
  5039                           
  5040                           
  5041                           ;incstack = 0
  5042                           ; Regs used in _DATAEE_ReadByte: [wreg]
  5043                           ;DATAEE_ReadByte@bAdd stored from wreg
  5044     07F2  0021               	movlb	1	; select bank1
  5045     07F3  00BD               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  5046     07F4                     l3340:
  5047                           
  5048                           ;mcc_generated_files/memory.c: 211: uint8_t DATAEE_ReadByte(uint8_t bAdd);mcc_generated_
      +                          files/memory.c: 212: {;mcc_generated_files/memory.c: 213:     EEADRL = (uint8_t)(bAdd & 
      +                          0x0ff);
  5049     07F4  083D               	movf	DATAEE_ReadByte@bAdd^(0+128),w
  5050     07F5  0023               	movlb	3	; select bank3
  5051     07F6  0091               	movwf	17	;volatile
  5052     07F7                     l3342:
  5053                           
  5054                           ;mcc_generated_files/memory.c: 214:     EECON1bits.CFGS = 0;
  5055     07F7  1315               	bcf	21,6	;volsfr
  5056     07F8                     l3344:
  5057                           
  5058                           ;mcc_generated_files/memory.c: 215:     EECON1bits.EEPGD = 0;
  5059     07F8  1395               	bcf	21,7	;volsfr
  5060     07F9                     l3346:
  5061                           
  5062                           ;mcc_generated_files/memory.c: 216:     EECON1bits.RD = 1;
  5063     07F9  1415               	bsf	21,0	;volsfr
  5064     07FA                     l3348:
  5065                           
  5066                           ;mcc_generated_files/memory.c: 217:     __nop();
  5067     07FA  0000               	nop
  5068     07FB                     l3350:
  5069                           
  5070                           ;mcc_generated_files/memory.c: 218:     __nop();
  5071     07FB  0000               	nop
  5072                           
  5073                           ;mcc_generated_files/memory.c: 220:     return (EEDATL);
  5074     07FC  0023               	movlb	3	; select bank3
  5075     07FD  0813               	movf	19,w	;volatile
  5076     07FE                     l558:
  5077     07FE  0008               	return
  5078     07FF                     __end_of_DATAEE_ReadByte:
  5079                           
  5080                           	psect	text7
  5081     06FE                     __ptext7:	
  5082 ;; *************** function _sendMatrix *****************
  5083 ;; Defined at:
  5084 ;;		line 115 in file "C:/Users/160047412/Desktop/ProjetoFinal.X/ledMatrix.c"
  5085 ;; Parameters:    Size  Location     Type
  5086 ;;		None
  5087 ;; Auto vars:     Size  Location     Type
  5088 ;;  i               1    4[BANK1 ] unsigned char 
  5089 ;; Return value:  Size  Location     Type
  5090 ;;                  1    wreg      void 
  5091 ;; Registers used:
  5092 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5093 ;; Tracked objects:
  5094 ;;		On entry : 0/0
  5095 ;;		On exit  : 0/0
  5096 ;;		Unchanged: 0/0
  5097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5098 ;;      Params:         0       0       0       0       0       0
  5099 ;;      Locals:         0       0       1       0       0       0
  5100 ;;      Temps:          0       0       1       0       0       0
  5101 ;;      Totals:         0       0       2       0       0       0
  5102 ;;Total ram usage:        2 bytes
  5103 ;; Hardware stack levels used: 1
  5104 ;; Hardware stack levels required when called: 9
  5105 ;; This function calls:
  5106 ;;		_txMAX7219
  5107 ;; This function is called by:
  5108 ;;		_main
  5109 ;; This function uses a non-reentrant model
  5110 ;;
  5111                           
  5112     06FE                     _sendMatrix:	
  5113                           ;psect for function _sendMatrix
  5114                           
  5115     06FE                     l3598:	
  5116                           ;incstack = 0
  5117                           ; Regs used in _sendMatrix: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5118                           
  5119                           
  5120                           ;C:/Users/160047412/Desktop/ProjetoFinal.X/ledMatrix.c: 116:     for(uint8_t i=0;i<8;i++
      +                          ){
  5121     06FE  0021               	movlb	1	; select bank1
  5122     06FF  01C1               	clrf	sendMatrix@i^(0+128)
  5123     0700                     l3604:
  5124                           
  5125                           ;C:/Users/160047412/Desktop/ProjetoFinal.X/ledMatrix.c: 118:         txMAX7219(i+1,matri
      +                          x[7-i]);
  5126     0700  30B9               	movlw	(low ((_matrix| 0+7)))& (0+255)
  5127     0701  00C0               	movwf	??_sendMatrix^(0+128)
  5128     0702  0841               	movf	sendMatrix@i^(0+128),w
  5129     0703  02C0               	subwf	??_sendMatrix^(0+128),f
  5130     0704  0840               	movf	??_sendMatrix^(0+128),w
  5131     0705  0086               	movwf	6
  5132     0706  0187               	clrf	7
  5133     0707  0801               	movf	1,w
  5134     0708  00BE               	movwf	txMAX7219@dat0^(0+128)
  5135     0709  0841               	movf	sendMatrix@i^(0+128),w
  5136     070A  3E01               	addlw	1
  5137     070B  3186  26C5  3186   	fcall	_txMAX7219
  5138     070E                     l3606:
  5139                           
  5140                           ;C:/Users/160047412/Desktop/ProjetoFinal.X/ledMatrix.c: 122:     }
  5141     070E  3001               	movlw	1
  5142     070F  0021               	movlb	1	; select bank1
  5143     0710  00C0               	movwf	??_sendMatrix^(0+128)
  5144     0711  0840               	movf	??_sendMatrix^(0+128),w
  5145     0712  07C1               	addwf	sendMatrix@i^(0+128),f
  5146     0713                     l3608:
  5147     0713  3008               	movlw	8
  5148     0714  0241               	subwf	sendMatrix@i^(0+128),w
  5149     0715  1C03               	skipc
  5150     0716  2F18               	goto	u2601
  5151     0717  2F19               	goto	u2600
  5152     0718                     u2601:
  5153     0718  2F00               	goto	l3604
  5154     0719                     u2600:
  5155     0719                     l914:
  5156     0719  0008               	return
  5157     071A                     __end_of_sendMatrix:
  5158                           
  5159                           	psect	text8
  5160     06C5                     __ptext8:	
  5161 ;; *************** function _txMAX7219 *****************
  5162 ;; Defined at:
  5163 ;;		line 74 in file "C:/Users/160047412/Desktop/ProjetoFinal.X/ledMatrix.c"
  5164 ;; Parameters:    Size  Location     Type
  5165 ;;  addr0           1    wreg     unsigned char 
  5166 ;;  dat0            1    1[BANK1 ] unsigned char 
  5167 ;; Auto vars:     Size  Location     Type
  5168 ;;  addr0           1    2[BANK1 ] unsigned char 
  5169 ;; Return value:  Size  Location     Type
  5170 ;;                  1    wreg      void 
  5171 ;; Registers used:
  5172 ;;		wreg, status,2, status,0, pclath, cstack
  5173 ;; Tracked objects:
  5174 ;;		On entry : 0/0
  5175 ;;		On exit  : 0/0
  5176 ;;		Unchanged: 0/0
  5177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5178 ;;      Params:         0       0       1       0       0       0
  5179 ;;      Locals:         0       0       1       0       0       0
  5180 ;;      Temps:          0       0       0       0       0       0
  5181 ;;      Totals:         0       0       2       0       0       0
  5182 ;;Total ram usage:        2 bytes
  5183 ;; Hardware stack levels used: 1
  5184 ;; Hardware stack levels required when called: 8
  5185 ;; This function calls:
  5186 ;;		_SPI1_WriteByte
  5187 ;; This function is called by:
  5188 ;;		_sendMatrix
  5189 ;;		_initMAX7219
  5190 ;; This function uses a non-reentrant model
  5191 ;;
  5192                           
  5193     06C5                     _txMAX7219:	
  5194                           ;psect for function _txMAX7219
  5195                           
  5196                           
  5197                           ;incstack = 0
  5198                           ; Regs used in _txMAX7219: [wreg+status,2+status,0+pclath+cstack]
  5199                           ;txMAX7219@addr0 stored from wreg
  5200     06C5  0021               	movlb	1	; select bank1
  5201     06C6  00BF               	movwf	txMAX7219@addr0^(0+128)
  5202     06C7                     l891:	
  5203                           ;C:/Users/160047412/Desktop/ProjetoFinal.X/ledMatrix.c: 75:     do { LATBbits.LATB1 = 0;
      +                           } while(0);
  5204                           
  5205     06C7  0022               	movlb	2	; select bank2
  5206     06C8  108D               	bcf	13,1	;volatile
  5207     06C9                     l3462:
  5208                           
  5209                           ;C:/Users/160047412/Desktop/ProjetoFinal.X/ledMatrix.c: 76:     SPI1_WriteByte(addr0);
  5210     06C9  0021               	movlb	1	; select bank1
  5211     06CA  083F               	movf	txMAX7219@addr0^(0+128),w
  5212     06CB  318E  2694  3186   	fcall	_SPI1_WriteByte
  5213     06CE                     l893:	
  5214                           ;C:/Users/160047412/Desktop/ProjetoFinal.X/ledMatrix.c: 77:     while(!PIR1bits.SSP1IF);
  5215                           
  5216     06CE  0020               	movlb	0	; select bank0
  5217     06CF  1D91               	btfss	17,3	;volatile
  5218     06D0  2ED2               	goto	u2411
  5219     06D1  2ED3               	goto	u2410
  5220     06D2                     u2411:
  5221     06D2  2ECE               	goto	l893
  5222     06D3                     u2410:
  5223     06D3                     l895:
  5224                           
  5225                           ;C:/Users/160047412/Desktop/ProjetoFinal.X/ledMatrix.c: 78:     PIR1bits.SSP1IF = 0;
  5226     06D3  1191               	bcf	17,3	;volatile
  5227     06D4                     l3464:
  5228                           
  5229                           ;C:/Users/160047412/Desktop/ProjetoFinal.X/ledMatrix.c: 79:     SPI1_WriteByte(dat0);
  5230     06D4  0021               	movlb	1	; select bank1
  5231     06D5  083E               	movf	txMAX7219@dat0^(0+128),w
  5232     06D6  318E  2694  3186   	fcall	_SPI1_WriteByte
  5233     06D9                     l896:	
  5234                           ;C:/Users/160047412/Desktop/ProjetoFinal.X/ledMatrix.c: 80:     while(!PIR1bits.SSP1IF);
  5235                           
  5236     06D9  0020               	movlb	0	; select bank0
  5237     06DA  1D91               	btfss	17,3	;volatile
  5238     06DB  2EDD               	goto	u2421
  5239     06DC  2EDE               	goto	u2420
  5240     06DD                     u2421:
  5241     06DD  2ED9               	goto	l896
  5242     06DE                     u2420:
  5243     06DE                     l898:
  5244                           
  5245                           ;C:/Users/160047412/Desktop/ProjetoFinal.X/ledMatrix.c: 81:     PIR1bits.SSP1IF = 0;
  5246     06DE  1191               	bcf	17,3	;volatile
  5247     06DF                     l899:	
  5248                           ;C:/Users/160047412/Desktop/ProjetoFinal.X/ledMatrix.c: 82:     do { LATBbits.LATB1 = 1;
      +                           } while(0);
  5249                           
  5250     06DF  0022               	movlb	2	; select bank2
  5251     06E0  148D               	bsf	13,1	;volatile
  5252     06E1                     l901:
  5253     06E1  0008               	return
  5254     06E2                     __end_of_txMAX7219:
  5255                           
  5256                           	psect	text9
  5257     0E94                     __ptext9:	
  5258 ;; *************** function _SPI1_WriteByte *****************
  5259 ;; Defined at:
  5260 ;;		line 131 in file "mcc_generated_files/spi1.c"
  5261 ;; Parameters:    Size  Location     Type
  5262 ;;  byte            1    wreg     unsigned char 
  5263 ;; Auto vars:     Size  Location     Type
  5264 ;;  byte            1    0[BANK1 ] unsigned char 
  5265 ;; Return value:  Size  Location     Type
  5266 ;;                  1    wreg      void 
  5267 ;; Registers used:
  5268 ;;		wreg
  5269 ;; Tracked objects:
  5270 ;;		On entry : 0/0
  5271 ;;		On exit  : 0/0
  5272 ;;		Unchanged: 0/0
  5273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5274 ;;      Params:         0       0       0       0       0       0
  5275 ;;      Locals:         0       0       1       0       0       0
  5276 ;;      Temps:          0       0       0       0       0       0
  5277 ;;      Totals:         0       0       1       0       0       0
  5278 ;;Total ram usage:        1 bytes
  5279 ;; Hardware stack levels used: 1
  5280 ;; Hardware stack levels required when called: 7
  5281 ;; This function calls:
  5282 ;;		Nothing
  5283 ;; This function is called by:
  5284 ;;		_txMAX7219
  5285 ;; This function uses a non-reentrant model
  5286 ;;
  5287                           
  5288     0E94                     _SPI1_WriteByte:	
  5289                           ;psect for function _SPI1_WriteByte
  5290                           
  5291                           
  5292                           ;incstack = 0
  5293                           ; Regs used in _SPI1_WriteByte: [wreg]
  5294                           ;SPI1_WriteByte@byte stored from wreg
  5295     0E94  0021               	movlb	1	; select bank1
  5296     0E95  00BD               	movwf	SPI1_WriteByte@byte^(0+128)
  5297     0E96                     l2832:
  5298                           
  5299                           ;mcc_generated_files/spi1.c: 131: void SPI1_WriteByte(uint8_t byte);mcc_generated_files/
      +                          spi1.c: 132: {;mcc_generated_files/spi1.c: 133:     SSP1BUF = byte;
  5300     0E96  083D               	movf	SPI1_WriteByte@byte^(0+128),w
  5301     0E97  0024               	movlb	4	; select bank4
  5302     0E98  0091               	movwf	17	;volatile
  5303     0E99                     l58:
  5304     0E99  0008               	return
  5305     0E9A                     __end_of_SPI1_WriteByte:
  5306                           
  5307                           	psect	text10
  5308     0617                     __ptext10:	
  5309 ;; *************** function _SYSTEM_Initialize *****************
  5310 ;; Defined at:
  5311 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5312 ;; Parameters:    Size  Location     Type
  5313 ;;		None
  5314 ;; Auto vars:     Size  Location     Type
  5315 ;;		None
  5316 ;; Return value:  Size  Location     Type
  5317 ;;                  1    wreg      void 
  5318 ;; Registers used:
  5319 ;;		wreg, status,2, status,0, pclath, cstack
  5320 ;; Tracked objects:
  5321 ;;		On entry : 0/0
  5322 ;;		On exit  : 0/0
  5323 ;;		Unchanged: 0/0
  5324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5325 ;;      Params:         0       0       0       0       0       0
  5326 ;;      Locals:         0       0       0       0       0       0
  5327 ;;      Temps:          0       0       0       0       0       0
  5328 ;;      Totals:         0       0       0       0       0       0
  5329 ;;Total ram usage:        0 bytes
  5330 ;; Hardware stack levels used: 1
  5331 ;; Hardware stack levels required when called: 9
  5332 ;; This function calls:
  5333 ;;		_ADC_Initialize
  5334 ;;		_CCP4_Initialize
  5335 ;;		_CMP1_Initialize
  5336 ;;		_CMP2_Initialize
  5337 ;;		_DAC_Initialize
  5338 ;;		_EUSART_Initialize
  5339 ;;		_OSCILLATOR_Initialize
  5340 ;;		_PIN_MANAGER_Initialize
  5341 ;;		_PWM3_Initialize
  5342 ;;		_SPI1_Initialize
  5343 ;;		_TMR0_Initialize
  5344 ;;		_TMR1_Initialize
  5345 ;;		_TMR2_Initialize
  5346 ;;		_TMR4_Initialize
  5347 ;;		_TMR6_Initialize
  5348 ;;		_WDT_Initialize
  5349 ;; This function is called by:
  5350 ;;		_main
  5351 ;; This function uses a non-reentrant model
  5352 ;;
  5353                           
  5354     0617                     _SYSTEM_Initialize:	
  5355                           ;psect for function _SYSTEM_Initialize
  5356                           
  5357     0617                     l3532:	
  5358                           ;incstack = 0
  5359                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5360                           
  5361                           
  5362                           ;mcc_generated_files/mcc.c: 53:     SPI1_Initialize();
  5363     0617  318E  26F0  3186   	fcall	_SPI1_Initialize
  5364                           
  5365                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  5366     061A  3186  2648  3186   	fcall	_PIN_MANAGER_Initialize
  5367                           
  5368                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  5369     061D  318E  26A0  3186   	fcall	_OSCILLATOR_Initialize
  5370                           
  5371                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  5372     0620  318E  2645  3186   	fcall	_WDT_Initialize
  5373                           
  5374                           ;mcc_generated_files/mcc.c: 57:     CMP2_Initialize();
  5375     0623  318F  2706  3186   	fcall	_CMP2_Initialize
  5376                           
  5377                           ;mcc_generated_files/mcc.c: 58:     DAC_Initialize();
  5378     0626  318E  2664  3186   	fcall	_DAC_Initialize
  5379                           
  5380                           ;mcc_generated_files/mcc.c: 59:     TMR4_Initialize();
  5381     0629  318F  27C6  3186   	fcall	_TMR4_Initialize
  5382                           
  5383                           ;mcc_generated_files/mcc.c: 60:     TMR2_Initialize();
  5384     062C  318E  26AF  3186   	fcall	_TMR2_Initialize
  5385                           
  5386                           ;mcc_generated_files/mcc.c: 61:     TMR0_Initialize();
  5387     062F  3187  27DD  3186   	fcall	_TMR0_Initialize
  5388                           
  5389                           ;mcc_generated_files/mcc.c: 62:     TMR6_Initialize();
  5390     0632  318F  27D9  3186   	fcall	_TMR6_Initialize
  5391                           
  5392                           ;mcc_generated_files/mcc.c: 63:     CMP1_Initialize();
  5393     0635  318E  26FA  3186   	fcall	_CMP1_Initialize
  5394                           
  5395                           ;mcc_generated_files/mcc.c: 64:     CCP4_Initialize();
  5396     0638  318F  27B4  3186   	fcall	_CCP4_Initialize
  5397                           
  5398                           ;mcc_generated_files/mcc.c: 65:     ADC_Initialize();
  5399     063B  318E  26A7  3186   	fcall	_ADC_Initialize
  5400                           
  5401                           ;mcc_generated_files/mcc.c: 66:     PWM3_Initialize();
  5402     063E  318E  26C0  3186   	fcall	_PWM3_Initialize
  5403                           
  5404                           ;mcc_generated_files/mcc.c: 67:     TMR1_Initialize();
  5405     0641  318F  2712  3186   	fcall	_TMR1_Initialize
  5406                           
  5407                           ;mcc_generated_files/mcc.c: 68:     EUSART_Initialize();
  5408     0644  3186  26A0  3186   	fcall	_EUSART_Initialize
  5409     0647                     l351:
  5410     0647  0008               	return
  5411     0648                     __end_of_SYSTEM_Initialize:
  5412                           
  5413                           	psect	text11
  5414     0E45                     __ptext11:	
  5415 ;; *************** function _WDT_Initialize *****************
  5416 ;; Defined at:
  5417 ;;		line 81 in file "mcc_generated_files/mcc.c"
  5418 ;; Parameters:    Size  Location     Type
  5419 ;;		None
  5420 ;; Auto vars:     Size  Location     Type
  5421 ;;		None
  5422 ;; Return value:  Size  Location     Type
  5423 ;;                  1    wreg      void 
  5424 ;; Registers used:
  5425 ;;		wreg
  5426 ;; Tracked objects:
  5427 ;;		On entry : 0/0
  5428 ;;		On exit  : 0/0
  5429 ;;		Unchanged: 0/0
  5430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5431 ;;      Params:         0       0       0       0       0       0
  5432 ;;      Locals:         0       0       0       0       0       0
  5433 ;;      Temps:          0       0       0       0       0       0
  5434 ;;      Totals:         0       0       0       0       0       0
  5435 ;;Total ram usage:        0 bytes
  5436 ;; Hardware stack levels used: 1
  5437 ;; Hardware stack levels required when called: 7
  5438 ;; This function calls:
  5439 ;;		Nothing
  5440 ;; This function is called by:
  5441 ;;		_SYSTEM_Initialize
  5442 ;; This function uses a non-reentrant model
  5443 ;;
  5444                           
  5445     0E45                     _WDT_Initialize:	
  5446                           ;psect for function _WDT_Initialize
  5447                           
  5448     0E45                     l3262:	
  5449                           ;incstack = 0
  5450                           ; Regs used in _WDT_Initialize: [wreg]
  5451                           
  5452                           
  5453                           ;mcc_generated_files/mcc.c: 84:     WDTCON = 0x16;
  5454     0E45  3016               	movlw	22
  5455     0E46  0021               	movlb	1	; select bank1
  5456     0E47  0097               	movwf	23	;volatile
  5457     0E48                     l357:
  5458     0E48  0008               	return
  5459     0E49                     __end_of_WDT_Initialize:
  5460                           
  5461                           	psect	text12
  5462     0FD9                     __ptext12:	
  5463 ;; *************** function _TMR6_Initialize *****************
  5464 ;; Defined at:
  5465 ;;		line 64 in file "mcc_generated_files/tmr6.c"
  5466 ;; Parameters:    Size  Location     Type
  5467 ;;		None
  5468 ;; Auto vars:     Size  Location     Type
  5469 ;;		None
  5470 ;; Return value:  Size  Location     Type
  5471 ;;                  1    wreg      void 
  5472 ;; Registers used:
  5473 ;;		wreg, status,2, status,0, pclath, cstack
  5474 ;; Tracked objects:
  5475 ;;		On entry : 0/0
  5476 ;;		On exit  : 0/0
  5477 ;;		Unchanged: 0/0
  5478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5479 ;;      Params:         0       0       0       0       0       0
  5480 ;;      Locals:         0       0       0       0       0       0
  5481 ;;      Temps:          0       0       0       0       0       0
  5482 ;;      Totals:         0       0       0       0       0       0
  5483 ;;Total ram usage:        0 bytes
  5484 ;; Hardware stack levels used: 1
  5485 ;; Hardware stack levels required when called: 8
  5486 ;; This function calls:
  5487 ;;		_TMR6_SetInterruptHandler
  5488 ;; This function is called by:
  5489 ;;		_SYSTEM_Initialize
  5490 ;; This function uses a non-reentrant model
  5491 ;;
  5492                           
  5493     0FD9                     _TMR6_Initialize:	
  5494                           ;psect for function _TMR6_Initialize
  5495                           
  5496     0FD9                     l3306:	
  5497                           ;incstack = 0
  5498                           ; Regs used in _TMR6_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5499                           
  5500                           
  5501                           ;mcc_generated_files/tmr6.c: 69:     PR6 = 0xF9;
  5502     0FD9  30F9               	movlw	249
  5503     0FDA  0028               	movlb	8	; select bank8
  5504     0FDB  009D               	movwf	29	;volatile
  5505     0FDC                     l3308:
  5506                           
  5507                           ;mcc_generated_files/tmr6.c: 72:     TMR6 = 0x00;
  5508     0FDC  019C               	clrf	28	;volatile
  5509     0FDD                     l3310:
  5510                           
  5511                           ;mcc_generated_files/tmr6.c: 75:     PIR3bits.TMR6IF = 0;
  5512     0FDD  0020               	movlb	0	; select bank0
  5513     0FDE  1193               	bcf	19,3	;volatile
  5514     0FDF                     l3312:
  5515                           
  5516                           ;mcc_generated_files/tmr6.c: 78:     PIE3bits.TMR6IE = 1;
  5517     0FDF  0021               	movlb	1	; select bank1
  5518     0FE0  1593               	bsf	19,3	;volatile
  5519     0FE1                     l3314:
  5520                           
  5521                           ;mcc_generated_files/tmr6.c: 81:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
  5522     0FE1  3031               	movlw	low _TMR6_DefaultInterruptHandler
  5523     0FE2  00BD               	movwf	TMR6_SetInterruptHandler@InterruptHandler^(0+128)
  5524     0FE3  300E               	movlw	high _TMR6_DefaultInterruptHandler
  5525     0FE4  00BE               	movwf	(TMR6_SetInterruptHandler@InterruptHandler^(0+128)+1)
  5526     0FE5  318E  268E  318F   	fcall	_TMR6_SetInterruptHandler
  5527     0FE8                     l3316:
  5528                           
  5529                           ;mcc_generated_files/tmr6.c: 84:     T6CON = 0x49;
  5530     0FE8  3049               	movlw	73
  5531     0FE9  0028               	movlb	8	; select bank8
  5532     0FEA  009E               	movwf	30	;volatile
  5533     0FEB                     l619:
  5534     0FEB  0008               	return
  5535     0FEC                     __end_of_TMR6_Initialize:
  5536                           
  5537                           	psect	text13
  5538     0E8E                     __ptext13:	
  5539 ;; *************** function _TMR6_SetInterruptHandler *****************
  5540 ;; Defined at:
  5541 ;;		line 147 in file "mcc_generated_files/tmr6.c"
  5542 ;; Parameters:    Size  Location     Type
  5543 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  5544 ;;		 -> TMR6_Interrupt(1), TMR6_DefaultInterruptHandler(1), 
  5545 ;; Auto vars:     Size  Location     Type
  5546 ;;		None
  5547 ;; Return value:  Size  Location     Type
  5548 ;;                  1    wreg      void 
  5549 ;; Registers used:
  5550 ;;		wreg
  5551 ;; Tracked objects:
  5552 ;;		On entry : 0/0
  5553 ;;		On exit  : 0/0
  5554 ;;		Unchanged: 0/0
  5555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5556 ;;      Params:         0       0       2       0       0       0
  5557 ;;      Locals:         0       0       0       0       0       0
  5558 ;;      Temps:          0       0       0       0       0       0
  5559 ;;      Totals:         0       0       2       0       0       0
  5560 ;;Total ram usage:        2 bytes
  5561 ;; Hardware stack levels used: 1
  5562 ;; Hardware stack levels required when called: 7
  5563 ;; This function calls:
  5564 ;;		Nothing
  5565 ;; This function is called by:
  5566 ;;		_TMR6_Initialize
  5567 ;;		_main
  5568 ;; This function uses a non-reentrant model
  5569 ;;
  5570                           
  5571     0E8E                     _TMR6_SetInterruptHandler:	
  5572                           ;psect for function _TMR6_SetInterruptHandler
  5573                           
  5574     0E8E                     l2882:	
  5575                           ;incstack = 0
  5576                           ; Regs used in _TMR6_SetInterruptHandler: [wreg]
  5577                           
  5578                           
  5579                           ;mcc_generated_files/tmr6.c: 148:     TMR6_InterruptHandler = InterruptHandler;
  5580     0E8E  0021               	movlb	1	; select bank1
  5581     0E8F  083E               	movf	(TMR6_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  5582     0E90  00A5               	movwf	(_TMR6_InterruptHandler+1)^(0+128)
  5583     0E91  083D               	movf	TMR6_SetInterruptHandler@InterruptHandler^(0+128),w
  5584     0E92  00A4               	movwf	_TMR6_InterruptHandler^(0+128)
  5585     0E93                     l647:
  5586     0E93  0008               	return
  5587     0E94                     __end_of_TMR6_SetInterruptHandler:
  5588                           
  5589                           	psect	text14
  5590     0FC6                     __ptext14:	
  5591 ;; *************** function _TMR4_Initialize *****************
  5592 ;; Defined at:
  5593 ;;		line 64 in file "mcc_generated_files/tmr4.c"
  5594 ;; Parameters:    Size  Location     Type
  5595 ;;		None
  5596 ;; Auto vars:     Size  Location     Type
  5597 ;;		None
  5598 ;; Return value:  Size  Location     Type
  5599 ;;                  1    wreg      void 
  5600 ;; Registers used:
  5601 ;;		wreg, status,2, status,0, pclath, cstack
  5602 ;; Tracked objects:
  5603 ;;		On entry : 0/0
  5604 ;;		On exit  : 0/0
  5605 ;;		Unchanged: 0/0
  5606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5607 ;;      Params:         0       0       0       0       0       0
  5608 ;;      Locals:         0       0       0       0       0       0
  5609 ;;      Temps:          0       0       0       0       0       0
  5610 ;;      Totals:         0       0       0       0       0       0
  5611 ;;Total ram usage:        0 bytes
  5612 ;; Hardware stack levels used: 1
  5613 ;; Hardware stack levels required when called: 8
  5614 ;; This function calls:
  5615 ;;		_TMR4_SetInterruptHandler
  5616 ;; This function is called by:
  5617 ;;		_SYSTEM_Initialize
  5618 ;; This function uses a non-reentrant model
  5619 ;;
  5620                           
  5621     0FC6                     _TMR4_Initialize:	
  5622                           ;psect for function _TMR4_Initialize
  5623                           
  5624     0FC6                     l3274:	
  5625                           ;incstack = 0
  5626                           ; Regs used in _TMR4_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5627                           
  5628                           
  5629                           ;mcc_generated_files/tmr4.c: 69:     PR4 = 0xF9;
  5630     0FC6  30F9               	movlw	249
  5631     0FC7  0028               	movlb	8	; select bank8
  5632     0FC8  0096               	movwf	22	;volatile
  5633     0FC9                     l3276:
  5634                           
  5635                           ;mcc_generated_files/tmr4.c: 72:     TMR4 = 0x00;
  5636     0FC9  0195               	clrf	21	;volatile
  5637     0FCA                     l3278:
  5638                           
  5639                           ;mcc_generated_files/tmr4.c: 75:     PIR3bits.TMR4IF = 0;
  5640     0FCA  0020               	movlb	0	; select bank0
  5641     0FCB  1093               	bcf	19,1	;volatile
  5642     0FCC                     l3280:
  5643                           
  5644                           ;mcc_generated_files/tmr4.c: 78:     PIE3bits.TMR4IE = 1;
  5645     0FCC  0021               	movlb	1	; select bank1
  5646     0FCD  1493               	bsf	19,1	;volatile
  5647     0FCE                     l3282:
  5648                           
  5649                           ;mcc_generated_files/tmr4.c: 81:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
  5650     0FCE  3030               	movlw	low _TMR4_DefaultInterruptHandler
  5651     0FCF  00BD               	movwf	TMR4_SetInterruptHandler@InterruptHandler^(0+128)
  5652     0FD0  300E               	movlw	high _TMR4_DefaultInterruptHandler
  5653     0FD1  00BE               	movwf	(TMR4_SetInterruptHandler@InterruptHandler^(0+128)+1)
  5654     0FD2  318E  2688  318F   	fcall	_TMR4_SetInterruptHandler
  5655     0FD5                     l3284:
  5656                           
  5657                           ;mcc_generated_files/tmr4.c: 84:     T4CON = 0x49;
  5658     0FD5  3049               	movlw	73
  5659     0FD6  0028               	movlb	8	; select bank8
  5660     0FD7  0097               	movwf	23	;volatile
  5661     0FD8                     l673:
  5662     0FD8  0008               	return
  5663     0FD9                     __end_of_TMR4_Initialize:
  5664                           
  5665                           	psect	text15
  5666     0E88                     __ptext15:	
  5667 ;; *************** function _TMR4_SetInterruptHandler *****************
  5668 ;; Defined at:
  5669 ;;		line 147 in file "mcc_generated_files/tmr4.c"
  5670 ;; Parameters:    Size  Location     Type
  5671 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  5672 ;;		 -> TMR4_Interrupt(1), TMR4_DefaultInterruptHandler(1), 
  5673 ;; Auto vars:     Size  Location     Type
  5674 ;;		None
  5675 ;; Return value:  Size  Location     Type
  5676 ;;                  1    wreg      void 
  5677 ;; Registers used:
  5678 ;;		wreg
  5679 ;; Tracked objects:
  5680 ;;		On entry : 0/0
  5681 ;;		On exit  : 0/0
  5682 ;;		Unchanged: 0/0
  5683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5684 ;;      Params:         0       0       2       0       0       0
  5685 ;;      Locals:         0       0       0       0       0       0
  5686 ;;      Temps:          0       0       0       0       0       0
  5687 ;;      Totals:         0       0       2       0       0       0
  5688 ;;Total ram usage:        2 bytes
  5689 ;; Hardware stack levels used: 1
  5690 ;; Hardware stack levels required when called: 7
  5691 ;; This function calls:
  5692 ;;		Nothing
  5693 ;; This function is called by:
  5694 ;;		_TMR4_Initialize
  5695 ;;		_main
  5696 ;; This function uses a non-reentrant model
  5697 ;;
  5698                           
  5699     0E88                     _TMR4_SetInterruptHandler:	
  5700                           ;psect for function _TMR4_SetInterruptHandler
  5701                           
  5702     0E88                     l2884:	
  5703                           ;incstack = 0
  5704                           ; Regs used in _TMR4_SetInterruptHandler: [wreg]
  5705                           
  5706                           
  5707                           ;mcc_generated_files/tmr4.c: 148:     TMR4_InterruptHandler = InterruptHandler;
  5708     0E88  0021               	movlb	1	; select bank1
  5709     0E89  083E               	movf	(TMR4_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  5710     0E8A  00A3               	movwf	(_TMR4_InterruptHandler+1)^(0+128)
  5711     0E8B  083D               	movf	TMR4_SetInterruptHandler@InterruptHandler^(0+128),w
  5712     0E8C  00A2               	movwf	_TMR4_InterruptHandler^(0+128)
  5713     0E8D                     l701:
  5714     0E8D  0008               	return
  5715     0E8E                     __end_of_TMR4_SetInterruptHandler:
  5716                           
  5717                           	psect	text16
  5718     0EAF                     __ptext16:	
  5719 ;; *************** function _TMR2_Initialize *****************
  5720 ;; Defined at:
  5721 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  5722 ;; Parameters:    Size  Location     Type
  5723 ;;		None
  5724 ;; Auto vars:     Size  Location     Type
  5725 ;;		None
  5726 ;; Return value:  Size  Location     Type
  5727 ;;                  1    wreg      void 
  5728 ;; Registers used:
  5729 ;;		wreg, status,2
  5730 ;; Tracked objects:
  5731 ;;		On entry : 0/0
  5732 ;;		On exit  : 0/0
  5733 ;;		Unchanged: 0/0
  5734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5735 ;;      Params:         0       0       0       0       0       0
  5736 ;;      Locals:         0       0       0       0       0       0
  5737 ;;      Temps:          0       0       0       0       0       0
  5738 ;;      Totals:         0       0       0       0       0       0
  5739 ;;Total ram usage:        0 bytes
  5740 ;; Hardware stack levels used: 1
  5741 ;; Hardware stack levels required when called: 7
  5742 ;; This function calls:
  5743 ;;		Nothing
  5744 ;; This function is called by:
  5745 ;;		_SYSTEM_Initialize
  5746 ;; This function uses a non-reentrant model
  5747 ;;
  5748                           
  5749     0EAF                     _TMR2_Initialize:	
  5750                           ;psect for function _TMR2_Initialize
  5751                           
  5752     0EAF                     l3286:	
  5753                           ;incstack = 0
  5754                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  5755                           
  5756                           
  5757                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xFF;
  5758     0EAF  30FF               	movlw	255
  5759     0EB0  0020               	movlb	0	; select bank0
  5760     0EB1  009B               	movwf	27	;volatile
  5761     0EB2                     l3288:
  5762                           
  5763                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  5764     0EB2  019A               	clrf	26	;volatile
  5765     0EB3                     l3290:
  5766                           
  5767                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  5768     0EB3  1091               	bcf	17,1	;volatile
  5769     0EB4                     l3292:
  5770                           
  5771                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x04;
  5772     0EB4  3004               	movlw	4
  5773     0EB5  009C               	movwf	28	;volatile
  5774     0EB6                     l370:
  5775     0EB6  0008               	return
  5776     0EB7                     __end_of_TMR2_Initialize:
  5777                           
  5778                           	psect	text17
  5779     0F12                     __ptext17:	
  5780 ;; *************** function _TMR1_Initialize *****************
  5781 ;; Defined at:
  5782 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  5783 ;; Parameters:    Size  Location     Type
  5784 ;;		None
  5785 ;; Auto vars:     Size  Location     Type
  5786 ;;		None
  5787 ;; Return value:  Size  Location     Type
  5788 ;;                  1    wreg      void 
  5789 ;; Registers used:
  5790 ;;		wreg, status,2
  5791 ;; Tracked objects:
  5792 ;;		On entry : 0/0
  5793 ;;		On exit  : 0/0
  5794 ;;		Unchanged: 0/0
  5795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5796 ;;      Params:         0       0       0       0       0       0
  5797 ;;      Locals:         0       0       0       0       0       0
  5798 ;;      Temps:          0       0       0       0       0       0
  5799 ;;      Totals:         0       0       0       0       0       0
  5800 ;;Total ram usage:        0 bytes
  5801 ;; Hardware stack levels used: 1
  5802 ;; Hardware stack levels required when called: 7
  5803 ;; This function calls:
  5804 ;;		Nothing
  5805 ;; This function is called by:
  5806 ;;		_SYSTEM_Initialize
  5807 ;; This function uses a non-reentrant model
  5808 ;;
  5809                           
  5810     0F12                     _TMR1_Initialize:	
  5811                           ;psect for function _TMR1_Initialize
  5812                           
  5813     0F12                     l3332:	
  5814                           ;incstack = 0
  5815                           ; Regs used in _TMR1_Initialize: [wreg+status,2]
  5816                           
  5817                           
  5818                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
  5819     0F12  0020               	movlb	0	; select bank0
  5820     0F13  0199               	clrf	25	;volatile
  5821                           
  5822                           ;mcc_generated_files/tmr1.c: 71:     TMR1H = 0x00;
  5823     0F14  0197               	clrf	23	;volatile
  5824                           
  5825                           ;mcc_generated_files/tmr1.c: 74:     TMR1L = 0x00;
  5826     0F15  0196               	clrf	22	;volatile
  5827     0F16                     l3334:
  5828                           
  5829                           ;mcc_generated_files/tmr1.c: 77:     PIR1bits.TMR1IF = 0;
  5830     0F16  1011               	bcf	17,0	;volatile
  5831     0F17                     l3336:
  5832                           
  5833                           ;mcc_generated_files/tmr1.c: 80:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  5834     0F17  0817               	movf	23,w	;volatile
  5835     0F18  00E0               	movwf	_timer1ReloadVal+1	;volatile
  5836     0F19  0816               	movf	22,w	;volatile
  5837     0F1A  00DF               	movwf	_timer1ReloadVal	;volatile
  5838     0F1B                     l3338:
  5839                           
  5840                           ;mcc_generated_files/tmr1.c: 83:     T1CON = 0x05;
  5841     0F1B  3005               	movlw	5
  5842     0F1C  0098               	movwf	24	;volatile
  5843     0F1D                     l408:
  5844     0F1D  0008               	return
  5845     0F1E                     __end_of_TMR1_Initialize:
  5846                           
  5847                           	psect	text18
  5848     07DD                     __ptext18:	
  5849 ;; *************** function _TMR0_Initialize *****************
  5850 ;; Defined at:
  5851 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  5852 ;; Parameters:    Size  Location     Type
  5853 ;;		None
  5854 ;; Auto vars:     Size  Location     Type
  5855 ;;		None
  5856 ;; Return value:  Size  Location     Type
  5857 ;;                  1    wreg      void 
  5858 ;; Registers used:
  5859 ;;		wreg, status,2, status,0, pclath, cstack
  5860 ;; Tracked objects:
  5861 ;;		On entry : 0/0
  5862 ;;		On exit  : 0/0
  5863 ;;		Unchanged: 0/0
  5864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5865 ;;      Params:         0       0       0       0       0       0
  5866 ;;      Locals:         0       0       0       0       0       0
  5867 ;;      Temps:          0       0       0       0       0       0
  5868 ;;      Totals:         0       0       0       0       0       0
  5869 ;;Total ram usage:        0 bytes
  5870 ;; Hardware stack levels used: 1
  5871 ;; Hardware stack levels required when called: 8
  5872 ;; This function calls:
  5873 ;;		_TMR0_SetInterruptHandler
  5874 ;; This function is called by:
  5875 ;;		_SYSTEM_Initialize
  5876 ;; This function uses a non-reentrant model
  5877 ;;
  5878                           
  5879     07DD                     _TMR0_Initialize:	
  5880                           ;psect for function _TMR0_Initialize
  5881                           
  5882     07DD                     l3294:	
  5883                           ;incstack = 0
  5884                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5885                           
  5886                           
  5887                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD7 
      +                          & 0x3F));
  5888     07DD  0021               	movlb	1	; select bank1
  5889     07DE  0815               	movf	21,w	;volatile
  5890     07DF  39C0               	andlw	192
  5891     07E0  3817               	iorlw	23
  5892     07E1  0095               	movwf	21	;volatile
  5893     07E2                     l3296:
  5894                           
  5895                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0xD9;
  5896     07E2  30D9               	movlw	217
  5897     07E3  0020               	movlb	0	; select bank0
  5898     07E4  0095               	movwf	21	;volatile
  5899     07E5                     l3298:
  5900                           
  5901                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 217;
  5902     07E5  30D9               	movlw	217
  5903     07E6  00E3               	movwf	_timer0ReloadVal	;volatile
  5904     07E7                     l3300:
  5905                           
  5906                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
  5907     07E7  110B               	bcf	11,2	;volatile
  5908     07E8                     l3302:
  5909                           
  5910                           ;mcc_generated_files/tmr0.c: 81:     INTCONbits.TMR0IE = 1;
  5911     07E8  168B               	bsf	11,5	;volatile
  5912     07E9                     l3304:
  5913                           
  5914                           ;mcc_generated_files/tmr0.c: 84:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  5915     07E9  302F               	movlw	low _TMR0_DefaultInterruptHandler
  5916     07EA  0021               	movlb	1	; select bank1
  5917     07EB  00BD               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  5918     07EC  300E               	movlw	high _TMR0_DefaultInterruptHandler
  5919     07ED  00BE               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  5920     07EE  318E  26C9  3187   	fcall	_TMR0_SetInterruptHandler
  5921     07F1                     l451:
  5922     07F1  0008               	return
  5923     07F2                     __end_of_TMR0_Initialize:
  5924                           
  5925                           	psect	text19
  5926     0EC9                     __ptext19:	
  5927 ;; *************** function _TMR0_SetInterruptHandler *****************
  5928 ;; Defined at:
  5929 ;;		line 125 in file "mcc_generated_files/tmr0.c"
  5930 ;; Parameters:    Size  Location     Type
  5931 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  5932 ;;		 -> TMR0_Interrupt(1), TMR0_DefaultInterruptHandler(1), 
  5933 ;; Auto vars:     Size  Location     Type
  5934 ;;		None
  5935 ;; Return value:  Size  Location     Type
  5936 ;;                  1    wreg      void 
  5937 ;; Registers used:
  5938 ;;		wreg
  5939 ;; Tracked objects:
  5940 ;;		On entry : 0/0
  5941 ;;		On exit  : 0/0
  5942 ;;		Unchanged: 0/0
  5943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5944 ;;      Params:         0       0       2       0       0       0
  5945 ;;      Locals:         0       0       0       0       0       0
  5946 ;;      Temps:          0       0       0       0       0       0
  5947 ;;      Totals:         0       0       2       0       0       0
  5948 ;;Total ram usage:        2 bytes
  5949 ;; Hardware stack levels used: 1
  5950 ;; Hardware stack levels required when called: 7
  5951 ;; This function calls:
  5952 ;;		Nothing
  5953 ;; This function is called by:
  5954 ;;		_TMR0_Initialize
  5955 ;;		_main
  5956 ;; This function uses a non-reentrant model
  5957 ;;
  5958                           
  5959     0EC9                     _TMR0_SetInterruptHandler:	
  5960                           ;psect for function _TMR0_SetInterruptHandler
  5961                           
  5962     0EC9                     l2868:	
  5963                           ;incstack = 0
  5964                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  5965                           
  5966                           
  5967                           ;mcc_generated_files/tmr0.c: 126:     TMR0_InterruptHandler = InterruptHandler;
  5968     0EC9  0021               	movlb	1	; select bank1
  5969     0ECA  083E               	movf	(TMR0_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  5970     0ECB  0020               	movlb	0	; select bank0
  5971     0ECC  00DE               	movwf	_TMR0_InterruptHandler+1
  5972     0ECD  0021               	movlb	1	; select bank1
  5973     0ECE  083D               	movf	TMR0_SetInterruptHandler@InterruptHandler^(0+128),w
  5974     0ECF  0020               	movlb	0	; select bank0
  5975     0ED0  00DD               	movwf	_TMR0_InterruptHandler
  5976     0ED1                     l467:
  5977     0ED1  0008               	return
  5978     0ED2                     __end_of_TMR0_SetInterruptHandler:
  5979                           
  5980                           	psect	text20
  5981     0EF0                     __ptext20:	
  5982 ;; *************** function _SPI1_Initialize *****************
  5983 ;; Defined at:
  5984 ;;		line 62 in file "mcc_generated_files/spi1.c"
  5985 ;; Parameters:    Size  Location     Type
  5986 ;;		None
  5987 ;; Auto vars:     Size  Location     Type
  5988 ;;		None
  5989 ;; Return value:  Size  Location     Type
  5990 ;;                  1    wreg      void 
  5991 ;; Registers used:
  5992 ;;		wreg, status,2
  5993 ;; Tracked objects:
  5994 ;;		On entry : 0/0
  5995 ;;		On exit  : 0/0
  5996 ;;		Unchanged: 0/0
  5997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5998 ;;      Params:         0       0       0       0       0       0
  5999 ;;      Locals:         0       0       0       0       0       0
  6000 ;;      Temps:          0       0       0       0       0       0
  6001 ;;      Totals:         0       0       0       0       0       0
  6002 ;;Total ram usage:        0 bytes
  6003 ;; Hardware stack levels used: 1
  6004 ;; Hardware stack levels required when called: 7
  6005 ;; This function calls:
  6006 ;;		Nothing
  6007 ;; This function is called by:
  6008 ;;		_SYSTEM_Initialize
  6009 ;; This function uses a non-reentrant model
  6010 ;;
  6011                           
  6012     0EF0                     _SPI1_Initialize:	
  6013                           ;psect for function _SPI1_Initialize
  6014                           
  6015     0EF0                     l3168:	
  6016                           ;incstack = 0
  6017                           ; Regs used in _SPI1_Initialize: [wreg+status,2]
  6018                           
  6019                           
  6020                           ;mcc_generated_files/spi1.c: 65:     SSP1STAT = 0x00;
  6021     0EF0  0024               	movlb	4	; select bank4
  6022     0EF1  0194               	clrf	20	;volatile
  6023                           
  6024                           ;mcc_generated_files/spi1.c: 66:     SSP1CON1 = 0x00;
  6025     0EF2  0195               	clrf	21	;volatile
  6026     0EF3                     l3170:
  6027                           
  6028                           ;mcc_generated_files/spi1.c: 67:     SSP1ADD = 0x01;
  6029     0EF3  3001               	movlw	1
  6030     0EF4  0092               	movwf	18	;volatile
  6031     0EF5                     l3172:
  6032                           
  6033                           ;mcc_generated_files/spi1.c: 68:     TRISBbits.TRISB4 = 0;
  6034     0EF5  0021               	movlb	1	; select bank1
  6035     0EF6  120D               	bcf	13,4	;volatile
  6036     0EF7                     l3174:
  6037                           
  6038                           ;mcc_generated_files/spi1.c: 69:     SSP1CON1bits.SSPEN = 0;
  6039     0EF7  0024               	movlb	4	; select bank4
  6040     0EF8  1295               	bcf	21,5	;volatile
  6041     0EF9                     l21:
  6042     0EF9  0008               	return
  6043     0EFA                     __end_of_SPI1_Initialize:
  6044                           
  6045                           	psect	text21
  6046     0EC0                     __ptext21:	
  6047 ;; *************** function _PWM3_Initialize *****************
  6048 ;; Defined at:
  6049 ;;		line 64 in file "mcc_generated_files/pwm3.c"
  6050 ;; Parameters:    Size  Location     Type
  6051 ;;		None
  6052 ;; Auto vars:     Size  Location     Type
  6053 ;;		None
  6054 ;; Return value:  Size  Location     Type
  6055 ;;                  1    wreg      void 
  6056 ;; Registers used:
  6057 ;;		wreg, status,2, status,0
  6058 ;; Tracked objects:
  6059 ;;		On entry : 0/0
  6060 ;;		On exit  : 0/0
  6061 ;;		Unchanged: 0/0
  6062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6063 ;;      Params:         0       0       0       0       0       0
  6064 ;;      Locals:         0       0       0       0       0       0
  6065 ;;      Temps:          0       0       0       0       0       0
  6066 ;;      Totals:         0       0       0       0       0       0
  6067 ;;Total ram usage:        0 bytes
  6068 ;; Hardware stack levels used: 1
  6069 ;; Hardware stack levels required when called: 7
  6070 ;; This function calls:
  6071 ;;		Nothing
  6072 ;; This function is called by:
  6073 ;;		_SYSTEM_Initialize
  6074 ;; This function uses a non-reentrant model
  6075 ;;
  6076                           
  6077     0EC0                     _PWM3_Initialize:	
  6078                           ;psect for function _PWM3_Initialize
  6079                           
  6080     0EC0                     l3176:	
  6081                           ;incstack = 0
  6082                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
  6083                           
  6084                           
  6085                           ;mcc_generated_files/pwm3.c: 69:  CCP3CON = 0x0C;
  6086     0EC0  300C               	movlw	12
  6087     0EC1  0026               	movlb	6	; select bank6
  6088     0EC2  0093               	movwf	19	;volatile
  6089     0EC3                     l3178:
  6090                           
  6091                           ;mcc_generated_files/pwm3.c: 72:  CCPR3L = 0x00;
  6092     0EC3  0191               	clrf	17	;volatile
  6093     0EC4                     l3180:
  6094                           
  6095                           ;mcc_generated_files/pwm3.c: 75:  CCPR3H = 0x00;
  6096     0EC4  0192               	clrf	18	;volatile
  6097     0EC5                     l3182:
  6098                           
  6099                           ;mcc_generated_files/pwm3.c: 78:  CCPTMRS0bits.C3TSEL = 0x0;
  6100     0EC5  30CF               	movlw	-49
  6101     0EC6  0025               	movlb	5	; select bank5
  6102     0EC7  059E               	andwf	30,f	;volatile
  6103     0EC8                     l72:
  6104     0EC8  0008               	return
  6105     0EC9                     __end_of_PWM3_Initialize:
  6106                           
  6107                           	psect	text22
  6108     0648                     __ptext22:	
  6109 ;; *************** function _PIN_MANAGER_Initialize *****************
  6110 ;; Defined at:
  6111 ;;		line 58 in file "mcc_generated_files/pin_manager.c"
  6112 ;; Parameters:    Size  Location     Type
  6113 ;;		None
  6114 ;; Auto vars:     Size  Location     Type
  6115 ;;		None
  6116 ;; Return value:  Size  Location     Type
  6117 ;;                  1    wreg      void 
  6118 ;; Registers used:
  6119 ;;		wreg, status,2, status,0, pclath, cstack
  6120 ;; Tracked objects:
  6121 ;;		On entry : 0/0
  6122 ;;		On exit  : 0/0
  6123 ;;		Unchanged: 0/0
  6124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6125 ;;      Params:         0       0       0       0       0       0
  6126 ;;      Locals:         0       0       0       0       0       0
  6127 ;;      Temps:          0       0       0       0       0       0
  6128 ;;      Totals:         0       0       0       0       0       0
  6129 ;;Total ram usage:        0 bytes
  6130 ;; Hardware stack levels used: 1
  6131 ;; Hardware stack levels required when called: 8
  6132 ;; This function calls:
  6133 ;;		_IOCBF0_SetInterruptHandler
  6134 ;;		_IOCBF3_SetInterruptHandler
  6135 ;; This function is called by:
  6136 ;;		_SYSTEM_Initialize
  6137 ;; This function uses a non-reentrant model
  6138 ;;
  6139                           
  6140     0648                     _PIN_MANAGER_Initialize:	
  6141                           ;psect for function _PIN_MANAGER_Initialize
  6142                           
  6143     0648                     l3196:	
  6144                           ;incstack = 0
  6145                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6146                           
  6147                           
  6148                           ;mcc_generated_files/pin_manager.c: 63:     LATA = 0x00;
  6149     0648  0022               	movlb	2	; select bank2
  6150     0649  018C               	clrf	12	;volatile
  6151                           
  6152                           ;mcc_generated_files/pin_manager.c: 64:     LATB = 0x00;
  6153     064A  018D               	clrf	13	;volatile
  6154     064B                     l3198:
  6155                           
  6156                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0x37;
  6157     064B  3037               	movlw	55
  6158     064C  0021               	movlb	1	; select bank1
  6159     064D  008C               	movwf	12	;volatile
  6160     064E                     l3200:
  6161                           
  6162                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0xEF;
  6163     064E  30EF               	movlw	239
  6164     064F  008D               	movwf	13	;volatile
  6165                           
  6166                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x00;
  6167     0650  0023               	movlb	3	; select bank3
  6168     0651  018D               	clrf	13	;volatile
  6169     0652                     l3202:
  6170                           
  6171                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x07;
  6172     0652  3007               	movlw	7
  6173     0653  008C               	movwf	12	;volatile
  6174     0654                     l3204:
  6175                           
  6176                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  6177     0654  0024               	movlb	4	; select bank4
  6178     0655  018D               	clrf	13	;volatile
  6179     0656                     l3206:
  6180                           
  6181                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  6182     0656  018C               	clrf	12	;volatile
  6183     0657                     l3208:
  6184                           
  6185                           ;mcc_generated_files/pin_manager.c: 83:     OPTION_REGbits.nWPUEN = 1;
  6186     0657  0021               	movlb	1	; select bank1
  6187     0658  1795               	bsf	21,7	;volatile
  6188     0659                     l3210:
  6189                           
  6190                           ;mcc_generated_files/pin_manager.c: 89:     APFCON0 = 0xC0;
  6191     0659  30C0               	movlw	192
  6192     065A  0022               	movlb	2	; select bank2
  6193     065B  009D               	movwf	29	;volatile
  6194     065C                     l3212:
  6195                           
  6196                           ;mcc_generated_files/pin_manager.c: 90:     APFCON1 = 0x01;
  6197     065C  3001               	movlw	1
  6198     065D  009E               	movwf	30	;volatile
  6199     065E                     l3214:
  6200                           
  6201                           ;mcc_generated_files/pin_manager.c: 96:     IOCBFbits.IOCBF0 = 0;
  6202     065E  0027               	movlb	7	; select bank7
  6203     065F  1016               	bcf	22,0	;volatile
  6204     0660                     l3216:
  6205                           
  6206                           ;mcc_generated_files/pin_manager.c: 98:     IOCBFbits.IOCBF3 = 0;
  6207     0660  1196               	bcf	22,3	;volatile
  6208     0661                     l3218:
  6209                           
  6210                           ;mcc_generated_files/pin_manager.c: 100:     IOCBNbits.IOCBN0 = 1;
  6211     0661  1415               	bsf	21,0	;volatile
  6212     0662                     l3220:
  6213                           
  6214                           ;mcc_generated_files/pin_manager.c: 102:     IOCBNbits.IOCBN3 = 1;
  6215     0662  1595               	bsf	21,3	;volatile
  6216     0663                     l3222:
  6217                           
  6218                           ;mcc_generated_files/pin_manager.c: 104:     IOCBPbits.IOCBP0 = 1;
  6219     0663  1414               	bsf	20,0	;volatile
  6220     0664                     l3224:
  6221                           
  6222                           ;mcc_generated_files/pin_manager.c: 106:     IOCBPbits.IOCBP3 = 1;
  6223     0664  1594               	bsf	20,3	;volatile
  6224     0665                     l3226:
  6225                           
  6226                           ;mcc_generated_files/pin_manager.c: 111:     IOCBF0_SetInterruptHandler(IOCBF0_DefaultIn
      +                          terruptHandler);
  6227     0665  302D               	movlw	low _IOCBF0_DefaultInterruptHandler
  6228     0666  0021               	movlb	1	; select bank1
  6229     0667  00BD               	movwf	IOCBF0_SetInterruptHandler@InterruptHandler^(0+128)
  6230     0668  300E               	movlw	high _IOCBF0_DefaultInterruptHandler
  6231     0669  00BE               	movwf	(IOCBF0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  6232     066A  318E  267C  3186   	fcall	_IOCBF0_SetInterruptHandler
  6233     066D                     l3228:
  6234                           
  6235                           ;mcc_generated_files/pin_manager.c: 112:     IOCBF3_SetInterruptHandler(IOCBF3_DefaultIn
      +                          terruptHandler);
  6236     066D  302E               	movlw	low _IOCBF3_DefaultInterruptHandler
  6237     066E  0021               	movlb	1	; select bank1
  6238     066F  00BD               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler^(0+128)
  6239     0670  300E               	movlw	high _IOCBF3_DefaultInterruptHandler
  6240     0671  00BE               	movwf	(IOCBF3_SetInterruptHandler@InterruptHandler^(0+128)+1)
  6241     0672  318E  2682  3186   	fcall	_IOCBF3_SetInterruptHandler
  6242     0675                     l3230:
  6243                           
  6244                           ;mcc_generated_files/pin_manager.c: 115:     INTCONbits.IOCIE = 1;
  6245     0675  158B               	bsf	11,3	;volatile
  6246     0676                     l257:
  6247     0676  0008               	return
  6248     0677                     __end_of_PIN_MANAGER_Initialize:
  6249                           
  6250                           	psect	text23
  6251     0E82                     __ptext23:	
  6252 ;; *************** function _IOCBF3_SetInterruptHandler *****************
  6253 ;; Defined at:
  6254 ;;		line 181 in file "mcc_generated_files/pin_manager.c"
  6255 ;; Parameters:    Size  Location     Type
  6256 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  6257 ;;		 -> S2_Interrupt(1), IOCBF3_DefaultInterruptHandler(1), 
  6258 ;; Auto vars:     Size  Location     Type
  6259 ;;		None
  6260 ;; Return value:  Size  Location     Type
  6261 ;;                  1    wreg      void 
  6262 ;; Registers used:
  6263 ;;		wreg
  6264 ;; Tracked objects:
  6265 ;;		On entry : 0/0
  6266 ;;		On exit  : 0/0
  6267 ;;		Unchanged: 0/0
  6268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6269 ;;      Params:         0       0       2       0       0       0
  6270 ;;      Locals:         0       0       0       0       0       0
  6271 ;;      Temps:          0       0       0       0       0       0
  6272 ;;      Totals:         0       0       2       0       0       0
  6273 ;;Total ram usage:        2 bytes
  6274 ;; Hardware stack levels used: 1
  6275 ;; Hardware stack levels required when called: 7
  6276 ;; This function calls:
  6277 ;;		Nothing
  6278 ;; This function is called by:
  6279 ;;		_PIN_MANAGER_Initialize
  6280 ;;		_main
  6281 ;; This function uses a non-reentrant model
  6282 ;;
  6283                           
  6284     0E82                     _IOCBF3_SetInterruptHandler:	
  6285                           ;psect for function _IOCBF3_SetInterruptHandler
  6286                           
  6287     0E82                     l2860:	
  6288                           ;incstack = 0
  6289                           ; Regs used in _IOCBF3_SetInterruptHandler: [wreg]
  6290                           
  6291                           
  6292                           ;mcc_generated_files/pin_manager.c: 182:     IOCBF3_InterruptHandler = InterruptHandler;
  6293     0E82  0021               	movlb	1	; select bank1
  6294     0E83  083E               	movf	(IOCBF3_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  6295     0E84  00A9               	movwf	(_IOCBF3_InterruptHandler+1)^(0+128)
  6296     0E85  083D               	movf	IOCBF3_SetInterruptHandler@InterruptHandler^(0+128),w
  6297     0E86  00A8               	movwf	_IOCBF3_InterruptHandler^(0+128)
  6298     0E87                     l279:
  6299     0E87  0008               	return
  6300     0E88                     __end_of_IOCBF3_SetInterruptHandler:
  6301                           
  6302                           	psect	text24
  6303     0E7C                     __ptext24:	
  6304 ;; *************** function _IOCBF0_SetInterruptHandler *****************
  6305 ;; Defined at:
  6306 ;;		line 151 in file "mcc_generated_files/pin_manager.c"
  6307 ;; Parameters:    Size  Location     Type
  6308 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  6309 ;;		 -> S1_Interrupt(1), IOCBF0_DefaultInterruptHandler(1), 
  6310 ;; Auto vars:     Size  Location     Type
  6311 ;;		None
  6312 ;; Return value:  Size  Location     Type
  6313 ;;                  1    wreg      void 
  6314 ;; Registers used:
  6315 ;;		wreg
  6316 ;; Tracked objects:
  6317 ;;		On entry : 0/0
  6318 ;;		On exit  : 0/0
  6319 ;;		Unchanged: 0/0
  6320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6321 ;;      Params:         0       0       2       0       0       0
  6322 ;;      Locals:         0       0       0       0       0       0
  6323 ;;      Temps:          0       0       0       0       0       0
  6324 ;;      Totals:         0       0       2       0       0       0
  6325 ;;Total ram usage:        2 bytes
  6326 ;; Hardware stack levels used: 1
  6327 ;; Hardware stack levels required when called: 7
  6328 ;; This function calls:
  6329 ;;		Nothing
  6330 ;; This function is called by:
  6331 ;;		_PIN_MANAGER_Initialize
  6332 ;;		_main
  6333 ;; This function uses a non-reentrant model
  6334 ;;
  6335                           
  6336     0E7C                     _IOCBF0_SetInterruptHandler:	
  6337                           ;psect for function _IOCBF0_SetInterruptHandler
  6338                           
  6339     0E7C                     l2858:	
  6340                           ;incstack = 0
  6341                           ; Regs used in _IOCBF0_SetInterruptHandler: [wreg]
  6342                           
  6343                           
  6344                           ;mcc_generated_files/pin_manager.c: 152:     IOCBF0_InterruptHandler = InterruptHandler;
  6345     0E7C  0021               	movlb	1	; select bank1
  6346     0E7D  083E               	movf	(IOCBF0_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  6347     0E7E  00AB               	movwf	(_IOCBF0_InterruptHandler+1)^(0+128)
  6348     0E7F  083D               	movf	IOCBF0_SetInterruptHandler@InterruptHandler^(0+128),w
  6349     0E80  00AA               	movwf	_IOCBF0_InterruptHandler^(0+128)
  6350     0E81                     l269:
  6351     0E81  0008               	return
  6352     0E82                     __end_of_IOCBF0_SetInterruptHandler:
  6353                           
  6354                           	psect	text25
  6355     0EA0                     __ptext25:	
  6356 ;; *************** function _OSCILLATOR_Initialize *****************
  6357 ;; Defined at:
  6358 ;;		line 71 in file "mcc_generated_files/mcc.c"
  6359 ;; Parameters:    Size  Location     Type
  6360 ;;		None
  6361 ;; Auto vars:     Size  Location     Type
  6362 ;;		None
  6363 ;; Return value:  Size  Location     Type
  6364 ;;                  1    wreg      void 
  6365 ;; Registers used:
  6366 ;;		wreg, status,2
  6367 ;; Tracked objects:
  6368 ;;		On entry : 0/0
  6369 ;;		On exit  : 0/0
  6370 ;;		Unchanged: 0/0
  6371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6372 ;;      Params:         0       0       0       0       0       0
  6373 ;;      Locals:         0       0       0       0       0       0
  6374 ;;      Temps:          0       0       0       0       0       0
  6375 ;;      Totals:         0       0       0       0       0       0
  6376 ;;Total ram usage:        0 bytes
  6377 ;; Hardware stack levels used: 1
  6378 ;; Hardware stack levels required when called: 7
  6379 ;; This function calls:
  6380 ;;		Nothing
  6381 ;; This function is called by:
  6382 ;;		_SYSTEM_Initialize
  6383 ;; This function uses a non-reentrant model
  6384 ;;
  6385                           
  6386     0EA0                     _OSCILLATOR_Initialize:	
  6387                           ;psect for function _OSCILLATOR_Initialize
  6388                           
  6389     0EA0                     l3256:	
  6390                           ;incstack = 0
  6391                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  6392                           
  6393                           
  6394                           ;mcc_generated_files/mcc.c: 74:     OSCCON = 0x70;
  6395     0EA0  3070               	movlw	112
  6396     0EA1  0021               	movlb	1	; select bank1
  6397     0EA2  0099               	movwf	25	;volatile
  6398     0EA3                     l3258:
  6399                           
  6400                           ;mcc_generated_files/mcc.c: 76:     OSCTUNE = 0x00;
  6401     0EA3  0198               	clrf	24	;volatile
  6402     0EA4                     l3260:
  6403                           
  6404                           ;mcc_generated_files/mcc.c: 78:     BORCON = 0x00;
  6405     0EA4  0022               	movlb	2	; select bank2
  6406     0EA5  0196               	clrf	22	;volatile
  6407     0EA6                     l354:
  6408     0EA6  0008               	return
  6409     0EA7                     __end_of_OSCILLATOR_Initialize:
  6410                           
  6411                           	psect	text26
  6412     06A0                     __ptext26:	
  6413 ;; *************** function _EUSART_Initialize *****************
  6414 ;; Defined at:
  6415 ;;		line 66 in file "mcc_generated_files/eusart.c"
  6416 ;; Parameters:    Size  Location     Type
  6417 ;;		None
  6418 ;; Auto vars:     Size  Location     Type
  6419 ;;		None
  6420 ;; Return value:  Size  Location     Type
  6421 ;;                  1    wreg      void 
  6422 ;; Registers used:
  6423 ;;		wreg, status,2, status,0, pclath, cstack
  6424 ;; Tracked objects:
  6425 ;;		On entry : 0/0
  6426 ;;		On exit  : 0/0
  6427 ;;		Unchanged: 0/0
  6428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6429 ;;      Params:         0       0       0       0       0       0
  6430 ;;      Locals:         0       0       0       0       0       0
  6431 ;;      Temps:          0       0       0       0       0       0
  6432 ;;      Totals:         0       0       0       0       0       0
  6433 ;;Total ram usage:        0 bytes
  6434 ;; Hardware stack levels used: 1
  6435 ;; Hardware stack levels required when called: 8
  6436 ;; This function calls:
  6437 ;;		_EUSART_SetErrorHandler
  6438 ;;		_EUSART_SetFramingErrorHandler
  6439 ;;		_EUSART_SetOverrunErrorHandler
  6440 ;; This function is called by:
  6441 ;;		_SYSTEM_Initialize
  6442 ;; This function uses a non-reentrant model
  6443 ;;
  6444                           
  6445     06A0                     _EUSART_Initialize:	
  6446                           ;psect for function _EUSART_Initialize
  6447                           
  6448     06A0                     l3184:	
  6449                           ;incstack = 0
  6450                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6451                           
  6452                           
  6453                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  6454     06A0  3008               	movlw	8
  6455     06A1  0023               	movlb	3	; select bank3
  6456     06A2  009F               	movwf	31	;volatile
  6457                           
  6458                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  6459     06A3  3090               	movlw	144
  6460     06A4  009D               	movwf	29	;volatile
  6461                           
  6462                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0xA4;
  6463     06A5  30A4               	movlw	164
  6464     06A6  009E               	movwf	30	;volatile
  6465                           
  6466                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x67;
  6467     06A7  3067               	movlw	103
  6468     06A8  009B               	movwf	27	;volatile
  6469     06A9                     l3186:
  6470                           
  6471                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  6472     06A9  019C               	clrf	28	;volatile
  6473     06AA                     l3188:
  6474                           
  6475                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  6476     06AA  3000               	movlw	0
  6477     06AB  0021               	movlb	1	; select bank1
  6478     06AC  00BD               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128)
  6479     06AD  3000               	movlw	0
  6480     06AE  00BE               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler^(0+128)+1)
  6481     06AF  318E  2670  3186   	fcall	_EUSART_SetFramingErrorHandler
  6482     06B2                     l3190:
  6483                           
  6484                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  6485     06B2  3000               	movlw	0
  6486     06B3  0021               	movlb	1	; select bank1
  6487     06B4  00BD               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)
  6488     06B5  3000               	movlw	0
  6489     06B6  00BE               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)+1)
  6490     06B7  318E  2676  3186   	fcall	_EUSART_SetOverrunErrorHandler
  6491     06BA                     l3192:
  6492                           
  6493                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  6494     06BA  3000               	movlw	0
  6495     06BB  0021               	movlb	1	; select bank1
  6496     06BC  00BD               	movwf	EUSART_SetErrorHandler@interruptHandler^(0+128)
  6497     06BD  3000               	movlw	0
  6498     06BE  00BE               	movwf	(EUSART_SetErrorHandler@interruptHandler^(0+128)+1)
  6499     06BF  318E  266A  3186   	fcall	_EUSART_SetErrorHandler
  6500     06C2                     l3194:
  6501                           
  6502                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  6503     06C2  0021               	movlb	1	; select bank1
  6504     06C3  01BB               	clrf	_eusartRxLastError^(0+128)	;volatile
  6505     06C4                     l118:
  6506     06C4  0008               	return
  6507     06C5                     __end_of_EUSART_Initialize:
  6508                           
  6509                           	psect	text27
  6510     0E76                     __ptext27:	
  6511 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  6512 ;; Defined at:
  6513 ;;		line 161 in file "mcc_generated_files/eusart.c"
  6514 ;; Parameters:    Size  Location     Type
  6515 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  6516 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  6517 ;; Auto vars:     Size  Location     Type
  6518 ;;		None
  6519 ;; Return value:  Size  Location     Type
  6520 ;;                  1    wreg      void 
  6521 ;; Registers used:
  6522 ;;		wreg
  6523 ;; Tracked objects:
  6524 ;;		On entry : 0/0
  6525 ;;		On exit  : 0/0
  6526 ;;		Unchanged: 0/0
  6527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6528 ;;      Params:         0       0       2       0       0       0
  6529 ;;      Locals:         0       0       0       0       0       0
  6530 ;;      Temps:          0       0       0       0       0       0
  6531 ;;      Totals:         0       0       2       0       0       0
  6532 ;;Total ram usage:        2 bytes
  6533 ;; Hardware stack levels used: 1
  6534 ;; Hardware stack levels required when called: 7
  6535 ;; This function calls:
  6536 ;;		Nothing
  6537 ;; This function is called by:
  6538 ;;		_EUSART_Initialize
  6539 ;; This function uses a non-reentrant model
  6540 ;;
  6541                           
  6542     0E76                     _EUSART_SetOverrunErrorHandler:	
  6543                           ;psect for function _EUSART_SetOverrunErrorHandler
  6544                           
  6545     0E76                     l2838:	
  6546                           ;incstack = 0
  6547                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  6548                           
  6549                           
  6550                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  6551     0E76  0021               	movlb	1	; select bank1
  6552     0E77  083E               	movf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^(0+128),w
  6553     0E78  00AF               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  6554     0E79  083D               	movf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128),w
  6555     0E7A  00AE               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  6556     0E7B                     l160:
  6557     0E7B  0008               	return
  6558     0E7C                     __end_of_EUSART_SetOverrunErrorHandler:
  6559                           
  6560                           	psect	text28
  6561     0E70                     __ptext28:	
  6562 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  6563 ;; Defined at:
  6564 ;;		line 157 in file "mcc_generated_files/eusart.c"
  6565 ;; Parameters:    Size  Location     Type
  6566 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  6567 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  6568 ;; Auto vars:     Size  Location     Type
  6569 ;;		None
  6570 ;; Return value:  Size  Location     Type
  6571 ;;                  1    wreg      void 
  6572 ;; Registers used:
  6573 ;;		wreg
  6574 ;; Tracked objects:
  6575 ;;		On entry : 0/0
  6576 ;;		On exit  : 0/0
  6577 ;;		Unchanged: 0/0
  6578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6579 ;;      Params:         0       0       2       0       0       0
  6580 ;;      Locals:         0       0       0       0       0       0
  6581 ;;      Temps:          0       0       0       0       0       0
  6582 ;;      Totals:         0       0       2       0       0       0
  6583 ;;Total ram usage:        2 bytes
  6584 ;; Hardware stack levels used: 1
  6585 ;; Hardware stack levels required when called: 7
  6586 ;; This function calls:
  6587 ;;		Nothing
  6588 ;; This function is called by:
  6589 ;;		_EUSART_Initialize
  6590 ;; This function uses a non-reentrant model
  6591 ;;
  6592                           
  6593     0E70                     _EUSART_SetFramingErrorHandler:	
  6594                           ;psect for function _EUSART_SetFramingErrorHandler
  6595                           
  6596     0E70                     l2836:	
  6597                           ;incstack = 0
  6598                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  6599                           
  6600                           
  6601                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  6602     0E70  0021               	movlb	1	; select bank1
  6603     0E71  083E               	movf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^(0+128),w
  6604     0E72  00B1               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  6605     0E73  083D               	movf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128),w
  6606     0E74  00B0               	movwf	_EUSART_FramingErrorHandler^(0+128)
  6607     0E75                     l157:
  6608     0E75  0008               	return
  6609     0E76                     __end_of_EUSART_SetFramingErrorHandler:
  6610                           
  6611                           	psect	text29
  6612     0E6A                     __ptext29:	
  6613 ;; *************** function _EUSART_SetErrorHandler *****************
  6614 ;; Defined at:
  6615 ;;		line 165 in file "mcc_generated_files/eusart.c"
  6616 ;; Parameters:    Size  Location     Type
  6617 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  6618 ;;		 -> EUSART_DefaultErrorHandler(1), 
  6619 ;; Auto vars:     Size  Location     Type
  6620 ;;		None
  6621 ;; Return value:  Size  Location     Type
  6622 ;;                  1    wreg      void 
  6623 ;; Registers used:
  6624 ;;		wreg
  6625 ;; Tracked objects:
  6626 ;;		On entry : 0/0
  6627 ;;		On exit  : 0/0
  6628 ;;		Unchanged: 0/0
  6629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6630 ;;      Params:         0       0       2       0       0       0
  6631 ;;      Locals:         0       0       0       0       0       0
  6632 ;;      Temps:          0       0       0       0       0       0
  6633 ;;      Totals:         0       0       2       0       0       0
  6634 ;;Total ram usage:        2 bytes
  6635 ;; Hardware stack levels used: 1
  6636 ;; Hardware stack levels required when called: 7
  6637 ;; This function calls:
  6638 ;;		Nothing
  6639 ;; This function is called by:
  6640 ;;		_EUSART_Initialize
  6641 ;; This function uses a non-reentrant model
  6642 ;;
  6643                           
  6644     0E6A                     _EUSART_SetErrorHandler:	
  6645                           ;psect for function _EUSART_SetErrorHandler
  6646                           
  6647     0E6A                     l2840:	
  6648                           ;incstack = 0
  6649                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  6650                           
  6651                           
  6652                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  6653     0E6A  0021               	movlb	1	; select bank1
  6654     0E6B  083E               	movf	(EUSART_SetErrorHandler@interruptHandler+1)^(0+128),w
  6655     0E6C  00AD               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  6656     0E6D  083D               	movf	EUSART_SetErrorHandler@interruptHandler^(0+128),w
  6657     0E6E  00AC               	movwf	_EUSART_ErrorHandler^(0+128)
  6658     0E6F                     l163:
  6659     0E6F  0008               	return
  6660     0E70                     __end_of_EUSART_SetErrorHandler:
  6661                           
  6662                           	psect	text30
  6663     0E64                     __ptext30:	
  6664 ;; *************** function _DAC_Initialize *****************
  6665 ;; Defined at:
  6666 ;;		line 58 in file "mcc_generated_files/dac.c"
  6667 ;; Parameters:    Size  Location     Type
  6668 ;;		None
  6669 ;; Auto vars:     Size  Location     Type
  6670 ;;		None
  6671 ;; Return value:  Size  Location     Type
  6672 ;;                  1    wreg      void 
  6673 ;; Registers used:
  6674 ;;		wreg
  6675 ;; Tracked objects:
  6676 ;;		On entry : 0/0
  6677 ;;		On exit  : 0/0
  6678 ;;		Unchanged: 0/0
  6679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6680 ;;      Params:         0       0       0       0       0       0
  6681 ;;      Locals:         0       0       0       0       0       0
  6682 ;;      Temps:          0       0       0       0       0       0
  6683 ;;      Totals:         0       0       0       0       0       0
  6684 ;;Total ram usage:        0 bytes
  6685 ;; Hardware stack levels used: 1
  6686 ;; Hardware stack levels required when called: 7
  6687 ;; This function calls:
  6688 ;;		Nothing
  6689 ;; This function is called by:
  6690 ;;		_SYSTEM_Initialize
  6691 ;; This function uses a non-reentrant model
  6692 ;;
  6693                           
  6694     0E64                     _DAC_Initialize:	
  6695                           ;psect for function _DAC_Initialize
  6696                           
  6697     0E64                     l3272:	
  6698                           ;incstack = 0
  6699                           ; Regs used in _DAC_Initialize: [wreg]
  6700                           
  6701                           
  6702                           ;mcc_generated_files/dac.c: 61:     DACCON0 = 0x80;
  6703     0E64  3080               	movlw	128
  6704     0E65  0022               	movlb	2	; select bank2
  6705     0E66  0098               	movwf	24	;volatile
  6706                           
  6707                           ;mcc_generated_files/dac.c: 63:     DACCON1 = 0x10;
  6708     0E67  3010               	movlw	16
  6709     0E68  0099               	movwf	25	;volatile
  6710     0E69                     l590:
  6711     0E69  0008               	return
  6712     0E6A                     __end_of_DAC_Initialize:
  6713                           
  6714                           	psect	text31
  6715     0F06                     __ptext31:	
  6716 ;; *************** function _CMP2_Initialize *****************
  6717 ;; Defined at:
  6718 ;;		line 64 in file "mcc_generated_files/cmp2.c"
  6719 ;; Parameters:    Size  Location     Type
  6720 ;;		None
  6721 ;; Auto vars:     Size  Location     Type
  6722 ;;		None
  6723 ;; Return value:  Size  Location     Type
  6724 ;;                  1    wreg      void 
  6725 ;; Registers used:
  6726 ;;		wreg
  6727 ;; Tracked objects:
  6728 ;;		On entry : 0/0
  6729 ;;		On exit  : 0/0
  6730 ;;		Unchanged: 0/0
  6731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6732 ;;      Params:         0       0       0       0       0       0
  6733 ;;      Locals:         0       0       0       0       0       0
  6734 ;;      Temps:          0       0       0       0       0       0
  6735 ;;      Totals:         0       0       0       0       0       0
  6736 ;;Total ram usage:        0 bytes
  6737 ;; Hardware stack levels used: 1
  6738 ;; Hardware stack levels required when called: 7
  6739 ;; This function calls:
  6740 ;;		Nothing
  6741 ;; This function is called by:
  6742 ;;		_SYSTEM_Initialize
  6743 ;; This function uses a non-reentrant model
  6744 ;;
  6745                           
  6746     0F06                     _CMP2_Initialize:	
  6747                           ;psect for function _CMP2_Initialize
  6748                           
  6749     0F06                     l3264:	
  6750                           ;incstack = 0
  6751                           ; Regs used in _CMP2_Initialize: [wreg]
  6752                           
  6753                           
  6754                           ;mcc_generated_files/cmp2.c: 71:     PIE2bits.C2IE = 0;
  6755     0F06  0021               	movlb	1	; select bank1
  6756     0F07  1312               	bcf	18,6	;volatile
  6757     0F08                     l3266:
  6758                           
  6759                           ;mcc_generated_files/cmp2.c: 74:     CM2CON0 = 0x84;
  6760     0F08  3084               	movlw	132
  6761     0F09  0022               	movlb	2	; select bank2
  6762     0F0A  0093               	movwf	19	;volatile
  6763                           
  6764                           ;mcc_generated_files/cmp2.c: 77:     CM2CON1 = 0x91;
  6765     0F0B  3091               	movlw	145
  6766     0F0C  0094               	movwf	20	;volatile
  6767     0F0D                     l3268:
  6768                           
  6769                           ;mcc_generated_files/cmp2.c: 80:     PIR2bits.C2IF = 0;
  6770     0F0D  0020               	movlb	0	; select bank0
  6771     0F0E  1312               	bcf	18,6	;volatile
  6772     0F0F                     l3270:
  6773                           
  6774                           ;mcc_generated_files/cmp2.c: 83:     PIE2bits.C2IE = 1;
  6775     0F0F  0021               	movlb	1	; select bank1
  6776     0F10  1712               	bsf	18,6	;volatile
  6777     0F11                     l573:
  6778     0F11  0008               	return
  6779     0F12                     __end_of_CMP2_Initialize:
  6780                           
  6781                           	psect	text32
  6782     0EFA                     __ptext32:	
  6783 ;; *************** function _CMP1_Initialize *****************
  6784 ;; Defined at:
  6785 ;;		line 64 in file "mcc_generated_files/cmp1.c"
  6786 ;; Parameters:    Size  Location     Type
  6787 ;;		None
  6788 ;; Auto vars:     Size  Location     Type
  6789 ;;		None
  6790 ;; Return value:  Size  Location     Type
  6791 ;;                  1    wreg      void 
  6792 ;; Registers used:
  6793 ;;		wreg
  6794 ;; Tracked objects:
  6795 ;;		On entry : 0/0
  6796 ;;		On exit  : 0/0
  6797 ;;		Unchanged: 0/0
  6798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6799 ;;      Params:         0       0       0       0       0       0
  6800 ;;      Locals:         0       0       0       0       0       0
  6801 ;;      Temps:          0       0       0       0       0       0
  6802 ;;      Totals:         0       0       0       0       0       0
  6803 ;;Total ram usage:        0 bytes
  6804 ;; Hardware stack levels used: 1
  6805 ;; Hardware stack levels required when called: 7
  6806 ;; This function calls:
  6807 ;;		Nothing
  6808 ;; This function is called by:
  6809 ;;		_SYSTEM_Initialize
  6810 ;; This function uses a non-reentrant model
  6811 ;;
  6812                           
  6813     0EFA                     _CMP1_Initialize:	
  6814                           ;psect for function _CMP1_Initialize
  6815                           
  6816     0EFA                     l3318:	
  6817                           ;incstack = 0
  6818                           ; Regs used in _CMP1_Initialize: [wreg]
  6819                           
  6820                           
  6821                           ;mcc_generated_files/cmp1.c: 71:     PIE2bits.C1IE = 0;
  6822     0EFA  0021               	movlb	1	; select bank1
  6823     0EFB  1292               	bcf	18,5	;volatile
  6824     0EFC                     l3320:
  6825                           
  6826                           ;mcc_generated_files/cmp1.c: 74:     CM1CON0 = 0x84;
  6827     0EFC  3084               	movlw	132
  6828     0EFD  0022               	movlb	2	; select bank2
  6829     0EFE  0091               	movwf	17	;volatile
  6830                           
  6831                           ;mcc_generated_files/cmp1.c: 77:     CM1CON1 = 0x90;
  6832     0EFF  3090               	movlw	144
  6833     0F00  0092               	movwf	18	;volatile
  6834     0F01                     l3322:
  6835                           
  6836                           ;mcc_generated_files/cmp1.c: 80:     PIR2bits.C1IF = 0;
  6837     0F01  0020               	movlb	0	; select bank0
  6838     0F02  1292               	bcf	18,5	;volatile
  6839     0F03                     l3324:
  6840                           
  6841                           ;mcc_generated_files/cmp1.c: 83:     PIE2bits.C1IE = 1;
  6842     0F03  0021               	movlb	1	; select bank1
  6843     0F04  1692               	bsf	18,5	;volatile
  6844     0F05                     l719:
  6845     0F05  0008               	return
  6846     0F06                     __end_of_CMP1_Initialize:
  6847                           
  6848                           	psect	text33
  6849     0FB4                     __ptext33:	
  6850 ;; *************** function _CCP4_Initialize *****************
  6851 ;; Defined at:
  6852 ;;		line 65 in file "mcc_generated_files/ccp4.c"
  6853 ;; Parameters:    Size  Location     Type
  6854 ;;		None
  6855 ;; Auto vars:     Size  Location     Type
  6856 ;;		None
  6857 ;; Return value:  Size  Location     Type
  6858 ;;                  1    wreg      void 
  6859 ;; Registers used:
  6860 ;;		wreg, status,2, status,0, pclath, cstack
  6861 ;; Tracked objects:
  6862 ;;		On entry : 0/0
  6863 ;;		On exit  : 0/0
  6864 ;;		Unchanged: 0/0
  6865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6866 ;;      Params:         0       0       0       0       0       0
  6867 ;;      Locals:         0       0       0       0       0       0
  6868 ;;      Temps:          0       0       0       0       0       0
  6869 ;;      Totals:         0       0       0       0       0       0
  6870 ;;Total ram usage:        0 bytes
  6871 ;; Hardware stack levels used: 1
  6872 ;; Hardware stack levels required when called: 8
  6873 ;; This function calls:
  6874 ;;		_CCP4_SetCallBack
  6875 ;; This function is called by:
  6876 ;;		_SYSTEM_Initialize
  6877 ;; This function uses a non-reentrant model
  6878 ;;
  6879                           
  6880     0FB4                     _CCP4_Initialize:	
  6881                           ;psect for function _CCP4_Initialize
  6882                           
  6883     0FB4                     l3244:	
  6884                           ;incstack = 0
  6885                           ; Regs used in _CCP4_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6886                           
  6887                           
  6888                           ;mcc_generated_files/ccp4.c: 70:  CCP4CON = 0x04;
  6889     0FB4  3004               	movlw	4
  6890     0FB5  0026               	movlb	6	; select bank6
  6891     0FB6  009A               	movwf	26	;volatile
  6892     0FB7                     l3246:
  6893                           
  6894                           ;mcc_generated_files/ccp4.c: 73:  CCPR4L = 0x00;
  6895     0FB7  0198               	clrf	24	;volatile
  6896     0FB8                     l3248:
  6897                           
  6898                           ;mcc_generated_files/ccp4.c: 76:  CCPR4H = 0x00;
  6899     0FB8  0199               	clrf	25	;volatile
  6900     0FB9                     l3250:
  6901                           
  6902                           ;mcc_generated_files/ccp4.c: 79:     CCP4_SetCallBack(CCP4_DefaultCallBack);
  6903     0FB9  302C               	movlw	low _CCP4_DefaultCallBack
  6904     0FBA  0021               	movlb	1	; select bank1
  6905     0FBB  00BD               	movwf	CCP4_SetCallBack@customCallBack^(0+128)
  6906     0FBC  300E               	movlw	high _CCP4_DefaultCallBack
  6907     0FBD  00BE               	movwf	(CCP4_SetCallBack@customCallBack^(0+128)+1)
  6908     0FBE  318E  26B7  318F   	fcall	_CCP4_SetCallBack
  6909     0FC1                     l3252:
  6910                           
  6911                           ;mcc_generated_files/ccp4.c: 83:     PIR3bits.CCP4IF = 0;
  6912     0FC1  0020               	movlb	0	; select bank0
  6913     0FC2  1293               	bcf	19,5	;volatile
  6914     0FC3                     l3254:
  6915                           
  6916                           ;mcc_generated_files/ccp4.c: 86:     PIE3bits.CCP4IE = 1;
  6917     0FC3  0021               	movlb	1	; select bank1
  6918     0FC4  1693               	bsf	19,5	;volatile
  6919     0FC5                     l302:
  6920     0FC5  0008               	return
  6921     0FC6                     __end_of_CCP4_Initialize:
  6922                           
  6923                           	psect	text34
  6924     0EB7                     __ptext34:	
  6925 ;; *************** function _CCP4_SetCallBack *****************
  6926 ;; Defined at:
  6927 ;;		line 104 in file "mcc_generated_files/ccp4.c"
  6928 ;; Parameters:    Size  Location     Type
  6929 ;;  customCallBa    2    0[BANK1 ] PTR FTN(unsigned short ,
  6930 ;;		 -> CCP4_Interrupt(1), CCP4_DefaultCallBack(1), 
  6931 ;; Auto vars:     Size  Location     Type
  6932 ;;		None
  6933 ;; Return value:  Size  Location     Type
  6934 ;;                  1    wreg      void 
  6935 ;; Registers used:
  6936 ;;		wreg
  6937 ;; Tracked objects:
  6938 ;;		On entry : 0/0
  6939 ;;		On exit  : 0/0
  6940 ;;		Unchanged: 0/0
  6941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6942 ;;      Params:         0       0       2       0       0       0
  6943 ;;      Locals:         0       0       0       0       0       0
  6944 ;;      Temps:          0       0       0       0       0       0
  6945 ;;      Totals:         0       0       2       0       0       0
  6946 ;;Total ram usage:        2 bytes
  6947 ;; Hardware stack levels used: 1
  6948 ;; Hardware stack levels required when called: 7
  6949 ;; This function calls:
  6950 ;;		Nothing
  6951 ;; This function is called by:
  6952 ;;		_CCP4_Initialize
  6953 ;;		_main
  6954 ;; This function uses a non-reentrant model
  6955 ;;
  6956                           
  6957     0EB7                     _CCP4_SetCallBack:	
  6958                           ;psect for function _CCP4_SetCallBack
  6959                           
  6960     0EB7                     l2862:	
  6961                           ;incstack = 0
  6962                           ; Regs used in _CCP4_SetCallBack: [wreg]
  6963                           
  6964                           
  6965                           ;mcc_generated_files/ccp4.c: 105:     CCP4_CallBack = customCallBack;
  6966     0EB7  0021               	movlb	1	; select bank1
  6967     0EB8  083E               	movf	(CCP4_SetCallBack@customCallBack+1)^(0+128),w
  6968     0EB9  0020               	movlb	0	; select bank0
  6969     0EBA  00E2               	movwf	_CCP4_CallBack+1
  6970     0EBB  0021               	movlb	1	; select bank1
  6971     0EBC  083D               	movf	CCP4_SetCallBack@customCallBack^(0+128),w
  6972     0EBD  0020               	movlb	0	; select bank0
  6973     0EBE  00E1               	movwf	_CCP4_CallBack
  6974     0EBF                     l308:
  6975     0EBF  0008               	return
  6976     0EC0                     __end_of_CCP4_SetCallBack:
  6977                           
  6978                           	psect	text35
  6979     0EA7                     __ptext35:	
  6980 ;; *************** function _ADC_Initialize *****************
  6981 ;; Defined at:
  6982 ;;		line 67 in file "mcc_generated_files/adc.c"
  6983 ;; Parameters:    Size  Location     Type
  6984 ;;		None
  6985 ;; Auto vars:     Size  Location     Type
  6986 ;;		None
  6987 ;; Return value:  Size  Location     Type
  6988 ;;                  1    wreg      void 
  6989 ;; Registers used:
  6990 ;;		wreg, status,2
  6991 ;; Tracked objects:
  6992 ;;		On entry : 0/0
  6993 ;;		On exit  : 0/0
  6994 ;;		Unchanged: 0/0
  6995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6996 ;;      Params:         0       0       0       0       0       0
  6997 ;;      Locals:         0       0       0       0       0       0
  6998 ;;      Temps:          0       0       0       0       0       0
  6999 ;;      Totals:         0       0       0       0       0       0
  7000 ;;Total ram usage:        0 bytes
  7001 ;; Hardware stack levels used: 1
  7002 ;; Hardware stack levels required when called: 7
  7003 ;; This function calls:
  7004 ;;		Nothing
  7005 ;; This function is called by:
  7006 ;;		_SYSTEM_Initialize
  7007 ;; This function uses a non-reentrant model
  7008 ;;
  7009                           
  7010     0EA7                     _ADC_Initialize:	
  7011                           ;psect for function _ADC_Initialize
  7012                           
  7013     0EA7                     l3326:	
  7014                           ;incstack = 0
  7015                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  7016                           
  7017                           
  7018                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0x90;
  7019     0EA7  3090               	movlw	144
  7020     0EA8  0021               	movlb	1	; select bank1
  7021     0EA9  009E               	movwf	30	;volatile
  7022     0EAA                     l3328:
  7023                           
  7024                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  7025     0EAA  019B               	clrf	27	;volatile
  7026     0EAB                     l3330:
  7027                           
  7028                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  7029     0EAB  019C               	clrf	28	;volatile
  7030                           
  7031                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x01;
  7032     0EAC  3001               	movlw	1
  7033     0EAD  009D               	movwf	29	;volatile
  7034     0EAE                     l487:
  7035     0EAE  0008               	return
  7036     0EAF                     __end_of_ADC_Initialize:
  7037                           
  7038                           	psect	text36
  7039     0E53                     __ptext36:	
  7040 ;; *************** function _EUSART_is_rx_ready *****************
  7041 ;; Defined at:
  7042 ;;		line 99 in file "mcc_generated_files/eusart.c"
  7043 ;; Parameters:    Size  Location     Type
  7044 ;;		None
  7045 ;; Auto vars:     Size  Location     Type
  7046 ;;		None
  7047 ;; Return value:  Size  Location     Type
  7048 ;;                  1    wreg      _Bool 
  7049 ;; Registers used:
  7050 ;;		wreg, status,2, status,0
  7051 ;; Tracked objects:
  7052 ;;		On entry : 0/0
  7053 ;;		On exit  : 0/0
  7054 ;;		Unchanged: 0/0
  7055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7056 ;;      Params:         0       0       0       0       0       0
  7057 ;;      Locals:         0       0       0       0       0       0
  7058 ;;      Temps:          0       0       0       0       0       0
  7059 ;;      Totals:         0       0       0       0       0       0
  7060 ;;Total ram usage:        0 bytes
  7061 ;; Hardware stack levels used: 1
  7062 ;; Hardware stack levels required when called: 7
  7063 ;; This function calls:
  7064 ;;		Nothing
  7065 ;; This function is called by:
  7066 ;;		_main
  7067 ;; This function uses a non-reentrant model
  7068 ;;
  7069                           
  7070     0E53                     _EUSART_is_rx_ready:	
  7071                           ;psect for function _EUSART_is_rx_ready
  7072                           
  7073     0E53                     l3466:	
  7074                           ;incstack = 0
  7075                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
  7076                           
  7077                           
  7078                           ;mcc_generated_files/eusart.c: 101:     return (_Bool)(PIR1bits.RCIF);
  7079     0E53  0020               	movlb	0	; select bank0
  7080     0E54  0E11               	swapf	17,w	;volatile
  7081     0E55  0C89               	rrf	9,f
  7082     0E56  3901               	andlw	1
  7083     0E57                     l126:
  7084     0E57  0008               	return
  7085     0E58                     __end_of_EUSART_is_rx_ready:
  7086                           
  7087                           	psect	text37
  7088     0F93                     __ptext37:	
  7089 ;; *************** function _EUSART_Read *****************
  7090 ;; Defined at:
  7091 ;;		line 113 in file "mcc_generated_files/eusart.c"
  7092 ;; Parameters:    Size  Location     Type
  7093 ;;		None
  7094 ;; Auto vars:     Size  Location     Type
  7095 ;;		None
  7096 ;; Return value:  Size  Location     Type
  7097 ;;                  1    wreg      unsigned char 
  7098 ;; Registers used:
  7099 ;;		wreg, status,2
  7100 ;; Tracked objects:
  7101 ;;		On entry : 0/0
  7102 ;;		On exit  : 0/0
  7103 ;;		Unchanged: 0/0
  7104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7105 ;;      Params:         0       0       0       0       0       0
  7106 ;;      Locals:         0       0       0       0       0       0
  7107 ;;      Temps:          0       0       0       0       0       0
  7108 ;;      Totals:         0       0       0       0       0       0
  7109 ;;Total ram usage:        0 bytes
  7110 ;; Hardware stack levels used: 1
  7111 ;; Hardware stack levels required when called: 7
  7112 ;; This function calls:
  7113 ;;		Nothing
  7114 ;; This function is called by:
  7115 ;;		_main
  7116 ;; This function uses a non-reentrant model
  7117 ;;
  7118                           
  7119     0F93                     _EUSART_Read:	
  7120                           ;psect for function _EUSART_Read
  7121                           
  7122     0F93                     l3470:	
  7123                           ;incstack = 0
  7124                           ; Regs used in _EUSART_Read: [wreg+status,2]
  7125                           
  7126     0F93                     l135:	
  7127                           ;mcc_generated_files/eusart.c: 116:     {;mcc_generated_files/eusart.c: 117:     }
  7128                           
  7129                           
  7130                           ;mcc_generated_files/eusart.c: 115:     while(!PIR1bits.RCIF)
  7131     0F93  0020               	movlb	0	; select bank0
  7132     0F94  1E91               	btfss	17,5	;volatile
  7133     0F95  2F97               	goto	u2431
  7134     0F96  2F98               	goto	u2430
  7135     0F97                     u2431:
  7136     0F97  2F93               	goto	l135
  7137     0F98                     u2430:
  7138     0F98                     l3472:
  7139                           
  7140                           ;mcc_generated_files/eusart.c: 119:     eusartRxLastError.status = 0;
  7141     0F98  0021               	movlb	1	; select bank1
  7142     0F99  01BB               	clrf	_eusartRxLastError^(0+128)	;volatile
  7143     0F9A                     l3474:
  7144                           
  7145                           ;mcc_generated_files/eusart.c: 121:     if(1 == RCSTAbits.OERR)
  7146     0F9A  0023               	movlb	3	; select bank3
  7147     0F9B  1C9D               	btfss	29,1	;volatile
  7148     0F9C  2F9E               	goto	u2441
  7149     0F9D  2F9F               	goto	u2440
  7150     0F9E                     u2441:
  7151     0F9E  2FA1               	goto	l3478
  7152     0F9F                     u2440:
  7153     0F9F                     l3476:
  7154                           
  7155                           ;mcc_generated_files/eusart.c: 122:     {;mcc_generated_files/eusart.c: 125:         RCS
      +                          TAbits.CREN = 0;
  7156     0F9F  121D               	bcf	29,4	;volatile
  7157                           
  7158                           ;mcc_generated_files/eusart.c: 126:         RCSTAbits.CREN = 1;
  7159     0FA0  161D               	bsf	29,4	;volatile
  7160     0FA1                     l3478:
  7161                           
  7162                           ;mcc_generated_files/eusart.c: 129:     return RCREG;
  7163     0FA1  0819               	movf	25,w	;volatile
  7164     0FA2                     l139:
  7165     0FA2  0008               	return
  7166     0FA3                     __end_of_EUSART_Read:
  7167                           
  7168                           	psect	text38
  7169     0E5E                     __ptext38:	
  7170 ;; *************** function _CMP2_SetInterruptHandler *****************
  7171 ;; Defined at:
  7172 ;;		line 105 in file "mcc_generated_files/cmp2.c"
  7173 ;; Parameters:    Size  Location     Type
  7174 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  7175 ;;		 -> S4_Interrupt(1), 
  7176 ;; Auto vars:     Size  Location     Type
  7177 ;;		None
  7178 ;; Return value:  Size  Location     Type
  7179 ;;                  1    wreg      void 
  7180 ;; Registers used:
  7181 ;;		wreg
  7182 ;; Tracked objects:
  7183 ;;		On entry : 0/0
  7184 ;;		On exit  : 0/0
  7185 ;;		Unchanged: 0/0
  7186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7187 ;;      Params:         0       0       2       0       0       0
  7188 ;;      Locals:         0       0       0       0       0       0
  7189 ;;      Temps:          0       0       0       0       0       0
  7190 ;;      Totals:         0       0       2       0       0       0
  7191 ;;Total ram usage:        2 bytes
  7192 ;; Hardware stack levels used: 1
  7193 ;; Hardware stack levels required when called: 7
  7194 ;; This function calls:
  7195 ;;		Nothing
  7196 ;; This function is called by:
  7197 ;;		_main
  7198 ;; This function uses a non-reentrant model
  7199 ;;
  7200                           
  7201     0E5E                     _CMP2_SetInterruptHandler:	
  7202                           ;psect for function _CMP2_SetInterruptHandler
  7203                           
  7204     0E5E                     l3548:	
  7205                           ;incstack = 0
  7206                           ; Regs used in _CMP2_SetInterruptHandler: [wreg]
  7207                           
  7208                           
  7209                           ;mcc_generated_files/cmp2.c: 106:     CMP2_InterruptHandler = InterruptHandler;
  7210     0E5E  0021               	movlb	1	; select bank1
  7211     0E5F  083E               	movf	(CMP2_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  7212     0E60  00A7               	movwf	(_CMP2_InterruptHandler+1)^(0+128)
  7213     0E61  083D               	movf	CMP2_SetInterruptHandler@InterruptHandler^(0+128),w
  7214     0E62  00A6               	movwf	_CMP2_InterruptHandler^(0+128)
  7215     0E63                     l583:
  7216     0E63  0008               	return
  7217     0E64                     __end_of_CMP2_SetInterruptHandler:
  7218                           
  7219                           	psect	text39
  7220     0E58                     __ptext39:	
  7221 ;; *************** function _CMP1_SetInterruptHandler *****************
  7222 ;; Defined at:
  7223 ;;		line 105 in file "mcc_generated_files/cmp1.c"
  7224 ;; Parameters:    Size  Location     Type
  7225 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  7226 ;;		 -> S3_Interrupt(1), 
  7227 ;; Auto vars:     Size  Location     Type
  7228 ;;		None
  7229 ;; Return value:  Size  Location     Type
  7230 ;;                  1    wreg      void 
  7231 ;; Registers used:
  7232 ;;		wreg
  7233 ;; Tracked objects:
  7234 ;;		On entry : 0/0
  7235 ;;		On exit  : 0/0
  7236 ;;		Unchanged: 0/0
  7237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7238 ;;      Params:         0       0       2       0       0       0
  7239 ;;      Locals:         0       0       0       0       0       0
  7240 ;;      Temps:          0       0       0       0       0       0
  7241 ;;      Totals:         0       0       2       0       0       0
  7242 ;;Total ram usage:        2 bytes
  7243 ;; Hardware stack levels used: 1
  7244 ;; Hardware stack levels required when called: 7
  7245 ;; This function calls:
  7246 ;;		Nothing
  7247 ;; This function is called by:
  7248 ;;		_main
  7249 ;; This function uses a non-reentrant model
  7250 ;;
  7251                           
  7252     0E58                     _CMP1_SetInterruptHandler:	
  7253                           ;psect for function _CMP1_SetInterruptHandler
  7254                           
  7255     0E58                     l3550:	
  7256                           ;incstack = 0
  7257                           ; Regs used in _CMP1_SetInterruptHandler: [wreg]
  7258                           
  7259                           
  7260                           ;mcc_generated_files/cmp1.c: 106:     CMP1_InterruptHandler = InterruptHandler;
  7261     0E58  0021               	movlb	1	; select bank1
  7262     0E59  083E               	movf	(CMP1_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  7263     0E5A  00A1               	movwf	(_CMP1_InterruptHandler+1)^(0+128)
  7264     0E5B  083D               	movf	CMP1_SetInterruptHandler@InterruptHandler^(0+128),w
  7265     0E5C  00A0               	movwf	_CMP1_InterruptHandler^(0+128)
  7266     0E5D                     l729:
  7267     0E5D  0008               	return
  7268     0E5E                     __end_of_CMP1_SetInterruptHandler:
  7269                           
  7270                           	psect	intentry
  7271     0004                     __pintentry:	
  7272 ;; *************** function _INTERRUPT_InterruptManager *****************
  7273 ;; Defined at:
  7274 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  7275 ;; Parameters:    Size  Location     Type
  7276 ;;		None
  7277 ;; Auto vars:     Size  Location     Type
  7278 ;;		None
  7279 ;; Return value:  Size  Location     Type
  7280 ;;                  1    wreg      void 
  7281 ;; Registers used:
  7282 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7283 ;; Tracked objects:
  7284 ;;		On entry : 0/0
  7285 ;;		On exit  : 0/0
  7286 ;;		Unchanged: 0/0
  7287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7288 ;;      Params:         0       0       0       0       0       0
  7289 ;;      Locals:         0       0       0       0       0       0
  7290 ;;      Temps:          0       0       0       0       0       0
  7291 ;;      Totals:         0       0       0       0       0       0
  7292 ;;Total ram usage:        0 bytes
  7293 ;; Hardware stack levels used: 1
  7294 ;; Hardware stack levels required when called: 6
  7295 ;; This function calls:
  7296 ;;		_CCP4_CaptureISR
  7297 ;;		_CMP1_ISR
  7298 ;;		_CMP2_ISR
  7299 ;;		_PIN_MANAGER_IOC
  7300 ;;		_TMR0_ISR
  7301 ;;		_TMR4_ISR
  7302 ;;		_TMR6_ISR
  7303 ;; This function is called by:
  7304 ;;		Interrupt level 1
  7305 ;; This function uses a non-reentrant model
  7306 ;;
  7307                           
  7308     0004                     _INTERRUPT_InterruptManager:
  7309                           
  7310                           ;incstack = 0
  7311     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  7312                           
  7313                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7314     0005  3180               	pagesel	$
  7315     0006                     i1l3610:
  7316                           
  7317                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.IOCIE == 1 && INTCONbits
      +                          .IOCIF == 1)
  7318     0006  1D8B               	btfss	11,3	;volatile
  7319     0007  2809               	goto	u261_21
  7320     0008  280A               	goto	u261_20
  7321     0009                     u261_21:
  7322     0009  2812               	goto	i1l192
  7323     000A                     u261_20:
  7324     000A                     i1l3612:
  7325     000A  1C0B               	btfss	11,0	;volatile
  7326     000B  280D               	goto	u262_21
  7327     000C  280E               	goto	u262_20
  7328     000D                     u262_21:
  7329     000D  2812               	goto	i1l192
  7330     000E                     u262_20:
  7331     000E                     i1l3614:
  7332                           
  7333                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
  7334     000E  318F  27A3  3180   	fcall	_PIN_MANAGER_IOC
  7335                           
  7336                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  7337     0011  2868               	goto	i1l208
  7338     0012                     i1l192:	
  7339                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.TMR0IE == 1 && INTC
      +                          ONbits.TMR0IF == 1)
  7340                           
  7341     0012  1E8B               	btfss	11,5	;volatile
  7342     0013  2815               	goto	u263_21
  7343     0014  2816               	goto	u263_20
  7344     0015                     u263_21:
  7345     0015  281E               	goto	i1l194
  7346     0016                     u263_20:
  7347     0016                     i1l3616:
  7348     0016  1D0B               	btfss	11,2	;volatile
  7349     0017  2819               	goto	u264_21
  7350     0018  281A               	goto	u264_20
  7351     0019                     u264_21:
  7352     0019  281E               	goto	i1l194
  7353     001A                     u264_20:
  7354     001A                     i1l3618:
  7355                           
  7356                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         TMR0_ISR();
  7357     001A  318F  2783  3180   	fcall	_TMR0_ISR
  7358                           
  7359                           ;mcc_generated_files/interrupt_manager.c: 62:     }
  7360     001D  2868               	goto	i1l208
  7361     001E                     i1l194:	
  7362                           ;mcc_generated_files/interrupt_manager.c: 63:     else if(INTCONbits.PEIE == 1)
  7363                           
  7364     001E  1F0B               	btfss	11,6	;volatile
  7365     001F  2821               	goto	u265_21
  7366     0020  2822               	goto	u265_20
  7367     0021                     u265_21:
  7368     0021  2868               	goto	i1l202
  7369     0022                     u265_20:
  7370     0022                     i1l3620:
  7371                           
  7372                           ;mcc_generated_files/interrupt_manager.c: 64:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 65:         if(PIE3bits.TMR4IE == 1 && PIR3bits.TMR4IF == 1)
  7373     0022  0021               	movlb	1	; select bank1
  7374     0023  1C93               	btfss	19,1	;volatile
  7375     0024  2826               	goto	u266_21
  7376     0025  2827               	goto	u266_20
  7377     0026                     u266_21:
  7378     0026  2830               	goto	i1l197
  7379     0027                     u266_20:
  7380     0027                     i1l3622:
  7381     0027  0020               	movlb	0	; select bank0
  7382     0028  1C93               	btfss	19,1	;volatile
  7383     0029  282B               	goto	u267_21
  7384     002A  282C               	goto	u267_20
  7385     002B                     u267_21:
  7386     002B  2830               	goto	i1l197
  7387     002C                     u267_20:
  7388     002C                     i1l3624:
  7389                           
  7390                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             TMR4_ISR();
  7391     002C  3187  27C7  3180   	fcall	_TMR4_ISR
  7392                           
  7393                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  7394     002F  2868               	goto	i1l208
  7395     0030                     i1l197:	
  7396                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE2bits.C2IE == 1 && PIR2
      +                          bits.C2IF == 1)
  7397                           
  7398     0030  0021               	movlb	1	; select bank1
  7399     0031  1F12               	btfss	18,6	;volatile
  7400     0032  2834               	goto	u268_21
  7401     0033  2835               	goto	u268_20
  7402     0034                     u268_21:
  7403     0034  283E               	goto	i1l199
  7404     0035                     u268_20:
  7405     0035                     i1l3626:
  7406     0035  0020               	movlb	0	; select bank0
  7407     0036  1F12               	btfss	18,6	;volatile
  7408     0037  2839               	goto	u269_21
  7409     0038  283A               	goto	u269_20
  7410     0039                     u269_21:
  7411     0039  283E               	goto	i1l199
  7412     003A                     u269_20:
  7413     003A                     i1l3628:
  7414                           
  7415                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             CMP2_ISR();
  7416     003A  318F  2747  3180   	fcall	_CMP2_ISR
  7417                           
  7418                           ;mcc_generated_files/interrupt_manager.c: 72:         }
  7419     003D  2868               	goto	i1l208
  7420     003E                     i1l199:	
  7421                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE2bits.C1IE == 1 && PIR2
      +                          bits.C1IF == 1)
  7422                           
  7423     003E  0021               	movlb	1	; select bank1
  7424     003F  1E92               	btfss	18,5	;volatile
  7425     0040  2842               	goto	u270_21
  7426     0041  2843               	goto	u270_20
  7427     0042                     u270_21:
  7428     0042  284C               	goto	i1l201
  7429     0043                     u270_20:
  7430     0043                     i1l3630:
  7431     0043  0020               	movlb	0	; select bank0
  7432     0044  1E92               	btfss	18,5	;volatile
  7433     0045  2847               	goto	u271_21
  7434     0046  2848               	goto	u271_20
  7435     0047                     u271_21:
  7436     0047  284C               	goto	i1l201
  7437     0048                     u271_20:
  7438     0048                     i1l3632:
  7439                           
  7440                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             CMP1_ISR();
  7441     0048  318F  2738  3180   	fcall	_CMP1_ISR
  7442                           
  7443                           ;mcc_generated_files/interrupt_manager.c: 76:         }
  7444     004B  2868               	goto	i1l208
  7445     004C                     i1l201:	
  7446                           ;mcc_generated_files/interrupt_manager.c: 77:         else if(PIE3bits.CCP4IE == 1 && PI
      +                          R3bits.CCP4IF == 1)
  7447                           
  7448     004C  0021               	movlb	1	; select bank1
  7449     004D  1E93               	btfss	19,5	;volatile
  7450     004E  2850               	goto	u272_21
  7451     004F  2851               	goto	u272_20
  7452     0050                     u272_21:
  7453     0050  285A               	goto	i1l203
  7454     0051                     u272_20:
  7455     0051                     i1l3634:
  7456     0051  0020               	movlb	0	; select bank0
  7457     0052  1E93               	btfss	19,5	;volatile
  7458     0053  2855               	goto	u273_21
  7459     0054  2856               	goto	u273_20
  7460     0055                     u273_21:
  7461     0055  285A               	goto	i1l203
  7462     0056                     u273_20:
  7463     0056                     i1l3636:
  7464                           
  7465                           ;mcc_generated_files/interrupt_manager.c: 78:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 79:             CCP4_CaptureISR();
  7466     0056  318F  27EC  3180   	fcall	_CCP4_CaptureISR
  7467                           
  7468                           ;mcc_generated_files/interrupt_manager.c: 80:         }
  7469     0059  2868               	goto	i1l208
  7470     005A                     i1l203:	
  7471                           ;mcc_generated_files/interrupt_manager.c: 81:         else if(PIE3bits.TMR6IE == 1 && PI
      +                          R3bits.TMR6IF == 1)
  7472                           
  7473     005A  0021               	movlb	1	; select bank1
  7474     005B  1D93               	btfss	19,3	;volatile
  7475     005C  285E               	goto	u274_21
  7476     005D  285F               	goto	u274_20
  7477     005E                     u274_21:
  7478     005E  2868               	goto	i1l202
  7479     005F                     u274_20:
  7480     005F                     i1l3638:
  7481     005F  0020               	movlb	0	; select bank0
  7482     0060  1D93               	btfss	19,3	;volatile
  7483     0061  2863               	goto	u275_21
  7484     0062  2864               	goto	u275_20
  7485     0063                     u275_21:
  7486     0063  2868               	goto	i1l202
  7487     0064                     u275_20:
  7488     0064                     i1l3640:
  7489                           
  7490                           ;mcc_generated_files/interrupt_manager.c: 82:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 83:             TMR6_ISR();
  7491     0064  3187  27B1  3180   	fcall	_TMR6_ISR
  7492                           
  7493                           ;mcc_generated_files/interrupt_manager.c: 84:         }
  7494     0067  2868               	goto	i1l208
  7495     0068                     i1l202:
  7496     0068                     i1l208:
  7497     0068  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  7498     0069  0009               	retfie
  7499     006A                     __end_of_INTERRUPT_InterruptManager:
  7500                           
  7501                           	psect	text41
  7502     07B1                     __ptext41:	
  7503 ;; *************** function _TMR6_ISR *****************
  7504 ;; Defined at:
  7505 ;;		line 119 in file "mcc_generated_files/tmr6.c"
  7506 ;; Parameters:    Size  Location     Type
  7507 ;;		None
  7508 ;; Auto vars:     Size  Location     Type
  7509 ;;		None
  7510 ;; Return value:  Size  Location     Type
  7511 ;;                  1    wreg      void 
  7512 ;; Registers used:
  7513 ;;		wreg, status,2, status,0, pclath, cstack
  7514 ;; Tracked objects:
  7515 ;;		On entry : 0/0
  7516 ;;		On exit  : 0/0
  7517 ;;		Unchanged: 0/0
  7518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7519 ;;      Params:         0       0       0       0       0       0
  7520 ;;      Locals:         0       0       0       0       0       0
  7521 ;;      Temps:          0       0       0       0       0       0
  7522 ;;      Totals:         0       0       0       0       0       0
  7523 ;;Total ram usage:        0 bytes
  7524 ;; Hardware stack levels used: 1
  7525 ;; Hardware stack levels required when called: 3
  7526 ;; This function calls:
  7527 ;;		_TMR6_CallBack
  7528 ;; This function is called by:
  7529 ;;		_INTERRUPT_InterruptManager
  7530 ;; This function uses a non-reentrant model
  7531 ;;
  7532                           
  7533     07B1                     _TMR6_ISR:	
  7534                           ;psect for function _TMR6_ISR
  7535                           
  7536     07B1                     i1l3524:	
  7537                           ;incstack = 0
  7538                           ; Regs used in _TMR6_ISR: [wreg+status,2+status,0+pclath+cstack]
  7539                           
  7540                           
  7541                           ;mcc_generated_files/tmr6.c: 121:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr6.c: 124:     PIR3bits.TMR6IF = 0;
  7542     07B1  0020               	movlb	0	; select bank0
  7543     07B2  1193               	bcf	19,3	;volatile
  7544     07B3                     i1l3526:
  7545                           
  7546                           ;mcc_generated_files/tmr6.c: 127:     if (++CountCallBack >= 400)
  7547     07B3  3001               	movlw	1
  7548     07B4  07D7               	addwf	TMR6_ISR@CountCallBack,f	;volatile
  7549     07B5  3000               	movlw	0
  7550     07B6  3DD8               	addwfc	TMR6_ISR@CountCallBack+1,f	;volatile
  7551     07B7  3001               	movlw	1
  7552     07B8  0258               	subwf	TMR6_ISR@CountCallBack+1,w	;volatile
  7553     07B9  3090               	movlw	144
  7554     07BA  1903               	skipnz
  7555     07BB  0257               	subwf	TMR6_ISR@CountCallBack,w	;volatile
  7556     07BC  1C03               	skipc
  7557     07BD  2FBF               	goto	u251_21
  7558     07BE  2FC0               	goto	u251_20
  7559     07BF                     u251_21:
  7560     07BF  2FC6               	goto	i1l640
  7561     07C0                     u251_20:
  7562     07C0                     i1l3528:
  7563                           
  7564                           ;mcc_generated_files/tmr6.c: 128:     {;mcc_generated_files/tmr6.c: 130:         TMR6_Ca
      +                          llBack();
  7565     07C0  318F  272B  3187   	fcall	_TMR6_CallBack
  7566     07C3                     i1l3530:
  7567                           
  7568                           ;mcc_generated_files/tmr6.c: 133:         CountCallBack = 0;
  7569     07C3  0020               	movlb	0	; select bank0
  7570     07C4  01D7               	clrf	TMR6_ISR@CountCallBack	;volatile
  7571     07C5  01D8               	clrf	TMR6_ISR@CountCallBack+1	;volatile
  7572     07C6                     i1l640:
  7573     07C6  0008               	return
  7574     07C7                     __end_of_TMR6_ISR:
  7575                           
  7576                           	psect	text42
  7577     0F2B                     __ptext42:	
  7578 ;; *************** function _TMR6_CallBack *****************
  7579 ;; Defined at:
  7580 ;;		line 137 in file "mcc_generated_files/tmr6.c"
  7581 ;; Parameters:    Size  Location     Type
  7582 ;;		None
  7583 ;; Auto vars:     Size  Location     Type
  7584 ;;		None
  7585 ;; Return value:  Size  Location     Type
  7586 ;;                  1    wreg      void 
  7587 ;; Registers used:
  7588 ;;		wreg, status,2, status,0, pclath, cstack
  7589 ;; Tracked objects:
  7590 ;;		On entry : 0/0
  7591 ;;		On exit  : 0/0
  7592 ;;		Unchanged: 0/0
  7593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7594 ;;      Params:         0       0       0       0       0       0
  7595 ;;      Locals:         0       0       0       0       0       0
  7596 ;;      Temps:          0       0       0       0       0       0
  7597 ;;      Totals:         0       0       0       0       0       0
  7598 ;;Total ram usage:        0 bytes
  7599 ;; Hardware stack levels used: 1
  7600 ;; Hardware stack levels required when called: 2
  7601 ;; This function calls:
  7602 ;;		Absolute function
  7603 ;;		_TMR6_DefaultInterruptHandler
  7604 ;;		_TMR6_Interrupt
  7605 ;; This function is called by:
  7606 ;;		_TMR6_ISR
  7607 ;; This function uses a non-reentrant model
  7608 ;;
  7609                           
  7610     0F2B                     _TMR6_CallBack:	
  7611                           ;psect for function _TMR6_CallBack
  7612                           
  7613     0F2B                     i1l3354:	
  7614                           ;incstack = 0
  7615                           ; Regs used in _TMR6_CallBack: [wreg+status,2+status,0+pclath+cstack]
  7616                           
  7617                           
  7618                           ;mcc_generated_files/tmr6.c: 141:     if(TMR6_InterruptHandler)
  7619     0F2B  0021               	movlb	1	; select bank1
  7620     0F2C  0824               	movf	_TMR6_InterruptHandler^(0+128),w
  7621     0F2D  0425               	iorwf	(_TMR6_InterruptHandler+1)^(0+128),w
  7622     0F2E  1903               	btfsc	3,2
  7623     0F2F  2F31               	goto	u226_21
  7624     0F30  2F32               	goto	u226_20
  7625     0F31                     u226_21:
  7626     0F31  2F37               	goto	i1l644
  7627     0F32                     u226_20:
  7628     0F32                     i1l3356:
  7629                           
  7630                           ;mcc_generated_files/tmr6.c: 142:     {;mcc_generated_files/tmr6.c: 143:         TMR6_In
      +                          terruptHandler();
  7631     0F32  0825               	movf	(_TMR6_InterruptHandler+1)^(0+128),w
  7632     0F33  008A               	movwf	10
  7633     0F34  0824               	movf	_TMR6_InterruptHandler^(0+128),w
  7634     0F35  000A               	callw
  7635     0F36  318F               	pagesel	$
  7636     0F37                     i1l644:
  7637     0F37  0008               	return
  7638     0F38                     __end_of_TMR6_CallBack:
  7639                           
  7640                           	psect	text43
  7641     0E31                     __ptext43:	
  7642 ;; *************** function _TMR6_DefaultInterruptHandler *****************
  7643 ;; Defined at:
  7644 ;;		line 151 in file "mcc_generated_files/tmr6.c"
  7645 ;; Parameters:    Size  Location     Type
  7646 ;;		None
  7647 ;; Auto vars:     Size  Location     Type
  7648 ;;		None
  7649 ;; Return value:  Size  Location     Type
  7650 ;;                  1    wreg      void 
  7651 ;; Registers used:
  7652 ;;		None
  7653 ;; Tracked objects:
  7654 ;;		On entry : 0/0
  7655 ;;		On exit  : 0/0
  7656 ;;		Unchanged: 0/0
  7657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7658 ;;      Params:         0       0       0       0       0       0
  7659 ;;      Locals:         0       0       0       0       0       0
  7660 ;;      Temps:          0       0       0       0       0       0
  7661 ;;      Totals:         0       0       0       0       0       0
  7662 ;;Total ram usage:        0 bytes
  7663 ;; Hardware stack levels used: 1
  7664 ;; This function calls:
  7665 ;;		Nothing
  7666 ;; This function is called by:
  7667 ;;		_TMR6_Initialize
  7668 ;;		_TMR6_CallBack
  7669 ;; This function uses a non-reentrant model
  7670 ;;
  7671                           
  7672     0E31                     _TMR6_DefaultInterruptHandler:	
  7673                           ;psect for function _TMR6_DefaultInterruptHandler
  7674                           
  7675     0E31                     i1l650:	
  7676                           ;incstack = 0
  7677                           ; Regs used in _TMR6_DefaultInterruptHandler: []
  7678                           
  7679     0E31  0008               	return
  7680     0E32                     __end_of_TMR6_DefaultInterruptHandler:
  7681                           
  7682                           	psect	text44
  7683     0EE6                     __ptext44:	
  7684 ;; *************** function _TMR6_Interrupt *****************
  7685 ;; Defined at:
  7686 ;;		line 142 in file "main.c"
  7687 ;; Parameters:    Size  Location     Type
  7688 ;;		None
  7689 ;; Auto vars:     Size  Location     Type
  7690 ;;		None
  7691 ;; Return value:  Size  Location     Type
  7692 ;;                  1    wreg      void 
  7693 ;; Registers used:
  7694 ;;		wreg, status,2, status,0, pclath, cstack
  7695 ;; Tracked objects:
  7696 ;;		On entry : 0/0
  7697 ;;		On exit  : 0/0
  7698 ;;		Unchanged: 0/0
  7699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7700 ;;      Params:         0       0       0       0       0       0
  7701 ;;      Locals:         0       0       0       0       0       0
  7702 ;;      Temps:          0       0       0       0       0       0
  7703 ;;      Totals:         0       0       0       0       0       0
  7704 ;;Total ram usage:        0 bytes
  7705 ;; Hardware stack levels used: 1
  7706 ;; Hardware stack levels required when called: 1
  7707 ;; This function calls:
  7708 ;;		_TMR6_StopTimer
  7709 ;;		_TMR6_WriteTimer
  7710 ;; This function is called by:
  7711 ;;		_main
  7712 ;;		_TMR6_CallBack
  7713 ;; This function uses a non-reentrant model
  7714 ;;
  7715                           
  7716     0EE6                     _TMR6_Interrupt:	
  7717                           ;psect for function _TMR6_Interrupt
  7718                           
  7719     0EE6                     i1l2892:	
  7720                           ;incstack = 0
  7721                           ; Regs used in _TMR6_Interrupt: [wreg+status,2+status,0+pclath+cstack]
  7722                           
  7723                           
  7724                           ;main.c: 143:     TMR6_StopTimer();
  7725     0EE6  318E  263B  318E   	fcall	_TMR6_StopTimer
  7726     0EE9                     i1l2894:
  7727                           
  7728                           ;main.c: 144:     TMR6_WriteTimer(0);
  7729     0EE9  3000               	movlw	0
  7730     0EEA  318E  264E  318E   	fcall	_TMR6_WriteTimer
  7731     0EED                     i1l2896:
  7732                           
  7733                           ;main.c: 145:     motorLoading = 0;
  7734     0EED  0021               	movlb	1	; select bank1
  7735     0EEE  01BA               	clrf	_motorLoading^(0+128)
  7736     0EEF                     i1l841:
  7737     0EEF  0008               	return
  7738     0EF0                     __end_of_TMR6_Interrupt:
  7739                           
  7740                           	psect	text45
  7741     0E4E                     __ptext45:	
  7742 ;; *************** function _TMR6_WriteTimer *****************
  7743 ;; Defined at:
  7744 ;;		line 108 in file "mcc_generated_files/tmr6.c"
  7745 ;; Parameters:    Size  Location     Type
  7746 ;;  timerVal        1    wreg     unsigned char 
  7747 ;; Auto vars:     Size  Location     Type
  7748 ;;  timerVal        1    0[COMMON] unsigned char 
  7749 ;; Return value:  Size  Location     Type
  7750 ;;                  1    wreg      void 
  7751 ;; Registers used:
  7752 ;;		wreg
  7753 ;; Tracked objects:
  7754 ;;		On entry : 0/0
  7755 ;;		On exit  : 0/0
  7756 ;;		Unchanged: 0/0
  7757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7758 ;;      Params:         0       0       0       0       0       0
  7759 ;;      Locals:         1       0       0       0       0       0
  7760 ;;      Temps:          0       0       0       0       0       0
  7761 ;;      Totals:         1       0       0       0       0       0
  7762 ;;Total ram usage:        1 bytes
  7763 ;; Hardware stack levels used: 1
  7764 ;; This function calls:
  7765 ;;		Nothing
  7766 ;; This function is called by:
  7767 ;;		_TMR6_Interrupt
  7768 ;; This function uses a non-reentrant model
  7769 ;;
  7770                           
  7771     0E4E                     _TMR6_WriteTimer:	
  7772                           ;psect for function _TMR6_WriteTimer
  7773                           
  7774                           
  7775                           ;incstack = 0
  7776                           ; Regs used in _TMR6_WriteTimer: [wreg]
  7777                           ;TMR6_WriteTimer@timerVal stored from wreg
  7778     0E4E  00F0               	movwf	TMR6_WriteTimer@timerVal
  7779     0E4F                     i1l2798:
  7780                           
  7781                           ;mcc_generated_files/tmr6.c: 108: void TMR6_WriteTimer(uint8_t timerVal);mcc_generated_f
      +                          iles/tmr6.c: 109: {;mcc_generated_files/tmr6.c: 111:     TMR6 = timerVal;
  7782     0E4F  0870               	movf	TMR6_WriteTimer@timerVal,w
  7783     0E50  0028               	movlb	8	; select bank8
  7784     0E51  009C               	movwf	28	;volatile
  7785     0E52                     i1l631:
  7786     0E52  0008               	return
  7787     0E53                     __end_of_TMR6_WriteTimer:
  7788                           
  7789                           	psect	text46
  7790     0E3B                     __ptext46:	
  7791 ;; *************** function _TMR6_StopTimer *****************
  7792 ;; Defined at:
  7793 ;;		line 93 in file "mcc_generated_files/tmr6.c"
  7794 ;; Parameters:    Size  Location     Type
  7795 ;;		None
  7796 ;; Auto vars:     Size  Location     Type
  7797 ;;		None
  7798 ;; Return value:  Size  Location     Type
  7799 ;;                  1    wreg      void 
  7800 ;; Registers used:
  7801 ;;		None
  7802 ;; Tracked objects:
  7803 ;;		On entry : 0/0
  7804 ;;		On exit  : 0/0
  7805 ;;		Unchanged: 0/0
  7806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7807 ;;      Params:         0       0       0       0       0       0
  7808 ;;      Locals:         0       0       0       0       0       0
  7809 ;;      Temps:          0       0       0       0       0       0
  7810 ;;      Totals:         0       0       0       0       0       0
  7811 ;;Total ram usage:        0 bytes
  7812 ;; Hardware stack levels used: 1
  7813 ;; This function calls:
  7814 ;;		Nothing
  7815 ;; This function is called by:
  7816 ;;		_TMR6_Interrupt
  7817 ;; This function uses a non-reentrant model
  7818 ;;
  7819                           
  7820     0E3B                     _TMR6_StopTimer:	
  7821                           ;psect for function _TMR6_StopTimer
  7822                           
  7823     0E3B                     i1l2796:	
  7824                           ;incstack = 0
  7825                           ; Regs used in _TMR6_StopTimer: []
  7826                           
  7827                           
  7828                           ;mcc_generated_files/tmr6.c: 96:     T6CONbits.TMR6ON = 0;
  7829     0E3B  0028               	movlb	8	; select bank8
  7830     0E3C  111E               	bcf	30,2	;volatile
  7831     0E3D                     i1l625:
  7832     0E3D  0008               	return
  7833     0E3E                     __end_of_TMR6_StopTimer:
  7834                           
  7835                           	psect	text47
  7836     07C7                     __ptext47:	
  7837 ;; *************** function _TMR4_ISR *****************
  7838 ;; Defined at:
  7839 ;;		line 119 in file "mcc_generated_files/tmr4.c"
  7840 ;; Parameters:    Size  Location     Type
  7841 ;;		None
  7842 ;; Auto vars:     Size  Location     Type
  7843 ;;		None
  7844 ;; Return value:  Size  Location     Type
  7845 ;;                  1    wreg      void 
  7846 ;; Registers used:
  7847 ;;		wreg, status,2, status,0, pclath, cstack
  7848 ;; Tracked objects:
  7849 ;;		On entry : 0/0
  7850 ;;		On exit  : 0/0
  7851 ;;		Unchanged: 0/0
  7852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7853 ;;      Params:         0       0       0       0       0       0
  7854 ;;      Locals:         0       0       0       0       0       0
  7855 ;;      Temps:          0       0       0       0       0       0
  7856 ;;      Totals:         0       0       0       0       0       0
  7857 ;;Total ram usage:        0 bytes
  7858 ;; Hardware stack levels used: 1
  7859 ;; Hardware stack levels required when called: 3
  7860 ;; This function calls:
  7861 ;;		_TMR4_CallBack
  7862 ;; This function is called by:
  7863 ;;		_INTERRUPT_InterruptManager
  7864 ;; This function uses a non-reentrant model
  7865 ;;
  7866                           
  7867     07C7                     _TMR4_ISR:	
  7868                           ;psect for function _TMR4_ISR
  7869                           
  7870     07C7                     i1l3498:	
  7871                           ;incstack = 0
  7872                           ; Regs used in _TMR4_ISR: [wreg+status,2+status,0+pclath+cstack]
  7873                           
  7874                           
  7875                           ;mcc_generated_files/tmr4.c: 121:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr4.c: 124:     PIR3bits.TMR4IF = 0;
  7876     07C7  0020               	movlb	0	; select bank0
  7877     07C8  1093               	bcf	19,1	;volatile
  7878     07C9                     i1l3500:
  7879                           
  7880                           ;mcc_generated_files/tmr4.c: 127:     if (++CountCallBack >= 100)
  7881     07C9  3001               	movlw	1
  7882     07CA  07D5               	addwf	TMR4_ISR@CountCallBack,f	;volatile
  7883     07CB  3000               	movlw	0
  7884     07CC  3DD6               	addwfc	TMR4_ISR@CountCallBack+1,f	;volatile
  7885     07CD  3000               	movlw	0
  7886     07CE  0256               	subwf	TMR4_ISR@CountCallBack+1,w	;volatile
  7887     07CF  3064               	movlw	100
  7888     07D0  1903               	skipnz
  7889     07D1  0255               	subwf	TMR4_ISR@CountCallBack,w	;volatile
  7890     07D2  1C03               	skipc
  7891     07D3  2FD5               	goto	u248_21
  7892     07D4  2FD6               	goto	u248_20
  7893     07D5                     u248_21:
  7894     07D5  2FDC               	goto	i1l694
  7895     07D6                     u248_20:
  7896     07D6                     i1l3502:
  7897                           
  7898                           ;mcc_generated_files/tmr4.c: 128:     {;mcc_generated_files/tmr4.c: 130:         TMR4_Ca
      +                          llBack();
  7899     07D6  318F  271E  3187   	fcall	_TMR4_CallBack
  7900     07D9                     i1l3504:
  7901                           
  7902                           ;mcc_generated_files/tmr4.c: 133:         CountCallBack = 0;
  7903     07D9  0020               	movlb	0	; select bank0
  7904     07DA  01D5               	clrf	TMR4_ISR@CountCallBack	;volatile
  7905     07DB  01D6               	clrf	TMR4_ISR@CountCallBack+1	;volatile
  7906     07DC                     i1l694:
  7907     07DC  0008               	return
  7908     07DD                     __end_of_TMR4_ISR:
  7909                           
  7910                           	psect	text48
  7911     0F1E                     __ptext48:	
  7912 ;; *************** function _TMR4_CallBack *****************
  7913 ;; Defined at:
  7914 ;;		line 137 in file "mcc_generated_files/tmr4.c"
  7915 ;; Parameters:    Size  Location     Type
  7916 ;;		None
  7917 ;; Auto vars:     Size  Location     Type
  7918 ;;		None
  7919 ;; Return value:  Size  Location     Type
  7920 ;;                  1    wreg      void 
  7921 ;; Registers used:
  7922 ;;		wreg, status,2, status,0, pclath, cstack
  7923 ;; Tracked objects:
  7924 ;;		On entry : 0/0
  7925 ;;		On exit  : 0/0
  7926 ;;		Unchanged: 0/0
  7927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7928 ;;      Params:         0       0       0       0       0       0
  7929 ;;      Locals:         0       0       0       0       0       0
  7930 ;;      Temps:          0       0       0       0       0       0
  7931 ;;      Totals:         0       0       0       0       0       0
  7932 ;;Total ram usage:        0 bytes
  7933 ;; Hardware stack levels used: 1
  7934 ;; Hardware stack levels required when called: 2
  7935 ;; This function calls:
  7936 ;;		Absolute function
  7937 ;;		_TMR4_DefaultInterruptHandler
  7938 ;;		_TMR4_Interrupt
  7939 ;; This function is called by:
  7940 ;;		_TMR4_ISR
  7941 ;; This function uses a non-reentrant model
  7942 ;;
  7943                           
  7944     0F1E                     _TMR4_CallBack:	
  7945                           ;psect for function _TMR4_CallBack
  7946                           
  7947     0F1E                     i1l3360:	
  7948                           ;incstack = 0
  7949                           ; Regs used in _TMR4_CallBack: [wreg+status,2+status,0+pclath+cstack]
  7950                           
  7951                           
  7952                           ;mcc_generated_files/tmr4.c: 141:     if(TMR4_InterruptHandler)
  7953     0F1E  0021               	movlb	1	; select bank1
  7954     0F1F  0822               	movf	_TMR4_InterruptHandler^(0+128),w
  7955     0F20  0423               	iorwf	(_TMR4_InterruptHandler+1)^(0+128),w
  7956     0F21  1903               	btfsc	3,2
  7957     0F22  2F24               	goto	u227_21
  7958     0F23  2F25               	goto	u227_20
  7959     0F24                     u227_21:
  7960     0F24  2F2A               	goto	i1l698
  7961     0F25                     u227_20:
  7962     0F25                     i1l3362:
  7963                           
  7964                           ;mcc_generated_files/tmr4.c: 142:     {;mcc_generated_files/tmr4.c: 143:         TMR4_In
      +                          terruptHandler();
  7965     0F25  0823               	movf	(_TMR4_InterruptHandler+1)^(0+128),w
  7966     0F26  008A               	movwf	10
  7967     0F27  0822               	movf	_TMR4_InterruptHandler^(0+128),w
  7968     0F28  000A               	callw
  7969     0F29  318F               	pagesel	$
  7970     0F2A                     i1l698:
  7971     0F2A  0008               	return
  7972     0F2B                     __end_of_TMR4_CallBack:
  7973                           
  7974                           	psect	text49
  7975     0E30                     __ptext49:	
  7976 ;; *************** function _TMR4_DefaultInterruptHandler *****************
  7977 ;; Defined at:
  7978 ;;		line 151 in file "mcc_generated_files/tmr4.c"
  7979 ;; Parameters:    Size  Location     Type
  7980 ;;		None
  7981 ;; Auto vars:     Size  Location     Type
  7982 ;;		None
  7983 ;; Return value:  Size  Location     Type
  7984 ;;                  1    wreg      void 
  7985 ;; Registers used:
  7986 ;;		None
  7987 ;; Tracked objects:
  7988 ;;		On entry : 0/0
  7989 ;;		On exit  : 0/0
  7990 ;;		Unchanged: 0/0
  7991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7992 ;;      Params:         0       0       0       0       0       0
  7993 ;;      Locals:         0       0       0       0       0       0
  7994 ;;      Temps:          0       0       0       0       0       0
  7995 ;;      Totals:         0       0       0       0       0       0
  7996 ;;Total ram usage:        0 bytes
  7997 ;; Hardware stack levels used: 1
  7998 ;; This function calls:
  7999 ;;		Nothing
  8000 ;; This function is called by:
  8001 ;;		_TMR4_Initialize
  8002 ;;		_TMR4_CallBack
  8003 ;; This function uses a non-reentrant model
  8004 ;;
  8005                           
  8006     0E30                     _TMR4_DefaultInterruptHandler:	
  8007                           ;psect for function _TMR4_DefaultInterruptHandler
  8008                           
  8009     0E30                     i1l704:	
  8010                           ;incstack = 0
  8011                           ; Regs used in _TMR4_DefaultInterruptHandler: []
  8012                           
  8013     0E30  0008               	return
  8014     0E31                     __end_of_TMR4_DefaultInterruptHandler:
  8015                           
  8016                           	psect	text50
  8017     0EDC                     __ptext50:	
  8018 ;; *************** function _TMR4_Interrupt *****************
  8019 ;; Defined at:
  8020 ;;		line 136 in file "main.c"
  8021 ;; Parameters:    Size  Location     Type
  8022 ;;		None
  8023 ;; Auto vars:     Size  Location     Type
  8024 ;;		None
  8025 ;; Return value:  Size  Location     Type
  8026 ;;                  1    wreg      void 
  8027 ;; Registers used:
  8028 ;;		wreg, status,2, status,0, pclath, cstack
  8029 ;; Tracked objects:
  8030 ;;		On entry : 0/0
  8031 ;;		On exit  : 0/0
  8032 ;;		Unchanged: 0/0
  8033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8034 ;;      Params:         0       0       0       0       0       0
  8035 ;;      Locals:         0       0       0       0       0       0
  8036 ;;      Temps:          0       0       0       0       0       0
  8037 ;;      Totals:         0       0       0       0       0       0
  8038 ;;Total ram usage:        0 bytes
  8039 ;; Hardware stack levels used: 1
  8040 ;; Hardware stack levels required when called: 1
  8041 ;; This function calls:
  8042 ;;		_TMR4_StopTimer
  8043 ;;		_TMR4_WriteTimer
  8044 ;; This function is called by:
  8045 ;;		_main
  8046 ;;		_TMR4_CallBack
  8047 ;; This function uses a non-reentrant model
  8048 ;;
  8049                           
  8050     0EDC                     _TMR4_Interrupt:	
  8051                           ;psect for function _TMR4_Interrupt
  8052                           
  8053     0EDC                     i1l2886:	
  8054                           ;incstack = 0
  8055                           ; Regs used in _TMR4_Interrupt: [wreg+status,2+status,0+pclath+cstack]
  8056                           
  8057                           
  8058                           ;main.c: 137:     TMR4_StopTimer();
  8059     0EDC  318E  2638  318E   	fcall	_TMR4_StopTimer
  8060     0EDF                     i1l2888:
  8061                           
  8062                           ;main.c: 138:     TMR4_WriteTimer(0);
  8063     0EDF  3000               	movlw	0
  8064     0EE0  318E  2649  318E   	fcall	_TMR4_WriteTimer
  8065     0EE3                     i1l2890:
  8066                           
  8067                           ;main.c: 139:     motorLoading = 0;
  8068     0EE3  0021               	movlb	1	; select bank1
  8069     0EE4  01BA               	clrf	_motorLoading^(0+128)
  8070     0EE5                     i1l838:
  8071     0EE5  0008               	return
  8072     0EE6                     __end_of_TMR4_Interrupt:
  8073                           
  8074                           	psect	text51
  8075     0E49                     __ptext51:	
  8076 ;; *************** function _TMR4_WriteTimer *****************
  8077 ;; Defined at:
  8078 ;;		line 108 in file "mcc_generated_files/tmr4.c"
  8079 ;; Parameters:    Size  Location     Type
  8080 ;;  timerVal        1    wreg     unsigned char 
  8081 ;; Auto vars:     Size  Location     Type
  8082 ;;  timerVal        1    0[COMMON] unsigned char 
  8083 ;; Return value:  Size  Location     Type
  8084 ;;                  1    wreg      void 
  8085 ;; Registers used:
  8086 ;;		wreg
  8087 ;; Tracked objects:
  8088 ;;		On entry : 0/0
  8089 ;;		On exit  : 0/0
  8090 ;;		Unchanged: 0/0
  8091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8092 ;;      Params:         0       0       0       0       0       0
  8093 ;;      Locals:         1       0       0       0       0       0
  8094 ;;      Temps:          0       0       0       0       0       0
  8095 ;;      Totals:         1       0       0       0       0       0
  8096 ;;Total ram usage:        1 bytes
  8097 ;; Hardware stack levels used: 1
  8098 ;; This function calls:
  8099 ;;		Nothing
  8100 ;; This function is called by:
  8101 ;;		_TMR4_Interrupt
  8102 ;; This function uses a non-reentrant model
  8103 ;;
  8104                           
  8105     0E49                     _TMR4_WriteTimer:	
  8106                           ;psect for function _TMR4_WriteTimer
  8107                           
  8108                           
  8109                           ;incstack = 0
  8110                           ; Regs used in _TMR4_WriteTimer: [wreg]
  8111                           ;TMR4_WriteTimer@timerVal stored from wreg
  8112     0E49  00F0               	movwf	TMR4_WriteTimer@timerVal
  8113     0E4A                     i1l2802:
  8114                           
  8115                           ;mcc_generated_files/tmr4.c: 108: void TMR4_WriteTimer(uint8_t timerVal);mcc_generated_f
      +                          iles/tmr4.c: 109: {;mcc_generated_files/tmr4.c: 111:     TMR4 = timerVal;
  8116     0E4A  0870               	movf	TMR4_WriteTimer@timerVal,w
  8117     0E4B  0028               	movlb	8	; select bank8
  8118     0E4C  0095               	movwf	21	;volatile
  8119     0E4D                     i1l685:
  8120     0E4D  0008               	return
  8121     0E4E                     __end_of_TMR4_WriteTimer:
  8122                           
  8123                           	psect	text52
  8124     0E38                     __ptext52:	
  8125 ;; *************** function _TMR4_StopTimer *****************
  8126 ;; Defined at:
  8127 ;;		line 93 in file "mcc_generated_files/tmr4.c"
  8128 ;; Parameters:    Size  Location     Type
  8129 ;;		None
  8130 ;; Auto vars:     Size  Location     Type
  8131 ;;		None
  8132 ;; Return value:  Size  Location     Type
  8133 ;;                  1    wreg      void 
  8134 ;; Registers used:
  8135 ;;		None
  8136 ;; Tracked objects:
  8137 ;;		On entry : 0/0
  8138 ;;		On exit  : 0/0
  8139 ;;		Unchanged: 0/0
  8140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8141 ;;      Params:         0       0       0       0       0       0
  8142 ;;      Locals:         0       0       0       0       0       0
  8143 ;;      Temps:          0       0       0       0       0       0
  8144 ;;      Totals:         0       0       0       0       0       0
  8145 ;;Total ram usage:        0 bytes
  8146 ;; Hardware stack levels used: 1
  8147 ;; This function calls:
  8148 ;;		Nothing
  8149 ;; This function is called by:
  8150 ;;		_TMR4_Interrupt
  8151 ;; This function uses a non-reentrant model
  8152 ;;
  8153                           
  8154     0E38                     _TMR4_StopTimer:	
  8155                           ;psect for function _TMR4_StopTimer
  8156                           
  8157     0E38                     i1l2800:	
  8158                           ;incstack = 0
  8159                           ; Regs used in _TMR4_StopTimer: []
  8160                           
  8161                           
  8162                           ;mcc_generated_files/tmr4.c: 96:     T4CONbits.TMR4ON = 0;
  8163     0E38  0028               	movlb	8	; select bank8
  8164     0E39  1117               	bcf	23,2	;volatile
  8165     0E3A                     i1l679:
  8166     0E3A  0008               	return
  8167     0E3B                     __end_of_TMR4_StopTimer:
  8168                           
  8169                           	psect	text53
  8170     0F83                     __ptext53:	
  8171 ;; *************** function _TMR0_ISR *****************
  8172 ;; Defined at:
  8173 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  8174 ;; Parameters:    Size  Location     Type
  8175 ;;		None
  8176 ;; Auto vars:     Size  Location     Type
  8177 ;;		None
  8178 ;; Return value:  Size  Location     Type
  8179 ;;                  1    wreg      void 
  8180 ;; Registers used:
  8181 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8182 ;; Tracked objects:
  8183 ;;		On entry : 0/0
  8184 ;;		On exit  : 0/0
  8185 ;;		Unchanged: 0/0
  8186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8187 ;;      Params:         0       0       0       0       0       0
  8188 ;;      Locals:         0       0       0       0       0       0
  8189 ;;      Temps:          0       0       0       0       0       0
  8190 ;;      Totals:         0       0       0       0       0       0
  8191 ;;Total ram usage:        0 bytes
  8192 ;; Hardware stack levels used: 1
  8193 ;; Hardware stack levels required when called: 2
  8194 ;; This function calls:
  8195 ;;		Absolute function
  8196 ;;		_TMR0_DefaultInterruptHandler
  8197 ;;		_TMR0_Interrupt
  8198 ;; This function is called by:
  8199 ;;		_INTERRUPT_InterruptManager
  8200 ;; This function uses a non-reentrant model
  8201 ;;
  8202                           
  8203     0F83                     _TMR0_ISR:	
  8204                           ;psect for function _TMR0_ISR
  8205                           
  8206     0F83                     i1l3490:	
  8207                           ;incstack = 0
  8208                           ; Regs used in _TMR0_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8209                           
  8210                           
  8211                           ;mcc_generated_files/tmr0.c: 112:     INTCONbits.TMR0IF = 0;
  8212     0F83  110B               	bcf	11,2	;volatile
  8213     0F84                     i1l3492:
  8214                           
  8215                           ;mcc_generated_files/tmr0.c: 114:     TMR0 = timer0ReloadVal;
  8216     0F84  0020               	movlb	0	; select bank0
  8217     0F85  0863               	movf	_timer0ReloadVal,w	;volatile
  8218     0F86  0095               	movwf	21	;volatile
  8219     0F87                     i1l3494:
  8220                           
  8221                           ;mcc_generated_files/tmr0.c: 116:     if(TMR0_InterruptHandler)
  8222     0F87  085D               	movf	_TMR0_InterruptHandler,w
  8223     0F88  045E               	iorwf	_TMR0_InterruptHandler+1,w
  8224     0F89  1903               	btfsc	3,2
  8225     0F8A  2F8C               	goto	u247_21
  8226     0F8B  2F8D               	goto	u247_20
  8227     0F8C                     u247_21:
  8228     0F8C  2F92               	goto	i1l464
  8229     0F8D                     u247_20:
  8230     0F8D                     i1l3496:
  8231                           
  8232                           ;mcc_generated_files/tmr0.c: 117:     {;mcc_generated_files/tmr0.c: 118:         TMR0_In
      +                          terruptHandler();
  8233     0F8D  085E               	movf	_TMR0_InterruptHandler+1,w
  8234     0F8E  008A               	movwf	10
  8235     0F8F  085D               	movf	_TMR0_InterruptHandler,w
  8236     0F90  000A               	callw
  8237     0F91  318F               	pagesel	$
  8238     0F92                     i1l464:
  8239     0F92  0008               	return
  8240     0F93                     __end_of_TMR0_ISR:
  8241                           
  8242                           	psect	text54
  8243     0E2F                     __ptext54:	
  8244 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  8245 ;; Defined at:
  8246 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  8247 ;; Parameters:    Size  Location     Type
  8248 ;;		None
  8249 ;; Auto vars:     Size  Location     Type
  8250 ;;		None
  8251 ;; Return value:  Size  Location     Type
  8252 ;;                  1    wreg      void 
  8253 ;; Registers used:
  8254 ;;		None
  8255 ;; Tracked objects:
  8256 ;;		On entry : 0/0
  8257 ;;		On exit  : 0/0
  8258 ;;		Unchanged: 0/0
  8259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8260 ;;      Params:         0       0       0       0       0       0
  8261 ;;      Locals:         0       0       0       0       0       0
  8262 ;;      Temps:          0       0       0       0       0       0
  8263 ;;      Totals:         0       0       0       0       0       0
  8264 ;;Total ram usage:        0 bytes
  8265 ;; Hardware stack levels used: 1
  8266 ;; This function calls:
  8267 ;;		Nothing
  8268 ;; This function is called by:
  8269 ;;		_TMR0_Initialize
  8270 ;;		_TMR0_ISR
  8271 ;; This function uses a non-reentrant model
  8272 ;;
  8273                           
  8274     0E2F                     _TMR0_DefaultInterruptHandler:	
  8275                           ;psect for function _TMR0_DefaultInterruptHandler
  8276                           
  8277     0E2F                     i1l470:	
  8278                           ;incstack = 0
  8279                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  8280                           
  8281     0E2F  0008               	return
  8282     0E30                     __end_of_TMR0_DefaultInterruptHandler:
  8283                           
  8284                           	psect	text55
  8285     02DD                     __ptext55:	
  8286 ;; *************** function _TMR0_Interrupt *****************
  8287 ;; Defined at:
  8288 ;;		line 103 in file "main.c"
  8289 ;; Parameters:    Size  Location     Type
  8290 ;;		None
  8291 ;; Auto vars:     Size  Location     Type
  8292 ;;  i               2    4[BANK0 ] int 
  8293 ;;  temperature     4    6[BANK0 ] unsigned long 
  8294 ;;  p               2    0        unsigned short 
  8295 ;; Return value:  Size  Location     Type
  8296 ;;                  1    wreg      void 
  8297 ;; Registers used:
  8298 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8299 ;; Tracked objects:
  8300 ;;		On entry : 0/0
  8301 ;;		On exit  : 0/0
  8302 ;;		Unchanged: 0/0
  8303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8304 ;;      Params:         0       0       0       0       0       0
  8305 ;;      Locals:         0       6       0       0       0       0
  8306 ;;      Temps:          0       4       0       0       0       0
  8307 ;;      Totals:         0      10       0       0       0       0
  8308 ;;Total ram usage:       10 bytes
  8309 ;; Hardware stack levels used: 1
  8310 ;; Hardware stack levels required when called: 1
  8311 ;; This function calls:
  8312 ;;		_ADC_GetConversion
  8313 ;;		_EUSART_Write
  8314 ;;		_EUSART_is_tx_ready
  8315 ;;		_TMR1_HasOverflowOccured
  8316 ;;		___lldiv
  8317 ;; This function is called by:
  8318 ;;		_main
  8319 ;;		_TMR0_ISR
  8320 ;; This function uses a non-reentrant model
  8321 ;;
  8322                           
  8323     02DD                     _TMR0_Interrupt:	
  8324                           ;psect for function _TMR0_Interrupt
  8325                           
  8326     02DD                     i1l3392:	
  8327                           ;incstack = 0
  8328                           ; Regs used in _TMR0_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8329                           
  8330                           
  8331                           ;main.c: 107:     uint32_t temperature = ADC_GetConversion(channel_AN2);
  8332     02DD  3002               	movlw	2
  8333     02DE  3187  271A  3182   	fcall	_ADC_GetConversion
  8334     02E1  0870               	movf	?_ADC_GetConversion,w
  8335     02E2  0020               	movlb	0	; select bank0
  8336     02E3  00A6               	movwf	TMR0_Interrupt@temperature
  8337     02E4  0871               	movf	?_ADC_GetConversion+1,w
  8338     02E5  00A7               	movwf	TMR0_Interrupt@temperature+1
  8339     02E6  01A8               	clrf	TMR0_Interrupt@temperature+2
  8340     02E7  01A9               	clrf	TMR0_Interrupt@temperature+3
  8341     02E8                     i1l3394:
  8342                           
  8343                           ;main.c: 108:     temperature = temperature<<12;
  8344     02E8  0826               	movf	TMR0_Interrupt@temperature,w
  8345     02E9  00A0               	movwf	??_TMR0_Interrupt
  8346     02EA  0827               	movf	TMR0_Interrupt@temperature+1,w
  8347     02EB  00A1               	movwf	??_TMR0_Interrupt+1
  8348     02EC  0828               	movf	TMR0_Interrupt@temperature+2,w
  8349     02ED  00A2               	movwf	??_TMR0_Interrupt+2
  8350     02EE  0829               	movf	TMR0_Interrupt@temperature+3,w
  8351     02EF  00A3               	movwf	??_TMR0_Interrupt+3
  8352     02F0  300C               	movlw	12
  8353     02F1                     u230_25:
  8354     02F1  35A0               	lslf	??_TMR0_Interrupt,f
  8355     02F2  0DA1               	rlf	??_TMR0_Interrupt+1,f
  8356     02F3  0DA2               	rlf	??_TMR0_Interrupt+2,f
  8357     02F4  0DA3               	rlf	??_TMR0_Interrupt+3,f
  8358     02F5                     u230_20:
  8359     02F5  0B89               	decfsz	9,f
  8360     02F6  2AF1               	goto	u230_25
  8361     02F7  0823               	movf	??_TMR0_Interrupt+3,w
  8362     02F8  00A9               	movwf	TMR0_Interrupt@temperature+3
  8363     02F9  0822               	movf	??_TMR0_Interrupt+2,w
  8364     02FA  00A8               	movwf	TMR0_Interrupt@temperature+2
  8365     02FB  0821               	movf	??_TMR0_Interrupt+1,w
  8366     02FC  00A7               	movwf	TMR0_Interrupt@temperature+1
  8367     02FD  0820               	movf	??_TMR0_Interrupt,w
  8368     02FE  00A6               	movwf	TMR0_Interrupt@temperature
  8369     02FF                     i1l3396:
  8370                           
  8371                           ;main.c: 109:     temperature /= 10230;
  8372     02FF  3000               	movlw	0
  8373     0300  00F3               	movwf	___lldiv@divisor+3
  8374     0301  3000               	movlw	0
  8375     0302  00F2               	movwf	___lldiv@divisor+2
  8376     0303  3027               	movlw	39
  8377     0304  00F1               	movwf	___lldiv@divisor+1
  8378     0305  30F6               	movlw	246
  8379     0306  00F0               	movwf	___lldiv@divisor
  8380     0307  0829               	movf	TMR0_Interrupt@temperature+3,w
  8381     0308  00F7               	movwf	___lldiv@dividend+3
  8382     0309  0828               	movf	TMR0_Interrupt@temperature+2,w
  8383     030A  00F6               	movwf	___lldiv@dividend+2
  8384     030B  0827               	movf	TMR0_Interrupt@temperature+1,w
  8385     030C  00F5               	movwf	___lldiv@dividend+1
  8386     030D  0826               	movf	TMR0_Interrupt@temperature,w
  8387     030E  00F4               	movwf	___lldiv@dividend
  8388     030F  3184  24C1  3182   	fcall	___lldiv
  8389     0312  0873               	movf	?___lldiv+3,w
  8390     0313  0020               	movlb	0	; select bank0
  8391     0314  00A9               	movwf	TMR0_Interrupt@temperature+3
  8392     0315  0872               	movf	?___lldiv+2,w
  8393     0316  00A8               	movwf	TMR0_Interrupt@temperature+2
  8394     0317  0871               	movf	?___lldiv+1,w
  8395     0318  00A7               	movwf	TMR0_Interrupt@temperature+1
  8396     0319  0870               	movf	?___lldiv,w
  8397     031A  00A6               	movwf	TMR0_Interrupt@temperature
  8398     031B                     i1l3398:
  8399     031B                     i1l3400:
  8400     031B                     i1l3402:
  8401                           
  8402                           ;main.c: 120:     if(TMR1_HasOverflowOccured()){
  8403     031B  318E  2641  3182   	fcall	_TMR1_HasOverflowOccured
  8404     031E  3A00               	xorlw	0
  8405     031F  1903               	skipnz
  8406     0320  2B22               	goto	u231_21
  8407     0321  2B23               	goto	u231_20
  8408     0322                     u231_21:
  8409     0322  2B25               	goto	i1l3406
  8410     0323                     u231_20:
  8411     0323                     i1l3404:
  8412                           
  8413                           ;main.c: 121:         velocity = 0;
  8414     0323  0020               	movlb	0	; select bank0
  8415     0324  01DB               	clrf	_velocity
  8416     0325                     i1l3406:
  8417                           
  8418                           ;main.c: 124:     data_tx[0] = 0x80|(((motorState<<4)|(currentFloor-1))&0xB3);
  8419     0325  0021               	movlb	1	; select bank1
  8420     0326  083C               	movf	_motorState^(0+128),w
  8421     0327  0020               	movlb	0	; select bank0
  8422     0328  00A0               	movwf	??_TMR0_Interrupt
  8423     0329  3004               	movlw	4
  8424     032A                     u232_25:
  8425     032A  35A0               	lslf	??_TMR0_Interrupt,f
  8426     032B  0B89               	decfsz	9,f
  8427     032C  2B2A               	goto	u232_25
  8428     032D  0021               	movlb	1	; select bank1
  8429     032E  0846               	movf	_currentFloor^(0+128),w
  8430     032F  3EFF               	addlw	255
  8431     0330  0020               	movlb	0	; select bank0
  8432     0331  0420               	iorwf	??_TMR0_Interrupt,w
  8433     0332  39B3               	andlw	179
  8434     0333  3880               	iorlw	128
  8435     0334  00CD               	movwf	_data_tx
  8436     0335                     i1l3408:
  8437                           
  8438                           ;main.c: 125:     data_tx[1] = ((p>>1)&0x7F);
  8439     0335  01CE               	clrf	_data_tx+1
  8440     0336                     i1l3410:
  8441                           
  8442                           ;main.c: 126:     data_tx[2] = ((velocity<<2)&0x7F);
  8443     0336  085B               	movf	_velocity,w
  8444     0337  00A0               	movwf	??_TMR0_Interrupt
  8445     0338  3001               	movlw	1
  8446     0339                     u233_25:
  8447     0339  35A0               	lslf	??_TMR0_Interrupt,f
  8448     033A  3EFF               	addlw	-1
  8449     033B  1D03               	skipz
  8450     033C  2B39               	goto	u233_25
  8451     033D  3520               	lslf	??_TMR0_Interrupt,w
  8452     033E  397F               	andlw	127
  8453     033F  00CF               	movwf	_data_tx+2
  8454     0340                     i1l3412:
  8455                           
  8456                           ;main.c: 127:     data_tx[3] = (temperature&0x7F);
  8457     0340  0826               	movf	TMR0_Interrupt@temperature,w
  8458     0341  397F               	andlw	127
  8459     0342  00D0               	movwf	_data_tx+3
  8460     0343                     i1l3414:
  8461                           
  8462                           ;main.c: 129:     if(EUSART_is_tx_ready()){
  8463     0343  318F  2774  3182   	fcall	_EUSART_is_tx_ready
  8464     0346  3A00               	xorlw	0
  8465     0347  1903               	skipnz
  8466     0348  2B4A               	goto	u234_21
  8467     0349  2B4B               	goto	u234_20
  8468     034A                     u234_21:
  8469     034A  2B69               	goto	i1l835
  8470     034B                     u234_20:
  8471     034B                     i1l3416:
  8472                           
  8473                           ;main.c: 130:         for(int i = 0; i<4; i++){
  8474     034B  0020               	movlb	0	; select bank0
  8475     034C  01A4               	clrf	TMR0_Interrupt@i
  8476     034D  01A5               	clrf	TMR0_Interrupt@i+1
  8477     034E                     i1l3422:
  8478                           
  8479                           ;main.c: 131:             EUSART_Write(data_tx[i]);
  8480     034E  0020               	movlb	0	; select bank0
  8481     034F  0824               	movf	TMR0_Interrupt@i,w
  8482     0350  3E4D               	addlw	(low (_data_tx| 0))& (0+255)
  8483     0351  0086               	movwf	6
  8484     0352  0187               	clrf	7
  8485     0353  0801               	movf	1,w
  8486     0354  318E  26D2  3182   	fcall	_EUSART_Write
  8487     0357                     i1l3424:
  8488                           
  8489                           ;main.c: 132:         }
  8490     0357  3001               	movlw	1
  8491     0358  0020               	movlb	0	; select bank0
  8492     0359  07A4               	addwf	TMR0_Interrupt@i,f
  8493     035A  3000               	movlw	0
  8494     035B  3DA5               	addwfc	TMR0_Interrupt@i+1,f
  8495     035C                     i1l3426:
  8496     035C  0825               	movf	TMR0_Interrupt@i+1,w
  8497     035D  3A80               	xorlw	128
  8498     035E  00A0               	movwf	??_TMR0_Interrupt
  8499     035F  3080               	movlw	128
  8500     0360  0220               	subwf	??_TMR0_Interrupt,w
  8501     0361  1D03               	skipz
  8502     0362  2B65               	goto	u235_25
  8503     0363  3004               	movlw	4
  8504     0364  0224               	subwf	TMR0_Interrupt@i,w
  8505     0365                     u235_25:
  8506     0365  1C03               	skipc
  8507     0366  2B68               	goto	u235_21
  8508     0367  2B69               	goto	u235_20
  8509     0368                     u235_21:
  8510     0368  2B4E               	goto	i1l3422
  8511     0369                     u235_20:
  8512     0369                     i1l835:
  8513     0369  0008               	return
  8514     036A                     __end_of_TMR0_Interrupt:
  8515                           
  8516                           	psect	text56
  8517     04C1                     __ptext56:	
  8518 ;; *************** function ___lldiv *****************
  8519 ;; Defined at:
  8520 ;;		line 5 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\__lldiv.c"
  8521 ;; Parameters:    Size  Location     Type
  8522 ;;  divisor         4    0[COMMON] unsigned long 
  8523 ;;  dividend        4    4[COMMON] unsigned long 
  8524 ;; Auto vars:     Size  Location     Type
  8525 ;;  quotient        4    9[COMMON] unsigned long 
  8526 ;;  counter         1   13[COMMON] unsigned char 
  8527 ;; Return value:  Size  Location     Type
  8528 ;;                  4    0[COMMON] unsigned long 
  8529 ;; Registers used:
  8530 ;;		wreg, status,2, status,0
  8531 ;; Tracked objects:
  8532 ;;		On entry : 0/0
  8533 ;;		On exit  : 0/0
  8534 ;;		Unchanged: 0/0
  8535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8536 ;;      Params:         8       0       0       0       0       0
  8537 ;;      Locals:         5       0       0       0       0       0
  8538 ;;      Temps:          1       0       0       0       0       0
  8539 ;;      Totals:        14       0       0       0       0       0
  8540 ;;Total ram usage:       14 bytes
  8541 ;; Hardware stack levels used: 1
  8542 ;; This function calls:
  8543 ;;		Nothing
  8544 ;; This function is called by:
  8545 ;;		_TMR0_Interrupt
  8546 ;; This function uses a non-reentrant model
  8547 ;;
  8548                           
  8549     04C1                     ___lldiv:	
  8550                           ;psect for function ___lldiv
  8551                           
  8552     04C1                     i1l2924:	
  8553                           ;incstack = 0
  8554                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  8555                           
  8556     04C1  3000               	movlw	0
  8557     04C2  00FC               	movwf	___lldiv@quotient+3
  8558     04C3  3000               	movlw	0
  8559     04C4  00FB               	movwf	___lldiv@quotient+2
  8560     04C5  3000               	movlw	0
  8561     04C6  00FA               	movwf	___lldiv@quotient+1
  8562     04C7  3000               	movlw	0
  8563     04C8  00F9               	movwf	___lldiv@quotient
  8564     04C9  0873               	movf	___lldiv@divisor+3,w
  8565     04CA  0472               	iorwf	___lldiv@divisor+2,w
  8566     04CB  0471               	iorwf	___lldiv@divisor+1,w
  8567     04CC  0470               	iorwf	___lldiv@divisor,w
  8568     04CD  1903               	skipnz
  8569     04CE  2CD0               	goto	u164_21
  8570     04CF  2CD1               	goto	u164_20
  8571     04D0                     u164_21:
  8572     04D0  2D12               	goto	i1l2944
  8573     04D1                     u164_20:
  8574     04D1                     i1l2926:
  8575     04D1  01FD               	clrf	___lldiv@counter
  8576     04D2  0AFD               	incf	___lldiv@counter,f
  8577     04D3  2CDF               	goto	i1l2930
  8578     04D4                     i1l2928:
  8579     04D4  3001               	movlw	1
  8580     04D5                     u165_25:
  8581     04D5  35F0               	lslf	___lldiv@divisor,f
  8582     04D6  0DF1               	rlf	___lldiv@divisor+1,f
  8583     04D7  0DF2               	rlf	___lldiv@divisor+2,f
  8584     04D8  0DF3               	rlf	___lldiv@divisor+3,f
  8585     04D9  0B89               	decfsz	9,f
  8586     04DA  2CD5               	goto	u165_25
  8587     04DB  3001               	movlw	1
  8588     04DC  00F8               	movwf	??___lldiv
  8589     04DD  0878               	movf	??___lldiv,w
  8590     04DE  07FD               	addwf	___lldiv@counter,f
  8591     04DF                     i1l2930:
  8592     04DF  1FF3               	btfss	___lldiv@divisor+3,7
  8593     04E0  2CE2               	goto	u166_21
  8594     04E1  2CE3               	goto	u166_20
  8595     04E2                     u166_21:
  8596     04E2  2CD4               	goto	i1l2928
  8597     04E3                     u166_20:
  8598     04E3                     i1l2932:
  8599     04E3  3001               	movlw	1
  8600     04E4                     u167_25:
  8601     04E4  35F9               	lslf	___lldiv@quotient,f
  8602     04E5  0DFA               	rlf	___lldiv@quotient+1,f
  8603     04E6  0DFB               	rlf	___lldiv@quotient+2,f
  8604     04E7  0DFC               	rlf	___lldiv@quotient+3,f
  8605     04E8  0B89               	decfsz	9,f
  8606     04E9  2CE4               	goto	u167_25
  8607     04EA                     i1l2934:
  8608     04EA  0873               	movf	___lldiv@divisor+3,w
  8609     04EB  0277               	subwf	___lldiv@dividend+3,w
  8610     04EC  1D03               	skipz
  8611     04ED  2CF8               	goto	u168_25
  8612     04EE  0872               	movf	___lldiv@divisor+2,w
  8613     04EF  0276               	subwf	___lldiv@dividend+2,w
  8614     04F0  1D03               	skipz
  8615     04F1  2CF8               	goto	u168_25
  8616     04F2  0871               	movf	___lldiv@divisor+1,w
  8617     04F3  0275               	subwf	___lldiv@dividend+1,w
  8618     04F4  1D03               	skipz
  8619     04F5  2CF8               	goto	u168_25
  8620     04F6  0870               	movf	___lldiv@divisor,w
  8621     04F7  0274               	subwf	___lldiv@dividend,w
  8622     04F8                     u168_25:
  8623     04F8  1C03               	skipc
  8624     04F9  2CFB               	goto	u168_21
  8625     04FA  2CFC               	goto	u168_20
  8626     04FB                     u168_21:
  8627     04FB  2D05               	goto	i1l2940
  8628     04FC                     u168_20:
  8629     04FC                     i1l2936:
  8630     04FC  0870               	movf	___lldiv@divisor,w
  8631     04FD  02F4               	subwf	___lldiv@dividend,f
  8632     04FE  0871               	movf	___lldiv@divisor+1,w
  8633     04FF  3BF5               	subwfb	___lldiv@dividend+1,f
  8634     0500  0872               	movf	___lldiv@divisor+2,w
  8635     0501  3BF6               	subwfb	___lldiv@dividend+2,f
  8636     0502  0873               	movf	___lldiv@divisor+3,w
  8637     0503  3BF7               	subwfb	___lldiv@dividend+3,f
  8638     0504                     i1l2938:
  8639     0504  1479               	bsf	___lldiv@quotient,0
  8640     0505                     i1l2940:
  8641     0505  3001               	movlw	1
  8642     0506                     u169_25:
  8643     0506  36F3               	lsrf	___lldiv@divisor+3,f
  8644     0507  0CF2               	rrf	___lldiv@divisor+2,f
  8645     0508  0CF1               	rrf	___lldiv@divisor+1,f
  8646     0509  0CF0               	rrf	___lldiv@divisor,f
  8647     050A  0B89               	decfsz	9,f
  8648     050B  2D06               	goto	u169_25
  8649     050C                     i1l2942:
  8650     050C  3001               	movlw	1
  8651     050D  02FD               	subwf	___lldiv@counter,f
  8652     050E  1D03               	btfss	3,2
  8653     050F  2D11               	goto	u170_21
  8654     0510  2D12               	goto	u170_20
  8655     0511                     u170_21:
  8656     0511  2CE3               	goto	i1l2932
  8657     0512                     u170_20:
  8658     0512                     i1l2944:
  8659     0512  087C               	movf	___lldiv@quotient+3,w
  8660     0513  00F3               	movwf	?___lldiv+3
  8661     0514  087B               	movf	___lldiv@quotient+2,w
  8662     0515  00F2               	movwf	?___lldiv+2
  8663     0516  087A               	movf	___lldiv@quotient+1,w
  8664     0517  00F1               	movwf	?___lldiv+1
  8665     0518  0879               	movf	___lldiv@quotient,w
  8666     0519  00F0               	movwf	?___lldiv
  8667     051A                     i1l1100:
  8668     051A  0008               	return
  8669     051B                     __end_of___lldiv:
  8670                           
  8671                           	psect	text57
  8672     0E41                     __ptext57:	
  8673 ;; *************** function _TMR1_HasOverflowOccured *****************
  8674 ;; Defined at:
  8675 ;;		line 150 in file "mcc_generated_files/tmr1.c"
  8676 ;; Parameters:    Size  Location     Type
  8677 ;;		None
  8678 ;; Auto vars:     Size  Location     Type
  8679 ;;		None
  8680 ;; Return value:  Size  Location     Type
  8681 ;;                  1    wreg      _Bool 
  8682 ;; Registers used:
  8683 ;;		wreg, status,2, status,0
  8684 ;; Tracked objects:
  8685 ;;		On entry : 0/0
  8686 ;;		On exit  : 0/0
  8687 ;;		Unchanged: 0/0
  8688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8689 ;;      Params:         0       0       0       0       0       0
  8690 ;;      Locals:         0       0       0       0       0       0
  8691 ;;      Temps:          0       0       0       0       0       0
  8692 ;;      Totals:         0       0       0       0       0       0
  8693 ;;Total ram usage:        0 bytes
  8694 ;; Hardware stack levels used: 1
  8695 ;; This function calls:
  8696 ;;		Nothing
  8697 ;; This function is called by:
  8698 ;;		_TMR0_Interrupt
  8699 ;; This function uses a non-reentrant model
  8700 ;;
  8701                           
  8702     0E41                     _TMR1_HasOverflowOccured:	
  8703                           ;psect for function _TMR1_HasOverflowOccured
  8704                           
  8705     0E41                     i1l2864:	
  8706                           ;incstack = 0
  8707                           ; Regs used in _TMR1_HasOverflowOccured: [wreg+status,2+status,0]
  8708                           
  8709                           
  8710                           ;mcc_generated_files/tmr1.c: 153:     return(PIR1bits.TMR1IF);
  8711     0E41  0020               	movlb	0	; select bank0
  8712     0E42  0811               	movf	17,w	;volatile
  8713     0E43  3901               	andlw	1
  8714     0E44                     i1l434:
  8715     0E44  0008               	return
  8716     0E45                     __end_of_TMR1_HasOverflowOccured:
  8717                           
  8718                           	psect	text58
  8719     0F74                     __ptext58:	
  8720 ;; *************** function _EUSART_is_tx_ready *****************
  8721 ;; Defined at:
  8722 ;;		line 94 in file "mcc_generated_files/eusart.c"
  8723 ;; Parameters:    Size  Location     Type
  8724 ;;		None
  8725 ;; Auto vars:     Size  Location     Type
  8726 ;;		None
  8727 ;; Return value:  Size  Location     Type
  8728 ;;                  1    wreg      _Bool 
  8729 ;; Registers used:
  8730 ;;		wreg, status,2
  8731 ;; Tracked objects:
  8732 ;;		On entry : 0/0
  8733 ;;		On exit  : 0/0
  8734 ;;		Unchanged: 0/0
  8735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8736 ;;      Params:         0       0       0       0       0       0
  8737 ;;      Locals:         1       0       0       0       0       0
  8738 ;;      Temps:          0       0       0       0       0       0
  8739 ;;      Totals:         1       0       0       0       0       0
  8740 ;;Total ram usage:        1 bytes
  8741 ;; Hardware stack levels used: 1
  8742 ;; This function calls:
  8743 ;;		Nothing
  8744 ;; This function is called by:
  8745 ;;		_TMR0_Interrupt
  8746 ;; This function uses a non-reentrant model
  8747 ;;
  8748                           
  8749     0F74                     _EUSART_is_tx_ready:	
  8750                           ;psect for function _EUSART_is_tx_ready
  8751                           
  8752     0F74                     i1l2842:	
  8753                           ;incstack = 0
  8754                           ; Regs used in _EUSART_is_tx_ready: [wreg+status,2]
  8755                           
  8756                           
  8757                           ;mcc_generated_files/eusart.c: 96:     return (_Bool)(PIR1bits.TXIF && TXSTAbits.TXEN);
  8758     0F74  01F0               	clrf	_EUSART_is_tx_ready$323
  8759     0F75                     i1l2844:
  8760     0F75  0020               	movlb	0	; select bank0
  8761     0F76  1E11               	btfss	17,4	;volatile
  8762     0F77  2F79               	goto	u156_21
  8763     0F78  2F7A               	goto	u156_20
  8764     0F79                     u156_21:
  8765     0F79  2F81               	goto	i1l2850
  8766     0F7A                     u156_20:
  8767     0F7A                     i1l2846:
  8768     0F7A  0023               	movlb	3	; select bank3
  8769     0F7B  1E9E               	btfss	30,5	;volatile
  8770     0F7C  2F7E               	goto	u157_21
  8771     0F7D  2F7F               	goto	u157_20
  8772     0F7E                     u157_21:
  8773     0F7E  2F81               	goto	i1l2850
  8774     0F7F                     u157_20:
  8775     0F7F                     i1l2848:
  8776     0F7F  01F0               	clrf	_EUSART_is_tx_ready$323
  8777     0F80  0AF0               	incf	_EUSART_is_tx_ready$323,f
  8778     0F81                     i1l2850:
  8779     0F81  0870               	movf	_EUSART_is_tx_ready$323,w
  8780     0F82                     i1l123:
  8781     0F82  0008               	return
  8782     0F83                     __end_of_EUSART_is_tx_ready:
  8783                           
  8784                           	psect	text59
  8785     0ED2                     __ptext59:	
  8786 ;; *************** function _EUSART_Write *****************
  8787 ;; Defined at:
  8788 ;;		line 132 in file "mcc_generated_files/eusart.c"
  8789 ;; Parameters:    Size  Location     Type
  8790 ;;  txData          1    wreg     unsigned char 
  8791 ;; Auto vars:     Size  Location     Type
  8792 ;;  txData          1    0[COMMON] unsigned char 
  8793 ;; Return value:  Size  Location     Type
  8794 ;;                  1    wreg      void 
  8795 ;; Registers used:
  8796 ;;		wreg
  8797 ;; Tracked objects:
  8798 ;;		On entry : 0/0
  8799 ;;		On exit  : 0/0
  8800 ;;		Unchanged: 0/0
  8801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8802 ;;      Params:         0       0       0       0       0       0
  8803 ;;      Locals:         1       0       0       0       0       0
  8804 ;;      Temps:          0       0       0       0       0       0
  8805 ;;      Totals:         1       0       0       0       0       0
  8806 ;;Total ram usage:        1 bytes
  8807 ;; Hardware stack levels used: 1
  8808 ;; This function calls:
  8809 ;;		Nothing
  8810 ;; This function is called by:
  8811 ;;		_TMR0_Interrupt
  8812 ;; This function uses a non-reentrant model
  8813 ;;
  8814                           
  8815     0ED2                     _EUSART_Write:	
  8816                           ;psect for function _EUSART_Write
  8817                           
  8818                           
  8819                           ;incstack = 0
  8820                           ; Regs used in _EUSART_Write: [wreg]
  8821                           ;EUSART_Write@txData stored from wreg
  8822     0ED2  00F0               	movwf	EUSART_Write@txData
  8823     0ED3                     i1l2854:
  8824     0ED3                     i1l142:	
  8825                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
  8826                           
  8827                           
  8828                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
  8829     0ED3  0020               	movlb	0	; select bank0
  8830     0ED4  1E11               	btfss	17,4	;volatile
  8831     0ED5  2ED7               	goto	u158_21
  8832     0ED6  2ED8               	goto	u158_20
  8833     0ED7                     u158_21:
  8834     0ED7  2ED3               	goto	i1l142
  8835     0ED8                     u158_20:
  8836     0ED8                     i1l2856:
  8837                           
  8838                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
  8839     0ED8  0870               	movf	EUSART_Write@txData,w
  8840     0ED9  0023               	movlb	3	; select bank3
  8841     0EDA  009A               	movwf	26	;volatile
  8842     0EDB                     i1l145:
  8843     0EDB  0008               	return
  8844     0EDC                     __end_of_EUSART_Write:
  8845                           
  8846                           	psect	text60
  8847     071A                     __ptext60:	
  8848 ;; *************** function _ADC_GetConversion *****************
  8849 ;; Defined at:
  8850 ;;		line 112 in file "mcc_generated_files/adc.c"
  8851 ;; Parameters:    Size  Location     Type
  8852 ;;  channel         1    wreg     enum E2485
  8853 ;; Auto vars:     Size  Location     Type
  8854 ;;  channel         1    3[COMMON] enum E2485
  8855 ;; Return value:  Size  Location     Type
  8856 ;;                  2    0[COMMON] unsigned short 
  8857 ;; Registers used:
  8858 ;;		wreg, status,2, status,0
  8859 ;; Tracked objects:
  8860 ;;		On entry : 0/0
  8861 ;;		On exit  : 0/0
  8862 ;;		Unchanged: 0/0
  8863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8864 ;;      Params:         2       0       0       0       0       0
  8865 ;;      Locals:         1       0       0       0       0       0
  8866 ;;      Temps:          1       0       0       0       0       0
  8867 ;;      Totals:         4       0       0       0       0       0
  8868 ;;Total ram usage:        4 bytes
  8869 ;; Hardware stack levels used: 1
  8870 ;; This function calls:
  8871 ;;		Nothing
  8872 ;; This function is called by:
  8873 ;;		_TMR0_Interrupt
  8874 ;; This function uses a non-reentrant model
  8875 ;;
  8876                           
  8877     071A                     _ADC_GetConversion:	
  8878                           ;psect for function _ADC_GetConversion
  8879                           
  8880                           
  8881                           ;incstack = 0
  8882                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  8883                           ;ADC_GetConversion@channel stored from wreg
  8884     071A  00F3               	movwf	ADC_GetConversion@channel
  8885     071B                     i1l2870:
  8886                           
  8887                           ;mcc_generated_files/adc.c: 112: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = ch
      +                          annel;
  8888     071B  0873               	movf	ADC_GetConversion@channel,w
  8889     071C  00F2               	movwf	??_ADC_GetConversion
  8890     071D  0DF2               	rlf	??_ADC_GetConversion,f
  8891     071E  0DF2               	rlf	??_ADC_GetConversion,f
  8892     071F  0021               	movlb	1	; select bank1
  8893     0720  081D               	movf	29,w	;volatile
  8894     0721  0672               	xorwf	??_ADC_GetConversion,w
  8895     0722  3983               	andlw	-125
  8896     0723  0672               	xorwf	??_ADC_GetConversion,w
  8897     0724  009D               	movwf	29	;volatile
  8898     0725                     i1l2872:
  8899                           
  8900                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
  8901     0725  141D               	bsf	29,0	;volatile
  8902     0726                     i1l2874:
  8903                           
  8904                           ;mcc_generated_files/adc.c: 121:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  8905     0726  3003               	movlw	3
  8906     0727                     u280_27:
  8907     0727  0B89               	decfsz	9,f
  8908     0728  2F27               	goto	u280_27
  8909     0729  0000               	nop
  8910     072A                     i1l2876:
  8911                           
  8912                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GO_nDONE = 1;
  8913     072A  0021               	movlb	1	; select bank1
  8914     072B  149D               	bsf	29,1	;volatile
  8915     072C                     i1l502:	
  8916                           ;mcc_generated_files/adc.c: 128:     {;mcc_generated_files/adc.c: 129:     }
  8917                           
  8918                           
  8919                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GO_nDONE)
  8920     072C  189D               	btfsc	29,1	;volatile
  8921     072D  2F2F               	goto	u159_21
  8922     072E  2F30               	goto	u159_20
  8923     072F                     u159_21:
  8924     072F  2F2C               	goto	i1l502
  8925     0730                     u159_20:
  8926     0730                     i1l2878:
  8927                           
  8928                           ;mcc_generated_files/adc.c: 132:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  8929     0730  081C               	movf	28,w	;volatile
  8930     0731  00F1               	movwf	?_ADC_GetConversion+1
  8931     0732  081B               	movf	27,w	;volatile
  8932     0733  00F0               	movwf	?_ADC_GetConversion
  8933     0734                     i1l505:
  8934     0734  0008               	return
  8935     0735                     __end_of_ADC_GetConversion:
  8936                           
  8937                           	psect	text61
  8938     0FA3                     __ptext61:	
  8939 ;; *************** function _PIN_MANAGER_IOC *****************
  8940 ;; Defined at:
  8941 ;;		line 119 in file "mcc_generated_files/pin_manager.c"
  8942 ;; Parameters:    Size  Location     Type
  8943 ;;		None
  8944 ;; Auto vars:     Size  Location     Type
  8945 ;;		None
  8946 ;; Return value:  Size  Location     Type
  8947 ;;                  1    wreg      void 
  8948 ;; Registers used:
  8949 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8950 ;; Tracked objects:
  8951 ;;		On entry : 0/0
  8952 ;;		On exit  : 0/0
  8953 ;;		Unchanged: 0/0
  8954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8955 ;;      Params:         0       0       0       0       0       0
  8956 ;;      Locals:         0       0       0       0       0       0
  8957 ;;      Temps:          0       0       0       0       0       0
  8958 ;;      Totals:         0       0       0       0       0       0
  8959 ;;Total ram usage:        0 bytes
  8960 ;; Hardware stack levels used: 1
  8961 ;; Hardware stack levels required when called: 5
  8962 ;; This function calls:
  8963 ;;		_IOCBF0_ISR
  8964 ;;		_IOCBF3_ISR
  8965 ;; This function is called by:
  8966 ;;		_INTERRUPT_InterruptManager
  8967 ;; This function uses a non-reentrant model
  8968 ;;
  8969                           
  8970     0FA3                     _PIN_MANAGER_IOC:	
  8971                           ;psect for function _PIN_MANAGER_IOC
  8972                           
  8973     0FA3                     i1l3482:	
  8974                           ;incstack = 0
  8975                           ; Regs used in _PIN_MANAGER_IOC: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8976                           
  8977                           
  8978                           ;mcc_generated_files/pin_manager.c: 122:     if(IOCBFbits.IOCBF0 == 1)
  8979     0FA3  0027               	movlb	7	; select bank7
  8980     0FA4  1C16               	btfss	22,0	;volatile
  8981     0FA5  2FA7               	goto	u245_21
  8982     0FA6  2FA8               	goto	u245_20
  8983     0FA7                     u245_21:
  8984     0FA7  2FAB               	goto	i1l3486
  8985     0FA8                     u245_20:
  8986     0FA8                     i1l3484:
  8987                           
  8988                           ;mcc_generated_files/pin_manager.c: 123:     {;mcc_generated_files/pin_manager.c: 124:  
      +                                 IOCBF0_ISR();
  8989     0FA8  318F  2756  318F   	fcall	_IOCBF0_ISR
  8990     0FAB                     i1l3486:
  8991                           
  8992                           ;mcc_generated_files/pin_manager.c: 127:     if(IOCBFbits.IOCBF3 == 1)
  8993     0FAB  0027               	movlb	7	; select bank7
  8994     0FAC  1D96               	btfss	22,3	;volatile
  8995     0FAD  2FAF               	goto	u246_21
  8996     0FAE  2FB0               	goto	u246_20
  8997     0FAF                     u246_21:
  8998     0FAF  2FB3               	goto	i1l262
  8999     0FB0                     u246_20:
  9000     0FB0                     i1l3488:
  9001                           
  9002                           ;mcc_generated_files/pin_manager.c: 128:     {;mcc_generated_files/pin_manager.c: 129:  
      +                                 IOCBF3_ISR();
  9003     0FB0  318F  2765  318F   	fcall	_IOCBF3_ISR
  9004     0FB3                     i1l262:
  9005     0FB3  0008               	return
  9006     0FB4                     __end_of_PIN_MANAGER_IOC:
  9007                           
  9008                           	psect	text62
  9009     0F65                     __ptext62:	
  9010 ;; *************** function _IOCBF3_ISR *****************
  9011 ;; Defined at:
  9012 ;;		line 166 in file "mcc_generated_files/pin_manager.c"
  9013 ;; Parameters:    Size  Location     Type
  9014 ;;		None
  9015 ;; Auto vars:     Size  Location     Type
  9016 ;;		None
  9017 ;; Return value:  Size  Location     Type
  9018 ;;                  1    wreg      void 
  9019 ;; Registers used:
  9020 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9021 ;; Tracked objects:
  9022 ;;		On entry : 0/0
  9023 ;;		On exit  : 0/0
  9024 ;;		Unchanged: 0/0
  9025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9026 ;;      Params:         0       0       0       0       0       0
  9027 ;;      Locals:         0       0       0       0       0       0
  9028 ;;      Temps:          0       0       0       0       0       0
  9029 ;;      Totals:         0       0       0       0       0       0
  9030 ;;Total ram usage:        0 bytes
  9031 ;; Hardware stack levels used: 1
  9032 ;; Hardware stack levels required when called: 4
  9033 ;; This function calls:
  9034 ;;		Absolute function
  9035 ;;		_IOCBF3_DefaultInterruptHandler
  9036 ;;		_S2_Interrupt
  9037 ;; This function is called by:
  9038 ;;		_PIN_MANAGER_IOC
  9039 ;; This function uses a non-reentrant model
  9040 ;;
  9041                           
  9042     0F65                     _IOCBF3_ISR:	
  9043                           ;psect for function _IOCBF3_ISR
  9044                           
  9045     0F65                     i1l3238:	
  9046                           ;incstack = 0
  9047                           ; Regs used in _IOCBF3_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9048                           
  9049                           
  9050                           ;mcc_generated_files/pin_manager.c: 171:     if(IOCBF3_InterruptHandler)
  9051     0F65  0021               	movlb	1	; select bank1
  9052     0F66  0828               	movf	_IOCBF3_InterruptHandler^(0+128),w
  9053     0F67  0429               	iorwf	(_IOCBF3_InterruptHandler+1)^(0+128),w
  9054     0F68  1903               	btfsc	3,2
  9055     0F69  2F6B               	goto	u225_21
  9056     0F6A  2F6C               	goto	u225_20
  9057     0F6B                     u225_21:
  9058     0F6B  2F71               	goto	i1l3242
  9059     0F6C                     u225_20:
  9060     0F6C                     i1l3240:
  9061                           
  9062                           ;mcc_generated_files/pin_manager.c: 172:     {;mcc_generated_files/pin_manager.c: 173:  
      +                                 IOCBF3_InterruptHandler();
  9063     0F6C  0829               	movf	(_IOCBF3_InterruptHandler+1)^(0+128),w
  9064     0F6D  008A               	movwf	10
  9065     0F6E  0828               	movf	_IOCBF3_InterruptHandler^(0+128),w
  9066     0F6F  000A               	callw
  9067     0F70  318F               	pagesel	$
  9068     0F71                     i1l3242:
  9069                           
  9070                           ;mcc_generated_files/pin_manager.c: 175:     IOCBFbits.IOCBF3 = 0;
  9071     0F71  0027               	movlb	7	; select bank7
  9072     0F72  1196               	bcf	22,3	;volatile
  9073     0F73                     i1l276:
  9074     0F73  0008               	return
  9075     0F74                     __end_of_IOCBF3_ISR:
  9076                           
  9077                           	psect	text63
  9078     0E2E                     __ptext63:	
  9079 ;; *************** function _IOCBF3_DefaultInterruptHandler *****************
  9080 ;; Defined at:
  9081 ;;		line 188 in file "mcc_generated_files/pin_manager.c"
  9082 ;; Parameters:    Size  Location     Type
  9083 ;;		None
  9084 ;; Auto vars:     Size  Location     Type
  9085 ;;		None
  9086 ;; Return value:  Size  Location     Type
  9087 ;;                  1    wreg      void 
  9088 ;; Registers used:
  9089 ;;		None
  9090 ;; Tracked objects:
  9091 ;;		On entry : 0/0
  9092 ;;		On exit  : 0/0
  9093 ;;		Unchanged: 0/0
  9094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9095 ;;      Params:         0       0       0       0       0       0
  9096 ;;      Locals:         0       0       0       0       0       0
  9097 ;;      Temps:          0       0       0       0       0       0
  9098 ;;      Totals:         0       0       0       0       0       0
  9099 ;;Total ram usage:        0 bytes
  9100 ;; Hardware stack levels used: 1
  9101 ;; This function calls:
  9102 ;;		Nothing
  9103 ;; This function is called by:
  9104 ;;		_PIN_MANAGER_Initialize
  9105 ;;		_IOCBF3_ISR
  9106 ;; This function uses a non-reentrant model
  9107 ;;
  9108                           
  9109     0E2E                     _IOCBF3_DefaultInterruptHandler:	
  9110                           ;psect for function _IOCBF3_DefaultInterruptHandler
  9111                           
  9112     0E2E                     i1l282:	
  9113                           ;incstack = 0
  9114                           ; Regs used in _IOCBF3_DefaultInterruptHandler: []
  9115                           
  9116     0E2E  0008               	return
  9117     0E2F                     __end_of_IOCBF3_DefaultInterruptHandler:
  9118                           
  9119                           	psect	text64
  9120     074F                     __ptext64:	
  9121 ;; *************** function _S2_Interrupt *****************
  9122 ;; Defined at:
  9123 ;;		line 169 in file "main.c"
  9124 ;; Parameters:    Size  Location     Type
  9125 ;;		None
  9126 ;; Auto vars:     Size  Location     Type
  9127 ;;		None
  9128 ;; Return value:  Size  Location     Type
  9129 ;;                  1    wreg      void 
  9130 ;; Registers used:
  9131 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9132 ;; Tracked objects:
  9133 ;;		On entry : 0/0
  9134 ;;		On exit  : 0/0
  9135 ;;		Unchanged: 0/0
  9136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9137 ;;      Params:         0       0       0       0       0       0
  9138 ;;      Locals:         0       0       0       0       0       0
  9139 ;;      Temps:          0       0       0       0       0       0
  9140 ;;      Totals:         0       0       0       0       0       0
  9141 ;;Total ram usage:        0 bytes
  9142 ;; Hardware stack levels used: 1
  9143 ;; Hardware stack levels required when called: 3
  9144 ;; This function calls:
  9145 ;;		_TMR6_StartTimer
  9146 ;;		i1_updateMotor
  9147 ;; This function is called by:
  9148 ;;		_main
  9149 ;;		_IOCBF3_ISR
  9150 ;; This function uses a non-reentrant model
  9151 ;;
  9152                           
  9153     074F                     _S2_Interrupt:	
  9154                           ;psect for function _S2_Interrupt
  9155                           
  9156     074F                     i1l2912:	
  9157                           ;incstack = 0
  9158                           ; Regs used in _S2_Interrupt: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9159                           
  9160                           
  9161                           ;main.c: 170:     if(targetFloor == 2 && currentFloor != 2){
  9162     074F  3002               	movlw	2
  9163     0750  0021               	movlb	1	; select bank1
  9164     0751  0645               	xorwf	_targetFloor^(0+128),w
  9165     0752  1D03               	btfss	3,2
  9166     0753  2F55               	goto	u162_21
  9167     0754  2F56               	goto	u162_20
  9168     0755                     u162_21:
  9169     0755  2F61               	goto	i1l2920
  9170     0756                     u162_20:
  9171     0756                     i1l2914:
  9172     0756  3002               	movlw	2
  9173     0757  0646               	xorwf	_currentFloor^(0+128),w
  9174     0758  1903               	btfsc	3,2
  9175     0759  2F5B               	goto	u163_21
  9176     075A  2F5C               	goto	u163_20
  9177     075B                     u163_21:
  9178     075B  2F61               	goto	i1l2920
  9179     075C                     u163_20:
  9180     075C                     i1l2916:
  9181                           
  9182                           ;main.c: 171:         motorLoading = 1;
  9183     075C  01BA               	clrf	_motorLoading^(0+128)
  9184     075D  0ABA               	incf	_motorLoading^(0+128),f
  9185     075E                     i1l2918:
  9186                           
  9187                           ;main.c: 172:         TMR6_StartTimer();
  9188     075E  318E  2632  3187   	fcall	_TMR6_StartTimer
  9189     0761                     i1l2920:
  9190                           
  9191                           ;main.c: 174:     currentFloor = 2;
  9192     0761  3002               	movlw	2
  9193     0762  0021               	movlb	1	; select bank1
  9194     0763  00C6               	movwf	_currentFloor^(0+128)
  9195     0764                     i1l2922:
  9196                           
  9197                           ;main.c: 175:     updateMotor();
  9198     0764  3185  25E3  3187   	fcall	i1_updateMotor
  9199     0767                     i1l854:
  9200     0767  0008               	return
  9201     0768                     __end_of_S2_Interrupt:
  9202                           
  9203                           	psect	text65
  9204     0F56                     __ptext65:	
  9205 ;; *************** function _IOCBF0_ISR *****************
  9206 ;; Defined at:
  9207 ;;		line 136 in file "mcc_generated_files/pin_manager.c"
  9208 ;; Parameters:    Size  Location     Type
  9209 ;;		None
  9210 ;; Auto vars:     Size  Location     Type
  9211 ;;		None
  9212 ;; Return value:  Size  Location     Type
  9213 ;;                  1    wreg      void 
  9214 ;; Registers used:
  9215 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9216 ;; Tracked objects:
  9217 ;;		On entry : 0/0
  9218 ;;		On exit  : 0/0
  9219 ;;		Unchanged: 0/0
  9220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9221 ;;      Params:         0       0       0       0       0       0
  9222 ;;      Locals:         0       0       0       0       0       0
  9223 ;;      Temps:          0       0       0       0       0       0
  9224 ;;      Totals:         0       0       0       0       0       0
  9225 ;;Total ram usage:        0 bytes
  9226 ;; Hardware stack levels used: 1
  9227 ;; Hardware stack levels required when called: 4
  9228 ;; This function calls:
  9229 ;;		Absolute function
  9230 ;;		_IOCBF0_DefaultInterruptHandler
  9231 ;;		_S1_Interrupt
  9232 ;; This function is called by:
  9233 ;;		_PIN_MANAGER_IOC
  9234 ;; This function uses a non-reentrant model
  9235 ;;
  9236                           
  9237     0F56                     _IOCBF0_ISR:	
  9238                           ;psect for function _IOCBF0_ISR
  9239                           
  9240     0F56                     i1l3232:	
  9241                           ;incstack = 0
  9242                           ; Regs used in _IOCBF0_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9243                           
  9244                           
  9245                           ;mcc_generated_files/pin_manager.c: 141:     if(IOCBF0_InterruptHandler)
  9246     0F56  0021               	movlb	1	; select bank1
  9247     0F57  082A               	movf	_IOCBF0_InterruptHandler^(0+128),w
  9248     0F58  042B               	iorwf	(_IOCBF0_InterruptHandler+1)^(0+128),w
  9249     0F59  1903               	btfsc	3,2
  9250     0F5A  2F5C               	goto	u224_21
  9251     0F5B  2F5D               	goto	u224_20
  9252     0F5C                     u224_21:
  9253     0F5C  2F62               	goto	i1l3236
  9254     0F5D                     u224_20:
  9255     0F5D                     i1l3234:
  9256                           
  9257                           ;mcc_generated_files/pin_manager.c: 142:     {;mcc_generated_files/pin_manager.c: 143:  
      +                                 IOCBF0_InterruptHandler();
  9258     0F5D  082B               	movf	(_IOCBF0_InterruptHandler+1)^(0+128),w
  9259     0F5E  008A               	movwf	10
  9260     0F5F  082A               	movf	_IOCBF0_InterruptHandler^(0+128),w
  9261     0F60  000A               	callw
  9262     0F61  318F               	pagesel	$
  9263     0F62                     i1l3236:
  9264                           
  9265                           ;mcc_generated_files/pin_manager.c: 145:     IOCBFbits.IOCBF0 = 0;
  9266     0F62  0027               	movlb	7	; select bank7
  9267     0F63  1016               	bcf	22,0	;volatile
  9268     0F64                     i1l266:
  9269     0F64  0008               	return
  9270     0F65                     __end_of_IOCBF0_ISR:
  9271                           
  9272                           	psect	text66
  9273     0E2D                     __ptext66:	
  9274 ;; *************** function _IOCBF0_DefaultInterruptHandler *****************
  9275 ;; Defined at:
  9276 ;;		line 158 in file "mcc_generated_files/pin_manager.c"
  9277 ;; Parameters:    Size  Location     Type
  9278 ;;		None
  9279 ;; Auto vars:     Size  Location     Type
  9280 ;;		None
  9281 ;; Return value:  Size  Location     Type
  9282 ;;                  1    wreg      void 
  9283 ;; Registers used:
  9284 ;;		None
  9285 ;; Tracked objects:
  9286 ;;		On entry : 0/0
  9287 ;;		On exit  : 0/0
  9288 ;;		Unchanged: 0/0
  9289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9290 ;;      Params:         0       0       0       0       0       0
  9291 ;;      Locals:         0       0       0       0       0       0
  9292 ;;      Temps:          0       0       0       0       0       0
  9293 ;;      Totals:         0       0       0       0       0       0
  9294 ;;Total ram usage:        0 bytes
  9295 ;; Hardware stack levels used: 1
  9296 ;; This function calls:
  9297 ;;		Nothing
  9298 ;; This function is called by:
  9299 ;;		_PIN_MANAGER_Initialize
  9300 ;;		_IOCBF0_ISR
  9301 ;; This function uses a non-reentrant model
  9302 ;;
  9303                           
  9304     0E2D                     _IOCBF0_DefaultInterruptHandler:	
  9305                           ;psect for function _IOCBF0_DefaultInterruptHandler
  9306                           
  9307     0E2D                     i1l272:	
  9308                           ;incstack = 0
  9309                           ; Regs used in _IOCBF0_DefaultInterruptHandler: []
  9310                           
  9311     0E2D  0008               	return
  9312     0E2E                     __end_of_IOCBF0_DefaultInterruptHandler:
  9313                           
  9314                           	psect	text67
  9315     0735                     __ptext67:	
  9316 ;; *************** function _S1_Interrupt *****************
  9317 ;; Defined at:
  9318 ;;		line 159 in file "main.c"
  9319 ;; Parameters:    Size  Location     Type
  9320 ;;		None
  9321 ;; Auto vars:     Size  Location     Type
  9322 ;;		None
  9323 ;; Return value:  Size  Location     Type
  9324 ;;                  1    wreg      void 
  9325 ;; Registers used:
  9326 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9327 ;; Tracked objects:
  9328 ;;		On entry : 0/0
  9329 ;;		On exit  : 0/0
  9330 ;;		Unchanged: 0/0
  9331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9332 ;;      Params:         0       0       0       0       0       0
  9333 ;;      Locals:         0       0       0       0       0       0
  9334 ;;      Temps:          0       0       0       0       0       0
  9335 ;;      Totals:         0       0       0       0       0       0
  9336 ;;Total ram usage:        0 bytes
  9337 ;; Hardware stack levels used: 1
  9338 ;; Hardware stack levels required when called: 3
  9339 ;; This function calls:
  9340 ;;		_TMR6_StartTimer
  9341 ;;		i1_updateMotor
  9342 ;; This function is called by:
  9343 ;;		_main
  9344 ;;		_IOCBF0_ISR
  9345 ;; This function uses a non-reentrant model
  9346 ;;
  9347                           
  9348     0735                     _S1_Interrupt:	
  9349                           ;psect for function _S1_Interrupt
  9350                           
  9351     0735                     i1l2898:	
  9352                           ;incstack = 0
  9353                           ; Regs used in _S1_Interrupt: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9354                           
  9355                           
  9356                           ;main.c: 160:     if(targetFloor == 1 && currentFloor != 1){
  9357     0735  0021               	movlb	1	; select bank1
  9358     0736  0345               	decf	_targetFloor^(0+128),w
  9359     0737  1D03               	btfss	3,2
  9360     0738  2F3A               	goto	u160_21
  9361     0739  2F3B               	goto	u160_20
  9362     073A                     u160_21:
  9363     073A  2F48               	goto	i1l2908
  9364     073B                     u160_20:
  9365     073B                     i1l2900:
  9366     073B  0346               	decf	_currentFloor^(0+128),w
  9367     073C  1903               	btfsc	3,2
  9368     073D  2F3F               	goto	u161_21
  9369     073E  2F40               	goto	u161_20
  9370     073F                     u161_21:
  9371     073F  2F48               	goto	i1l2908
  9372     0740                     u161_20:
  9373     0740                     i1l2902:
  9374                           
  9375                           ;main.c: 161:         position = 0;
  9376     0740  0020               	movlb	0	; select bank0
  9377     0741  01DC               	clrf	_position
  9378     0742                     i1l2904:
  9379                           
  9380                           ;main.c: 162:         motorLoading = 1;
  9381     0742  0021               	movlb	1	; select bank1
  9382     0743  01BA               	clrf	_motorLoading^(0+128)
  9383     0744  0ABA               	incf	_motorLoading^(0+128),f
  9384     0745                     i1l2906:
  9385                           
  9386                           ;main.c: 163:         TMR6_StartTimer();
  9387     0745  318E  2632  3187   	fcall	_TMR6_StartTimer
  9388     0748                     i1l2908:
  9389                           
  9390                           ;main.c: 165:     currentFloor = 1;
  9391     0748  0021               	movlb	1	; select bank1
  9392     0749  01C6               	clrf	_currentFloor^(0+128)
  9393     074A  0AC6               	incf	_currentFloor^(0+128),f
  9394     074B                     i1l2910:
  9395                           
  9396                           ;main.c: 166:     updateMotor();
  9397     074B  3185  25E3  3187   	fcall	i1_updateMotor
  9398     074E                     i1l850:
  9399     074E  0008               	return
  9400     074F                     __end_of_S1_Interrupt:
  9401                           
  9402                           	psect	text68
  9403     0F47                     __ptext68:	
  9404 ;; *************** function _CMP2_ISR *****************
  9405 ;; Defined at:
  9406 ;;		line 91 in file "mcc_generated_files/cmp2.c"
  9407 ;; Parameters:    Size  Location     Type
  9408 ;;		None
  9409 ;; Auto vars:     Size  Location     Type
  9410 ;;		None
  9411 ;; Return value:  Size  Location     Type
  9412 ;;                  1    wreg      void 
  9413 ;; Registers used:
  9414 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9415 ;; Tracked objects:
  9416 ;;		On entry : 0/0
  9417 ;;		On exit  : 0/0
  9418 ;;		Unchanged: 0/0
  9419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9420 ;;      Params:         0       0       0       0       0       0
  9421 ;;      Locals:         0       0       0       0       0       0
  9422 ;;      Temps:          0       0       0       0       0       0
  9423 ;;      Totals:         0       0       0       0       0       0
  9424 ;;Total ram usage:        0 bytes
  9425 ;; Hardware stack levels used: 1
  9426 ;; Hardware stack levels required when called: 4
  9427 ;; This function calls:
  9428 ;;		Absolute function
  9429 ;;		_S4_Interrupt
  9430 ;; This function is called by:
  9431 ;;		_INTERRUPT_InterruptManager
  9432 ;; This function uses a non-reentrant model
  9433 ;;
  9434                           
  9435     0F47                     _CMP2_ISR:	
  9436                           ;psect for function _CMP2_ISR
  9437                           
  9438     0F47                     i1l3506:	
  9439                           ;incstack = 0
  9440                           ; Regs used in _CMP2_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9441                           
  9442                           
  9443                           ;mcc_generated_files/cmp2.c: 94:     PIR2bits.C2IF = 0;
  9444     0F47  0020               	movlb	0	; select bank0
  9445     0F48  1312               	bcf	18,6	;volatile
  9446     0F49                     i1l3508:
  9447                           
  9448                           ;mcc_generated_files/cmp2.c: 96:     if(CMP2_InterruptHandler)
  9449     0F49  0021               	movlb	1	; select bank1
  9450     0F4A  0826               	movf	_CMP2_InterruptHandler^(0+128),w
  9451     0F4B  0427               	iorwf	(_CMP2_InterruptHandler+1)^(0+128),w
  9452     0F4C  1903               	btfsc	3,2
  9453     0F4D  2F4F               	goto	u249_21
  9454     0F4E  2F50               	goto	u249_20
  9455     0F4F                     u249_21:
  9456     0F4F  2F55               	goto	i1l580
  9457     0F50                     u249_20:
  9458     0F50                     i1l3510:
  9459                           
  9460                           ;mcc_generated_files/cmp2.c: 97:     {;mcc_generated_files/cmp2.c: 98:         CMP2_Inte
      +                          rruptHandler();
  9461     0F50  0827               	movf	(_CMP2_InterruptHandler+1)^(0+128),w
  9462     0F51  008A               	movwf	10
  9463     0F52  0826               	movf	_CMP2_InterruptHandler^(0+128),w
  9464     0F53  000A               	callw
  9465     0F54  318F               	pagesel	$
  9466     0F55                     i1l580:
  9467     0F55  0008               	return
  9468     0F56                     __end_of_CMP2_ISR:
  9469                           
  9470                           	psect	text69
  9471     0768                     __ptext69:	
  9472 ;; *************** function _S4_Interrupt *****************
  9473 ;; Defined at:
  9474 ;;		line 187 in file "main.c"
  9475 ;; Parameters:    Size  Location     Type
  9476 ;;		None
  9477 ;; Auto vars:     Size  Location     Type
  9478 ;;		None
  9479 ;; Return value:  Size  Location     Type
  9480 ;;                  1    wreg      void 
  9481 ;; Registers used:
  9482 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9483 ;; Tracked objects:
  9484 ;;		On entry : 0/0
  9485 ;;		On exit  : 0/0
  9486 ;;		Unchanged: 0/0
  9487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9488 ;;      Params:         0       0       0       0       0       0
  9489 ;;      Locals:         0       0       0       0       0       0
  9490 ;;      Temps:          0       0       0       0       0       0
  9491 ;;      Totals:         0       0       0       0       0       0
  9492 ;;Total ram usage:        0 bytes
  9493 ;; Hardware stack levels used: 1
  9494 ;; Hardware stack levels required when called: 3
  9495 ;; This function calls:
  9496 ;;		_TMR6_StartTimer
  9497 ;;		i1_updateMotor
  9498 ;; This function is called by:
  9499 ;;		_main
  9500 ;;		_CMP2_ISR
  9501 ;; This function uses a non-reentrant model
  9502 ;;
  9503                           
  9504     0768                     _S4_Interrupt:	
  9505                           ;psect for function _S4_Interrupt
  9506                           
  9507     0768                     i1l3450:	
  9508                           ;incstack = 0
  9509                           ; Regs used in _S4_Interrupt: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9510                           
  9511                           
  9512                           ;main.c: 188:     if(targetFloor == 3 && currentFloor != 3){
  9513     0768  3003               	movlw	3
  9514     0769  0021               	movlb	1	; select bank1
  9515     076A  0645               	xorwf	_targetFloor^(0+128),w
  9516     076B  1D03               	btfss	3,2
  9517     076C  2F6E               	goto	u239_21
  9518     076D  2F6F               	goto	u239_20
  9519     076E                     u239_21:
  9520     076E  2F7A               	goto	i1l3458
  9521     076F                     u239_20:
  9522     076F                     i1l3452:
  9523     076F  3003               	movlw	3
  9524     0770  0646               	xorwf	_currentFloor^(0+128),w
  9525     0771  1903               	btfsc	3,2
  9526     0772  2F74               	goto	u240_21
  9527     0773  2F75               	goto	u240_20
  9528     0774                     u240_21:
  9529     0774  2F7A               	goto	i1l3458
  9530     0775                     u240_20:
  9531     0775                     i1l3454:
  9532                           
  9533                           ;main.c: 189:         motorLoading = 1;
  9534     0775  01BA               	clrf	_motorLoading^(0+128)
  9535     0776  0ABA               	incf	_motorLoading^(0+128),f
  9536     0777                     i1l3456:
  9537                           
  9538                           ;main.c: 190:         TMR6_StartTimer();
  9539     0777  318E  2632  3187   	fcall	_TMR6_StartTimer
  9540     077A                     i1l3458:
  9541                           
  9542                           ;main.c: 192:     currentFloor = 4;
  9543     077A  3004               	movlw	4
  9544     077B  0021               	movlb	1	; select bank1
  9545     077C  00C6               	movwf	_currentFloor^(0+128)
  9546     077D                     i1l3460:
  9547                           
  9548                           ;main.c: 193:     updateMotor();
  9549     077D  3185  25E3  3187   	fcall	i1_updateMotor
  9550     0780                     i1l862:
  9551     0780  0008               	return
  9552     0781                     __end_of_S4_Interrupt:
  9553                           
  9554                           	psect	text70
  9555     0F38                     __ptext70:	
  9556 ;; *************** function _CMP1_ISR *****************
  9557 ;; Defined at:
  9558 ;;		line 91 in file "mcc_generated_files/cmp1.c"
  9559 ;; Parameters:    Size  Location     Type
  9560 ;;		None
  9561 ;; Auto vars:     Size  Location     Type
  9562 ;;		None
  9563 ;; Return value:  Size  Location     Type
  9564 ;;                  1    wreg      void 
  9565 ;; Registers used:
  9566 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9567 ;; Tracked objects:
  9568 ;;		On entry : 0/0
  9569 ;;		On exit  : 0/0
  9570 ;;		Unchanged: 0/0
  9571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9572 ;;      Params:         0       0       0       0       0       0
  9573 ;;      Locals:         0       0       0       0       0       0
  9574 ;;      Temps:          0       0       0       0       0       0
  9575 ;;      Totals:         0       0       0       0       0       0
  9576 ;;Total ram usage:        0 bytes
  9577 ;; Hardware stack levels used: 1
  9578 ;; Hardware stack levels required when called: 4
  9579 ;; This function calls:
  9580 ;;		Absolute function
  9581 ;;		_S3_Interrupt
  9582 ;; This function is called by:
  9583 ;;		_INTERRUPT_InterruptManager
  9584 ;; This function uses a non-reentrant model
  9585 ;;
  9586                           
  9587     0F38                     _CMP1_ISR:	
  9588                           ;psect for function _CMP1_ISR
  9589                           
  9590     0F38                     i1l3512:	
  9591                           ;incstack = 0
  9592                           ; Regs used in _CMP1_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9593                           
  9594                           
  9595                           ;mcc_generated_files/cmp1.c: 94:     PIR2bits.C1IF = 0;
  9596     0F38  0020               	movlb	0	; select bank0
  9597     0F39  1292               	bcf	18,5	;volatile
  9598     0F3A                     i1l3514:
  9599                           
  9600                           ;mcc_generated_files/cmp1.c: 96:     if(CMP1_InterruptHandler)
  9601     0F3A  0021               	movlb	1	; select bank1
  9602     0F3B  0820               	movf	_CMP1_InterruptHandler^(0+128),w
  9603     0F3C  0421               	iorwf	(_CMP1_InterruptHandler+1)^(0+128),w
  9604     0F3D  1903               	btfsc	3,2
  9605     0F3E  2F40               	goto	u250_21
  9606     0F3F  2F41               	goto	u250_20
  9607     0F40                     u250_21:
  9608     0F40  2F46               	goto	i1l726
  9609     0F41                     u250_20:
  9610     0F41                     i1l3516:
  9611                           
  9612                           ;mcc_generated_files/cmp1.c: 97:     {;mcc_generated_files/cmp1.c: 98:         CMP1_Inte
      +                          rruptHandler();
  9613     0F41  0821               	movf	(_CMP1_InterruptHandler+1)^(0+128),w
  9614     0F42  008A               	movwf	10
  9615     0F43  0820               	movf	_CMP1_InterruptHandler^(0+128),w
  9616     0F44  000A               	callw
  9617     0F45  318F               	pagesel	$
  9618     0F46                     i1l726:
  9619     0F46  0008               	return
  9620     0F47                     __end_of_CMP1_ISR:
  9621                           
  9622                           	psect	text71
  9623     0781                     __ptext71:	
  9624 ;; *************** function _S3_Interrupt *****************
  9625 ;; Defined at:
  9626 ;;		line 178 in file "main.c"
  9627 ;; Parameters:    Size  Location     Type
  9628 ;;		None
  9629 ;; Auto vars:     Size  Location     Type
  9630 ;;		None
  9631 ;; Return value:  Size  Location     Type
  9632 ;;                  1    wreg      void 
  9633 ;; Registers used:
  9634 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9635 ;; Tracked objects:
  9636 ;;		On entry : 0/0
  9637 ;;		On exit  : 0/0
  9638 ;;		Unchanged: 0/0
  9639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9640 ;;      Params:         0       0       0       0       0       0
  9641 ;;      Locals:         0       0       0       0       0       0
  9642 ;;      Temps:          0       0       0       0       0       0
  9643 ;;      Totals:         0       0       0       0       0       0
  9644 ;;Total ram usage:        0 bytes
  9645 ;; Hardware stack levels used: 1
  9646 ;; Hardware stack levels required when called: 3
  9647 ;; This function calls:
  9648 ;;		_TMR6_StartTimer
  9649 ;;		i1_updateMotor
  9650 ;; This function is called by:
  9651 ;;		_main
  9652 ;;		_CMP1_ISR
  9653 ;; This function uses a non-reentrant model
  9654 ;;
  9655                           
  9656     0781                     _S3_Interrupt:	
  9657                           ;psect for function _S3_Interrupt
  9658                           
  9659     0781                     i1l3438:	
  9660                           ;incstack = 0
  9661                           ; Regs used in _S3_Interrupt: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9662                           
  9663                           
  9664                           ;main.c: 179:     if(targetFloor == 3 && currentFloor != 3){
  9665     0781  3003               	movlw	3
  9666     0782  0021               	movlb	1	; select bank1
  9667     0783  0645               	xorwf	_targetFloor^(0+128),w
  9668     0784  1D03               	btfss	3,2
  9669     0785  2F87               	goto	u237_21
  9670     0786  2F88               	goto	u237_20
  9671     0787                     u237_21:
  9672     0787  2F93               	goto	i1l3446
  9673     0788                     u237_20:
  9674     0788                     i1l3440:
  9675     0788  3003               	movlw	3
  9676     0789  0646               	xorwf	_currentFloor^(0+128),w
  9677     078A  1903               	btfsc	3,2
  9678     078B  2F8D               	goto	u238_21
  9679     078C  2F8E               	goto	u238_20
  9680     078D                     u238_21:
  9681     078D  2F93               	goto	i1l3446
  9682     078E                     u238_20:
  9683     078E                     i1l3442:
  9684                           
  9685                           ;main.c: 180:         motorLoading = 1;
  9686     078E  01BA               	clrf	_motorLoading^(0+128)
  9687     078F  0ABA               	incf	_motorLoading^(0+128),f
  9688     0790                     i1l3444:
  9689                           
  9690                           ;main.c: 181:         TMR6_StartTimer();
  9691     0790  318E  2632  3187   	fcall	_TMR6_StartTimer
  9692     0793                     i1l3446:
  9693                           
  9694                           ;main.c: 183:     currentFloor = 3;
  9695     0793  3003               	movlw	3
  9696     0794  0021               	movlb	1	; select bank1
  9697     0795  00C6               	movwf	_currentFloor^(0+128)
  9698     0796                     i1l3448:
  9699                           
  9700                           ;main.c: 184:     updateMotor();
  9701     0796  3185  25E3  3187   	fcall	i1_updateMotor
  9702     0799                     i1l858:
  9703     0799  0008               	return
  9704     079A                     __end_of_S3_Interrupt:
  9705                           
  9706                           	psect	text72
  9707     05E3                     __ptext72:	
  9708 ;; *************** function i1_updateMotor *****************
  9709 ;; Defined at:
  9710 ;;		line 78 in file "main.c"
  9711 ;; Parameters:    Size  Location     Type
  9712 ;;		None
  9713 ;; Auto vars:     Size  Location     Type
  9714 ;;		None
  9715 ;; Return value:  Size  Location     Type
  9716 ;;                  1    wreg      void 
  9717 ;; Registers used:
  9718 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9719 ;; Tracked objects:
  9720 ;;		On entry : 0/0
  9721 ;;		On exit  : 0/0
  9722 ;;		Unchanged: 0/0
  9723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9724 ;;      Params:         0       0       0       0       0       0
  9725 ;;      Locals:         0       0       0       0       0       0
  9726 ;;      Temps:          0       0       0       0       0       0
  9727 ;;      Totals:         0       0       0       0       0       0
  9728 ;;Total ram usage:        0 bytes
  9729 ;; Hardware stack levels used: 1
  9730 ;; Hardware stack levels required when called: 2
  9731 ;; This function calls:
  9732 ;;		i1_TMR4_StartTimer
  9733 ;;		i1_controlMotor
  9734 ;; This function is called by:
  9735 ;;		_S1_Interrupt
  9736 ;;		_S2_Interrupt
  9737 ;;		_S3_Interrupt
  9738 ;;		_S4_Interrupt
  9739 ;; This function uses a non-reentrant model
  9740 ;;
  9741                           
  9742     05E3                     i1_updateMotor:	
  9743                           ;psect for function i1_updateMotor
  9744                           
  9745     05E3                     i1l2804:	
  9746                           ;incstack = 0
  9747                           ; Regs used in i1_updateMotor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9748                           
  9749                           
  9750                           ;main.c: 79:     if(!motorLoading){
  9751     05E3  0021               	movlb	1	; select bank1
  9752     05E4  083A               	movf	_motorLoading^(0+128),w
  9753     05E5  1D03               	btfss	3,2
  9754     05E6  2DE8               	goto	u150_21
  9755     05E7  2DE9               	goto	u150_20
  9756     05E8                     u150_21:
  9757     05E8  2DEF               	goto	i1l2808
  9758     05E9                     u150_20:
  9759     05E9                     i1l2806:
  9760                           
  9761                           ;main.c: 80:         if(currentFloor==targetFloor){
  9762     05E9  0846               	movf	_currentFloor^(0+128),w
  9763     05EA  0645               	xorwf	_targetFloor^(0+128),w
  9764     05EB  1D03               	skipz
  9765     05EC  2DEE               	goto	u151_21
  9766     05ED  2DEF               	goto	u151_20
  9767     05EE                     u151_21:
  9768     05EE  2DF1               	goto	i1l2810
  9769     05EF                     u151_20:
  9770     05EF                     i1l2808:
  9771                           
  9772                           ;main.c: 81:             motorState = 0;
  9773     05EF  01BC               	clrf	_motorState^(0+128)
  9774                           
  9775                           ;main.c: 82:         } else if(currentFloor < targetFloor){
  9776     05F0  2E13               	goto	i1l2830
  9777     05F1                     i1l2810:
  9778     05F1  0845               	movf	_targetFloor^(0+128),w
  9779     05F2  0246               	subwf	_currentFloor^(0+128),w
  9780     05F3  1803               	skipnc
  9781     05F4  2DF6               	goto	u152_21
  9782     05F5  2DF7               	goto	u152_20
  9783     05F6                     u152_21:
  9784     05F6  2E06               	goto	i1l2820
  9785     05F7                     u152_20:
  9786     05F7                     i1l2812:
  9787                           
  9788                           ;main.c: 83:             if(motorState == 2){
  9789     05F7  3002               	movlw	2
  9790     05F8  063C               	xorwf	_motorState^(0+128),w
  9791     05F9  1D03               	btfss	3,2
  9792     05FA  2DFC               	goto	u153_21
  9793     05FB  2DFD               	goto	u153_20
  9794     05FC                     u153_21:
  9795     05FC  2E02               	goto	i1l2818
  9796     05FD                     u153_20:
  9797     05FD                     i1l2814:
  9798                           
  9799                           ;main.c: 84:                 motorLoading = 1;
  9800     05FD  01BA               	clrf	_motorLoading^(0+128)
  9801     05FE  0ABA               	incf	_motorLoading^(0+128),f
  9802     05FF                     i1l2816:
  9803                           
  9804                           ;main.c: 85:                 TMR4_StartTimer();
  9805     05FF  318E  2635  3185   	fcall	i1_TMR4_StartTimer
  9806     0602                     i1l2818:
  9807                           
  9808                           ;main.c: 87:             motorState = 1;
  9809     0602  0021               	movlb	1	; select bank1
  9810     0603  01BC               	clrf	_motorState^(0+128)
  9811     0604  0ABC               	incf	_motorState^(0+128),f
  9812                           
  9813                           ;main.c: 88:         } else{
  9814     0605  2E13               	goto	i1l2830
  9815     0606                     i1l2820:
  9816                           
  9817                           ;main.c: 89:             if(motorState == 1){
  9818     0606  033C               	decf	_motorState^(0+128),w
  9819     0607  1D03               	btfss	3,2
  9820     0608  2E0A               	goto	u154_21
  9821     0609  2E0B               	goto	u154_20
  9822     060A                     u154_21:
  9823     060A  2E10               	goto	i1l2826
  9824     060B                     u154_20:
  9825     060B                     i1l2822:
  9826                           
  9827                           ;main.c: 90:                 motorLoading = 1;
  9828     060B  01BA               	clrf	_motorLoading^(0+128)
  9829     060C  0ABA               	incf	_motorLoading^(0+128),f
  9830     060D                     i1l2824:
  9831                           
  9832                           ;main.c: 91:                 TMR4_StartTimer();
  9833     060D  318E  2635  3185   	fcall	i1_TMR4_StartTimer
  9834     0610                     i1l2826:
  9835                           
  9836                           ;main.c: 93:             motorState = 2;
  9837     0610  3002               	movlw	2
  9838     0611  0021               	movlb	1	; select bank1
  9839     0612  00BC               	movwf	_motorState^(0+128)
  9840     0613                     i1l2830:
  9841                           
  9842                           ;main.c: 98:     controlMotor();
  9843     0613  3185  2565  3185   	fcall	i1_controlMotor
  9844     0616                     i1l828:
  9845     0616  0008               	return
  9846     0617                     __end_ofi1_updateMotor:
  9847                           
  9848                           	psect	text73
  9849     0565                     __ptext73:	
  9850 ;; *************** function i1_controlMotor *****************
  9851 ;; Defined at:
  9852 ;;		line 57 in file "main.c"
  9853 ;; Parameters:    Size  Location     Type
  9854 ;;		None
  9855 ;; Auto vars:     Size  Location     Type
  9856 ;;		None
  9857 ;; Return value:  Size  Location     Type
  9858 ;;                  1    wreg      void 
  9859 ;; Registers used:
  9860 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9861 ;; Tracked objects:
  9862 ;;		On entry : 0/0
  9863 ;;		On exit  : 0/0
  9864 ;;		Unchanged: 0/0
  9865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9866 ;;      Params:         0       0       0       0       0       0
  9867 ;;      Locals:         0       0       0       0       0       0
  9868 ;;      Temps:          2       0       0       0       0       0
  9869 ;;      Totals:         2       0       0       0       0       0
  9870 ;;Total ram usage:        2 bytes
  9871 ;; Hardware stack levels used: 1
  9872 ;; Hardware stack levels required when called: 1
  9873 ;; This function calls:
  9874 ;;		i1_PWM3_LoadDutyValue
  9875 ;; This function is called by:
  9876 ;;		i1_updateMotor
  9877 ;; This function uses a non-reentrant model
  9878 ;;
  9879                           
  9880     0565                     i1_controlMotor:	
  9881                           ;psect for function i1_controlMotor
  9882                           
  9883     0565                     i1l2766:	
  9884                           ;incstack = 0
  9885                           ; Regs used in i1_controlMotor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9886                           
  9887                           
  9888                           ;main.c: 58:     switch(motorState){
  9889     0565  2D9A               	goto	i1l2786
  9890     0566                     i1l2768:
  9891                           
  9892                           ;main.c: 60:             PWM3_LoadDutyValue(0);
  9893     0566  3000               	movlw	0
  9894     0567  00F0               	movwf	i1PWM3_LoadDutyValue@dutyValue
  9895     0568  00F1               	movwf	i1PWM3_LoadDutyValue@dutyValue+1
  9896     0569  3187  279A  3185   	fcall	i1_PWM3_LoadDutyValue
  9897     056C                     i1l2770:
  9898     056C  0022               	movlb	2	; select bank2
  9899     056D  178C               	bsf	12,7	;volatile
  9900     056E                     i1l2772:
  9901                           
  9902                           ;main.c: 63:             if(currentFloor != 4){
  9903     056E  3004               	movlw	4
  9904     056F  0021               	movlb	1	; select bank1
  9905     0570  0646               	xorwf	_currentFloor^(0+128),w
  9906     0571  1903               	btfsc	3,2
  9907     0572  2D74               	goto	u148_21
  9908     0573  2D75               	goto	u148_20
  9909     0574                     u148_21:
  9910     0574  2D7D               	goto	i1l2776
  9911     0575                     u148_20:
  9912     0575                     i1l2774:
  9913                           
  9914                           ;main.c: 64:                 PWM3_LoadDutyValue(409);
  9915     0575  3099               	movlw	153
  9916     0576  00F0               	movwf	i1PWM3_LoadDutyValue@dutyValue
  9917     0577  3001               	movlw	1
  9918     0578  00F1               	movwf	i1PWM3_LoadDutyValue@dutyValue+1
  9919     0579  3187  279A  3185   	fcall	i1_PWM3_LoadDutyValue
  9920                           
  9921                           ;main.c: 65:             } else{
  9922     057C  2D83               	goto	i1l2778
  9923     057D                     i1l2776:
  9924                           
  9925                           ;main.c: 66:                 PWM3_LoadDutyValue(0);
  9926     057D  3000               	movlw	0
  9927     057E  00F0               	movwf	i1PWM3_LoadDutyValue@dutyValue
  9928     057F  00F1               	movwf	i1PWM3_LoadDutyValue@dutyValue+1
  9929     0580  3187  279A  3185   	fcall	i1_PWM3_LoadDutyValue
  9930     0583                     i1l2778:
  9931     0583  0022               	movlb	2	; select bank2
  9932     0584  138C               	bcf	12,7	;volatile
  9933     0585                     i1l2780:
  9934                           
  9935                           ;main.c: 70:             if(currentFloor != 1){
  9936     0585  0021               	movlb	1	; select bank1
  9937     0586  0346               	decf	_currentFloor^(0+128),w
  9938     0587  1903               	btfsc	3,2
  9939     0588  2D8A               	goto	u149_21
  9940     0589  2D8B               	goto	u149_20
  9941     058A                     u149_21:
  9942     058A  2D93               	goto	i1l2784
  9943     058B                     u149_20:
  9944     058B                     i1l2782:
  9945                           
  9946                           ;main.c: 71:                 PWM3_LoadDutyValue(409);
  9947     058B  3099               	movlw	153
  9948     058C  00F0               	movwf	i1PWM3_LoadDutyValue@dutyValue
  9949     058D  3001               	movlw	1
  9950     058E  00F1               	movwf	i1PWM3_LoadDutyValue@dutyValue+1
  9951     058F  3187  279A  3185   	fcall	i1_PWM3_LoadDutyValue
  9952                           
  9953                           ;main.c: 72:             } else{
  9954     0592  2DAE               	goto	i1l817
  9955     0593                     i1l2784:
  9956                           
  9957                           ;main.c: 73:                 PWM3_LoadDutyValue(0);
  9958     0593  3000               	movlw	0
  9959     0594  00F0               	movwf	i1PWM3_LoadDutyValue@dutyValue
  9960     0595  00F1               	movwf	i1PWM3_LoadDutyValue@dutyValue+1
  9961     0596  3187  279A  3185   	fcall	i1_PWM3_LoadDutyValue
  9962     0599  2DAE               	goto	i1l817
  9963     059A                     i1l2786:
  9964     059A  0021               	movlb	1	; select bank1
  9965     059B  083C               	movf	_motorState^(0+128),w
  9966     059C  00F4               	movwf	??i1_controlMotor
  9967     059D  01F5               	clrf	??i1_controlMotor+1
  9968                           
  9969                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9970                           ; Switch size 1, requested type "simple"
  9971                           ; Number of cases is 1, Range of values is 0 to 0
  9972                           ; switch strategies available:
  9973                           ; Name         Instructions Cycles
  9974                           ; simple_byte            4     3 (average)
  9975                           ; direct_byte            8     6 (fixed)
  9976                           ; jumptable            260     6 (fixed)
  9977                           ;	Chosen strategy is simple_byte
  9978     059E  0875               	movf	??i1_controlMotor+1,w
  9979     059F  3A00               	xorlw	0	; case 0
  9980     05A0  1903               	skipnz
  9981     05A1  2DA3               	goto	i1l3748
  9982     05A2  2DAE               	goto	i1l817
  9983     05A3                     i1l3748:
  9984                           
  9985                           ; Switch size 1, requested type "simple"
  9986                           ; Number of cases is 3, Range of values is 0 to 2
  9987                           ; switch strategies available:
  9988                           ; Name         Instructions Cycles
  9989                           ; simple_byte           10     6 (average)
  9990                           ; direct_byte           12     6 (fixed)
  9991                           ; jumptable            260     6 (fixed)
  9992                           ;	Chosen strategy is simple_byte
  9993     05A3  0874               	movf	??i1_controlMotor,w
  9994     05A4  3A00               	xorlw	0	; case 0
  9995     05A5  1903               	skipnz
  9996     05A6  2D66               	goto	i1l2768
  9997     05A7  3A01               	xorlw	1	; case 1
  9998     05A8  1903               	skipnz
  9999     05A9  2D6C               	goto	i1l2770
 10000     05AA  3A03               	xorlw	3	; case 2
 10001     05AB  1903               	skipnz
 10002     05AC  2D83               	goto	i1l2778
 10003     05AD  2DAE               	goto	i1l817
 10004     05AE                     i1l817:
 10005     05AE  0008               	return
 10006     05AF                     __end_ofi1_controlMotor:
 10007                           
 10008                           	psect	text74
 10009     079A                     __ptext74:	
 10010 ;; *************** function i1_PWM3_LoadDutyValue *****************
 10011 ;; Defined at:
 10012 ;;		line 82 in file "mcc_generated_files/pwm3.c"
 10013 ;; Parameters:    Size  Location     Type
 10014 ;;  dutyValue       2    0[COMMON] unsigned short 
 10015 ;; Auto vars:     Size  Location     Type
 10016 ;;		None
 10017 ;; Return value:  Size  Location     Type
 10018 ;;                  1    wreg      void 
 10019 ;; Registers used:
 10020 ;;		wreg, status,2, status,0
 10021 ;; Tracked objects:
 10022 ;;		On entry : 0/0
 10023 ;;		On exit  : 0/0
 10024 ;;		Unchanged: 0/0
 10025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10026 ;;      Params:         2       0       0       0       0       0
 10027 ;;      Locals:         0       0       0       0       0       0
 10028 ;;      Temps:          2       0       0       0       0       0
 10029 ;;      Totals:         4       0       0       0       0       0
 10030 ;;Total ram usage:        4 bytes
 10031 ;; Hardware stack levels used: 1
 10032 ;; This function calls:
 10033 ;;		Nothing
 10034 ;; This function is called by:
 10035 ;;		i1_controlMotor
 10036 ;; This function uses a non-reentrant model
 10037 ;;
 10038                           
 10039     079A                     i1_PWM3_LoadDutyValue:	
 10040                           ;psect for function i1_PWM3_LoadDutyValue
 10041                           
 10042     079A                     i1l2762:	
 10043                           ;incstack = 0
 10044                           ; Regs used in i1_PWM3_LoadDutyValue: [wreg+status,2+status,0]
 10045                           
 10046                           
 10047                           ;mcc_generated_files/pwm3.c: 82: void PWM3_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm3.c: 83: {;mcc_generated_files/pwm3.c: 85:     CCPR3L = ((dutyValue & 0x03FC
      +                          )>>2);
 10048     079A  0871               	movf	i1PWM3_LoadDutyValue@dutyValue+1,w
 10049     079B  00F3               	movwf	??i1_PWM3_LoadDutyValue+1
 10050     079C  0870               	movf	i1PWM3_LoadDutyValue@dutyValue,w
 10051     079D  00F2               	movwf	??i1_PWM3_LoadDutyValue
 10052     079E  36F3               	lsrf	??i1_PWM3_LoadDutyValue+1,f
 10053     079F  0CF2               	rrf	??i1_PWM3_LoadDutyValue,f
 10054     07A0  36F3               	lsrf	??i1_PWM3_LoadDutyValue+1,f
 10055     07A1  0CF2               	rrf	??i1_PWM3_LoadDutyValue,f
 10056     07A2  0872               	movf	??i1_PWM3_LoadDutyValue,w
 10057     07A3  0026               	movlb	6	; select bank6
 10058     07A4  0091               	movwf	17	;volatile
 10059                           
 10060                           ;mcc_generated_files/pwm3.c: 88:     CCP3CON = ((uint8_t)(CCP3CON & 0xCF) | ((dutyValue 
      +                          & 0x0003)<<4));
 10061     07A5  0870               	movf	i1PWM3_LoadDutyValue@dutyValue,w
 10062     07A6  3903               	andlw	3
 10063     07A7  00F2               	movwf	??i1_PWM3_LoadDutyValue
 10064     07A8  3004               	movlw	4
 10065     07A9                     u147_25:
 10066     07A9  35F2               	lslf	??i1_PWM3_LoadDutyValue,f
 10067     07AA  0B89               	decfsz	9,f
 10068     07AB  2FA9               	goto	u147_25
 10069     07AC  0813               	movf	19,w	;volatile
 10070     07AD  39CF               	andlw	207
 10071     07AE  0472               	iorwf	??i1_PWM3_LoadDutyValue,w
 10072     07AF  0093               	movwf	19	;volatile
 10073     07B0                     i1l75:
 10074     07B0  0008               	return
 10075     07B1                     __end_ofi1_PWM3_LoadDutyValue:
 10076                           
 10077                           	psect	text75
 10078     0E35                     __ptext75:	
 10079 ;; *************** function i1_TMR4_StartTimer *****************
 10080 ;; Defined at:
 10081 ;;		line 87 in file "mcc_generated_files/tmr4.c"
 10082 ;; Parameters:    Size  Location     Type
 10083 ;;		None
 10084 ;; Auto vars:     Size  Location     Type
 10085 ;;		None
 10086 ;; Return value:  Size  Location     Type
 10087 ;;                  1    wreg      void 
 10088 ;; Registers used:
 10089 ;;		None
 10090 ;; Tracked objects:
 10091 ;;		On entry : 0/0
 10092 ;;		On exit  : 0/0
 10093 ;;		Unchanged: 0/0
 10094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10095 ;;      Params:         0       0       0       0       0       0
 10096 ;;      Locals:         0       0       0       0       0       0
 10097 ;;      Temps:          0       0       0       0       0       0
 10098 ;;      Totals:         0       0       0       0       0       0
 10099 ;;Total ram usage:        0 bytes
 10100 ;; Hardware stack levels used: 1
 10101 ;; This function calls:
 10102 ;;		Nothing
 10103 ;; This function is called by:
 10104 ;;		i1_updateMotor
 10105 ;; This function uses a non-reentrant model
 10106 ;;
 10107                           
 10108     0E35                     i1_TMR4_StartTimer:	
 10109                           ;psect for function i1_TMR4_StartTimer
 10110                           
 10111     0E35                     i1l2764:	
 10112                           ;incstack = 0
 10113                           ; Regs used in i1_TMR4_StartTimer: []
 10114                           
 10115                           
 10116                           ;mcc_generated_files/tmr4.c: 90:     T4CONbits.TMR4ON = 1;
 10117     0E35  0028               	movlb	8	; select bank8
 10118     0E36  1517               	bsf	23,2	;volatile
 10119     0E37                     i1l676:
 10120     0E37  0008               	return
 10121     0E38                     __end_ofi1_TMR4_StartTimer:
 10122                           
 10123                           	psect	text76
 10124     0E32                     __ptext76:	
 10125 ;; *************** function _TMR6_StartTimer *****************
 10126 ;; Defined at:
 10127 ;;		line 87 in file "mcc_generated_files/tmr6.c"
 10128 ;; Parameters:    Size  Location     Type
 10129 ;;		None
 10130 ;; Auto vars:     Size  Location     Type
 10131 ;;		None
 10132 ;; Return value:  Size  Location     Type
 10133 ;;                  1    wreg      void 
 10134 ;; Registers used:
 10135 ;;		None
 10136 ;; Tracked objects:
 10137 ;;		On entry : 0/0
 10138 ;;		On exit  : 0/0
 10139 ;;		Unchanged: 0/0
 10140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10141 ;;      Params:         0       0       0       0       0       0
 10142 ;;      Locals:         0       0       0       0       0       0
 10143 ;;      Temps:          0       0       0       0       0       0
 10144 ;;      Totals:         0       0       0       0       0       0
 10145 ;;Total ram usage:        0 bytes
 10146 ;; Hardware stack levels used: 1
 10147 ;; This function calls:
 10148 ;;		Nothing
 10149 ;; This function is called by:
 10150 ;;		_S1_Interrupt
 10151 ;;		_S2_Interrupt
 10152 ;;		_S3_Interrupt
 10153 ;;		_S4_Interrupt
 10154 ;; This function uses a non-reentrant model
 10155 ;;
 10156                           
 10157     0E32                     _TMR6_StartTimer:	
 10158                           ;psect for function _TMR6_StartTimer
 10159                           
 10160     0E32                     i1l2794:	
 10161                           ;incstack = 0
 10162                           ; Regs used in _TMR6_StartTimer: []
 10163                           
 10164                           
 10165                           ;mcc_generated_files/tmr6.c: 90:     T6CONbits.TMR6ON = 1;
 10166     0E32  0028               	movlb	8	; select bank8
 10167     0E33  151E               	bsf	30,2	;volatile
 10168     0E34                     i1l622:
 10169     0E34  0008               	return
 10170     0E35                     __end_of_TMR6_StartTimer:
 10171                           
 10172                           	psect	text77
 10173     0FEC                     __ptext77:	
 10174 ;; *************** function _CCP4_CaptureISR *****************
 10175 ;; Defined at:
 10176 ;;		line 89 in file "mcc_generated_files/ccp4.c"
 10177 ;; Parameters:    Size  Location     Type
 10178 ;;		None
 10179 ;; Auto vars:     Size  Location     Type
 10180 ;;  module          2   43[BANK0 ] struct CCPR4Reg_tag
 10181 ;; Return value:  Size  Location     Type
 10182 ;;                  1    wreg      void 
 10183 ;; Registers used:
 10184 ;;		wreg, status,2, status,0, pclath, cstack
 10185 ;; Tracked objects:
 10186 ;;		On entry : 0/0
 10187 ;;		On exit  : 0/0
 10188 ;;		Unchanged: 0/0
 10189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10190 ;;      Params:         0       0       0       0       0       0
 10191 ;;      Locals:         0       2       0       0       0       0
 10192 ;;      Temps:          0       0       0       0       0       0
 10193 ;;      Totals:         0       2       0       0       0       0
 10194 ;;Total ram usage:        2 bytes
 10195 ;; Hardware stack levels used: 1
 10196 ;; Hardware stack levels required when called: 2
 10197 ;; This function calls:
 10198 ;;		Absolute function
 10199 ;;		_CCP4_DefaultCallBack
 10200 ;;		_CCP4_Interrupt
 10201 ;; This function is called by:
 10202 ;;		_INTERRUPT_InterruptManager
 10203 ;; This function uses a non-reentrant model
 10204 ;;
 10205                           
 10206     0FEC                     _CCP4_CaptureISR:	
 10207                           ;psect for function _CCP4_CaptureISR
 10208                           
 10209     0FEC                     i1l3518:	
 10210                           ;incstack = 0
 10211                           ; Regs used in _CCP4_CaptureISR: [wreg+status,2+status,0+pclath+cstack]
 10212                           
 10213                           
 10214                           ;mcc_generated_files/ccp4.c: 91:     CCP4_PERIOD_REG_T module;;mcc_generated_files/ccp4.
      +                          c: 94:     PIR3bits.CCP4IF = 0;
 10215     0FEC  0020               	movlb	0	; select bank0
 10216     0FED  1293               	bcf	19,5	;volatile
 10217     0FEE                     i1l3520:
 10218                           
 10219                           ;mcc_generated_files/ccp4.c: 97:     module.ccpr4l = CCPR4L;
 10220     0FEE  0026               	movlb	6	; select bank6
 10221     0FEF  0818               	movf	24,w	;volatile
 10222     0FF0  0020               	movlb	0	; select bank0
 10223     0FF1  00CB               	movwf	CCP4_CaptureISR@module
 10224                           
 10225                           ;mcc_generated_files/ccp4.c: 98:     module.ccpr4h = CCPR4H;
 10226     0FF2  0026               	movlb	6	; select bank6
 10227     0FF3  0819               	movf	25,w	;volatile
 10228     0FF4  0020               	movlb	0	; select bank0
 10229     0FF5  00CC               	movwf	CCP4_CaptureISR@module+1
 10230     0FF6                     i1l3522:
 10231                           
 10232                           ;mcc_generated_files/ccp4.c: 101:     CCP4_CallBack(module.ccpr4_16Bit);
 10233     0FF6  084C               	movf	CCP4_CaptureISR@module+1,w
 10234     0FF7  00C5               	movwf	CCP4_Interrupt@capturedValue+1
 10235     0FF8  084B               	movf	CCP4_CaptureISR@module,w
 10236     0FF9  00C4               	movwf	CCP4_Interrupt@capturedValue
 10237     0FFA  0862               	movf	_CCP4_CallBack+1,w
 10238     0FFB  008A               	movwf	10
 10239     0FFC  0861               	movf	_CCP4_CallBack,w
 10240     0FFD  000A               	callw
 10241     0FFE  318F               	pagesel	$
 10242     0FFF                     i1l305:
 10243     0FFF  0008               	return
 10244     1000                     __end_of_CCP4_CaptureISR:
 10245                           
 10246                           	psect	text78
 10247     0E2C                     __ptext78:	
 10248 ;; *************** function _CCP4_DefaultCallBack *****************
 10249 ;; Defined at:
 10250 ;;		line 60 in file "mcc_generated_files/ccp4.c"
 10251 ;; Parameters:    Size  Location     Type
 10252 ;;  capturedValu    2   36[BANK0 ] unsigned short 
 10253 ;; Auto vars:     Size  Location     Type
 10254 ;;		None
 10255 ;; Return value:  Size  Location     Type
 10256 ;;                  1    wreg      void 
 10257 ;; Registers used:
 10258 ;;		None
 10259 ;; Tracked objects:
 10260 ;;		On entry : 0/0
 10261 ;;		On exit  : 0/0
 10262 ;;		Unchanged: 0/0
 10263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10264 ;;      Params:         0       2       0       0       0       0
 10265 ;;      Locals:         0       0       0       0       0       0
 10266 ;;      Temps:          0       0       0       0       0       0
 10267 ;;      Totals:         0       2       0       0       0       0
 10268 ;;Total ram usage:        2 bytes
 10269 ;; Hardware stack levels used: 1
 10270 ;; This function calls:
 10271 ;;		Nothing
 10272 ;; This function is called by:
 10273 ;;		_CCP4_Initialize
 10274 ;;		_CCP4_CaptureISR
 10275 ;; This function uses a non-reentrant model
 10276 ;;
 10277                           
 10278     0E2C                     _CCP4_DefaultCallBack:	
 10279                           ;psect for function _CCP4_DefaultCallBack
 10280                           
 10281     0E2C                     i1l299:	
 10282                           ;incstack = 0
 10283                           ; Regs used in _CCP4_DefaultCallBack: []
 10284                           
 10285     0E2C  0008               	return
 10286     0E2D                     __end_of_CCP4_DefaultCallBack:
 10287                           
 10288                           	psect	text79
 10289     0465                     __ptext79:	
 10290 ;; *************** function _CCP4_Interrupt *****************
 10291 ;; Defined at:
 10292 ;;		line 148 in file "main.c"
 10293 ;; Parameters:    Size  Location     Type
 10294 ;;  capturedValu    2   36[BANK0 ] unsigned short 
 10295 ;; Auto vars:     Size  Location     Type
 10296 ;;		None
 10297 ;; Return value:  Size  Location     Type
 10298 ;;                  1    wreg      void 
 10299 ;; Registers used:
 10300 ;;		wreg, status,2, status,0, pclath, cstack
 10301 ;; Tracked objects:
 10302 ;;		On entry : 0/0
 10303 ;;		On exit  : 0/0
 10304 ;;		Unchanged: 0/0
 10305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10306 ;;      Params:         0       2       0       0       0       0
 10307 ;;      Locals:         0       4       0       0       0       0
 10308 ;;      Temps:          0       1       0       0       0       0
 10309 ;;      Totals:         0       7       0       0       0       0
 10310 ;;Total ram usage:        7 bytes
 10311 ;; Hardware stack levels used: 1
 10312 ;; Hardware stack levels required when called: 1
 10313 ;; This function calls:
 10314 ;;		___fldiv
 10315 ;;		___fltol
 10316 ;;		___xxtofl
 10317 ;; This function is called by:
 10318 ;;		_main
 10319 ;;		_CCP4_CaptureISR
 10320 ;; This function uses a non-reentrant model
 10321 ;;
 10322                           
 10323     0465                     _CCP4_Interrupt:	
 10324                           ;psect for function _CCP4_Interrupt
 10325                           
 10326     0465                     i1l3428:	
 10327                           ;incstack = 0
 10328                           ; Regs used in _CCP4_Interrupt: [wreg+status,2+status,0+pclath+cstack]
 10329                           
 10330                           
 10331                           ;main.c: 149:     if(motorState==1){
 10332     0465  0021               	movlb	1	; select bank1
 10333     0466  033C               	decf	_motorState^(0+128),w
 10334     0467  1D03               	btfss	3,2
 10335     0468  2C6A               	goto	u236_21
 10336     0469  2C6B               	goto	u236_20
 10337     046A                     u236_21:
 10338     046A  2C71               	goto	i1l3432
 10339     046B                     u236_20:
 10340     046B                     i1l3430:
 10341                           
 10342                           ;main.c: 150:         position++;
 10343     046B  3001               	movlw	1
 10344     046C  0020               	movlb	0	; select bank0
 10345     046D  00C6               	movwf	??_CCP4_Interrupt
 10346     046E  0846               	movf	??_CCP4_Interrupt,w
 10347     046F  07DC               	addwf	_position,f
 10348                           
 10349                           ;main.c: 151:     } else{
 10350     0470  2C74               	goto	i1l3434
 10351     0471                     i1l3432:
 10352                           
 10353                           ;main.c: 152:         position--;
 10354     0471  3001               	movlw	1
 10355     0472  0020               	movlb	0	; select bank0
 10356     0473  02DC               	subwf	_position,f
 10357     0474                     i1l3434:
 10358                           
 10359                           ;main.c: 154:     velocity = 83e7/(int)capturedValue/5;
 10360     0474  304E               	movlw	78
 10361     0475  00A7               	movwf	___fldiv@b+3
 10362     0476  3045               	movlw	69
 10363     0477  00A6               	movwf	___fldiv@b+2
 10364     0478  30E3               	movlw	227
 10365     0479  00A5               	movwf	___fldiv@b+1
 10366     047A  302E               	movlw	46
 10367     047B  00A4               	movwf	___fldiv@b
 10368     047C  0844               	movf	CCP4_Interrupt@capturedValue,w
 10369     047D  00F0               	movwf	___xxtofl@val
 10370     047E  0845               	movf	CCP4_Interrupt@capturedValue+1,w
 10371     047F  00F1               	movwf	___xxtofl@val+1
 10372     0480  0D89               	rlf	9,f
 10373     0481  3B89               	subwfb	9,f
 10374     0482  0989               	comf	9,f
 10375     0483  00F2               	movwf	___xxtofl@val+2
 10376     0484  00F3               	movwf	___xxtofl@val+3
 10377     0485  3001               	movlw	1
 10378     0486  3182  2233  3184   	fcall	___xxtofl
 10379     0489  0873               	movf	?___xxtofl+3,w
 10380     048A  0020               	movlb	0	; select bank0
 10381     048B  00A3               	movwf	___fldiv@a+3
 10382     048C  0872               	movf	?___xxtofl+2,w
 10383     048D  00A2               	movwf	___fldiv@a+2
 10384     048E  0871               	movf	?___xxtofl+1,w
 10385     048F  00A1               	movwf	___fldiv@a+1
 10386     0490  0870               	movf	?___xxtofl,w
 10387     0491  00A0               	movwf	___fldiv@a
 10388     0492  3180  2089  3184   	fcall	___fldiv
 10389     0495  0020               	movlb	0	; select bank0
 10390     0496  0823               	movf	?___fldiv+3,w
 10391     0497  00CA               	movwf	_CCP4_Interrupt$2521+3
 10392     0498  0822               	movf	?___fldiv+2,w
 10393     0499  00C9               	movwf	_CCP4_Interrupt$2521+2
 10394     049A  0821               	movf	?___fldiv+1,w
 10395     049B  00C8               	movwf	_CCP4_Interrupt$2521+1
 10396     049C  0820               	movf	?___fldiv,w
 10397     049D  00C7               	movwf	_CCP4_Interrupt$2521
 10398     049E                     i1l3436:
 10399                           
 10400                           ;main.c: 154:     velocity = 83e7/(int)capturedValue/5;
 10401     049E  084A               	movf	_CCP4_Interrupt$2521+3,w
 10402     049F  00A7               	movwf	___fldiv@b+3
 10403     04A0  0849               	movf	_CCP4_Interrupt$2521+2,w
 10404     04A1  00A6               	movwf	___fldiv@b+2
 10405     04A2  0848               	movf	_CCP4_Interrupt$2521+1,w
 10406     04A3  00A5               	movwf	___fldiv@b+1
 10407     04A4  0847               	movf	_CCP4_Interrupt$2521,w
 10408     04A5  00A4               	movwf	___fldiv@b
 10409     04A6  3040               	movlw	64
 10410     04A7  00A3               	movwf	___fldiv@a+3
 10411     04A8  30A0               	movlw	160
 10412     04A9  00A2               	movwf	___fldiv@a+2
 10413     04AA  3000               	movlw	0
 10414     04AB  00A1               	movwf	___fldiv@a+1
 10415     04AC  3000               	movlw	0
 10416     04AD  00A0               	movwf	___fldiv@a
 10417     04AE  3180  2089  3184   	fcall	___fldiv
 10418     04B1  0020               	movlb	0	; select bank0
 10419     04B2  0823               	movf	?___fldiv+3,w
 10420     04B3  00BD               	movwf	___fltol@f1+3
 10421     04B4  0822               	movf	?___fldiv+2,w
 10422     04B5  00BC               	movwf	___fltol@f1+2
 10423     04B6  0821               	movf	?___fldiv+1,w
 10424     04B7  00BB               	movwf	___fltol@f1+1
 10425     04B8  0820               	movf	?___fldiv,w
 10426     04B9  00BA               	movwf	___fltol@f1
 10427     04BA  3183  23F4  3184   	fcall	___fltol
 10428     04BD  0020               	movlb	0	; select bank0
 10429     04BE  083A               	movf	?___fltol,w
 10430     04BF  00DB               	movwf	_velocity
 10431     04C0                     i1l846:
 10432     04C0  0008               	return
 10433     04C1                     __end_of_CCP4_Interrupt:
 10434                           
 10435                           	psect	text80
 10436     0233                     __ptext80:	
 10437 ;; *************** function ___xxtofl *****************
 10438 ;; Defined at:
 10439 ;;		line 10 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
 10440 ;; Parameters:    Size  Location     Type
 10441 ;;  sign            1    wreg     unsigned char 
 10442 ;;  val             4    0[COMMON] long 
 10443 ;; Auto vars:     Size  Location     Type
 10444 ;;  sign            1    8[COMMON] unsigned char 
 10445 ;;  arg             4   10[COMMON] unsigned long 
 10446 ;;  exp             1    9[COMMON] unsigned char 
 10447 ;; Return value:  Size  Location     Type
 10448 ;;                  4    0[COMMON] unsigned char 
 10449 ;; Registers used:
 10450 ;;		wreg, status,2, status,0
 10451 ;; Tracked objects:
 10452 ;;		On entry : 0/0
 10453 ;;		On exit  : 0/0
 10454 ;;		Unchanged: 0/0
 10455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10456 ;;      Params:         4       0       0       0       0       0
 10457 ;;      Locals:         6       0       0       0       0       0
 10458 ;;      Temps:          4       0       0       0       0       0
 10459 ;;      Totals:        14       0       0       0       0       0
 10460 ;;Total ram usage:       14 bytes
 10461 ;; Hardware stack levels used: 1
 10462 ;; This function calls:
 10463 ;;		Nothing
 10464 ;; This function is called by:
 10465 ;;		_CCP4_Interrupt
 10466 ;; This function uses a non-reentrant model
 10467 ;;
 10468                           
 10469     0233                     ___xxtofl:	
 10470                           ;psect for function ___xxtofl
 10471                           
 10472                           
 10473                           ;incstack = 0
 10474                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 10475                           ;___xxtofl@sign stored from wreg
 10476     0233  00F8               	movwf	___xxtofl@sign
 10477     0234                     i1l3124:
 10478     0234  0878               	movf	___xxtofl@sign,w
 10479     0235  1903               	btfsc	3,2
 10480     0236  2A38               	goto	u210_21
 10481     0237  2A39               	goto	u210_20
 10482     0238                     u210_21:
 10483     0238  2A4D               	goto	i1l3130
 10484     0239                     u210_20:
 10485     0239                     i1l3126:
 10486     0239  1FF3               	btfss	___xxtofl@val+3,7
 10487     023A  2A3C               	goto	u211_21
 10488     023B  2A3D               	goto	u211_20
 10489     023C                     u211_21:
 10490     023C  2A4D               	goto	i1l3130
 10491     023D                     u211_20:
 10492     023D                     i1l3128:
 10493     023D  0970               	comf	___xxtofl@val,w
 10494     023E  00FA               	movwf	___xxtofl@arg
 10495     023F  0971               	comf	___xxtofl@val+1,w
 10496     0240  00FB               	movwf	___xxtofl@arg+1
 10497     0241  0972               	comf	___xxtofl@val+2,w
 10498     0242  00FC               	movwf	___xxtofl@arg+2
 10499     0243  0973               	comf	___xxtofl@val+3,w
 10500     0244  00FD               	movwf	___xxtofl@arg+3
 10501     0245  0AFA               	incf	___xxtofl@arg,f
 10502     0246  1903               	skipnz
 10503     0247  0AFB               	incf	___xxtofl@arg+1,f
 10504     0248  1903               	skipnz
 10505     0249  0AFC               	incf	___xxtofl@arg+2,f
 10506     024A  1903               	skipnz
 10507     024B  0AFD               	incf	___xxtofl@arg+3,f
 10508     024C  2A55               	goto	i1l1505
 10509     024D                     i1l3130:
 10510     024D  0873               	movf	___xxtofl@val+3,w
 10511     024E  00FD               	movwf	___xxtofl@arg+3
 10512     024F  0872               	movf	___xxtofl@val+2,w
 10513     0250  00FC               	movwf	___xxtofl@arg+2
 10514     0251  0871               	movf	___xxtofl@val+1,w
 10515     0252  00FB               	movwf	___xxtofl@arg+1
 10516     0253  0870               	movf	___xxtofl@val,w
 10517     0254  00FA               	movwf	___xxtofl@arg
 10518     0255                     i1l1505:
 10519     0255  0873               	movf	___xxtofl@val+3,w
 10520     0256  0472               	iorwf	___xxtofl@val+2,w
 10521     0257  0471               	iorwf	___xxtofl@val+1,w
 10522     0258  0470               	iorwf	___xxtofl@val,w
 10523     0259  1D03               	skipz
 10524     025A  2A5C               	goto	u212_21
 10525     025B  2A5D               	goto	u212_20
 10526     025C                     u212_21:
 10527     025C  2A66               	goto	i1l3136
 10528     025D                     u212_20:
 10529     025D                     i1l3132:
 10530     025D  3000               	movlw	0
 10531     025E  00F3               	movwf	?___xxtofl+3
 10532     025F  3000               	movlw	0
 10533     0260  00F2               	movwf	?___xxtofl+2
 10534     0261  3000               	movlw	0
 10535     0262  00F1               	movwf	?___xxtofl+1
 10536     0263  3000               	movlw	0
 10537     0264  00F0               	movwf	?___xxtofl
 10538     0265  2ADC               	goto	i1l1507
 10539     0266                     i1l3136:
 10540     0266  3096               	movlw	150
 10541     0267  00F9               	movwf	___xxtofl@exp
 10542     0268  2A74               	goto	i1l3140
 10543     0269                     i1l3138:
 10544     0269  3001               	movlw	1
 10545     026A  00F4               	movwf	??___xxtofl
 10546     026B  0874               	movf	??___xxtofl,w
 10547     026C  07F9               	addwf	___xxtofl@exp,f
 10548     026D  3001               	movlw	1
 10549     026E                     u213_25:
 10550     026E  36FD               	lsrf	___xxtofl@arg+3,f
 10551     026F  0CFC               	rrf	___xxtofl@arg+2,f
 10552     0270  0CFB               	rrf	___xxtofl@arg+1,f
 10553     0271  0CFA               	rrf	___xxtofl@arg,f
 10554     0272  0B89               	decfsz	9,f
 10555     0273  2A6E               	goto	u213_25
 10556     0274                     i1l3140:
 10557     0274  30FE               	movlw	254
 10558     0275  057D               	andwf	___xxtofl@arg+3,w
 10559     0276  1D03               	btfss	3,2
 10560     0277  2A79               	goto	u214_21
 10561     0278  2A7A               	goto	u214_20
 10562     0279                     u214_21:
 10563     0279  2A69               	goto	i1l3138
 10564     027A                     u214_20:
 10565     027A  2A8E               	goto	i1l1511
 10566     027B                     i1l3142:
 10567     027B  3001               	movlw	1
 10568     027C  00F4               	movwf	??___xxtofl
 10569     027D  0874               	movf	??___xxtofl,w
 10570     027E  07F9               	addwf	___xxtofl@exp,f
 10571     027F                     i1l3144:
 10572     027F  3001               	movlw	1
 10573     0280  07FA               	addwf	___xxtofl@arg,f
 10574     0281  3000               	movlw	0
 10575     0282  3DFB               	addwfc	___xxtofl@arg+1,f
 10576     0283  3000               	movlw	0
 10577     0284  3DFC               	addwfc	___xxtofl@arg+2,f
 10578     0285  3000               	movlw	0
 10579     0286  3DFD               	addwfc	___xxtofl@arg+3,f
 10580     0287                     i1l3146:
 10581     0287  3001               	movlw	1
 10582     0288                     u215_25:
 10583     0288  36FD               	lsrf	___xxtofl@arg+3,f
 10584     0289  0CFC               	rrf	___xxtofl@arg+2,f
 10585     028A  0CFB               	rrf	___xxtofl@arg+1,f
 10586     028B  0CFA               	rrf	___xxtofl@arg,f
 10587     028C  0B89               	decfsz	9,f
 10588     028D  2A88               	goto	u215_25
 10589     028E                     i1l1511:
 10590     028E  30FF               	movlw	255
 10591     028F  057D               	andwf	___xxtofl@arg+3,w
 10592     0290  1D03               	btfss	3,2
 10593     0291  2A93               	goto	u216_21
 10594     0292  2A94               	goto	u216_20
 10595     0293                     u216_21:
 10596     0293  2A7B               	goto	i1l3142
 10597     0294                     u216_20:
 10598     0294  2A9E               	goto	i1l3150
 10599     0295                     i1l3148:
 10600     0295  3001               	movlw	1
 10601     0296  02F9               	subwf	___xxtofl@exp,f
 10602     0297  3001               	movlw	1
 10603     0298                     u217_25:
 10604     0298  35FA               	lslf	___xxtofl@arg,f
 10605     0299  0DFB               	rlf	___xxtofl@arg+1,f
 10606     029A  0DFC               	rlf	___xxtofl@arg+2,f
 10607     029B  0DFD               	rlf	___xxtofl@arg+3,f
 10608     029C  0B89               	decfsz	9,f
 10609     029D  2A98               	goto	u217_25
 10610     029E                     i1l3150:
 10611     029E  1BFC               	btfsc	___xxtofl@arg+2,7
 10612     029F  2AA1               	goto	u218_21
 10613     02A0  2AA2               	goto	u218_20
 10614     02A1                     u218_21:
 10615     02A1  2AA8               	goto	i1l1518
 10616     02A2                     u218_20:
 10617     02A2                     i1l3152:
 10618     02A2  3002               	movlw	2
 10619     02A3  0279               	subwf	___xxtofl@exp,w
 10620     02A4  1803               	skipnc
 10621     02A5  2AA7               	goto	u219_21
 10622     02A6  2AA8               	goto	u219_20
 10623     02A7                     u219_21:
 10624     02A7  2A95               	goto	i1l3148
 10625     02A8                     u219_20:
 10626     02A8                     i1l1518:
 10627     02A8  1879               	btfsc	___xxtofl@exp,0
 10628     02A9  2AAB               	goto	u220_21
 10629     02AA  2AAC               	goto	u220_20
 10630     02AB                     u220_21:
 10631     02AB  2AB4               	goto	i1l1519
 10632     02AC                     u220_20:
 10633     02AC                     i1l3154:
 10634     02AC  30FF               	movlw	255
 10635     02AD  05FA               	andwf	___xxtofl@arg,f
 10636     02AE  30FF               	movlw	255
 10637     02AF  05FB               	andwf	___xxtofl@arg+1,f
 10638     02B0  307F               	movlw	127
 10639     02B1  05FC               	andwf	___xxtofl@arg+2,f
 10640     02B2  30FF               	movlw	255
 10641     02B3  05FD               	andwf	___xxtofl@arg+3,f
 10642     02B4                     i1l1519:
 10643     02B4  1003               	clrc
 10644     02B5  0CF9               	rrf	___xxtofl@exp,f
 10645     02B6                     i1l3156:
 10646     02B6  0879               	movf	___xxtofl@exp,w
 10647     02B7  00F4               	movwf	??___xxtofl
 10648     02B8  01F5               	clrf	??___xxtofl+1
 10649     02B9  01F6               	clrf	??___xxtofl+2
 10650     02BA  01F7               	clrf	??___xxtofl+3
 10651     02BB  3018               	movlw	24
 10652     02BC                     u221_25:
 10653     02BC  35F4               	lslf	??___xxtofl,f
 10654     02BD  0DF5               	rlf	??___xxtofl+1,f
 10655     02BE  0DF6               	rlf	??___xxtofl+2,f
 10656     02BF  0DF7               	rlf	??___xxtofl+3,f
 10657     02C0                     u221_20:
 10658     02C0  0B89               	decfsz	9,f
 10659     02C1  2ABC               	goto	u221_25
 10660     02C2  0874               	movf	??___xxtofl,w
 10661     02C3  04FA               	iorwf	___xxtofl@arg,f
 10662     02C4  0875               	movf	??___xxtofl+1,w
 10663     02C5  04FB               	iorwf	___xxtofl@arg+1,f
 10664     02C6  0876               	movf	??___xxtofl+2,w
 10665     02C7  04FC               	iorwf	___xxtofl@arg+2,f
 10666     02C8  0877               	movf	??___xxtofl+3,w
 10667     02C9  04FD               	iorwf	___xxtofl@arg+3,f
 10668     02CA                     i1l3158:
 10669     02CA  0878               	movf	___xxtofl@sign,w
 10670     02CB  1903               	btfsc	3,2
 10671     02CC  2ACE               	goto	u222_21
 10672     02CD  2ACF               	goto	u222_20
 10673     02CE                     u222_21:
 10674     02CE  2AD4               	goto	i1l3164
 10675     02CF                     u222_20:
 10676     02CF                     i1l3160:
 10677     02CF  1FF3               	btfss	___xxtofl@val+3,7
 10678     02D0  2AD2               	goto	u223_21
 10679     02D1  2AD3               	goto	u223_20
 10680     02D2                     u223_21:
 10681     02D2  2AD4               	goto	i1l3164
 10682     02D3                     u223_20:
 10683     02D3                     i1l3162:
 10684     02D3  17FD               	bsf	___xxtofl@arg+3,7
 10685     02D4                     i1l3164:
 10686     02D4  087D               	movf	___xxtofl@arg+3,w
 10687     02D5  00F3               	movwf	?___xxtofl+3
 10688     02D6  087C               	movf	___xxtofl@arg+2,w
 10689     02D7  00F2               	movwf	?___xxtofl+2
 10690     02D8  087B               	movf	___xxtofl@arg+1,w
 10691     02D9  00F1               	movwf	?___xxtofl+1
 10692     02DA  087A               	movf	___xxtofl@arg,w
 10693     02DB  00F0               	movwf	?___xxtofl
 10694     02DC                     i1l1507:
 10695     02DC  0008               	return
 10696     02DD                     __end_of___xxtofl:
 10697                           
 10698                           	psect	text81
 10699     03F4                     __ptext81:	
 10700 ;; *************** function ___fltol *****************
 10701 ;; Defined at:
 10702 ;;		line 43 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
 10703 ;; Parameters:    Size  Location     Type
 10704 ;;  f1              4   26[BANK0 ] unsigned char 
 10705 ;; Auto vars:     Size  Location     Type
 10706 ;;  exp1            1   35[BANK0 ] unsigned char 
 10707 ;;  sign1           1   34[BANK0 ] unsigned char 
 10708 ;; Return value:  Size  Location     Type
 10709 ;;                  4   26[BANK0 ] long 
 10710 ;; Registers used:
 10711 ;;		wreg, status,2, status,0
 10712 ;; Tracked objects:
 10713 ;;		On entry : 0/0
 10714 ;;		On exit  : 0/0
 10715 ;;		Unchanged: 0/0
 10716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10717 ;;      Params:         0       4       0       0       0       0
 10718 ;;      Locals:         0       2       0       0       0       0
 10719 ;;      Temps:          0       4       0       0       0       0
 10720 ;;      Totals:         0      10       0       0       0       0
 10721 ;;Total ram usage:       10 bytes
 10722 ;; Hardware stack levels used: 1
 10723 ;; This function calls:
 10724 ;;		Nothing
 10725 ;; This function is called by:
 10726 ;;		_CCP4_Interrupt
 10727 ;; This function uses a non-reentrant model
 10728 ;;
 10729                           
 10730     03F4                     ___fltol:	
 10731                           ;psect for function ___fltol
 10732                           
 10733     03F4                     i1l2948:	
 10734                           ;incstack = 0
 10735                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 10736                           
 10737     03F4  1003               	clrc
 10738     03F5  0020               	movlb	0	; select bank0
 10739     03F6  0D3C               	rlf	___fltol@f1+2,w
 10740     03F7  0D3D               	rlf	___fltol@f1+3,w
 10741     03F8  00C3               	movwf	___fltol@exp1
 10742     03F9  0843               	movf	___fltol@exp1,w
 10743     03FA  1D03               	btfss	3,2
 10744     03FB  2BFD               	goto	u171_21
 10745     03FC  2BFE               	goto	u171_20
 10746     03FD                     u171_21:
 10747     03FD  2C07               	goto	i1l2954
 10748     03FE                     u171_20:
 10749     03FE                     i1l2950:
 10750     03FE  3000               	movlw	0
 10751     03FF  00BD               	movwf	?___fltol+3
 10752     0400  3000               	movlw	0
 10753     0401  00BC               	movwf	?___fltol+2
 10754     0402  3000               	movlw	0
 10755     0403  00BB               	movwf	?___fltol+1
 10756     0404  3000               	movlw	0
 10757     0405  00BA               	movwf	?___fltol
 10758     0406  2C64               	goto	i1l1258
 10759     0407                     i1l2954:
 10760     0407  083A               	movf	___fltol@f1,w
 10761     0408  00BE               	movwf	??___fltol
 10762     0409  083B               	movf	___fltol@f1+1,w
 10763     040A  00BF               	movwf	??___fltol+1
 10764     040B  083C               	movf	___fltol@f1+2,w
 10765     040C  00C0               	movwf	??___fltol+2
 10766     040D  083D               	movf	___fltol@f1+3,w
 10767     040E  00C1               	movwf	??___fltol+3
 10768     040F  301F               	movlw	31
 10769     0410                     u172_25:
 10770     0410  36C1               	lsrf	??___fltol+3,f
 10771     0411  0CC0               	rrf	??___fltol+2,f
 10772     0412  0CBF               	rrf	??___fltol+1,f
 10773     0413  0CBE               	rrf	??___fltol,f
 10774     0414                     u172_20:
 10775     0414  0B89               	decfsz	9,f
 10776     0415  2C10               	goto	u172_25
 10777     0416  083E               	movf	??___fltol,w
 10778     0417  00C2               	movwf	___fltol@sign1
 10779     0418                     i1l2956:
 10780     0418  17BC               	bsf	___fltol@f1+2,7
 10781     0419                     i1l2958:
 10782     0419  30FF               	movlw	255
 10783     041A  05BA               	andwf	___fltol@f1,f
 10784     041B  30FF               	movlw	255
 10785     041C  05BB               	andwf	___fltol@f1+1,f
 10786     041D  30FF               	movlw	255
 10787     041E  05BC               	andwf	___fltol@f1+2,f
 10788     041F  3000               	movlw	0
 10789     0420  05BD               	andwf	___fltol@f1+3,f
 10790     0421                     i1l2960:
 10791     0421  3096               	movlw	150
 10792     0422  02C3               	subwf	___fltol@exp1,f
 10793     0423                     i1l2962:
 10794     0423  1FC3               	btfss	___fltol@exp1,7
 10795     0424  2C26               	goto	u173_21
 10796     0425  2C27               	goto	u173_20
 10797     0426                     u173_21:
 10798     0426  2C3F               	goto	i1l2972
 10799     0427                     u173_20:
 10800     0427                     i1l2964:
 10801     0427  0843               	movf	___fltol@exp1,w
 10802     0428  3A80               	xorlw	128
 10803     0429  3E97               	addlw	151
 10804     042A  1803               	skipnc
 10805     042B  2C2D               	goto	u174_21
 10806     042C  2C2E               	goto	u174_20
 10807     042D                     u174_21:
 10808     042D  2C2F               	goto	i1l2970
 10809     042E                     u174_20:
 10810     042E  2BFE               	goto	i1l2950
 10811     042F                     i1l2970:
 10812     042F  3001               	movlw	1
 10813     0430                     u175_25:
 10814     0430  36BD               	lsrf	___fltol@f1+3,f
 10815     0431  0CBC               	rrf	___fltol@f1+2,f
 10816     0432  0CBB               	rrf	___fltol@f1+1,f
 10817     0433  0CBA               	rrf	___fltol@f1,f
 10818     0434  0B89               	decfsz	9,f
 10819     0435  2C30               	goto	u175_25
 10820     0436  3001               	movlw	1
 10821     0437  00BE               	movwf	??___fltol
 10822     0438  083E               	movf	??___fltol,w
 10823     0439  07C3               	addwf	___fltol@exp1,f
 10824     043A  1D03               	btfss	3,2
 10825     043B  2C3D               	goto	u176_21
 10826     043C  2C3E               	goto	u176_20
 10827     043D                     u176_21:
 10828     043D  2C2F               	goto	i1l2970
 10829     043E                     u176_20:
 10830     043E  2C54               	goto	i1l2980
 10831     043F                     i1l2972:
 10832     043F  3020               	movlw	32
 10833     0440  0243               	subwf	___fltol@exp1,w
 10834     0441  1C03               	skipc
 10835     0442  2C44               	goto	u177_21
 10836     0443  2C45               	goto	u177_20
 10837     0444                     u177_21:
 10838     0444  2C4F               	goto	i1l1265
 10839     0445                     u177_20:
 10840     0445  2BFE               	goto	i1l2950
 10841     0446                     i1l2978:
 10842     0446  3001               	movlw	1
 10843     0447                     u178_25:
 10844     0447  35BA               	lslf	___fltol@f1,f
 10845     0448  0DBB               	rlf	___fltol@f1+1,f
 10846     0449  0DBC               	rlf	___fltol@f1+2,f
 10847     044A  0DBD               	rlf	___fltol@f1+3,f
 10848     044B  0B89               	decfsz	9,f
 10849     044C  2C47               	goto	u178_25
 10850     044D  3001               	movlw	1
 10851     044E  02C3               	subwf	___fltol@exp1,f
 10852     044F                     i1l1265:
 10853     044F  0843               	movf	___fltol@exp1,w
 10854     0450  1D03               	btfss	3,2
 10855     0451  2C53               	goto	u179_21
 10856     0452  2C54               	goto	u179_20
 10857     0453                     u179_21:
 10858     0453  2C46               	goto	i1l2978
 10859     0454                     u179_20:
 10860     0454                     i1l2980:
 10861     0454  0842               	movf	___fltol@sign1,w
 10862     0455  1903               	btfsc	3,2
 10863     0456  2C58               	goto	u180_21
 10864     0457  2C59               	goto	u180_20
 10865     0458                     u180_21:
 10866     0458  2C64               	goto	i1l1268
 10867     0459                     u180_20:
 10868     0459                     i1l2982:
 10869     0459  09BA               	comf	___fltol@f1,f
 10870     045A  09BB               	comf	___fltol@f1+1,f
 10871     045B  09BC               	comf	___fltol@f1+2,f
 10872     045C  09BD               	comf	___fltol@f1+3,f
 10873     045D  0ABA               	incf	___fltol@f1,f
 10874     045E  1903               	skipnz
 10875     045F  0ABB               	incf	___fltol@f1+1,f
 10876     0460  1903               	skipnz
 10877     0461  0ABC               	incf	___fltol@f1+2,f
 10878     0462  1903               	skipnz
 10879     0463  0ABD               	incf	___fltol@f1+3,f
 10880     0464                     i1l1268:
 10881     0464                     i1l1258:
 10882     0464  0008               	return
 10883     0465                     __end_of___fltol:
 10884                           
 10885                           	psect	text82
 10886     0089                     __ptext82:	
 10887 ;; *************** function ___fldiv *****************
 10888 ;; Defined at:
 10889 ;;		line 8 in file "D:\ProgramData\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
 10890 ;; Parameters:    Size  Location     Type
 10891 ;;  a               4    0[BANK0 ] long 
 10892 ;;  b               4    4[BANK0 ] long 
 10893 ;; Auto vars:     Size  Location     Type
 10894 ;;  grs             4   20[BANK0 ] unsigned long 
 10895 ;;  rem             4   13[BANK0 ] unsigned long 
 10896 ;;  new_exp         2   18[BANK0 ] int 
 10897 ;;  aexp            1   25[BANK0 ] unsigned char 
 10898 ;;  bexp            1   24[BANK0 ] unsigned char 
 10899 ;;  sign            1   17[BANK0 ] unsigned char 
 10900 ;; Return value:  Size  Location     Type
 10901 ;;                  4    0[BANK0 ] unsigned char 
 10902 ;; Registers used:
 10903 ;;		wreg, status,2, status,0
 10904 ;; Tracked objects:
 10905 ;;		On entry : 0/0
 10906 ;;		On exit  : 0/0
 10907 ;;		Unchanged: 0/0
 10908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10909 ;;      Params:         0       8       0       0       0       0
 10910 ;;      Locals:         0      13       0       0       0       0
 10911 ;;      Temps:          0       5       0       0       0       0
 10912 ;;      Totals:         0      26       0       0       0       0
 10913 ;;Total ram usage:       26 bytes
 10914 ;; Hardware stack levels used: 1
 10915 ;; This function calls:
 10916 ;;		Nothing
 10917 ;; This function is called by:
 10918 ;;		_CCP4_Interrupt
 10919 ;; This function uses a non-reentrant model
 10920 ;;
 10921                           
 10922     0089                     ___fldiv:	
 10923                           ;psect for function ___fldiv
 10924                           
 10925     0089                     i1l2984:	
 10926                           ;incstack = 0
 10927                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 10928                           
 10929     0089  0020               	movlb	0	; select bank0
 10930     008A  0827               	movf	___fldiv@b+3,w
 10931     008B  3980               	andlw	128
 10932     008C  00B1               	movwf	___fldiv@sign
 10933     008D                     i1l2986:
 10934     008D  3527               	lslf	___fldiv@b+3,w
 10935     008E  00B8               	movwf	___fldiv@bexp
 10936     008F                     i1l2988:
 10937     008F  1FA6               	btfss	___fldiv@b+2,7
 10938     0090  2892               	goto	u181_21
 10939     0091  2893               	goto	u181_20
 10940     0092                     u181_21:
 10941     0092  2894               	goto	i1l2992
 10942     0093                     u181_20:
 10943     0093                     i1l2990:
 10944     0093  1438               	bsf	___fldiv@bexp,0
 10945     0094                     i1l2992:
 10946     0094  0838               	movf	___fldiv@bexp,w
 10947     0095  1903               	btfsc	3,2
 10948     0096  2898               	goto	u182_21
 10949     0097  2899               	goto	u182_20
 10950     0098                     u182_21:
 10951     0098  28A9               	goto	i1l3002
 10952     0099                     u182_20:
 10953     0099                     i1l2994:
 10954     0099  0A38               	incf	___fldiv@bexp,w
 10955     009A  1D03               	btfss	3,2
 10956     009B  289D               	goto	u183_21
 10957     009C  289E               	goto	u183_20
 10958     009D                     u183_21:
 10959     009D  28A6               	goto	i1l2998
 10960     009E                     u183_20:
 10961     009E                     i1l2996:
 10962     009E  3000               	movlw	0
 10963     009F  00A7               	movwf	___fldiv@b+3
 10964     00A0  3000               	movlw	0
 10965     00A1  00A6               	movwf	___fldiv@b+2
 10966     00A2  3000               	movlw	0
 10967     00A3  00A5               	movwf	___fldiv@b+1
 10968     00A4  3000               	movlw	0
 10969     00A5  00A4               	movwf	___fldiv@b
 10970     00A6                     i1l2998:
 10971     00A6  17A6               	bsf	___fldiv@b+2,7
 10972     00A7                     i1l3000:
 10973     00A7  01A7               	clrf	___fldiv@b+3
 10974     00A8  28B1               	goto	i1l3004
 10975     00A9                     i1l3002:
 10976     00A9  3000               	movlw	0
 10977     00AA  00A7               	movwf	___fldiv@b+3
 10978     00AB  3000               	movlw	0
 10979     00AC  00A6               	movwf	___fldiv@b+2
 10980     00AD  3000               	movlw	0
 10981     00AE  00A5               	movwf	___fldiv@b+1
 10982     00AF  3000               	movlw	0
 10983     00B0  00A4               	movwf	___fldiv@b
 10984     00B1                     i1l3004:
 10985     00B1  0823               	movf	___fldiv@a+3,w
 10986     00B2  3980               	andlw	128
 10987     00B3  00A8               	movwf	??___fldiv
 10988     00B4  0828               	movf	??___fldiv,w
 10989     00B5  06B1               	xorwf	___fldiv@sign,f
 10990     00B6                     i1l3006:
 10991     00B6  3523               	lslf	___fldiv@a+3,w
 10992     00B7  00B9               	movwf	___fldiv@aexp
 10993     00B8                     i1l3008:
 10994     00B8  1FA2               	btfss	___fldiv@a+2,7
 10995     00B9  28BB               	goto	u184_21
 10996     00BA  28BC               	goto	u184_20
 10997     00BB                     u184_21:
 10998     00BB  28BD               	goto	i1l3012
 10999     00BC                     u184_20:
 11000     00BC                     i1l3010:
 11001     00BC  1439               	bsf	___fldiv@aexp,0
 11002     00BD                     i1l3012:
 11003     00BD  0839               	movf	___fldiv@aexp,w
 11004     00BE  1903               	btfsc	3,2
 11005     00BF  28C1               	goto	u185_21
 11006     00C0  28C2               	goto	u185_20
 11007     00C1                     u185_21:
 11008     00C1  28D2               	goto	i1l3022
 11009     00C2                     u185_20:
 11010     00C2                     i1l3014:
 11011     00C2  0A39               	incf	___fldiv@aexp,w
 11012     00C3  1D03               	btfss	3,2
 11013     00C4  28C6               	goto	u186_21
 11014     00C5  28C7               	goto	u186_20
 11015     00C6                     u186_21:
 11016     00C6  28CF               	goto	i1l3018
 11017     00C7                     u186_20:
 11018     00C7                     i1l3016:
 11019     00C7  3000               	movlw	0
 11020     00C8  00A3               	movwf	___fldiv@a+3
 11021     00C9  3000               	movlw	0
 11022     00CA  00A2               	movwf	___fldiv@a+2
 11023     00CB  3000               	movlw	0
 11024     00CC  00A1               	movwf	___fldiv@a+1
 11025     00CD  3000               	movlw	0
 11026     00CE  00A0               	movwf	___fldiv@a
 11027     00CF                     i1l3018:
 11028     00CF  17A2               	bsf	___fldiv@a+2,7
 11029     00D0                     i1l3020:
 11030     00D0  01A3               	clrf	___fldiv@a+3
 11031     00D1  28DA               	goto	i1l1421
 11032     00D2                     i1l3022:
 11033     00D2  3000               	movlw	0
 11034     00D3  00A3               	movwf	___fldiv@a+3
 11035     00D4  3000               	movlw	0
 11036     00D5  00A2               	movwf	___fldiv@a+2
 11037     00D6  3000               	movlw	0
 11038     00D7  00A1               	movwf	___fldiv@a+1
 11039     00D8  3000               	movlw	0
 11040     00D9  00A0               	movwf	___fldiv@a
 11041     00DA                     i1l1421:
 11042     00DA  0823               	movf	___fldiv@a+3,w
 11043     00DB  0422               	iorwf	___fldiv@a+2,w
 11044     00DC  0421               	iorwf	___fldiv@a+1,w
 11045     00DD  0420               	iorwf	___fldiv@a,w
 11046     00DE  1D03               	skipz
 11047     00DF  28E1               	goto	u187_21
 11048     00E0  28E2               	goto	u187_20
 11049     00E1                     u187_21:
 11050     00E1  28FB               	goto	i1l3032
 11051     00E2                     u187_20:
 11052     00E2                     i1l3024:
 11053     00E2  3000               	movlw	0
 11054     00E3  00A7               	movwf	___fldiv@b+3
 11055     00E4  3000               	movlw	0
 11056     00E5  00A6               	movwf	___fldiv@b+2
 11057     00E6  3000               	movlw	0
 11058     00E7  00A5               	movwf	___fldiv@b+1
 11059     00E8  3000               	movlw	0
 11060     00E9  00A4               	movwf	___fldiv@b
 11061     00EA  3080               	movlw	128
 11062     00EB  04A6               	iorwf	___fldiv@b+2,f
 11063     00EC  307F               	movlw	127
 11064     00ED  04A7               	iorwf	___fldiv@b+3,f
 11065     00EE                     i1l3026:
 11066     00EE  0831               	movf	___fldiv@sign,w
 11067     00EF  00A8               	movwf	??___fldiv
 11068     00F0  0828               	movf	??___fldiv,w
 11069     00F1  04A7               	iorwf	___fldiv@b+3,f
 11070     00F2                     i1l3028:
 11071     00F2  0827               	movf	___fldiv@b+3,w
 11072     00F3  00A3               	movwf	?___fldiv+3
 11073     00F4  0826               	movf	___fldiv@b+2,w
 11074     00F5  00A2               	movwf	?___fldiv+2
 11075     00F6  0825               	movf	___fldiv@b+1,w
 11076     00F7  00A1               	movwf	?___fldiv+1
 11077     00F8  0824               	movf	___fldiv@b,w
 11078     00F9  00A0               	movwf	?___fldiv
 11079     00FA  2A32               	goto	i1l1423
 11080     00FB                     i1l3032:
 11081     00FB  0838               	movf	___fldiv@bexp,w
 11082     00FC  1D03               	btfss	3,2
 11083     00FD  28FF               	goto	u188_21
 11084     00FE  2900               	goto	u188_20
 11085     00FF                     u188_21:
 11086     00FF  2909               	goto	i1l3038
 11087     0100                     u188_20:
 11088     0100                     i1l3034:
 11089     0100  3000               	movlw	0
 11090     0101  00A3               	movwf	?___fldiv+3
 11091     0102  3000               	movlw	0
 11092     0103  00A2               	movwf	?___fldiv+2
 11093     0104  3000               	movlw	0
 11094     0105  00A1               	movwf	?___fldiv+1
 11095     0106  3000               	movlw	0
 11096     0107  00A0               	movwf	?___fldiv
 11097     0108  2A32               	goto	i1l1423
 11098     0109                     i1l3038:
 11099     0109  0838               	movf	___fldiv@bexp,w
 11100     010A  00A8               	movwf	??___fldiv
 11101     010B  01A9               	clrf	??___fldiv+1
 11102     010C  0829               	movf	??___fldiv+1,w
 11103     010D  00AB               	movwf	??___fldiv+3
 11104     010E  0839               	movf	___fldiv@aexp,w
 11105     010F  0228               	subwf	??___fldiv,w
 11106     0110  00AA               	movwf	??___fldiv+2
 11107     0111  1C03               	skipc
 11108     0112  03AB               	decf	??___fldiv+3,f
 11109     0113  082A               	movf	??___fldiv+2,w
 11110     0114  3E7F               	addlw	127
 11111     0115  00B2               	movwf	___fldiv@new_exp
 11112     0116  3000               	movlw	0
 11113     0117  3D2B               	addwfc	??___fldiv+3,w
 11114     0118  00B3               	movwf	___fldiv@new_exp+1
 11115     0119                     i1l3040:
 11116     0119  0827               	movf	___fldiv@b+3,w
 11117     011A  00B0               	movwf	___fldiv@rem+3
 11118     011B  0826               	movf	___fldiv@b+2,w
 11119     011C  00AF               	movwf	___fldiv@rem+2
 11120     011D  0825               	movf	___fldiv@b+1,w
 11121     011E  00AE               	movwf	___fldiv@rem+1
 11122     011F  0824               	movf	___fldiv@b,w
 11123     0120  00AD               	movwf	___fldiv@rem
 11124     0121                     i1l3042:
 11125     0121  3000               	movlw	0
 11126     0122  00A7               	movwf	___fldiv@b+3
 11127     0123  3000               	movlw	0
 11128     0124  00A6               	movwf	___fldiv@b+2
 11129     0125  3000               	movlw	0
 11130     0126  00A5               	movwf	___fldiv@b+1
 11131     0127  3000               	movlw	0
 11132     0128  00A4               	movwf	___fldiv@b
 11133     0129                     i1l3044:
 11134     0129  3000               	movlw	0
 11135     012A  00B7               	movwf	___fldiv@grs+3
 11136     012B  3000               	movlw	0
 11137     012C  00B6               	movwf	___fldiv@grs+2
 11138     012D  3000               	movlw	0
 11139     012E  00B5               	movwf	___fldiv@grs+1
 11140     012F  3000               	movlw	0
 11141     0130  00B4               	movwf	___fldiv@grs
 11142     0131                     i1l3046:
 11143     0131  01B9               	clrf	___fldiv@aexp
 11144     0132  2971               	goto	i1l3066
 11145     0133                     i1l3048:
 11146     0133  0839               	movf	___fldiv@aexp,w
 11147     0134  1903               	btfsc	3,2
 11148     0135  2937               	goto	u189_21
 11149     0136  2938               	goto	u189_20
 11150     0137                     u189_21:
 11151     0137  2952               	goto	i1l3058
 11152     0138                     u189_20:
 11153     0138                     i1l3050:
 11154     0138  3001               	movlw	1
 11155     0139                     u190_25:
 11156     0139  35AD               	lslf	___fldiv@rem,f
 11157     013A  0DAE               	rlf	___fldiv@rem+1,f
 11158     013B  0DAF               	rlf	___fldiv@rem+2,f
 11159     013C  0DB0               	rlf	___fldiv@rem+3,f
 11160     013D  0B89               	decfsz	9,f
 11161     013E  2939               	goto	u190_25
 11162     013F  3001               	movlw	1
 11163     0140                     u191_25:
 11164     0140  35A4               	lslf	___fldiv@b,f
 11165     0141  0DA5               	rlf	___fldiv@b+1,f
 11166     0142  0DA6               	rlf	___fldiv@b+2,f
 11167     0143  0DA7               	rlf	___fldiv@b+3,f
 11168     0144  0B89               	decfsz	9,f
 11169     0145  2940               	goto	u191_25
 11170     0146                     i1l3052:
 11171     0146  1FB7               	btfss	___fldiv@grs+3,7
 11172     0147  2949               	goto	u192_21
 11173     0148  294A               	goto	u192_20
 11174     0149                     u192_21:
 11175     0149  294B               	goto	i1l3056
 11176     014A                     u192_20:
 11177     014A                     i1l3054:
 11178     014A  1424               	bsf	___fldiv@b,0
 11179     014B                     i1l3056:
 11180     014B  3001               	movlw	1
 11181     014C                     u193_25:
 11182     014C  35B4               	lslf	___fldiv@grs,f
 11183     014D  0DB5               	rlf	___fldiv@grs+1,f
 11184     014E  0DB6               	rlf	___fldiv@grs+2,f
 11185     014F  0DB7               	rlf	___fldiv@grs+3,f
 11186     0150  0B89               	decfsz	9,f
 11187     0151  294C               	goto	u193_25
 11188     0152                     i1l3058:
 11189     0152  0823               	movf	___fldiv@a+3,w
 11190     0153  0230               	subwf	___fldiv@rem+3,w
 11191     0154  1D03               	skipz
 11192     0155  2960               	goto	u194_25
 11193     0156  0822               	movf	___fldiv@a+2,w
 11194     0157  022F               	subwf	___fldiv@rem+2,w
 11195     0158  1D03               	skipz
 11196     0159  2960               	goto	u194_25
 11197     015A  0821               	movf	___fldiv@a+1,w
 11198     015B  022E               	subwf	___fldiv@rem+1,w
 11199     015C  1D03               	skipz
 11200     015D  2960               	goto	u194_25
 11201     015E  0820               	movf	___fldiv@a,w
 11202     015F  022D               	subwf	___fldiv@rem,w
 11203     0160                     u194_25:
 11204     0160  1C03               	skipc
 11205     0161  2963               	goto	u194_21
 11206     0162  2964               	goto	u194_20
 11207     0163                     u194_21:
 11208     0163  296D               	goto	i1l3064
 11209     0164                     u194_20:
 11210     0164                     i1l3060:
 11211     0164  1737               	bsf	___fldiv@grs+3,6
 11212     0165                     i1l3062:
 11213     0165  0820               	movf	___fldiv@a,w
 11214     0166  02AD               	subwf	___fldiv@rem,f
 11215     0167  0821               	movf	___fldiv@a+1,w
 11216     0168  3BAE               	subwfb	___fldiv@rem+1,f
 11217     0169  0822               	movf	___fldiv@a+2,w
 11218     016A  3BAF               	subwfb	___fldiv@rem+2,f
 11219     016B  0823               	movf	___fldiv@a+3,w
 11220     016C  3BB0               	subwfb	___fldiv@rem+3,f
 11221     016D                     i1l3064:
 11222     016D  3001               	movlw	1
 11223     016E  00A8               	movwf	??___fldiv
 11224     016F  0828               	movf	??___fldiv,w
 11225     0170  07B9               	addwf	___fldiv@aexp,f
 11226     0171                     i1l3066:
 11227     0171  301A               	movlw	26
 11228     0172  0239               	subwf	___fldiv@aexp,w
 11229     0173  1C03               	skipc
 11230     0174  2976               	goto	u195_21
 11231     0175  2977               	goto	u195_20
 11232     0176                     u195_21:
 11233     0176  2933               	goto	i1l3048
 11234     0177                     u195_20:
 11235     0177                     i1l3068:
 11236     0177  0830               	movf	___fldiv@rem+3,w
 11237     0178  042F               	iorwf	___fldiv@rem+2,w
 11238     0179  042E               	iorwf	___fldiv@rem+1,w
 11239     017A  042D               	iorwf	___fldiv@rem,w
 11240     017B  1903               	skipnz
 11241     017C  297E               	goto	u196_21
 11242     017D  297F               	goto	u196_20
 11243     017E                     u196_21:
 11244     017E  2998               	goto	i1l3082
 11245     017F                     u196_20:
 11246     017F                     i1l3070:
 11247     017F  1434               	bsf	___fldiv@grs,0
 11248     0180  2998               	goto	i1l3082
 11249     0181                     i1l3072:
 11250     0181  3001               	movlw	1
 11251     0182                     u197_25:
 11252     0182  35A4               	lslf	___fldiv@b,f
 11253     0183  0DA5               	rlf	___fldiv@b+1,f
 11254     0184  0DA6               	rlf	___fldiv@b+2,f
 11255     0185  0DA7               	rlf	___fldiv@b+3,f
 11256     0186  0B89               	decfsz	9,f
 11257     0187  2982               	goto	u197_25
 11258     0188                     i1l3074:
 11259     0188  1FB7               	btfss	___fldiv@grs+3,7
 11260     0189  298B               	goto	u198_21
 11261     018A  298C               	goto	u198_20
 11262     018B                     u198_21:
 11263     018B  298D               	goto	i1l3078
 11264     018C                     u198_20:
 11265     018C                     i1l3076:
 11266     018C  1424               	bsf	___fldiv@b,0
 11267     018D                     i1l3078:
 11268     018D  3001               	movlw	1
 11269     018E                     u199_25:
 11270     018E  35B4               	lslf	___fldiv@grs,f
 11271     018F  0DB5               	rlf	___fldiv@grs+1,f
 11272     0190  0DB6               	rlf	___fldiv@grs+2,f
 11273     0191  0DB7               	rlf	___fldiv@grs+3,f
 11274     0192  0B89               	decfsz	9,f
 11275     0193  298E               	goto	u199_25
 11276     0194                     i1l3080:
 11277     0194  30FF               	movlw	255
 11278     0195  07B2               	addwf	___fldiv@new_exp,f
 11279     0196  30FF               	movlw	255
 11280     0197  3DB3               	addwfc	___fldiv@new_exp+1,f
 11281     0198                     i1l3082:
 11282     0198  1FA6               	btfss	___fldiv@b+2,7
 11283     0199  299B               	goto	u200_21
 11284     019A  299C               	goto	u200_20
 11285     019B                     u200_21:
 11286     019B  2981               	goto	i1l3072
 11287     019C                     u200_20:
 11288     019C                     i1l3084:
 11289     019C  01B9               	clrf	___fldiv@aexp
 11290     019D                     i1l3086:
 11291     019D  1FB7               	btfss	___fldiv@grs+3,7
 11292     019E  29A0               	goto	u201_21
 11293     019F  29A1               	goto	u201_20
 11294     01A0                     u201_21:
 11295     01A0  29BD               	goto	i1l3094
 11296     01A1                     u201_20:
 11297     01A1                     i1l3088:
 11298     01A1  30FF               	movlw	255
 11299     01A2  0534               	andwf	___fldiv@grs,w
 11300     01A3  00A8               	movwf	??___fldiv
 11301     01A4  30FF               	movlw	255
 11302     01A5  0535               	andwf	___fldiv@grs+1,w
 11303     01A6  00A9               	movwf	??___fldiv+1
 11304     01A7  30FF               	movlw	255
 11305     01A8  0536               	andwf	___fldiv@grs+2,w
 11306     01A9  00AA               	movwf	??___fldiv+2
 11307     01AA  307F               	movlw	127
 11308     01AB  0537               	andwf	___fldiv@grs+3,w
 11309     01AC  00AB               	movwf	??___fldiv+3
 11310     01AD  082B               	movf	??___fldiv+3,w
 11311     01AE  042A               	iorwf	??___fldiv+2,w
 11312     01AF  0429               	iorwf	??___fldiv+1,w
 11313     01B0  0428               	iorwf	??___fldiv,w
 11314     01B1  1903               	skipnz
 11315     01B2  29B4               	goto	u202_21
 11316     01B3  29B5               	goto	u202_20
 11317     01B4                     u202_21:
 11318     01B4  29B8               	goto	i1l1437
 11319     01B5                     u202_20:
 11320     01B5                     i1l3090:
 11321     01B5  01B9               	clrf	___fldiv@aexp
 11322     01B6  0AB9               	incf	___fldiv@aexp,f
 11323     01B7  29BD               	goto	i1l3094
 11324     01B8                     i1l1437:
 11325     01B8  1C24               	btfss	___fldiv@b,0
 11326     01B9  29BB               	goto	u203_21
 11327     01BA  29BC               	goto	u203_20
 11328     01BB                     u203_21:
 11329     01BB  29BD               	goto	i1l3094
 11330     01BC                     u203_20:
 11331     01BC  29B5               	goto	i1l3090
 11332     01BD                     i1l3094:
 11333     01BD  0839               	movf	___fldiv@aexp,w
 11334     01BE  1903               	btfsc	3,2
 11335     01BF  29C1               	goto	u204_21
 11336     01C0  29C2               	goto	u204_20
 11337     01C1                     u204_21:
 11338     01C1  29EA               	goto	i1l3104
 11339     01C2                     u204_20:
 11340     01C2                     i1l3096:
 11341     01C2  3001               	movlw	1
 11342     01C3  07A4               	addwf	___fldiv@b,f
 11343     01C4  3000               	movlw	0
 11344     01C5  3DA5               	addwfc	___fldiv@b+1,f
 11345     01C6  3000               	movlw	0
 11346     01C7  3DA6               	addwfc	___fldiv@b+2,f
 11347     01C8  3000               	movlw	0
 11348     01C9  3DA7               	addwfc	___fldiv@b+3,f
 11349     01CA                     i1l3098:
 11350     01CA  1C27               	btfss	___fldiv@b+3,0
 11351     01CB  29CD               	goto	u205_21
 11352     01CC  29CE               	goto	u205_20
 11353     01CD                     u205_21:
 11354     01CD  29EA               	goto	i1l3104
 11355     01CE                     u205_20:
 11356     01CE                     i1l3100:
 11357     01CE  0824               	movf	___fldiv@b,w
 11358     01CF  00A8               	movwf	??___fldiv
 11359     01D0  0825               	movf	___fldiv@b+1,w
 11360     01D1  00A9               	movwf	??___fldiv+1
 11361     01D2  0826               	movf	___fldiv@b+2,w
 11362     01D3  00AA               	movwf	??___fldiv+2
 11363     01D4  0827               	movf	___fldiv@b+3,w
 11364     01D5  00AB               	movwf	??___fldiv+3
 11365     01D6  3001               	movlw	1
 11366     01D7  00AC               	movwf	??___fldiv+4
 11367     01D8                     u206_25:
 11368     01D8  37AB               	asrf	??___fldiv+3,f
 11369     01D9  0CAA               	rrf	??___fldiv+2,f
 11370     01DA  0CA9               	rrf	??___fldiv+1,f
 11371     01DB  0CA8               	rrf	??___fldiv,f
 11372     01DC                     u206_20:
 11373     01DC  0BAC               	decfsz	??___fldiv+4,f
 11374     01DD  29D8               	goto	u206_25
 11375     01DE  082B               	movf	??___fldiv+3,w
 11376     01DF  00A7               	movwf	___fldiv@b+3
 11377     01E0  082A               	movf	??___fldiv+2,w
 11378     01E1  00A6               	movwf	___fldiv@b+2
 11379     01E2  0829               	movf	??___fldiv+1,w
 11380     01E3  00A5               	movwf	___fldiv@b+1
 11381     01E4  0828               	movf	??___fldiv,w
 11382     01E5  00A4               	movwf	___fldiv@b
 11383     01E6                     i1l3102:
 11384     01E6  3001               	movlw	1
 11385     01E7  07B2               	addwf	___fldiv@new_exp,f
 11386     01E8  3000               	movlw	0
 11387     01E9  3DB3               	addwfc	___fldiv@new_exp+1,f
 11388     01EA                     i1l3104:
 11389     01EA  0833               	movf	___fldiv@new_exp+1,w
 11390     01EB  3A80               	xorlw	128
 11391     01EC  00A8               	movwf	??___fldiv
 11392     01ED  3080               	movlw	128
 11393     01EE  0228               	subwf	??___fldiv,w
 11394     01EF  1D03               	skipz
 11395     01F0  29F3               	goto	u207_25
 11396     01F1  30FF               	movlw	255
 11397     01F2  0232               	subwf	___fldiv@new_exp,w
 11398     01F3                     u207_25:
 11399     01F3  1C03               	skipc
 11400     01F4  29F6               	goto	u207_21
 11401     01F5  29F7               	goto	u207_20
 11402     01F6                     u207_21:
 11403     01F6  2A04               	goto	i1l1442
 11404     01F7                     u207_20:
 11405     01F7                     i1l3106:
 11406     01F7  30FF               	movlw	255
 11407     01F8  0020               	movlb	0	; select bank0
 11408     01F9  00B2               	movwf	___fldiv@new_exp
 11409     01FA  3000               	movlw	0
 11410     01FB  00B3               	movwf	___fldiv@new_exp+1
 11411     01FC  3000               	movlw	0
 11412     01FD  00A7               	movwf	___fldiv@b+3
 11413     01FE  3000               	movlw	0
 11414     01FF  00A6               	movwf	___fldiv@b+2
 11415     0200  3000               	movlw	0
 11416     0201  00A5               	movwf	___fldiv@b+1
 11417     0202  3000               	movlw	0
 11418     0203  00A4               	movwf	___fldiv@b
 11419     0204                     i1l1442:
 11420     0204  0020               	movlb	0	; select bank0
 11421     0205  0833               	movf	___fldiv@new_exp+1,w
 11422     0206  3A80               	xorlw	128
 11423     0207  00A8               	movwf	??___fldiv
 11424     0208  3080               	movlw	128
 11425     0209  0228               	subwf	??___fldiv,w
 11426     020A  1D03               	skipz
 11427     020B  2A0E               	goto	u208_25
 11428     020C  3001               	movlw	1
 11429     020D  0232               	subwf	___fldiv@new_exp,w
 11430     020E                     u208_25:
 11431     020E  1803               	skipnc
 11432     020F  2A11               	goto	u208_21
 11433     0210  2A12               	goto	u208_20
 11434     0211                     u208_21:
 11435     0211  2A1E               	goto	i1l1443
 11436     0212                     u208_20:
 11437     0212                     i1l3108:
 11438     0212  0020               	movlb	0	; select bank0
 11439     0213  01B2               	clrf	___fldiv@new_exp
 11440     0214  01B3               	clrf	___fldiv@new_exp+1
 11441     0215                     i1l3110:
 11442     0215  3000               	movlw	0
 11443     0216  00A7               	movwf	___fldiv@b+3
 11444     0217  3000               	movlw	0
 11445     0218  00A6               	movwf	___fldiv@b+2
 11446     0219  3000               	movlw	0
 11447     021A  00A5               	movwf	___fldiv@b+1
 11448     021B  3000               	movlw	0
 11449     021C  00A4               	movwf	___fldiv@b
 11450     021D                     i1l3112:
 11451     021D  01B1               	clrf	___fldiv@sign
 11452     021E                     i1l1443:
 11453     021E  0020               	movlb	0	; select bank0
 11454     021F  0832               	movf	___fldiv@new_exp,w
 11455     0220  00B8               	movwf	___fldiv@bexp
 11456     0221                     i1l3114:
 11457     0221  1C38               	btfss	___fldiv@bexp,0
 11458     0222  2A24               	goto	u209_21
 11459     0223  2A25               	goto	u209_20
 11460     0224                     u209_21:
 11461     0224  2A27               	goto	i1l3118
 11462     0225                     u209_20:
 11463     0225                     i1l3116:
 11464     0225  17A6               	bsf	___fldiv@b+2,7
 11465     0226  2A2B               	goto	i1l1445
 11466     0227                     i1l3118:
 11467     0227  307F               	movlw	127
 11468     0228  00A8               	movwf	??___fldiv
 11469     0229  0828               	movf	??___fldiv,w
 11470     022A  05A6               	andwf	___fldiv@b+2,f
 11471     022B                     i1l1445:
 11472     022B  3638               	lsrf	___fldiv@bexp,w
 11473     022C  00A7               	movwf	___fldiv@b+3
 11474     022D  0831               	movf	___fldiv@sign,w
 11475     022E  00A8               	movwf	??___fldiv
 11476     022F  0828               	movf	??___fldiv,w
 11477     0230  04A7               	iorwf	___fldiv@b+3,f
 11478     0231  28F2               	goto	i1l3028
 11479     0232                     i1l1423:
 11480     0232  0008               	return
 11481     0233                     __end_of___fldiv:
 11482     007E                     btemp	set	126	;btemp
 11483     007E                     int$flags	set	126
 11484     007E                     wtemp0	set	126
 11485                           
 11486                           	psect	idloc
 11487                           
 11488                           ;Config register IDLOC0 @ 0x8000
 11489                           ;	unspecified, using default values
 11490     8000                     	org	32768
 11491     8000  3FFF               	dw	16383
 11492                           
 11493                           ;Config register IDLOC1 @ 0x8001
 11494                           ;	unspecified, using default values
 11495     8001                     	org	32769
 11496     8001  3FFF               	dw	16383
 11497                           
 11498                           ;Config register IDLOC2 @ 0x8002
 11499                           ;	unspecified, using default values
 11500     8002                     	org	32770
 11501     8002  3FFF               	dw	16383
 11502                           
 11503                           ;Config register IDLOC3 @ 0x8003
 11504                           ;	unspecified, using default values
 11505     8003                     	org	32771
 11506     8003  3FFF               	dw	16383
 11507                           
 11508                           	psect	config
 11509                           
 11510                           ;Config register CONFIG1 @ 0x8007
 11511                           ;	Oscillator Selection
 11512                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 11513                           ;	Watchdog Timer Enable
 11514                           ;	WDTE = OFF, WDT disabled
 11515                           ;	Power-up Timer Enable
 11516                           ;	PWRTE = OFF, PWRT disabled
 11517                           ;	MCLR Pin Function Select
 11518                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 11519                           ;	Flash Program Memory Code Protection
 11520                           ;	CP = OFF, Program memory code protection is disabled
 11521                           ;	Data Memory Code Protection
 11522                           ;	CPD = OFF, Data memory code protection is disabled
 11523                           ;	Brown-out Reset Enable
 11524                           ;	BOREN = ON, Brown-out Reset enabled
 11525                           ;	Clock Out Enable
 11526                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 11527                           ;	Internal/External Switchover
 11528                           ;	IESO = ON, Internal/External Switchover mode is enabled
 11529                           ;	Fail-Safe Clock Monitor Enable
 11530                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 11531     8007                     	org	32775
 11532     8007  3FE4               	dw	16356
 11533                           
 11534                           ;Config register CONFIG2 @ 0x8008
 11535                           ;	Flash Memory Self-Write Protection
 11536                           ;	WRT = OFF, Write protection off
 11537                           ;	PLL Enable
 11538                           ;	PLLEN = OFF, 4x PLL disabled
 11539                           ;	Stack Overflow/Underflow Reset Enable
 11540                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 11541                           ;	Brown-out Reset Voltage Selection
 11542                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 11543                           ;	Low-Voltage Programming Enable
 11544                           ;	LVP = ON, Low-voltage programming enabled
 11545     8008                     	org	32776
 11546     8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    4
    Data        2
    BSS         27
    Persistent  57
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     45      68
    BANK1            80      8      39
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    CMP1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> S3_Interrupt(), 

    CMP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> S3_Interrupt(), Absolute function(), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_Interrupt(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_Interrupt(), TMR4_DefaultInterruptHandler(), Absolute function(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR6_Interrupt(), TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR6_Interrupt(), TMR6_DefaultInterruptHandler(), Absolute function(), 

    CMP2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> S4_Interrupt(), 

    CMP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> S4_Interrupt(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Interrupt(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Interrupt(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    CCP4_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_Interrupt(), CCP4_DefaultCallBack(), 

    CCP4_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_Interrupt(), CCP4_DefaultCallBack(), Absolute function(), 

    IOCBF3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> S2_Interrupt(), IOCBF3_DefaultInterruptHandler(), 

    IOCBF3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> S2_Interrupt(), Absolute function(), IOCBF3_DefaultInterruptHandler(), 

    IOCBF0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> S1_Interrupt(), IOCBF0_DefaultInterruptHandler(), 

    IOCBF0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> S1_Interrupt(), Absolute function(), IOCBF0_DefaultInterruptHandler(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR6_Interrupt->_TMR6_WriteTimer
    _TMR4_Interrupt->_TMR4_WriteTimer
    _TMR0_Interrupt->___lldiv
    i1_updateMotor->i1_controlMotor
    i1_controlMotor->i1_PWM3_LoadDutyValue
    _CCP4_Interrupt->___xxtofl
    ___fltol->___xxtofl
    ___fldiv->___xxtofl

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _INTERRUPT_InterruptManager->_CCP4_CaptureISR
    _TMR0_ISR->_TMR0_Interrupt
    _CCP4_CaptureISR->_CCP4_Interrupt
    _CCP4_Interrupt->___fltol
    ___fltol->___fldiv

Critical Paths under _main in BANK1

    _main->_updateMatrix
    _updateMotor->_controlMotor
    _controlMotor->_PWM3_LoadDutyValue
    _updateMatrix->_DATAEE_ReadByte
    _sendMatrix->_txMAX7219
    _txMAX7219->_SPI1_WriteByte
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF3_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _CCP4_Initialize->_CCP4_SetCallBack

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    4029
                                              6 BANK1      2     2      0
                   _CCP4_SetCallBack
           _CMP1_SetInterruptHandler
           _CMP2_SetInterruptHandler
                        _EUSART_Read
                 _EUSART_is_rx_ready
         _IOCBF0_SetInterruptHandler
         _IOCBF3_SetInterruptHandler
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
           _TMR4_SetInterruptHandler
           _TMR6_SetInterruptHandler
                         _sendMatrix
                       _updateMatrix
                        _updateMotor
 ---------------------------------------------------------------------------------
 (1) _updateMotor                                          0     0      0     424
                    _TMR4_StartTimer
                       _controlMotor
 ---------------------------------------------------------------------------------
 (2) _controlMotor                                         2     2      0     424
                                              4 BANK1      2     2      0
                 _PWM3_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _PWM3_LoadDutyValue                                   4     2      2     424
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _updateMatrix                                         5     4      1     289
                                              1 BANK1      5     4      1
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte                                      1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _sendMatrix                                           2     2      0     688
                                              3 BANK1      2     2      0
                          _txMAX7219
 ---------------------------------------------------------------------------------
 (2) _txMAX7219                                            2     1      1     598
                                              1 BANK1      2     1      1
                     _SPI1_WriteByte
 ---------------------------------------------------------------------------------
 (3) _SPI1_WriteByte                                       1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1338
                     _ADC_Initialize
                    _CCP4_Initialize
                    _CMP1_Initialize
                    _CMP2_Initialize
                     _DAC_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM3_Initialize
                    _SPI1_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                    _TMR6_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     174
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR6_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     174
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     174
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     348
         _IOCBF0_SetInterruptHandler
         _IOCBF3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCBF3_SetInterruptHandler                           2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCBF0_SetInterruptHandler                           2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _DAC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP4_Initialize                                      0     0      0     174
                   _CCP4_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP4_SetCallBack                                     2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CMP2_SetInterruptHandler                             2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _CMP1_SetInterruptHandler                             2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0    3556
                    _CCP4_CaptureISR
                           _CMP1_ISR
                           _CMP2_ISR
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
                           _TMR4_ISR
                           _TMR6_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR6_ISR                                             0     0      0      22
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR6_CallBack                                        0     0      0      22
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
                     _TMR6_Interrupt *
 ---------------------------------------------------------------------------------
 (7) _TMR6_Interrupt                                       0     0      0      22
                     _TMR6_StopTimer
                    _TMR6_WriteTimer
 ---------------------------------------------------------------------------------
 (8) _TMR6_WriteTimer                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _TMR6_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR6_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR4_ISR                                             0     0      0      22
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR4_CallBack                                        0     0      0      22
                   Absolute function *
       _TMR4_DefaultInterruptHandler *
                     _TMR4_Interrupt *
 ---------------------------------------------------------------------------------
 (7) _TMR4_Interrupt                                       0     0      0      22
                     _TMR4_StopTimer
                    _TMR4_WriteTimer
 ---------------------------------------------------------------------------------
 (8) _TMR4_WriteTimer                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _TMR4_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR4_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0     543
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                     _TMR0_Interrupt *
 ---------------------------------------------------------------------------------
 (6) _TMR0_Interrupt                                      12    12      0     543
                                              0 BANK0     10    10      0
                  _ADC_GetConversion
                       _EUSART_Write
                 _EUSART_is_tx_ready
            _TMR1_HasOverflowOccured
                            ___lldiv
 ---------------------------------------------------------------------------------
 (7) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (7) _TMR1_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART_is_tx_ready                                   1     1      0      24
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _ADC_GetConversion                                    4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (6) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _PIN_MANAGER_IOC                                      0     0      0     348
                         _IOCBF0_ISR
                         _IOCBF3_ISR
 ---------------------------------------------------------------------------------
 (6) _IOCBF3_ISR                                           0     0      0     174
                   Absolute function *
     _IOCBF3_DefaultInterruptHandler *
                       _S2_Interrupt *
 ---------------------------------------------------------------------------------
 (7) _S2_Interrupt                                         0     0      0     174
                    _TMR6_StartTimer
                      i1_updateMotor
 ---------------------------------------------------------------------------------
 (7) _IOCBF3_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _IOCBF0_ISR                                           0     0      0     174
                   Absolute function *
     _IOCBF0_DefaultInterruptHandler *
                       _S1_Interrupt *
 ---------------------------------------------------------------------------------
 (7) _S1_Interrupt                                         0     0      0     174
                    _TMR6_StartTimer
                      i1_updateMotor
 ---------------------------------------------------------------------------------
 (7) _IOCBF0_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _CMP2_ISR                                             0     0      0     174
                   Absolute function *
                       _S4_Interrupt *
 ---------------------------------------------------------------------------------
 (6) _S4_Interrupt                                         0     0      0     174
                    _TMR6_StartTimer
                      i1_updateMotor
 ---------------------------------------------------------------------------------
 (5) _CMP1_ISR                                             0     0      0     174
                   Absolute function *
                       _S3_Interrupt *
 ---------------------------------------------------------------------------------
 (6) _S3_Interrupt                                         0     0      0     174
                    _TMR6_StartTimer
                      i1_updateMotor
 ---------------------------------------------------------------------------------
 (8) i1_updateMotor                                        0     0      0     174
                  i1_TMR4_StartTimer
                     i1_controlMotor
 ---------------------------------------------------------------------------------
 (9) i1_controlMotor                                       2     2      0     174
                                              4 COMMON     2     2      0
               i1_PWM3_LoadDutyValue
 ---------------------------------------------------------------------------------
 (10) i1_PWM3_LoadDutyValue                                4     2      2     174
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (9) i1_TMR4_StartTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR6_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _CCP4_CaptureISR                                      2     2      0    2273
                                             43 BANK0      2     2      0
                   Absolute function *
               _CCP4_DefaultCallBack *
                     _CCP4_Interrupt *
 ---------------------------------------------------------------------------------
 (6) _CCP4_Interrupt                                       7     5      2    2226
                                             36 BANK0      7     5      2
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (7) ___xxtofl                                            14    10      4     398
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (7) ___fltol                                             10     6      4     305
                                             26 BANK0     10     6      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fldiv                                             26    18      8    1425
                                              0 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) _CCP4_DefaultCallBack                                 2     0      2       0
                                             36 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CCP4_SetCallBack
   _CMP1_SetInterruptHandler
   _CMP2_SetInterruptHandler
   _EUSART_Read
   _EUSART_is_rx_ready
   _IOCBF0_SetInterruptHandler
   _IOCBF3_SetInterruptHandler
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP4_Initialize
       _CCP4_SetCallBack
     _CMP1_Initialize
     _CMP2_Initialize
     _DAC_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCBF0_SetInterruptHandler
       _IOCBF3_SetInterruptHandler
     _PWM3_Initialize
     _SPI1_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
     _TMR2_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _WDT_Initialize
   _TMR0_SetInterruptHandler
   _TMR4_SetInterruptHandler
   _TMR6_SetInterruptHandler
   _sendMatrix
     _txMAX7219
       _SPI1_WriteByte
   _updateMatrix
     _DATAEE_ReadByte
   _updateMotor
     _TMR4_StartTimer
     _controlMotor
       _PWM3_LoadDutyValue

 _INTERRUPT_InterruptManager (ROOT)
   _CCP4_CaptureISR
     Absolute function(Fake) *
     _CCP4_DefaultCallBack *
     _CCP4_Interrupt *
       ___fldiv
         ___xxtofl (ARG)
       ___fltol
         ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl
   _CMP1_ISR
     Absolute function(Fake) *
     _S3_Interrupt *
       _TMR6_StartTimer
       i1_updateMotor
         i1_TMR4_StartTimer
         i1_controlMotor
           i1_PWM3_LoadDutyValue
   _CMP2_ISR
     Absolute function(Fake) *
     _S4_Interrupt *
       _TMR6_StartTimer
       i1_updateMotor
   _PIN_MANAGER_IOC
     _IOCBF0_ISR
       Absolute function(Fake) *
       _IOCBF0_DefaultInterruptHandler *
       _S1_Interrupt *
         _TMR6_StartTimer
         i1_updateMotor
     _IOCBF3_ISR
       Absolute function(Fake) *
       _IOCBF3_DefaultInterruptHandler *
       _S2_Interrupt *
         _TMR6_StartTimer
         i1_updateMotor
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _TMR0_Interrupt *
       _ADC_GetConversion
       _EUSART_Write
       _EUSART_is_tx_ready
       _TMR1_HasOverflowOccured
       ___lldiv
   _TMR4_ISR
     _TMR4_CallBack
       Absolute function(Fake) *
       _TMR4_DefaultInterruptHandler *
       _TMR4_Interrupt *
         _TMR4_StopTimer
         _TMR4_WriteTimer
   _TMR6_ISR
     _TMR6_CallBack
       Absolute function(Fake) *
       _TMR6_DefaultInterruptHandler *
       _TMR6_Interrupt *
         _TMR6_StopTimer
         _TMR6_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      79       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     2D      44       6       85.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      8      27       8       48.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      79      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Oct 01 20:26:49 2022

                             ??i1_controlMotor 0074                                _CCP4_Initialize 0FB4  
                           SPI1_WriteByte@byte 00BD                                   ___fldiv@aexp 0039  
                                 ___fldiv@bexp 0038               ??_IOCBF3_DefaultInterruptHandler 0070  
              ?_IOCBF3_DefaultInterruptHandler 0070                                   ___fldiv@sign 0031  
                                           l21 0EF9                                             l72 0EC8  
                                           l58 0E99                              ??_CMP1_Initialize 00BD  
                                           l75 06FD                              ??_TMR6_StartTimer 0070  
                             ??_TMR6_StopTimer 0070                                _timer0ReloadVal 0063  
                                          l126 0E57                                            l302 0FC5  
                                          l118 06C4                                            l135 0F93  
                                          l160 0E7B                                            l139 0FA2  
                                          l163 0E6F                                            l308 0EBF  
                                          l157 0E75                                            l351 0647  
                                          l408 0F1D                                            l257 0676  
                                          l354 0EA6                                            l370 0EB6  
                                          l451 07F1                                            l269 0E81  
                                          l701 0E8D                                            l357 0E48  
                                          l279 0E87                                            l467 0ED1  
                                          l619 0FEB                                            l573 0F11  
                                          l901 06E1                                            l590 0E69  
                                          l558 07FE                                            l583 0E63  
                                          l487 0EAE                                            l719 0F05  
                                          l647 0E93                                            l729 0E5D  
                                          l673 0FD8                                            l817 0564  
                                          l914 0719                                            l676 0E40  
                                          l828 05E2                                            l909 069F  
                                          l891 06C7                                            l893 06CE  
                                          l895 06D3                                            l896 06D9  
                                          l898 06DE                                            l899 06DF  
                                          _PR2 001B                                            _PR4 0416  
                                          _PR6 041D                                _timer1ReloadVal 005F  
                    ?_CMP2_SetInterruptHandler 00BD                 ?_EUSART_SetFramingErrorHandler 00BD  
                              _TMR2_Initialize 0EAF                 CCP4_SetCallBack@customCallBack 00BD  
                                          wreg 0009                               _CCP4_SetCallBack 0EB7  
                      __end_of_CCP4_CaptureISR 1000                                TMR0_Interrupt@i 0024  
                                 ?_EUSART_Read 0070                                   ___fltol@exp1 0043  
                                         l3200 064E                                           l3210 0659  
                                         l3202 0652                                           l3220 0662  
                                         l3212 065C                                           l3204 0654  
                                         l3300 07E7                                           l3230 0675  
                                         l3222 0663                                           l3214 065E  
                                         l3206 0656                                           l3302 07E8  
                                         l3310 0FDD                                           l3320 0EFC  
                                         l3224 0664                                           l3216 0660  
                                         l3208 0657                                           l3304 07E9  
                                         l3312 0FDF                                           l3330 0EAB  
                                         l3250 0FB9                                           l3322 0F01  
                                         l3226 0665                                           l3218 0661  
                                         l3170 0EF3                                           l3314 0FE1  
                                         l3306 0FD9                                           l3252 0FC1  
                                         l3244 0FB4                                           l3324 0F03  
                                         l3260 0EA4                                           l3228 066D  
                                         l3180 0EC4                                           l3172 0EF5  
                                         l3332 0F12                                           l3316 0FE8  
                                         l3308 0FDC                                           l3340 07F4  
                                         l3326 0EA7                                           l3254 0FC3  
                                         l3246 0FB7                                           l3318 0EFA  
                                         l3270 0F0F                                           l3190 06B2  
                                         l3182 0EC5                                           l3174 0EF7  
                                         l3334 0F16                                           l3262 0E45  
                                         l3350 07FB                                           l3342 07F7  
                                         l3328 0EAA                                           l3248 0FB8  
                                         l3264 0F06                                           l3272 0E64  
                                         l3192 06BA                                           l3184 06A0  
                                         l3256 0EA0                                           l3176 0EC0  
                                         l3168 0EF0                                           l3336 0F17  
                                         l3280 0FCC                                           l3344 07F8  
                                         l3266 0F08                                           l3194 06C2  
                                         l3186 06A9                                           l3258 0EA3  
                                         l3178 0EC3                                           l3338 0F1B  
                                         l3290 0EB3                                           l3282 0FCE  
                                         l3274 0FC6                                           l3346 07F9  
                                         l3370 0524                                           l3268 0F0D  
                                         l3188 06AA                                           l3196 0648  
                                         l3292 0EB4                                           l3284 0FD5  
                                         l3276 0FC9                                           l3532 0617  
                                         l3604 0700                                           l3348 07FA  
                                         l3380 0541                                           l3372 052B  
                                         l3364 051B                                           l3550 0E58  
                                         l3470 0F93                                           l3198 064B  
                                         l3294 07DD                                           l3286 0EAF  
                                         l3278 0FCA                                           l3462 06C9  
                                         l3606 070E                                           l3358 0E3E  
                                         l3382 0549                                           l3374 0533  
                                         l3366 051C                                           l3472 0F98  
                                         l2840 0E6A                                           l3296 07E2  
                                         l3288 0EB2                                           l2832 0E96  
                                         l3464 06D4                                           l3608 0713  
                                         l3376 0539                                           l3368 0522  
                                         l3384 0550                                           l3560 05C3  
                                         l3552 05AF                                           l3474 0F9A  
                                         l3466 0E53                                           l3298 07E5  
                                         l2834 06E2                                           l3378 053B  
                                         l3570 05D7                                           l3562 05C9  
                                         l3554 05B5                                           l3650 03AE  
                                         l3548 0E5E                                           l3476 0F9F  
                                         l2836 0E70                                           l2860 0E82  
                                         l3580 0679                                           l3572 05D9  
                                         l3564 05CB                                           l3556 05BB  
                                         l3660 03BF                                           l3652 03AF  
                                         l3478 0FA1                                           l2862 0EB7  
                                         l2838 0E76                                           l3590 068C  
                                         l3582 0682                                           l3574 05DC  
                                         l3566 05CE                                           l3558 05BD  
                                         l3670 03D8                                           l3662 03C7  
                                         l3654 03B1                                           l3646 036A  
                                         l3592 0691                                           l3568 05D2  
                                         l3680 03EB                                           l3672 03DB  
                                         l3664 03CB                                           l3648 03AD  
                                         l2858 0E7C                                           l2882 0E8E  
                                         l3594 0695                                           l3746 0559  
                                         l3578 05DF                                           l3682 03EE  
                                         l3674 03E0                                           l3666 03D2  
                                         l3658 03BA                                           l2868 0EC9  
                                         l2884 0E88                                           l3596 0699  
                                         l3588 0683                                           l3676 03E3  
                                         l3668 03D2                                           l3598 06FE  
                                         l3678 03E5                                           _LATA 010C  
                                         _LATB 010D                                           u2410 06D3  
                                         u2411 06D2                                           u2420 06DE  
                                         u2421 06DD                                           u2430 0F98  
                                         u2431 0F97                                           u2440 0F9F  
                                         u2600 0719                                           u2280 052B  
                                         u2441 0F9E                                           u2601 0718  
                                         u2281 052A                                           u2290 0541  
                                         u2530 05B5                                           u1555 06F3  
                                         u2291 0540                                           u2531 05B4  
                                         u2540 05BB                                           u2541 05BA  
                                         u2550 05C3                                           u2551 05C2  
                                         u2560 05C9                                           u2561 05C8  
                                         u2570 05D7                              ??_CMP2_Initialize 00BD  
                                         u2571 05D6                                           u2590 069F  
                                         u2591 069E                                           u2760 03B9  
                                         u2585 067C                                           u2761 03B8  
                                         u2770 03C7                                           u2771 03C6  
                                         u2780 03D8                                           u2781 03D7  
                                         u2790 03E0                                           u2791 03DF  
                                         i1l75 07B0                        _TMR1_HasOverflowOccured 0E41  
                                         _TMR0 0015                                           _TMR2 001A  
                                         _TMR4 0415                                           _TMR6 041C  
                                         _WPUA 020C                                           _WPUB 020D  
                            ??_TMR6_WriteTimer 0070                                           _main 036A  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E                                           start 006A  
                              ___fldiv@new_exp 0032                               __end_of_CMP1_ISR 0F47  
                             __end_of_CMP2_ISR 0F56                          __end_ofi1_updateMotor 0617  
                   ??_TMR4_SetInterruptHandler 00BF                        __end_of_TMR0_Initialize 07F2  
               ??_TMR0_DefaultInterruptHandler 0070                                  ?_EUSART_Write 0070  
                     _CMP1_SetInterruptHandler 0E58                                  ?_controlMotor 0070  
                __end_of_OSCILLATOR_Initialize 0EA7                                  ___fltol@sign1 0042  
                                        ?_main 0070                                __end_of___fldiv 0233  
                       ??_CCP4_DefaultCallBack 007E                                __end_of___fltol 0465  
                              __end_of___lldiv 051B                                          _T1CON 0018  
                                        _T2CON 001C                                          _T4CON 0417  
                                        _T6CON 041E                                          i1l201 004C  
                                        i1l202 0068                                          i1l123 0F82  
                                        i1l203 005A                                          i1l142 0ED3  
                                        i1l208 0068                                          i1l305 0FFF  
                                        i1l145 0EDB                                          i1l262 0FB3  
                                        i1l502 072C                                          i1l272 0E2D  
                                        i1l192 0012                                          i1l505 0734  
                                        i1l266 0F64                                          i1l282 0E2E  
                                        i1l434 0E44                                          i1l194 001E  
                                        i1l276 0F73                                          i1l197 0030  
                                        i1l622 0E34                                          i1l470 0E2F  
                                        i1l631 0E52                                          i1l199 003E  
                                        i1l464 0F92                                          i1l704 0E30  
                                        i1l640 07C6                                          i1l625 0E3D  
                                        i1l650 0E31                                          i1l299 0E2C  
                                        i1l580 0F55                                          i1l644 0F37  
                                        i1l726 0F46                                          i1l817 05AE  
                                        i1l841 0EEF                                          i1l850 074E  
                                        i1l835 0369                                          i1l676 0E37  
                                        i1l828 0616                                          i1l685 0E4D  
                                        i1l846 04C0                                          i1l862 0780  
                                        i1l854 0767                                          i1l838 0EE5  
                                        i1l694 07DC                                          i1l679 0E3A  
                                        i1l858 0799                                          i1l698 0F2A  
                                        _RCREG 0199                                          _RCSTA 019D  
                                        _TMR1H 0017                                          _TMR1L 0016  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TXREG 019A                                          _TXSTA 019E  
                              _TMR4_Initialize 0FC6                      ?_TMR0_SetInterruptHandler 00BD  
                    ?_TMR6_SetInterruptHandler 00BD                               __end_of_TMR0_ISR 0F93  
                             __end_of_TMR4_ISR 07DD                               __end_of_TMR6_ISR 07C7  
                              _DATAEE_ReadByte 07F2                        __end_of_PIN_MANAGER_IOC 0FB4  
                               _WDT_Initialize 0E45                                          _pulse 0053  
                      __end_of_PWM3_Initialize 0EC9                        __end_of_TMR1_Initialize 0F1E  
                                        pclath 000A                                          status 0003  
                      __end_of_CCP4_Initialize 0FC6                                          wtemp0 007E  
               ??_TMR6_DefaultInterruptHandler 0070                               ??_DAC_Initialize 00BD  
                              __initialization 006C                                   __end_of_main 03F4  
                               ??_EUSART_Write 0070                                 ??_controlMotor 00C1  
                      __end_of_TMR2_Initialize 0EB7                    ?_INTERRUPT_InterruptManager 0070  
                                       ??_main 00C3                        _IOCBF0_InterruptHandler 00AA  
                                main@direction 00C4                         __end_of_WDT_Initialize 0E49  
                              _TMR6_Initialize 0FD9                      ??_TMR1_HasOverflowOccured 0070  
                             ?_CCP4_CaptureISR 0070              _EUSART_DefaultFramingErrorHandler 0000  
                                       _ADCON0 009D                                         _ADCON1 009E  
                   _EUSART_OverrunErrorHandler 00AE                                         _ADRESH 009C  
                                       _EEADRH 0192                                         _ADRESL 009B  
                                       _EEADRL 0191                                         _EEDATH 0194  
                                       _CCPR3H 0312                                         _CCPR4H 0319  
                                       _EEDATL 0193                                         _CCPR3L 0311  
                                       _CCPR4L 0318                                         _EECON2 0196  
                                       _ANSELA 018C                                         _ANSELB 018D  
                   __end_of_EUSART_is_rx_ready 0E58                                         _BORCON 0116  
                                       _T1GCON 0019                                         i1l1100 051A  
                                       i1l3000 00A7                                         i1l3010 00BC  
                                       i1l3002 00A9                                         i1l3100 01CE  
                                       i1l3020 00D0                                         i1l3012 00BD  
                                       i1l3004 00B1                                         i1l1421 00DA  
                                       i1l3110 0215                                         i1l3102 01E6  
                                       i1l3014 00C2                                         i1l3022 00D2  
                                       i1l3006 00B6                                         i1l1423 0232  
                                       i1l1511 028E                                         i1l3112 021D  
                                       i1l3104 01EA                                         u200_20 019C  
                                       i1l3040 0119                                         i1l3024 00E2  
                                       i1l3032 00FB                                         i1l3016 00C7  
                                       i1l3008 00B8                                         u200_21 019B  
                                       i1l1265 044F                                         i1l1505 0255  
                                       i1l3114 0221                                         i1l3106 01F7  
                                       i1l1442 0204                                         i1l3050 0138  
                                       i1l3042 0121                                         i1l3034 0100  
                                       i1l3026 00EE                                         i1l3018 00CF  
                                       i1l1258 0464                                         i1l3130 024D  
                                       i1l1443 021E                                         i1l1507 02DC  
                                       i1l3116 0225                                         i1l3108 0212  
                                       i1l3060 0164                                         i1l3052 0146  
                                       i1l3044 0129                                         i1l3028 00F2  
                                       i1l1268 0464                                         i1l3140 0274  
                                       i1l3132 025D                                         i1l3124 0234  
                                       i1l1445 022B                                         i1l1437 01B8  
                                       i1l3118 0227                                         i1l3070 017F  
                                       i1l3062 0165                                         i1l3054 014A  
                                       i1l3046 0131                                         i1l3038 0109  
                                       i1l1518 02A8                                         i1l3150 029E  
                                       i1l3142 027B                                         i1l3126 0239  
                                       i1l1519 02B4                                         u201_20 01A1  
                                       i1l3080 0194                                         i1l3072 0181  
                                       i1l3064 016D                                         i1l3056 014B  
                                       i1l3048 0133                                         i1l3160 02CF  
                                       i1l3152 02A2                                         i1l3144 027F  
                                       i1l3136 0266                                         i1l3128 023D  
                                       i1l3232 0F56                                         i1l3240 0F6C  
                                       i1l3400 031B                                         u201_21 01A0  
                                       i1l3090 01B5                                         i1l3074 0188  
                                       i1l3082 0198                                         i1l3058 0152  
                                       i1l3066 0171                                         i1l3162 02D3  
                                       i1l3154 02AC                                         i1l3146 0287  
                                       i1l3138 0269                                         i1l3234 0F5D  
                                       i1l3242 0F71                                         i1l3410 0336  
                                       i1l3402 031B                                         i1l3084 019C  
                                       i1l3076 018C                                         i1l3068 0177  
                                       i1l3164 02D4                                         i1l3156 02B6  
                                       i1l3148 0295                                         i1l3236 0F62  
                                       i1l3412 0340                                         i1l3404 0323  
                                       i1l3500 07C9                                         i1l3094 01BD  
                                       i1l3086 019D                                         i1l3078 018D  
                                       i1l3158 02CA                                         i1l3430 046B  
                                       i1l3510 0F50                                         i1l3238 0F65  
                                       i1l3422 034E                                         i1l3414 0343  
                                       i1l3406 0325                                         i1l3502 07D6  
                                       i1l3096 01C2                                         u202_20 01B5  
                                       i1l3088 01A1                                         u210_20 0239  
                                       i1l3432 0471                                         i1l3520 0FEE  
                                       i1l3440 0788                                         i1l3512 0F38  
                                       i1l3424 0357                                         i1l3416 034B  
                                       i1l3408 0335                                         i1l2800 0E38  
                                       i1l3360 0F1E                                         i1l3504 07D9  
                                       u202_21 01B4                                         u210_21 0238  
                                       i1l3098 01CA                                         i1l3434 0474  
                                       i1l3522 0FF6                                         i1l2810 05F1  
                                       i1l3442 078E                                         i1l3514 0F3A  
                                       i1l3450 0768                                         i1l3506 0F47  
                                       i1l3426 035C                                         i1l2802 0E4A  
                                       i1l3362 0F25                                         i1l3354 0F2B  
                                       i1l3530 07C3                                         i1l3610 0006  
                                       i1l3436 049E                                         i1l3428 0465  
                                       i1l2812 05F7                                         i1l2820 0606  
                                       i1l2804 05E3                                         i1l3444 0790  
                                       i1l3516 0F41                                         i1l3460 077D  
                                       i1l3452 076F                                         i1l3508 0F49  
                                       i1l2900 073B                                         i1l3356 0F32  
                                       i1l3524 07B1                                         i1l3620 0022  
                                       i1l3612 000A                                         i1l3518 0FEC  
                                       i1l2822 060B                                         i1l2814 05FD  
                                       i1l2830 0613                                         i1l2806 05E9  
                                       i1l3446 0793                                         i1l3438 0781  
                                       i1l3454 0775                                         i1l2910 074B  
                                       i1l2902 0740                                         i1l3526 07B3  
                                       i1l3630 0043                                         i1l3622 0027  
                                       i1l3614 000E                                         u203_20 01BC  
                                       u211_20 023D                                         i1l2824 060D  
                                       i1l2816 05FF                                         i1l2808 05EF  
                                       i1l3448 0796                                         i1l3456 0777  
                                       i1l2904 0742                                         i1l2920 0761  
                                       i1l2912 074F                                         i1l3392 02DD  
                                       i1l3528 07C0                                         i1l3640 0064  
                                       i1l3632 0048                                         i1l3624 002C  
                                       i1l3616 0016                                         u203_21 01BB  
                                       u211_21 023C                                         i1l2762 079A  
                                       i1l2770 056C                                         i1l2826 0610  
                                       i1l2818 0602                                         i1l3458 077A  
                                       i1l2906 0745                                         i1l2922 0764  
                                       i1l2914 0756                                         i1l3482 0FA3  
                                       i1l2850 0F81                                         i1l2842 0F74  
                                       i1l2930 04DF                                         i1l3394 02E8  
                                       i1l3490 0F83                                         i1l3634 0051  
                                       i1l3626 0035                                         i1l3618 001A  
                                       i1l2764 0E35                                         i1l2780 0585  
                                       i1l2772 056E                                         i1l2908 0748  
                                       i1l2916 075C                                         i1l3484 0FA8  
                                       i1l2844 0F75                                         i1l2940 0505  
                                       i1l2932 04E3                                         i1l2924 04C1  
                                       i1l3396 02FF                                         i1l3492 0F84  
                                       i1l3636 0056                                         i1l3628 003A  
                                       i1l2950 03FE                                         i1l2782 058B  
                                       i1l2774 0575                                         i1l2766 0565  
                                       i1l2918 075E                                         i1l3486 0FAB  
                                       i1l2870 071B                                         i1l2854 0ED3  
                                       i1l2846 0F7A                                         i1l2942 050C  
                                       i1l2934 04EA                                         i1l2926 04D1  
                                       i1l3398 031B                                         i1l3494 0F87  
                                       i1l3638 005F                                         u204_20 01C2  
                                       i1l2960 0421                                         u220_20 02AC  
                                       u212_20 025D                                         i1l2784 0593  
                                       i1l2776 057D                                         i1l2768 0566  
                                       i1l3488 0FB0                                         i1l2872 0725  
                                       i1l2856 0ED8                                         i1l2848 0F7F  
                                       i1l2864 0E41                                         i1l2936 04FC  
                                       i1l2928 04D4                                         i1l2944 0512  
                                       i1l3496 0F8D                                         u204_21 01C1  
                                       u220_21 02AB                                         u212_21 025C  
                                       i1l2970 042F                                         i1l2962 0423  
                                       i1l2954 0407                                         i1l2794 0E32  
                                       i1l2778 0583                                         i1l2786 059A  
                                       i1l2874 0726                                         i1l2938 0504  
                                       i1l2890 0EE3                                         i1l3498 07C7  
                                       i1l2980 0454                                         i1l2964 0427  
                                       i1l2972 043F                                         i1l2956 0418  
                                       i1l2948 03F4                                         i1l3748 05A3  
                                       i1l2876 072A                                         i1l2796 0E3B  
                                       i1l2892 0EE6                                         i1l2990 0093  
                                       i1l2982 0459                                         i1l2958 0419  
                                       i1l2878 0730                                         i1l2886 0EDC  
                                       i1l2798 0E4F                                         i1l2894 0EE9  
                                       u205_20 01CE                                         i1l2992 0094  
                                       i1l2984 0089                                         u221_20 02C0  
                                       i1l2888 0EDF                                         i1l2896 0EED  
                                       u205_21 01CD                                         i1l2994 0099  
                                       i1l2986 008D                                         i1l2978 0446  
                                       i1l2898 0735                                         i1l2996 009E  
                                       i1l2988 008F                                         u221_25 02BC  
                                       u213_25 026E                                         i1l2998 00A6  
                                       u206_20 01DC                                         u222_20 02CF  
                                       u214_20 027A                                         u150_20 05E9  
                                       u230_20 02F5                                         u222_21 02CE  
                                       u214_21 0279                                         u150_21 05E8  
                                       u206_25 01D8                                         u230_25 02F1  
                                       u207_20 01F7                                         u223_20 02D3  
                                       u151_20 05EF                                         u231_20 0323  
                                       u207_21 01F6                                         u223_21 02D2  
                                       u151_21 05EE                                         u231_21 0322  
                                       u207_25 01F3                                         u215_25 0288  
                                       u208_20 0212                                         u216_20 0294  
                                       u152_20 05F7                                         u240_20 0775  
                                       u160_20 073B                                         u224_20 0F5D  
                                       u208_21 0211                                         u216_21 0293  
                                       u152_21 05F6                                         u240_21 0774  
                                       u160_21 073A                                         u224_21 0F5C  
                                       u208_25 020E                                         u232_25 032A  
                                       u209_20 0225                                         u153_20 05FD  
                                       u161_20 0740                                         u225_20 0F6C  
                                       u209_21 0224                                         u153_21 05FC  
                                       u161_21 073F                                         u225_21 0F6B  
                                       u217_25 0298                                         u233_25 0339  
                      TMR4_WriteTimer@timerVal 0070                                         u218_20 02A2  
                                       u154_20 060B                                         u250_20 0F41  
                                       u162_20 0756                                         u170_20 0512  
                                       u234_20 034B                                         u226_20 0F32  
                                       u218_21 02A1                                         u154_21 060A  
                                       u250_21 0F40                                         u162_21 0755  
                                       u170_21 0511                                         u234_21 034A  
                                       u226_21 0F31                                         u171_20 03FE  
                                       u219_20 02A8                                         u163_20 075C  
                                       u235_20 0369                                         u227_20 0F25  
                                       u251_20 07C0                                         u171_21 03FD  
                                       u219_21 02A7                                         u163_21 075B  
                                       u235_21 0368                                         u227_21 0F24  
                                       u251_21 07BF                                         u147_25 07A9  
                                       u235_25 0365                                         u180_20 0459  
                                       u172_20 0414                                         u236_20 046B  
                                       u148_20 0575                                         u156_20 0F7A  
                                       u164_20 04D1                                         u180_21 0458  
                                       u236_21 046A                                         u148_21 0574  
                                       u156_21 0F79                                         u164_21 04D0  
                                       u172_25 0410                     __end_of_EUSART_is_tx_ready 0F83  
                                       u181_20 0093                                         u173_20 0427  
                                       u149_20 058B                                         u237_20 0788  
                                       u245_20 0FA8                                         u157_20 0F7F  
                                       u261_20 000A                                         u181_21 0092  
                                       u173_21 0426                                         u149_21 058A  
                                       u237_21 0787                                         u245_21 0FA7  
                                       u157_21 0F7E                                         u261_21 0009  
                                       u165_25 04D5                                         u182_20 0099  
                                       u174_20 042E                                         u238_20 078E  
                                       u246_20 0FB0                                         u158_20 0ED8  
                                       u166_20 04E3                                         u270_20 0043  
                                       u262_20 000E                                         u182_21 0098  
                                       u174_21 042D                                         u238_21 078D  
                                       u246_21 0FAF                                         u158_21 0ED7  
                                       u166_21 04E2                                         u270_21 0042  
                                       u262_21 000D                                         u190_25 0139  
                                       u183_20 009E                                         u239_20 076F  
                                       u159_20 0730                                         u247_20 0F8D  
                                       u271_20 0048                                         u263_20 0016  
                                       u183_21 009D                                         u239_21 076E  
                                       u159_21 072F                                         u247_21 0F8C  
                                       u271_21 0047                                         u263_21 0015  
                                       u191_25 0140                                         u175_25 0430  
                                       u167_25 04E4                                         u192_20 014A  
                                       u184_20 00BC                                         u176_20 043E  
                                       u168_20 04FC                                         u248_20 07D6  
                                       u272_20 0051                                         u264_20 001A  
                                       u192_21 0149                                         u184_21 00BB  
                                       u176_21 043D                                         u168_21 04FB  
                                       u248_21 07D5                                         u272_21 0050  
                                       u264_21 0019                                         u168_25 04F8  
                                       u280_27 0727                                         u185_20 00C2  
                                       u177_20 0445                                         u249_20 0F50  
                                       u273_20 0056                                         u265_20 0022  
                                       u185_21 00C1                                         u177_21 0444  
                                       u249_21 0F4F                                         u273_21 0055  
                                       u265_21 0021                                         u193_25 014C  
                                       u169_25 0506                                         u194_20 0164  
                                       u186_20 00C7                                         u274_20 005F  
                                       u266_20 0027                                         u194_21 0163  
                                       u186_21 00C6                                         u274_21 005E  
                                       u266_21 0026                                         u194_25 0160  
                                       u178_25 0447                                         u195_20 0177  
                                       u187_20 00E2                                         u179_20 0454  
                                       u275_20 0064                                         u267_20 002C  
                                       u195_21 0176                                         u187_21 00E1  
                                       u179_21 0453                                         u275_21 0063  
                                       u267_21 002B                                         u196_20 017F  
                                       u188_20 0100                                         u268_20 0035  
                                       u196_21 017E                                         u188_21 00FF  
                                       u268_21 0034                                         u189_20 0138  
                                       u269_20 003A                                         u189_21 0137  
                                       u269_21 0039                                         u197_25 0182  
                                       u198_20 018C                                         u198_21 018B  
                                       u199_25 018E                                         _OSCCON 0099  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                ?_S1_Interrupt 0070                                         _WDTCON 0097  
                             __end_of___xxtofl 02DD                                _TMR4_StartTimer 0E3E  
                                 _CCPTMRS0bits 029E                                  ?_S2_Interrupt 0070  
                                    ??___fldiv 0028                                      ??___fltol 003E  
                                    ??___lldiv 0078                               ?_TMR0_Initialize 0070  
                                       _matrix 00B2                        __end_of_TMR4_Initialize 0FD9  
                                _CCP4_CallBack 0061                                  ?_S3_Interrupt 0070  
                      __end_of_DATAEE_ReadByte 07FF           __end_of_TMR4_DefaultInterruptHandler 0E31  
                 _TMR4_DefaultInterruptHandler 0E30                                _TMR4_WriteTimer 0E49  
                              ?_WDT_Initialize 0070                       ADC_GetConversion@channel 0073  
                                ?_S4_Interrupt 0070                                      ?_CMP1_ISR 0070  
                                    ?_CMP2_ISR 0070       CMP1_SetInterruptHandler@InterruptHandler 00BD  
     TMR4_SetInterruptHandler@InterruptHandler 00BD       TMR6_SetInterruptHandler@InterruptHandler 00BD  
     CMP2_SetInterruptHandler@InterruptHandler 00BD       TMR0_SetInterruptHandler@InterruptHandler 00BD  
   IOCBF3_SetInterruptHandler@InterruptHandler 00BD     IOCBF0_SetInterruptHandler@InterruptHandler 00BD  
                             ?_PIN_MANAGER_IOC 0070                                   ??_IOCBF0_ISR 0076  
                                 ??_IOCBF3_ISR 0076                               ?_PWM3_Initialize 0070  
                             ?_TMR1_Initialize 0070                                   ___xxtofl@arg 007A  
                                 ___xxtofl@exp 0079                                 ??_S1_Interrupt 0076  
                            _SYSTEM_Initialize 0617                                   ___xxtofl@val 0070  
                                updateMatrix@i 00C2                        __end_of__initialization 0085  
                             ?_CCP4_Initialize 0070                                _CMP1_Initialize 0EFA  
                           ?_SYSTEM_Initialize 0070                                _TMR6_StartTimer 0E32  
                                   ___fltol@f1 003A                                   ?_updateMotor 0070  
                               ??_S2_Interrupt 0076                       __end_of_CCP4_SetCallBack 0EC0  
             __end_of_CMP2_SetInterruptHandler 0E64                                 __pcstackCOMMON 0070  
                        __end_of_TMR4_CallBack 0F2B                                   __pidataBANK1 0002  
                          ??_SYSTEM_Initialize 00BF                                      ?_TMR0_ISR 0070  
                                    ?_TMR4_ISR 0070                                      ?_TMR6_ISR 0070  
                            ??_SPI1_Initialize 00BD         __end_of_IOCBF0_DefaultInterruptHandler 0E2E  
               _IOCBF0_DefaultInterruptHandler 0E2D                               ?_TMR2_Initialize 0070  
                      __end_of_TMR6_Initialize 0FEC                                 ??_S3_Interrupt 0076  
                           __end_of_IOCBF0_ISR 0F65                             __end_of_IOCBF3_ISR 0F74  
                        __end_of_TMR6_CallBack 0F38                                _CMP2_Initialize 0F06  
                           _spi1_configuration 07FF                                 _OPTION_REGbits 0095  
                              _TMR6_WriteTimer 0E4E                          TMR6_ISR@CountCallBack 0057  
                ?_TMR4_DefaultInterruptHandler 0070                                 ??_S4_Interrupt 0076  
              ??_EUSART_SetOverrunErrorHandler 00BF         __end_of_IOCBF3_DefaultInterruptHandler 0E2F  
               _IOCBF3_DefaultInterruptHandler 0E2E                                     ??_CMP1_ISR 0076  
                                   ??_CMP2_ISR 0076                            _CCP4_Interrupt$2521 0047  
                      __end_of_TMR4_StartTimer 0E41                      __end_of_SYSTEM_Initialize 0648  
                                   __pbssBANK0 004D                                     __pbssBANK1 00B2  
                         __end_of_EUSART_Write 0EDC                           __end_of_controlMotor 0565  
                               _SPI1_WriteByte 0E94                          _TMR4_InterruptHandler 00A2  
                   ??_CMP1_SetInterruptHandler 00BF                                     __pmaintext 036A  
                i1PWM3_LoadDutyValue@dutyValue 0070                    CCP4_Interrupt@capturedValue 0044  
             __end_of_TMR0_SetInterruptHandler 0ED2                                     ??_TMR0_ISR 007E  
             __end_of_TMR6_SetInterruptHandler 0E94                                     ??_TMR4_ISR 0071  
                                  sendMatrix@i 00C1                                     ??_TMR6_ISR 0071  
                                   __pintentry 0004                        __end_of_TMR4_WriteTimer 0E4E  
                                      _DACCON0 0118                                        _DACCON1 0119  
                                      _CM1CON0 0111                                        _CM1CON1 0112  
                                      _CM2CON0 0113                                        _CM2CON1 0114  
                                      _CCP3CON 0313                                        _CCP4CON 031A  
                                      _BAUDCON 019F                               ?_TMR4_Initialize 0070  
                                      _APFCON0 011D                                        _APFCON1 011E  
                             ?_DATAEE_ReadByte 0070                                      ?___xxtofl 0070  
                                      _OSCTUNE 0098                                        _SSP1ADD 0212  
                                      _SSP1BUF 0211                        __end_of_CMP1_Initialize 0F06  
                     ??_EUSART_SetErrorHandler 00BF                        __end_of_TMR6_StartTimer 0E35  
                       __end_of_SPI1_WriteByte 0E9A                   __end_ofi1_PWM3_LoadDutyValue 07B1  
                         _ADC_InterruptHandler 0059                        __end_of_CMP2_Initialize 0F12  
                                      ___fldiv 0089                                        ___fltol 03F4  
                                      ___lldiv 04C1                        __end_of_TMR6_WriteTimer 0E53  
                     _CMP2_SetInterruptHandler 0E5E                                        _data_tx 004D  
                             ?_TMR6_Initialize 0070                           __end_of_S1_Interrupt 074F  
                                      __ptext1 05AF                                        __ptext2 051B  
                                      __ptext3 06E2                                        __ptext4 0E3E  
                                      __ptext5 0677                                        __ptext6 07F2  
                                      __ptext7 06FE                                        __ptext8 06C5  
                                      __ptext9 0E94                              __end_of_txMAX7219 06E2  
                                    _T1CONbits 0018                          _OSCILLATOR_Initialize 0EA0  
                                    _T2CONbits 001C                                     ??___xxtofl 0074  
                                    _CMOUTbits 0115                                      _T4CONbits 0417  
                     ??_PIN_MANAGER_Initialize 00BF                                      _IOCBFbits 0396  
                    ?_TMR4_SetInterruptHandler 00BD                                      _IOCBNbits 0395  
                                    _T6CONbits 041E                                      _IOCBPbits 0394  
                         __end_of_S2_Interrupt 0768                                        clrloop0 0E9B  
                             ?_TMR4_StartTimer 0070                           end_of_initialization 0085  
                                   _sendMatrix 06FE                 ??_TMR4_DefaultInterruptHandler 0070  
        __end_of_EUSART_SetOverrunErrorHandler 0E7C                  _EUSART_SetOverrunErrorHandler 0E76  
                              ?_SPI1_WriteByte 0070                           __end_of_S3_Interrupt 079A  
                            _EUSART_Initialize 06A0                                ___lldiv@divisor 0070  
                              ___lldiv@counter 007D                             ?_EUSART_Initialize 0070  
                         __end_of_S4_Interrupt 0781                                      _RCSTAbits 019D  
                           _EUSART_is_rx_ready 0E53                             _EUSART_is_tx_ready 0F74  
                                   _motorState 00BC                               ?_TMR4_WriteTimer 0070  
                        _CMP1_InterruptHandler 00A0                            ??_EUSART_Initialize 00BF  
                             ??_WDT_Initialize 00BD                       _TMR0_SetInterruptHandler 0EC9  
                          ?_EUSART_is_rx_ready 0070                       _TMR6_SetInterruptHandler 0E8E  
                               _TMR0_Interrupt 02DD                            ?_EUSART_is_tx_ready 0070  
                                ___xxtofl@sign 0078                                 txMAX7219@addr0 00BF  
                                    _TRISBbits 008D                                    ___fldiv@grs 0034  
                                  ___fldiv@rem 002D                   ??_IOCBF0_SetInterruptHandler 00BF  
                 ??_IOCBF3_SetInterruptHandler 00BF                               ?_CMP1_Initialize 0070  
                             ?_TMR6_StartTimer 0070                                 _CCP4_Interrupt 0465  
                    __end_of_EUSART_Initialize 06C5                           ??_EUSART_is_rx_ready 00BD  
                              _SPI1_Initialize 0EF0                           ??_EUSART_is_tx_ready 0070  
                                    _TXSTAbits 019E              CCP4_DefaultCallBack@capturedValue 0044  
                                ?_updateMatrix 00BE                     __end_of_PWM3_LoadDutyValue 06FE  
                                i1_updateMotor 05E3                              ?_CCP4_SetCallBack 00BD  
                             ?_CMP2_Initialize 0070                                      _Enc_pulse 0051  
                           ??_CCP4_SetCallBack 00BF                     _EUSART_DefaultErrorHandler 0000  
                             ?_TMR6_WriteTimer 0070                         __end_of_TMR0_Interrupt 036A  
                                 _EUSART_Write 0ED2                                   _controlMotor 051B  
                               _ADC_Initialize 0EA7                         ?_OSCILLATOR_Initialize 0070  
                         i1_PWM3_LoadDutyValue 079A                       ?_TMR1_HasOverflowOccured 0070  
                               _TMR4_Interrupt 0EDC                            start_initialization 006C  
                       __end_of_CCP4_Interrupt 04C1                                  ??_EUSART_Read 00BD  
                       _EUSART_is_tx_ready$323 0070                                    ?_sendMatrix 0070  
                             main@receivedData 00C3                                 ??_updateMatrix 00BF  
                          DATAEE_ReadByte@bAdd 00BD                                 _TMR6_Interrupt 0EE6  
               ?_EUSART_SetOverrunErrorHandler 00BD                                 ?i1_updateMotor 0070  
                               _TMR4_StopTimer 0E38                     _EUSART_FramingErrorHandler 00B0  
                       _EUSART_SetErrorHandler 0E6A                         __end_of_ADC_Initialize 0EAF  
                                  __pdataBANK1 00C5                                ?_TMR0_Interrupt 0070  
                       __end_of_TMR4_Interrupt 0EE6                          ?i1_PWM3_LoadDutyValue 0070  
                        CCP4_CaptureISR@module 004B                                 i1_controlMotor 0565  
                                    ___fldiv@a 0020                                      ___fldiv@b 0024  
                        TMR4_ISR@CountCallBack 0055                                      ___latbits 0001  
                                __pcstackBANK0 0020                                  __pcstackBANK1 00BD  
                              ?_CCP4_Interrupt 0044                                 _TMR6_StopTimer 0E3B  
                      __end_of_SPI1_Initialize 0EFA                          _CMP2_InterruptHandler 00A6  
                       __end_of_TMR6_Interrupt 0EF0                                   _currentFloor 00C6  
                                 _S1_Interrupt 0735                            __end_of_EUSART_Read 0FA3  
                        _TMR0_InterruptHandler 005D                          _TMR6_InterruptHandler 00A4  
                                    __pnvBANK0 005D                                      __pnvBANK1 00A0  
                       __end_of_TMR4_StopTimer 0E3B                        _IOCBF3_InterruptHandler 00A8  
                   ??_CMP2_SetInterruptHandler 00BF                         _PIN_MANAGER_Initialize 0648  
                                 _S2_Interrupt 074F               __end_of_TMR4_SetInterruptHandler 0E8E  
                                     ?___fldiv 0020                              ??_CCP4_CaptureISR 007E  
                                     ?___fltol 003A                                       ?___lldiv 0070  
              __end_of_TMR1_HasOverflowOccured 0E45                                ?_ADC_Initialize 0070  
                       __end_ofi1_controlMotor 05AF                                ?_TMR4_Interrupt 0070  
                 ??_INTERRUPT_InterruptManager 007E                                   _S3_Interrupt 0781  
                    ?_CMP1_SetInterruptHandler 00BD                         __end_of_TMR6_StopTimer 0E3E  
           __end_of_IOCBF0_SetInterruptHandler 0E82                     _IOCBF0_SetInterruptHandler 0E7C  
           __end_of_IOCBF3_SetInterruptHandler 0E88                     _IOCBF3_SetInterruptHandler 0E82  
                             ??_SPI1_WriteByte 00BD                                      _txMAX7219 06C5  
                                     _CMP1_ISR 0F38                                       _CMP2_ISR 0F47  
                                 _S4_Interrupt 0768                                ?_TMR6_Interrupt 0070  
                            ??_TMR0_Initialize 00BF                                       _LATAbits 010C  
       EUSART_SetErrorHandler@interruptHandler 00BD                                       _LATBbits 010D  
                                    clear_ram0 0E9A                   __end_of_CCP4_DefaultCallBack 0E2D  
                              ??i1_updateMotor 0076                                       _PIE2bits 0092  
                                     _PIE3bits 0093                              _eusartRxLastError 00BB  
                              ?_TMR4_StopTimer 0070                     ??_TMR0_SetInterruptHandler 00BF  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 00BF  
                                     _PIR2bits 0012                                       _PIR3bits 0013  
                   ??_TMR6_SetInterruptHandler 00BF                                       _SSP1CON1 0215  
                                     _SSP1CON2 0216                                       _TMR0_ISR 0F83  
            _EUSART_DefaultOverrunErrorHandler 0000                                       _TMR4_ISR 07C7  
                                _TMR4_CallBack 0F1E                                       _TMR6_ISR 07B1  
                                     _SSP1STAT 0214                              ??_PIN_MANAGER_IOC 0076  
                       ??i1_PWM3_LoadDutyValue 0072                                  txMAX7219@dat0 00BE  
                              ?i1_controlMotor 0070                              ??_PWM3_Initialize 00BD  
                            ??_TMR1_Initialize 00BD                                     _ADCON0bits 009D  
                               _DAC_Initialize 0E64                                  _TMR6_CallBack 0F2B  
                            ??_CCP4_Initialize 00BF                           __end_of_updateMatrix 06A0  
                              ?_TMR6_StopTimer 0070                                     ?_txMAX7219 00BE  
                                  _EUSART_Read 0F93                               ?_SPI1_Initialize 0070  
                            i1_TMR4_StartTimer 0E35                              ??_TMR2_Initialize 00BD  
                           ?i1_TMR4_StartTimer 0070                                     _EECON1bits 0195  
                                ??_updateMotor 00C3                              _ADC_GetConversion 071A  
                               ?_TMR4_CallBack 0070                            ??i1_TMR4_StartTimer 0070  
                      ??_OSCILLATOR_Initialize 00BD                            _EUSART_ErrorHandler 00AC  
                           ?_ADC_GetConversion 0070                         __end_of_DAC_Initialize 0E6A  
                     _TMR4_SetInterruptHandler 0E88                             _PWM3_LoadDutyValue 06E2  
                               ?_TMR6_CallBack 0070                            ??_ADC_GetConversion 0072  
                                     ___xxtofl 0233                                       __ptext10 0617  
                                     __ptext11 0E45                                       __ptext20 0EF0  
                                     __ptext12 0FD9                                       __ptext21 0EC0  
                                     __ptext13 0E8E                                     _T1GCONbits 0019  
                                     __ptext30 0E64                                       __ptext22 0648  
                                     __ptext14 0FC6                                       __ptext31 0F06  
                                     __ptext23 0E82                                       __ptext15 0E88  
                                     __ptext32 0EFA                                       __ptext24 0E7C  
                                     __ptext16 0EAF                                       __ptext41 07B1  
                                     __ptext33 0FB4                                       __ptext25 0EA0  
                                     __ptext17 0F12                                       __ptext50 0EDC  
                                     __ptext42 0F2B                                       __ptext34 0EB7  
                                     __ptext26 06A0                                       __ptext18 07DD  
                                     __ptext51 0E49                                       __ptext43 0E31  
                                     __ptext35 0EA7                                       __ptext27 0E76  
                                     __ptext19 0EC9                                       __ptext60 071A  
                                     __ptext52 0E38                                       __ptext44 0EE6  
                                     __ptext36 0E53                                       __ptext28 0E70  
                                     __ptext61 0FA3                                       __ptext53 0F83  
                                     __ptext45 0E4E                                       __ptext37 0F93  
                                     __ptext29 0E6A                                       __ptext70 0F38  
                                     __ptext62 0F65                                       __ptext54 0E2F  
                                     __ptext46 0E3B                                       __ptext38 0E5E  
                                     __ptext71 0781                                       __ptext63 0E2E  
                                     __ptext55 02DD                                       __ptext47 07C7  
                                     __ptext39 0E58                                       __ptext80 0233  
                                     __ptext72 05E3                                       __ptext64 074F  
                                     __ptext56 04C1                                       __ptext48 0F1E  
                                     __ptext81 03F4                                       __ptext73 0565  
                                     __ptext65 0F56                                       __ptext57 0E41  
                                     __ptext49 0E30                                       __ptext82 0089  
                                     __ptext74 079A                                       __ptext66 0E2D  
                                     __ptext58 0F74                            ?_PWM3_LoadDutyValue 00BD  
                                     __ptext75 0E35                                       __ptext67 0735  
                                     __ptext59 0ED2                                       __ptext76 0E32  
                                     __ptext68 0F47                                       __ptext77 0FEC  
                                     __ptext69 0768                                       __ptext78 0E2C  
                                     __ptext79 0465                                   _SSP1CON1bits 0215  
                    __end_ofi1_TMR4_StartTimer 0E38                                   ??_sendMatrix 00C0  
                                   _IOCBF0_ISR 0F56                                     _IOCBF3_ISR 0F65  
                      TMR6_WriteTimer@timerVal 0070                              ??_TMR4_Initialize 00BF  
         __end_of_TMR0_DefaultInterruptHandler 0E30                   _TMR0_DefaultInterruptHandler 0E2F  
                            ??_DATAEE_ReadByte 00BD                      __end_of_ADC_GetConversion 0735  
                      ?_EUSART_SetErrorHandler 00BD                               ??_TMR0_Interrupt 0020  
EUSART_SetOverrunErrorHandler@interruptHandler 00BD                           ??_PWM3_LoadDutyValue 00BF  
                                     _velocity 005B                                       int$flags 007E  
                                     _position 005C             __end_of_INTERRUPT_InterruptManager 006A  
                   _INTERRUPT_InterruptManager 0004          __end_of_EUSART_SetFramingErrorHandler 0E76  
                _EUSART_SetFramingErrorHandler 0E70                                ?_DAC_Initialize 0070  
                          __end_of_updateMotor 05E3                             __end_of_sendMatrix 071A  
                                 _motorLoading 00BA                               ??_CCP4_Interrupt 0046  
                                   _INTCONbits 000B                      TMR0_Interrupt@temperature 0026  
                         _CCP4_DefaultCallBack 0E2C                                    ??_txMAX7219 00BF  
         __end_of_TMR6_DefaultInterruptHandler 0E32                   _TMR6_DefaultInterruptHandler 0E31  
                                     intlevel1 0000                                    _targetFloor 00C5  
                              _CCP4_CaptureISR 0FEC                               ___lldiv@dividend 0074  
                      ?_PIN_MANAGER_Initialize 0070                              ??_TMR6_Initialize 00BF  
               __end_of_EUSART_SetErrorHandler 0E70                               ??_ADC_Initialize 00BD  
                              ??_TMR4_CallBack 0071                  ?_TMR0_DefaultInterruptHandler 0070  
             __end_of_CMP1_SetInterruptHandler 0E5E                               ??_TMR4_Interrupt 0071  
EUSART_SetFramingErrorHandler@interruptHandler 00BD                    PWM3_LoadDutyValue@dutyValue 00BD  
                            ??_TMR4_StartTimer 00BD                                ??_TMR6_CallBack 0071  
                                __pstringtext1 07FF                                     _OPTION_REG 0095  
                        ?_CCP4_DefaultCallBack 0044                               ___lldiv@quotient 0079  
                              _TMR0_Initialize 07DD                    ?_IOCBF0_SetInterruptHandler 00BD  
                  ?_IOCBF3_SetInterruptHandler 00BD                               ??_TMR6_Interrupt 0071  
                                  ?_IOCBF0_ISR 0070                             EUSART_Write@txData 0070  
                                  ?_IOCBF3_ISR 0070                              updateMatrix@eeAdd 00C1  
               __end_of_PIN_MANAGER_Initialize 0677                               ??_TMR4_StopTimer 0070  
                ?_TMR6_DefaultInterruptHandler 0070                              ??_TMR4_WriteTimer 0070  
             ??_IOCBF0_DefaultInterruptHandler 0070                ?_IOCBF0_DefaultInterruptHandler 0070  
                              _PIN_MANAGER_IOC 0FA3                                   _updateMatrix 0677  
                              _TMR1_Initialize 0F12                                _PWM3_Initialize 0EC0  
                              updateMatrix@val 00BE                                updateMatrix@pos 00C0  
                   __end_of_spi1_configuration 0803                                    _updateMotor 05AF  
